/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.4.1.1, Date: 07-Aug-2020.
 */
#ifndef NGAP_PDU_CONTENTS_H
#define NGAP_PDU_CONTENTS_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtpersrc/asn1per.h"

#include "NGAP-IEs.h"
#include "NGAP-Containers.h"
#include "NGAP-CommonDataTypes.h"

/**
 * Header file for ASN.1 module NGAP-PDU-Contents
 */
typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceSetupRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupRequestIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupRequestIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupRequestIEs_id_RANPagingPriority,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupRequestIEs_id_NAS_PDU,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupRequestIEs_id_PDUSessionResourceSetupListSUReq,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupRequestIEs_id_UEAggregateMaximumBitRate
} PDUSessionResourceSetupRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceSetupResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupResponseIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupResponseIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceSetupListSURes,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceFailedToSetupListSURes,
   T_NGAP_PDU_Contents_PDUSessionResourceSetupResponseIEs_id_CriticalityDiagnostics
} PDUSessionResourceSetupResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseCommandIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseCommandIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseCommandIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseCommandIEs_id_RANPagingPriority,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseCommandIEs_id_NAS_PDU,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseCommandIEs_id_PDUSessionResourceToReleaseListRelCmd
} PDUSessionResourceReleaseCommandIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseResponseIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseResponseIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseResponseIEs_id_PDUSessionResourceReleasedListRelRes,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseResponseIEs_id_UserLocationInformation,
   T_NGAP_PDU_Contents_PDUSessionResourceReleaseResponseIEs_id_CriticalityDiagnostics
} PDUSessionResourceReleaseResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceModifyRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyRequestIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyRequestIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyRequestIEs_id_RANPagingPriority,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyRequestIEs_id_PDUSessionResourceModifyListModReq
} PDUSessionResourceModifyRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceModifyResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyResponseIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyResponseIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceModifyListModRes,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceFailedToModifyListModRes,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyResponseIEs_id_UserLocationInformation,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyResponseIEs_id_CriticalityDiagnostics
} PDUSessionResourceModifyResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceNotifyIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceNotifyIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceNotifyIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceNotifyIEs_id_PDUSessionResourceNotifyList,
   T_NGAP_PDU_Contents_PDUSessionResourceNotifyIEs_id_PDUSessionResourceReleasedListNot,
   T_NGAP_PDU_Contents_PDUSessionResourceNotifyIEs_id_UserLocationInformation
} PDUSessionResourceNotifyIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceModifyIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyIndicationIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyIndicationIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyIndicationIEs_id_PDUSessionResourceModifyListModInd
} PDUSessionResourceModifyIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PDUSessionResourceModifyConfirmIEs_UNDEF_,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyConfirmIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyConfirmIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceModifyListModCfm,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceFailedToModifyListModCfm,
   T_NGAP_PDU_Contents_PDUSessionResourceModifyConfirmIEs_id_CriticalityDiagnostics
} PDUSessionResourceModifyConfirmIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_OldAMF,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_UEAggregateMaximumBitRate,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_CoreNetworkAssistanceInformationForInactive,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_GUAMI,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_PDUSessionResourceSetupListCxtReq,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_AllowedNSSAI,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_UESecurityCapabilities,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_SecurityKey,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_TraceActivation,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_MobilityRestrictionList,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_UERadioCapability,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_IndexToRFSP,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_MaskedIMEISV,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_NAS_PDU,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_EmergencyFallbackIndicator,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_RRCInactiveTransitionReportRequest,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_UERadioCapabilityForPaging,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_RedirectionVoiceFallback,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_LocationReportingRequestType,
   T_NGAP_PDU_Contents_InitialContextSetupRequestIEs_id_CNAssistedRANTuning
} InitialContextSetupRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_InitialContextSetupResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_InitialContextSetupResponseIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_InitialContextSetupResponseIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_InitialContextSetupResponseIEs_id_PDUSessionResourceSetupListCxtRes,
   T_NGAP_PDU_Contents_InitialContextSetupResponseIEs_id_PDUSessionResourceFailedToSetupListCxtRes,
   T_NGAP_PDU_Contents_InitialContextSetupResponseIEs_id_CriticalityDiagnostics
} InitialContextSetupResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_InitialContextSetupFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_InitialContextSetupFailureIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_InitialContextSetupFailureIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_InitialContextSetupFailureIEs_id_PDUSessionResourceFailedToSetupListCxtFail,
   T_NGAP_PDU_Contents_InitialContextSetupFailureIEs_id_Cause,
   T_NGAP_PDU_Contents_InitialContextSetupFailureIEs_id_CriticalityDiagnostics
} InitialContextSetupFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UEContextReleaseRequest_IEs_UNDEF_,
   T_NGAP_PDU_Contents_UEContextReleaseRequest_IEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextReleaseRequest_IEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextReleaseRequest_IEs_id_PDUSessionResourceListCxtRelReq,
   T_NGAP_PDU_Contents_UEContextReleaseRequest_IEs_id_Cause
} UEContextReleaseRequest_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UEContextReleaseCommand_IEs_UNDEF_,
   T_NGAP_PDU_Contents_UEContextReleaseCommand_IEs_id_UE_NGAP_IDs,
   T_NGAP_PDU_Contents_UEContextReleaseCommand_IEs_id_Cause
} UEContextReleaseCommand_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UEContextReleaseComplete_IEs_UNDEF_,
   T_NGAP_PDU_Contents_UEContextReleaseComplete_IEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextReleaseComplete_IEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextReleaseComplete_IEs_id_UserLocationInformation,
   T_NGAP_PDU_Contents_UEContextReleaseComplete_IEs_id_InfoOnRecommendedCellsAndRANNodesForPaging,
   T_NGAP_PDU_Contents_UEContextReleaseComplete_IEs_id_PDUSessionResourceListCxtRelCpl,
   T_NGAP_PDU_Contents_UEContextReleaseComplete_IEs_id_CriticalityDiagnostics
} UEContextReleaseComplete_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_RANPagingPriority,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_SecurityKey,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_IndexToRFSP,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_UEAggregateMaximumBitRate,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_UESecurityCapabilities,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_CoreNetworkAssistanceInformationForInactive,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_EmergencyFallbackIndicator,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_NewAMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_RRCInactiveTransitionReportRequest,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_NewGUAMI,
   T_NGAP_PDU_Contents_UEContextModificationRequestIEs_id_CNAssistedRANTuning
} UEContextModificationRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UEContextModificationResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_UEContextModificationResponseIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextModificationResponseIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextModificationResponseIEs_id_RRCState,
   T_NGAP_PDU_Contents_UEContextModificationResponseIEs_id_UserLocationInformation,
   T_NGAP_PDU_Contents_UEContextModificationResponseIEs_id_CriticalityDiagnostics
} UEContextModificationResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UEContextModificationFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_UEContextModificationFailureIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextModificationFailureIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UEContextModificationFailureIEs_id_Cause,
   T_NGAP_PDU_Contents_UEContextModificationFailureIEs_id_CriticalityDiagnostics
} UEContextModificationFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_RRCInactiveTransitionReportIEs_UNDEF_,
   T_NGAP_PDU_Contents_RRCInactiveTransitionReportIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_RRCInactiveTransitionReportIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_RRCInactiveTransitionReportIEs_id_RRCState,
   T_NGAP_PDU_Contents_RRCInactiveTransitionReportIEs_id_UserLocationInformation
} RRCInactiveTransitionReportIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverRequiredIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_HandoverType,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_Cause,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_TargetID,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_DirectForwardingPathAvailability,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_PDUSessionResourceListHORqd,
   T_NGAP_PDU_Contents_HandoverRequiredIEs_id_SourceToTarget_TransparentContainer
} HandoverRequiredIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverCommandIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_HandoverType,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_NASSecurityParametersFromNGRAN,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_PDUSessionResourceHandoverList,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_PDUSessionResourceToReleaseListHOCmd,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_TargetToSource_TransparentContainer,
   T_NGAP_PDU_Contents_HandoverCommandIEs_id_CriticalityDiagnostics
} HandoverCommandIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverPreparationFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverPreparationFailureIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverPreparationFailureIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverPreparationFailureIEs_id_Cause,
   T_NGAP_PDU_Contents_HandoverPreparationFailureIEs_id_CriticalityDiagnostics
} HandoverPreparationFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_HandoverType,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_Cause,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_UEAggregateMaximumBitRate,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_CoreNetworkAssistanceInformationForInactive,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_UESecurityCapabilities,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_SecurityContext,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_NewSecurityContextInd,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_NASC,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_PDUSessionResourceSetupListHOReq,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_AllowedNSSAI,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_TraceActivation,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_MaskedIMEISV,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_SourceToTarget_TransparentContainer,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_MobilityRestrictionList,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_LocationReportingRequestType,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_RRCInactiveTransitionReportRequest,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_GUAMI,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_RedirectionVoiceFallback,
   T_NGAP_PDU_Contents_HandoverRequestIEs_id_CNAssistedRANTuning
} HandoverRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverRequestAcknowledgeIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceAdmittedList,
   T_NGAP_PDU_Contents_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceFailedToSetupListHOAck,
   T_NGAP_PDU_Contents_HandoverRequestAcknowledgeIEs_id_TargetToSource_TransparentContainer,
   T_NGAP_PDU_Contents_HandoverRequestAcknowledgeIEs_id_CriticalityDiagnostics
} HandoverRequestAcknowledgeIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverFailureIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverFailureIEs_id_Cause,
   T_NGAP_PDU_Contents_HandoverFailureIEs_id_CriticalityDiagnostics
} HandoverFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverNotifyIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverNotifyIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverNotifyIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverNotifyIEs_id_UserLocationInformation
} HandoverNotifyIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PathSwitchRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_PathSwitchRequestIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PathSwitchRequestIEs_id_SourceAMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PathSwitchRequestIEs_id_UserLocationInformation,
   T_NGAP_PDU_Contents_PathSwitchRequestIEs_id_UESecurityCapabilities,
   T_NGAP_PDU_Contents_PathSwitchRequestIEs_id_PDUSessionResourceToBeSwitchedDLList,
   T_NGAP_PDU_Contents_PathSwitchRequestIEs_id_PDUSessionResourceFailedToSetupListPSReq
} PathSwitchRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_UNDEF_,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_UESecurityCapabilities,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_SecurityContext,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_NewSecurityContextInd,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceSwitchedList,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceReleasedListPSAck,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_AllowedNSSAI,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_CoreNetworkAssistanceInformationForInactive,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_RRCInactiveTransitionReportRequest,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_CriticalityDiagnostics,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_RedirectionVoiceFallback,
   T_NGAP_PDU_Contents_PathSwitchRequestAcknowledgeIEs_id_CNAssistedRANTuning
} PathSwitchRequestAcknowledgeIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PathSwitchRequestFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_PathSwitchRequestFailureIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PathSwitchRequestFailureIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_PathSwitchRequestFailureIEs_id_PDUSessionResourceReleasedListPSFail,
   T_NGAP_PDU_Contents_PathSwitchRequestFailureIEs_id_CriticalityDiagnostics
} PathSwitchRequestFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverCancelIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverCancelIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverCancelIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverCancelIEs_id_Cause
} HandoverCancelIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_HandoverCancelAcknowledgeIEs_UNDEF_,
   T_NGAP_PDU_Contents_HandoverCancelAcknowledgeIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverCancelAcknowledgeIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_HandoverCancelAcknowledgeIEs_id_CriticalityDiagnostics
} HandoverCancelAcknowledgeIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UplinkRANStatusTransferIEs_UNDEF_,
   T_NGAP_PDU_Contents_UplinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UplinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UplinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer
} UplinkRANStatusTransferIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_DownlinkRANStatusTransferIEs_UNDEF_,
   T_NGAP_PDU_Contents_DownlinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DownlinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DownlinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer
} DownlinkRANStatusTransferIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PagingIEs_UNDEF_,
   T_NGAP_PDU_Contents_PagingIEs_id_UEPagingIdentity,
   T_NGAP_PDU_Contents_PagingIEs_id_PagingDRX,
   T_NGAP_PDU_Contents_PagingIEs_id_TAIListForPaging,
   T_NGAP_PDU_Contents_PagingIEs_id_PagingPriority,
   T_NGAP_PDU_Contents_PagingIEs_id_UERadioCapabilityForPaging,
   T_NGAP_PDU_Contents_PagingIEs_id_PagingOrigin,
   T_NGAP_PDU_Contents_PagingIEs_id_AssistanceDataForPaging
} PagingIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_UNDEF_,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_NAS_PDU,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_UserLocationInformation,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_RRCEstablishmentCause,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_FiveG_S_TMSI,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_AMFSetID,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_UEContextRequest,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_AllowedNSSAI,
   T_NGAP_PDU_Contents_InitialUEMessage_IEs_id_SourceToTarget_AMFInformationReroute
} InitialUEMessage_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_UNDEF_,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_OldAMF,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_RANPagingPriority,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_NAS_PDU,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_MobilityRestrictionList,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_IndexToRFSP,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_UEAggregateMaximumBitRate,
   T_NGAP_PDU_Contents_DownlinkNASTransport_IEs_id_AllowedNSSAI
} DownlinkNASTransport_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UplinkNASTransport_IEs_UNDEF_,
   T_NGAP_PDU_Contents_UplinkNASTransport_IEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UplinkNASTransport_IEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UplinkNASTransport_IEs_id_NAS_PDU,
   T_NGAP_PDU_Contents_UplinkNASTransport_IEs_id_UserLocationInformation
} UplinkNASTransport_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_NASNonDeliveryIndication_IEs_UNDEF_,
   T_NGAP_PDU_Contents_NASNonDeliveryIndication_IEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_NASNonDeliveryIndication_IEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_NASNonDeliveryIndication_IEs_id_NAS_PDU,
   T_NGAP_PDU_Contents_NASNonDeliveryIndication_IEs_id_Cause
} NASNonDeliveryIndication_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_RerouteNASRequest_IEs_UNDEF_,
   T_NGAP_PDU_Contents_RerouteNASRequest_IEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_RerouteNASRequest_IEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_RerouteNASRequest_IEs_id_NGAP_Message,
   T_NGAP_PDU_Contents_RerouteNASRequest_IEs_id_AMFSetID,
   T_NGAP_PDU_Contents_RerouteNASRequest_IEs_id_AllowedNSSAI,
   T_NGAP_PDU_Contents_RerouteNASRequest_IEs_id_SourceToTarget_AMFInformationReroute
} RerouteNASRequest_IEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_NGSetupRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_NGSetupRequestIEs_id_GlobalRANNodeID,
   T_NGAP_PDU_Contents_NGSetupRequestIEs_id_RANNodeName,
   T_NGAP_PDU_Contents_NGSetupRequestIEs_id_SupportedTAList,
   T_NGAP_PDU_Contents_NGSetupRequestIEs_id_DefaultPagingDRX,
   T_NGAP_PDU_Contents_NGSetupRequestIEs_id_UERetentionInformation
} NGSetupRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_NGSetupResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_NGSetupResponseIEs_id_AMFName,
   T_NGAP_PDU_Contents_NGSetupResponseIEs_id_ServedGUAMIList,
   T_NGAP_PDU_Contents_NGSetupResponseIEs_id_RelativeAMFCapacity,
   T_NGAP_PDU_Contents_NGSetupResponseIEs_id_PLMNSupportList,
   T_NGAP_PDU_Contents_NGSetupResponseIEs_id_CriticalityDiagnostics,
   T_NGAP_PDU_Contents_NGSetupResponseIEs_id_UERetentionInformation
} NGSetupResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_NGSetupFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_NGSetupFailureIEs_id_Cause,
   T_NGAP_PDU_Contents_NGSetupFailureIEs_id_TimeToWait,
   T_NGAP_PDU_Contents_NGSetupFailureIEs_id_CriticalityDiagnostics
} NGSetupFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_RANConfigurationUpdateIEs_UNDEF_,
   T_NGAP_PDU_Contents_RANConfigurationUpdateIEs_id_RANNodeName,
   T_NGAP_PDU_Contents_RANConfigurationUpdateIEs_id_SupportedTAList,
   T_NGAP_PDU_Contents_RANConfigurationUpdateIEs_id_DefaultPagingDRX,
   T_NGAP_PDU_Contents_RANConfigurationUpdateIEs_id_GlobalRANNodeID,
   T_NGAP_PDU_Contents_RANConfigurationUpdateIEs_id_NGRAN_TNLAssociationToRemoveList
} RANConfigurationUpdateIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_RANConfigurationUpdateAcknowledgeIEs_UNDEF_,
   T_NGAP_PDU_Contents_RANConfigurationUpdateAcknowledgeIEs_id_CriticalityDiagnostics
} RANConfigurationUpdateAcknowledgeIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_RANConfigurationUpdateFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_RANConfigurationUpdateFailureIEs_id_Cause,
   T_NGAP_PDU_Contents_RANConfigurationUpdateFailureIEs_id_TimeToWait,
   T_NGAP_PDU_Contents_RANConfigurationUpdateFailureIEs_id_CriticalityDiagnostics
} RANConfigurationUpdateFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_UNDEF_,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_id_AMFName,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_id_ServedGUAMIList,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_id_RelativeAMFCapacity,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_id_PLMNSupportList,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToAddList,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToRemoveList,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToUpdateList
} AMFConfigurationUpdateIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_AMFConfigurationUpdateAcknowledgeIEs_UNDEF_,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationSetupList,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationFailedToSetupList,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateAcknowledgeIEs_id_CriticalityDiagnostics
} AMFConfigurationUpdateAcknowledgeIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_AMFConfigurationUpdateFailureIEs_UNDEF_,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateFailureIEs_id_Cause,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateFailureIEs_id_TimeToWait,
   T_NGAP_PDU_Contents_AMFConfigurationUpdateFailureIEs_id_CriticalityDiagnostics
} AMFConfigurationUpdateFailureIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_AMFStatusIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_AMFStatusIndicationIEs_id_UnavailableGUAMIList
} AMFStatusIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_NGResetIEs_UNDEF_,
   T_NGAP_PDU_Contents_NGResetIEs_id_Cause,
   T_NGAP_PDU_Contents_NGResetIEs_id_ResetType
} NGResetIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_NGResetAcknowledgeIEs_UNDEF_,
   T_NGAP_PDU_Contents_NGResetAcknowledgeIEs_id_UE_associatedLogicalNG_connectionList,
   T_NGAP_PDU_Contents_NGResetAcknowledgeIEs_id_CriticalityDiagnostics
} NGResetAcknowledgeIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_ErrorIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_ErrorIndicationIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_ErrorIndicationIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_ErrorIndicationIEs_id_Cause,
   T_NGAP_PDU_Contents_ErrorIndicationIEs_id_CriticalityDiagnostics
} ErrorIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_OverloadStartIEs_UNDEF_,
   T_NGAP_PDU_Contents_OverloadStartIEs_id_AMFOverloadResponse,
   T_NGAP_PDU_Contents_OverloadStartIEs_id_AMFTrafficLoadReductionIndication,
   T_NGAP_PDU_Contents_OverloadStartIEs_id_OverloadStartNSSAIList
} OverloadStartIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_OverloadStopIEs_UNDEF_
} OverloadStopIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UplinkRANConfigurationTransferIEs_UNDEF_,
   T_NGAP_PDU_Contents_UplinkRANConfigurationTransferIEs_id_SONConfigurationTransferUL,
   T_NGAP_PDU_Contents_UplinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferUL
} UplinkRANConfigurationTransferIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_DownlinkRANConfigurationTransferIEs_UNDEF_,
   T_NGAP_PDU_Contents_DownlinkRANConfigurationTransferIEs_id_SONConfigurationTransferDL,
   T_NGAP_PDU_Contents_DownlinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferDL
} DownlinkRANConfigurationTransferIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_MessageIdentifier,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_SerialNumber,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_WarningAreaList,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_RepetitionPeriod,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_NumberOfBroadcastsRequested,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_WarningType,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_WarningSecurityInfo,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_DataCodingScheme,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_WarningMessageContents,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_ConcurrentWarningMessageInd,
   T_NGAP_PDU_Contents_WriteReplaceWarningRequestIEs_id_WarningAreaCoordinates
} WriteReplaceWarningRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_WriteReplaceWarningResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_WriteReplaceWarningResponseIEs_id_MessageIdentifier,
   T_NGAP_PDU_Contents_WriteReplaceWarningResponseIEs_id_SerialNumber,
   T_NGAP_PDU_Contents_WriteReplaceWarningResponseIEs_id_BroadcastCompletedAreaList,
   T_NGAP_PDU_Contents_WriteReplaceWarningResponseIEs_id_CriticalityDiagnostics
} WriteReplaceWarningResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PWSCancelRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_PWSCancelRequestIEs_id_MessageIdentifier,
   T_NGAP_PDU_Contents_PWSCancelRequestIEs_id_SerialNumber,
   T_NGAP_PDU_Contents_PWSCancelRequestIEs_id_WarningAreaList,
   T_NGAP_PDU_Contents_PWSCancelRequestIEs_id_CancelAllWarningMessages
} PWSCancelRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PWSCancelResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_PWSCancelResponseIEs_id_MessageIdentifier,
   T_NGAP_PDU_Contents_PWSCancelResponseIEs_id_SerialNumber,
   T_NGAP_PDU_Contents_PWSCancelResponseIEs_id_BroadcastCancelledAreaList,
   T_NGAP_PDU_Contents_PWSCancelResponseIEs_id_CriticalityDiagnostics
} PWSCancelResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PWSRestartIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_PWSRestartIndicationIEs_id_CellIDListForRestart,
   T_NGAP_PDU_Contents_PWSRestartIndicationIEs_id_GlobalRANNodeID,
   T_NGAP_PDU_Contents_PWSRestartIndicationIEs_id_TAIListForRestart,
   T_NGAP_PDU_Contents_PWSRestartIndicationIEs_id_EmergencyAreaIDListForRestart
} PWSRestartIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PWSFailureIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_PWSFailureIndicationIEs_id_PWSFailedCellIDList,
   T_NGAP_PDU_Contents_PWSFailureIndicationIEs_id_GlobalRANNodeID
} PWSFailureIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_DownlinkUEAssociatedNRPPaTransportIEs_UNDEF_,
   T_NGAP_PDU_Contents_DownlinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DownlinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DownlinkUEAssociatedNRPPaTransportIEs_id_RoutingID,
   T_NGAP_PDU_Contents_DownlinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
} DownlinkUEAssociatedNRPPaTransportIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UplinkUEAssociatedNRPPaTransportIEs_UNDEF_,
   T_NGAP_PDU_Contents_UplinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UplinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UplinkUEAssociatedNRPPaTransportIEs_id_RoutingID,
   T_NGAP_PDU_Contents_UplinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
} UplinkUEAssociatedNRPPaTransportIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_DownlinkNonUEAssociatedNRPPaTransportIEs_UNDEF_,
   T_NGAP_PDU_Contents_DownlinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID,
   T_NGAP_PDU_Contents_DownlinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
} DownlinkNonUEAssociatedNRPPaTransportIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UplinkNonUEAssociatedNRPPaTransportIEs_UNDEF_,
   T_NGAP_PDU_Contents_UplinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID,
   T_NGAP_PDU_Contents_UplinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
} UplinkNonUEAssociatedNRPPaTransportIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_TraceStartIEs_UNDEF_,
   T_NGAP_PDU_Contents_TraceStartIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_TraceStartIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_TraceStartIEs_id_TraceActivation
} TraceStartIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_TraceFailureIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_TraceFailureIndicationIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_TraceFailureIndicationIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_TraceFailureIndicationIEs_id_NGRANTraceID,
   T_NGAP_PDU_Contents_TraceFailureIndicationIEs_id_Cause
} TraceFailureIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_DeactivateTraceIEs_UNDEF_,
   T_NGAP_PDU_Contents_DeactivateTraceIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DeactivateTraceIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_DeactivateTraceIEs_id_NGRANTraceID
} DeactivateTraceIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_CellTrafficTraceIEs_UNDEF_,
   T_NGAP_PDU_Contents_CellTrafficTraceIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_CellTrafficTraceIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_CellTrafficTraceIEs_id_NGRANTraceID,
   T_NGAP_PDU_Contents_CellTrafficTraceIEs_id_NGRAN_CGI,
   T_NGAP_PDU_Contents_CellTrafficTraceIEs_id_TraceCollectionEntityIPAddress
} CellTrafficTraceIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_LocationReportingControlIEs_UNDEF_,
   T_NGAP_PDU_Contents_LocationReportingControlIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_LocationReportingControlIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_LocationReportingControlIEs_id_LocationReportingRequestType
} LocationReportingControlIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_LocationReportingFailureIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_LocationReportingFailureIndicationIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_LocationReportingFailureIndicationIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_LocationReportingFailureIndicationIEs_id_Cause
} LocationReportingFailureIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_LocationReportIEs_UNDEF_,
   T_NGAP_PDU_Contents_LocationReportIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_LocationReportIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_LocationReportIEs_id_UserLocationInformation,
   T_NGAP_PDU_Contents_LocationReportIEs_id_UEPresenceInAreaOfInterestList,
   T_NGAP_PDU_Contents_LocationReportIEs_id_LocationReportingRequestType
} LocationReportIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UETNLABindingReleaseRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_UETNLABindingReleaseRequestIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UETNLABindingReleaseRequestIEs_id_RAN_UE_NGAP_ID
} UETNLABindingReleaseRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UERadioCapabilityInfoIndicationIEs_UNDEF_,
   T_NGAP_PDU_Contents_UERadioCapabilityInfoIndicationIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UERadioCapabilityInfoIndicationIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UERadioCapabilityInfoIndicationIEs_id_UERadioCapability,
   T_NGAP_PDU_Contents_UERadioCapabilityInfoIndicationIEs_id_UERadioCapabilityForPaging
} UERadioCapabilityInfoIndicationIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UERadioCapabilityCheckRequestIEs_UNDEF_,
   T_NGAP_PDU_Contents_UERadioCapabilityCheckRequestIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UERadioCapabilityCheckRequestIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UERadioCapabilityCheckRequestIEs_id_UERadioCapability
} UERadioCapabilityCheckRequestIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_UERadioCapabilityCheckResponseIEs_UNDEF_,
   T_NGAP_PDU_Contents_UERadioCapabilityCheckResponseIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UERadioCapabilityCheckResponseIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_UERadioCapabilityCheckResponseIEs_id_IMSVoiceSupportIndicator,
   T_NGAP_PDU_Contents_UERadioCapabilityCheckResponseIEs_id_CriticalityDiagnostics
} UERadioCapabilityCheckResponseIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_PrivateMessageIEs_UNDEF_
} PrivateMessageIEs_TVALUE;

typedef enum {
   T_NGAP_PDU_Contents_SecondaryRATDataUsageReportIEs_UNDEF_,
   T_NGAP_PDU_Contents_SecondaryRATDataUsageReportIEs_id_AMF_UE_NGAP_ID,
   T_NGAP_PDU_Contents_SecondaryRATDataUsageReportIEs_id_RAN_UE_NGAP_ID,
   T_NGAP_PDU_Contents_SecondaryRATDataUsageReportIEs_id_PDUSessionResourceSecondaryRATUsageList,
   T_NGAP_PDU_Contents_SecondaryRATDataUsageReportIEs_id_HandoverFlag,
   T_NGAP_PDU_Contents_SecondaryRATDataUsageReportIEs_id_UserLocationInformation
} SecondaryRATDataUsageReportIEs_TVALUE;

/**************************************************************/
/*                                                            */
/*  _RerouteNASRequest_IEs_Value                              */
/*                                                            */
/**************************************************************/
typedef OSDynOctStr _RerouteNASRequest_IEs_Value;

EXTERN int asn1PE__RerouteNASRequest_IEs_Value (OSCTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__RerouteNASRequest_IEs_Value (OSCTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__RerouteNASRequest_IEs_Value 
   (const char* name, const void* pvalue_);

EXTERN int asn1PrtToStr__RerouteNASRequest_IEs_Value (const char* name, 
   const void* pvalue_, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm__RerouteNASRequest_IEs_Value (OSCTXT *pctxt, 
   const char* name, const void* pvalue_);

EXTERN int asn1Init__RerouteNASRequest_IEs_Value (void* pvalue_);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupRequest_protocolIEs_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupRequest'
*/
typedef struct EXTERN PDUSessionResourceSetupRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceSetupRequestIEs_TVALUE t;

      /**
       * PDUSessionResourceSetupRequestIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceSetupRequestIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceSetupRequestIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RANPagingPriority
          * criticality: ignore
          * presence: optional
          */
         RANPagingPriority _PDUSessionResourceSetupRequestIEs_id_RANPagingPriority;
         /**
          * id: id-NAS-PDU
          * criticality: reject
          * presence: optional
          */
         NAS_PDU *_PDUSessionResourceSetupRequestIEs_id_NAS_PDU;
         /**
          * id: id-PDUSessionResourceSetupListSUReq
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionResourceSetupListSUReq *_PDUSessionResourceSetupRequestIEs_id_PDUSessionResourceSetupListSUReq;
         /**
          * id: id-UEAggregateMaximumBitRate
          * criticality: ignore
          * presence: optional
          */
         UEAggregateMaximumBitRate *_PDUSessionResourceSetupRequestIEs_id_UEAggregateMaximumBitRate;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceSetupRequest_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceSetupRequest_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupRequest_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupRequest_protocolIEs_element 
   (const char* name, const PDUSessionResourceSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupRequest_protocolIEs_element (
   const char* name, 
   PDUSessionResourceSetupRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequest_protocolIEs_element_PDUSessionResourceSetupRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequest_protocolIEs_element_PDUSessionResourceSetupRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequest_protocolIEs_element_PDUSessionResourceSetupRequestIEs_id_RANPagingPriority
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pElem, 
   RANPagingPriority value);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequest_protocolIEs_element_PDUSessionResourceSetupRequestIEs_id_NAS_PDU
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pElem, 
   NAS_PDU *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequest_protocolIEs_element_PDUSessionResourceSetupRequestIEs_id_PDUSessionResourceSetupListSUReq
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pElem, 
   PDUSessionResourceSetupListSUReq *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequest_protocolIEs_element_PDUSessionResourceSetupRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs_element* pElem, 
   UEAggregateMaximumBitRate *pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupRequest_protocolIEs_element (
   PDUSessionResourceSetupRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupRequest_protocolIEs                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupRequest'
*/
/* List of PDUSessionResourceSetupRequest_protocolIEs_element */
typedef OSRTDList PDUSessionResourceSetupRequest_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceSetupRequest_protocolIEs (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupRequest_protocolIEs (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupRequest_protocolIEs 
   (const char* name, const PDUSessionResourceSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupRequest_protocolIEs (const char* name, 
   PDUSessionResourceSetupRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RANPagingPriority to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestIEs_id_RANPagingPriority
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* plist, 
   RANPagingPriority value);

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestIEs_id_NAS_PDU
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* plist, NAS_PDU 
   *pvalue);

/* Append IE with value type PDUSessionResourceSetupListSUReq to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestIEs_id_PDUSessionResourceSetupListSUReq
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* plist, 
   PDUSessionResourceSetupListSUReq *pvalue);

/* Append IE with value type UEAggregateMaximumBitRate to list */
struct UEAggregateMaximumBitRate ;
EXTERN int asn1Append_PDUSessionResourceSetupRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, PDUSessionResourceSetupRequest_protocolIEs* plist, struct 
   UEAggregateMaximumBitRate *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupRequest_protocolIEs_element* 
   asn1Get_PDUSessionResourceSetupRequest_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceSetupRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceSetupRequest_protocolIEs* plist, 
   PDUSessionResourceSetupRequest_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupRequest_protocolIEs (
   PDUSessionResourceSetupRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupRequest                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU SESSION MANAGEMENT ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 PDU Session Resource Setup Elementary Procedure
 **************************************************************
 **************************************************************
 PDU SESSION RESOURCE SETUP REQUEST
 **************************************************************
PDUSessionResourceSetupRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceSetupRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceSetupRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceSetupRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupRequest {
   PDUSessionResourceSetupRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceSetupRequest;

EXTERN int asn1PE_PDUSessionResourceSetupRequest (OSCTXT* pctxt, PDUSessionResourceSetupRequest* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupRequest (OSCTXT* pctxt, PDUSessionResourceSetupRequest* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupRequest 
   (const char* name, const PDUSessionResourceSetupRequest* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupRequest (const char* name, 
   PDUSessionResourceSetupRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupRequest (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupRequest* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupRequest (
   PDUSessionResourceSetupRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupResponse_protocolIEs_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupResponse'
*/
typedef struct EXTERN PDUSessionResourceSetupResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceSetupResponseIEs_TVALUE t;

      /**
       * PDUSessionResourceSetupResponseIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceSetupResponseIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceSetupResponseIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceSetupListSURes
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceSetupListSURes *_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceSetupListSURes;
         /**
          * id: id-PDUSessionResourceFailedToSetupListSURes
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceFailedToSetupListSURes *_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceFailedToSetupListSURes;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_PDUSessionResourceSetupResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceSetupResponse_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceSetupResponse_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupResponse_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupResponse_protocolIEs_element 
   (const char* name, const PDUSessionResourceSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupResponse_protocolIEs_element (
   const char* name, 
   PDUSessionResourceSetupResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupResponse_protocolIEs_element_PDUSessionResourceSetupResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceSetupResponse_protocolIEs_element_PDUSessionResourceSetupResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceSetupResponse_protocolIEs_element_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceSetupListSURes
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs_element* pElem, 
   PDUSessionResourceSetupListSURes *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupResponse_protocolIEs_element_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceFailedToSetupListSURes
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs_element* pElem, 
   PDUSessionResourceFailedToSetupListSURes *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupResponse_protocolIEs_element_PDUSessionResourceSetupResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupResponse_protocolIEs_element (
   PDUSessionResourceSetupResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupResponse_protocolIEs               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupResponse'
*/
/* List of PDUSessionResourceSetupResponse_protocolIEs_element */
typedef OSRTDList PDUSessionResourceSetupResponse_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceSetupResponse_protocolIEs (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupResponse_protocolIEs (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupResponse_protocolIEs 
   (const char* name, const PDUSessionResourceSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupResponse_protocolIEs (
   const char* name, PDUSessionResourceSetupResponse_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupResponse_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceSetupResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceSetupResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceSetupListSURes to list */
EXTERN int asn1Append_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceSetupListSURes
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs* plist, 
   PDUSessionResourceSetupListSURes *pvalue);

/* Append IE with value type PDUSessionResourceFailedToSetupListSURes to list */
EXTERN int asn1Append_PDUSessionResourceSetupResponseIEs_id_PDUSessionResourceFailedToSetupListSURes
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs* plist, 
   PDUSessionResourceFailedToSetupListSURes *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_PDUSessionResourceSetupResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceSetupResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupResponse_protocolIEs_element* 
   asn1Get_PDUSessionResourceSetupResponse_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceSetupResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceSetupResponse_protocolIEs* plist, 
   PDUSessionResourceSetupResponse_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupResponse_protocolIEs (
   PDUSessionResourceSetupResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupResponse                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU SESSION RESOURCE SETUP RESPONSE
 **************************************************************
PDUSessionResourceSetupResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceSetupResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceSetupResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceSetupResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupResponse {
   PDUSessionResourceSetupResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceSetupResponse;

EXTERN int asn1PE_PDUSessionResourceSetupResponse (OSCTXT* pctxt, PDUSessionResourceSetupResponse* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupResponse (OSCTXT* pctxt, PDUSessionResourceSetupResponse* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupResponse 
   (const char* name, const PDUSessionResourceSetupResponse* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupResponse (const char* name, 
   PDUSessionResourceSetupResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupResponse (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupResponse* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupResponse (
   PDUSessionResourceSetupResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseCommand_protocolIEs_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseCommand'
*/
typedef struct EXTERN PDUSessionResourceReleaseCommand_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceReleaseCommandIEs_TVALUE t;

      /**
       * PDUSessionResourceReleaseCommandIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceReleaseCommandIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceReleaseCommandIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RANPagingPriority
          * criticality: ignore
          * presence: optional
          */
         RANPagingPriority _PDUSessionResourceReleaseCommandIEs_id_RANPagingPriority;
         /**
          * id: id-NAS-PDU
          * criticality: ignore
          * presence: optional
          */
         NAS_PDU *_PDUSessionResourceReleaseCommandIEs_id_NAS_PDU;
         /**
          * id: id-PDUSessionResourceToReleaseListRelCmd
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionResourceToReleaseListRelCmd *_PDUSessionResourceReleaseCommandIEs_id_PDUSessionResourceToReleaseListRelCmd;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceReleaseCommand_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceReleaseCommand_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseCommand_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseCommand_protocolIEs_element 
   (const char* name, const PDUSessionResourceReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseCommand_protocolIEs_element (
   const char* name, 
   PDUSessionResourceReleaseCommand_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseCommand_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceReleaseCommand_protocolIEs_element_PDUSessionResourceReleaseCommandIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs_element* pElem
   , AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceReleaseCommand_protocolIEs_element_PDUSessionResourceReleaseCommandIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs_element* pElem
   , RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceReleaseCommand_protocolIEs_element_PDUSessionResourceReleaseCommandIEs_id_RANPagingPriority
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs_element* pElem
   , RANPagingPriority value);

EXTERN void asn1SetTC_PDUSessionResourceReleaseCommand_protocolIEs_element_PDUSessionResourceReleaseCommandIEs_id_NAS_PDU
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs_element* pElem
   , NAS_PDU *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceReleaseCommand_protocolIEs_element_PDUSessionResourceReleaseCommandIEs_id_PDUSessionResourceToReleaseListRelCmd
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs_element* pElem
   , PDUSessionResourceToReleaseListRelCmd *pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseCommand_protocolIEs_element (
   PDUSessionResourceReleaseCommand_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseCommand_protocolIEs              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseCommand'
*/
/* List of PDUSessionResourceReleaseCommand_protocolIEs_element */
typedef OSRTDList PDUSessionResourceReleaseCommand_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceReleaseCommand_protocolIEs (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseCommand_protocolIEs (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseCommand_protocolIEs 
   (const char* name, const PDUSessionResourceReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseCommand_protocolIEs (
   const char* name, PDUSessionResourceReleaseCommand_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseCommand_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseCommand_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceReleaseCommandIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceReleaseCommandIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RANPagingPriority to list */
EXTERN int asn1Append_PDUSessionResourceReleaseCommandIEs_id_RANPagingPriority
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs* plist, 
   RANPagingPriority value);

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_PDUSessionResourceReleaseCommandIEs_id_NAS_PDU
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs* plist, 
   NAS_PDU *pvalue);

/* Append IE with value type PDUSessionResourceToReleaseListRelCmd to list */
EXTERN int asn1Append_PDUSessionResourceReleaseCommandIEs_id_PDUSessionResourceToReleaseListRelCmd
   (OSCTXT* pctxt, PDUSessionResourceReleaseCommand_protocolIEs* plist, 
   PDUSessionResourceToReleaseListRelCmd *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleaseCommand_protocolIEs_element* 
   asn1Get_PDUSessionResourceReleaseCommand_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceReleaseCommand_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleaseCommand_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceReleaseCommand_protocolIEs* plist, 
   PDUSessionResourceReleaseCommand_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleaseCommand_protocolIEs (
   PDUSessionResourceReleaseCommand_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseCommand                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU Session Resource Release Elementary Procedure
 **************************************************************
 **************************************************************
 PDU SESSION RESOURCE RELEASE COMMAND
 **************************************************************
PDUSessionResourceReleaseCommand ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceReleaseCommandIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceReleaseCommandIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceReleaseCommandIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleaseCommand {
   PDUSessionResourceReleaseCommand_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceReleaseCommand;

EXTERN int asn1PE_PDUSessionResourceReleaseCommand (OSCTXT* pctxt, PDUSessionResourceReleaseCommand* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseCommand (OSCTXT* pctxt, PDUSessionResourceReleaseCommand* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseCommand 
   (const char* name, const PDUSessionResourceReleaseCommand* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseCommand (const char* name, 
   PDUSessionResourceReleaseCommand* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseCommand (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseCommand* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseCommand (
   PDUSessionResourceReleaseCommand* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseResponse_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseResponse'
*/
typedef struct EXTERN PDUSessionResourceReleaseResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceReleaseResponseIEs_TVALUE t;

      /**
       * PDUSessionResourceReleaseResponseIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceReleaseResponseIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceReleaseResponseIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceReleasedListRelRes
          * criticality: ignore
          * presence: mandatory
          */
         PDUSessionResourceReleasedListRelRes *_PDUSessionResourceReleaseResponseIEs_id_PDUSessionResourceReleasedListRelRes;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: optional
          */
         UserLocationInformation *_PDUSessionResourceReleaseResponseIEs_id_UserLocationInformation;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_PDUSessionResourceReleaseResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceReleaseResponse_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceReleaseResponse_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseResponse_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseResponse_protocolIEs_element 
   (const char* name, const PDUSessionResourceReleaseResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseResponse_protocolIEs_element (
   const char* name, 
   PDUSessionResourceReleaseResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceReleaseResponse_protocolIEs_element_PDUSessionResourceReleaseResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs_element* pElem
   , AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceReleaseResponse_protocolIEs_element_PDUSessionResourceReleaseResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs_element* pElem
   , RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceReleaseResponse_protocolIEs_element_PDUSessionResourceReleaseResponseIEs_id_PDUSessionResourceReleasedListRelRes
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs_element* pElem
   , PDUSessionResourceReleasedListRelRes *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceReleaseResponse_protocolIEs_element_PDUSessionResourceReleaseResponseIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs_element* pElem
   , UserLocationInformation *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceReleaseResponse_protocolIEs_element_PDUSessionResourceReleaseResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs_element* pElem
   , CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseResponse_protocolIEs_element (
   PDUSessionResourceReleaseResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseResponse_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseResponse'
*/
/* List of PDUSessionResourceReleaseResponse_protocolIEs_element */
typedef OSRTDList PDUSessionResourceReleaseResponse_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceReleaseResponse_protocolIEs (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseResponse_protocolIEs (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseResponse_protocolIEs 
   (const char* name, const PDUSessionResourceReleaseResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseResponse_protocolIEs (
   const char* name, PDUSessionResourceReleaseResponse_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseResponse_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceReleaseResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceReleaseResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceReleasedListRelRes to list */
EXTERN int asn1Append_PDUSessionResourceReleaseResponseIEs_id_PDUSessionResourceReleasedListRelRes
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs* plist, 
   PDUSessionResourceReleasedListRelRes *pvalue);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_PDUSessionResourceReleaseResponseIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs* plist, 
   struct UserLocationInformation *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_PDUSessionResourceReleaseResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceReleaseResponse_protocolIEs* plist, 
   struct CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleaseResponse_protocolIEs_element* 
   asn1Get_PDUSessionResourceReleaseResponse_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceReleaseResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleaseResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceReleaseResponse_protocolIEs* plist, 
   PDUSessionResourceReleaseResponse_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleaseResponse_protocolIEs (
   PDUSessionResourceReleaseResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseResponse                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU SESSION RESOURCE RELEASE RESPONSE
 **************************************************************
PDUSessionResourceReleaseResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceReleaseResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceReleaseResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceReleaseResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleaseResponse {
   PDUSessionResourceReleaseResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceReleaseResponse;

EXTERN int asn1PE_PDUSessionResourceReleaseResponse (OSCTXT* pctxt, PDUSessionResourceReleaseResponse* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseResponse (OSCTXT* pctxt, PDUSessionResourceReleaseResponse* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseResponse 
   (const char* name, const PDUSessionResourceReleaseResponse* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseResponse (const char* name, 
   PDUSessionResourceReleaseResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseResponse (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseResponse* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseResponse (
   PDUSessionResourceReleaseResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyRequest_protocolIEs_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyRequest'
*/
typedef struct EXTERN PDUSessionResourceModifyRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyRequestIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyRequestIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceModifyRequestIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceModifyRequestIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RANPagingPriority
          * criticality: ignore
          * presence: optional
          */
         RANPagingPriority _PDUSessionResourceModifyRequestIEs_id_RANPagingPriority;
         /**
          * id: id-PDUSessionResourceModifyListModReq
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionResourceModifyListModReq *_PDUSessionResourceModifyRequestIEs_id_PDUSessionResourceModifyListModReq;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceModifyRequest_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceModifyRequest_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyRequest_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyRequest_protocolIEs_element 
   (const char* name, const PDUSessionResourceModifyRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyRequest_protocolIEs_element (
   const char* name, 
   PDUSessionResourceModifyRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequest_protocolIEs_element_PDUSessionResourceModifyRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequest_protocolIEs_element_PDUSessionResourceModifyRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequest_protocolIEs_element_PDUSessionResourceModifyRequestIEs_id_RANPagingPriority
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs_element* pElem, 
   RANPagingPriority value);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequest_protocolIEs_element_PDUSessionResourceModifyRequestIEs_id_PDUSessionResourceModifyListModReq
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs_element* pElem, 
   PDUSessionResourceModifyListModReq *pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyRequest_protocolIEs_element (
   PDUSessionResourceModifyRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyRequest_protocolIEs               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyRequest'
*/
/* List of PDUSessionResourceModifyRequest_protocolIEs_element */
typedef OSRTDList PDUSessionResourceModifyRequest_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceModifyRequest_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyRequest_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyRequest_protocolIEs 
   (const char* name, const PDUSessionResourceModifyRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyRequest_protocolIEs (
   const char* name, PDUSessionResourceModifyRequest_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RANPagingPriority to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestIEs_id_RANPagingPriority
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs* plist, 
   RANPagingPriority value);

/* Append IE with value type PDUSessionResourceModifyListModReq to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestIEs_id_PDUSessionResourceModifyListModReq
   (OSCTXT* pctxt, PDUSessionResourceModifyRequest_protocolIEs* plist, 
   PDUSessionResourceModifyListModReq *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyRequest_protocolIEs_element* 
   asn1Get_PDUSessionResourceModifyRequest_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceModifyRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceModifyRequest_protocolIEs* plist, 
   PDUSessionResourceModifyRequest_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyRequest_protocolIEs (
   PDUSessionResourceModifyRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyRequest                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU Session Resource Modify Elementary Procedure
 **************************************************************
 **************************************************************
 PDU SESSION RESOURCE MODIFY REQUEST
 **************************************************************
PDUSessionResourceModifyRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceModifyRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceModifyRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceModifyRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyRequest {
   PDUSessionResourceModifyRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceModifyRequest;

EXTERN int asn1PE_PDUSessionResourceModifyRequest (OSCTXT* pctxt, PDUSessionResourceModifyRequest* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyRequest (OSCTXT* pctxt, PDUSessionResourceModifyRequest* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyRequest 
   (const char* name, const PDUSessionResourceModifyRequest* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyRequest (const char* name, 
   PDUSessionResourceModifyRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyRequest (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyRequest* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyRequest (
   PDUSessionResourceModifyRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyResponse_protocolIEs_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyResponse'
*/
typedef struct EXTERN PDUSessionResourceModifyResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyResponseIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyResponseIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceModifyResponseIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceModifyResponseIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceModifyListModRes
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceModifyListModRes *_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceModifyListModRes;
         /**
          * id: id-PDUSessionResourceFailedToModifyListModRes
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceFailedToModifyListModRes *_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceFailedToModifyListModRes;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: optional
          */
         UserLocationInformation *_PDUSessionResourceModifyResponseIEs_id_UserLocationInformation;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_PDUSessionResourceModifyResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceModifyResponse_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceModifyResponse_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyResponse_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyResponse_protocolIEs_element 
   (const char* name, const PDUSessionResourceModifyResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyResponse_protocolIEs_element (
   const char* name, 
   PDUSessionResourceModifyResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyResponse_protocolIEs_element_PDUSessionResourceModifyResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pElem
   , AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyResponse_protocolIEs_element_PDUSessionResourceModifyResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pElem
   , RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyResponse_protocolIEs_element_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceModifyListModRes
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pElem
   , PDUSessionResourceModifyListModRes *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyResponse_protocolIEs_element_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceFailedToModifyListModRes
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pElem
   , PDUSessionResourceFailedToModifyListModRes *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyResponse_protocolIEs_element_PDUSessionResourceModifyResponseIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pElem
   , UserLocationInformation *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyResponse_protocolIEs_element_PDUSessionResourceModifyResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs_element* pElem
   , CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyResponse_protocolIEs_element (
   PDUSessionResourceModifyResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyResponse_protocolIEs              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyResponse'
*/
/* List of PDUSessionResourceModifyResponse_protocolIEs_element */
typedef OSRTDList PDUSessionResourceModifyResponse_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceModifyResponse_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyResponse_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyResponse_protocolIEs 
   (const char* name, const PDUSessionResourceModifyResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyResponse_protocolIEs (
   const char* name, PDUSessionResourceModifyResponse_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyResponse_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceModifyListModRes to list */
EXTERN int asn1Append_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceModifyListModRes
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* plist, 
   PDUSessionResourceModifyListModRes *pvalue);

/* Append IE with value type PDUSessionResourceFailedToModifyListModRes to list */
EXTERN int asn1Append_PDUSessionResourceModifyResponseIEs_id_PDUSessionResourceFailedToModifyListModRes
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* plist, 
   PDUSessionResourceFailedToModifyListModRes *pvalue);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_PDUSessionResourceModifyResponseIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_PDUSessionResourceModifyResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceModifyResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyResponse_protocolIEs_element* 
   asn1Get_PDUSessionResourceModifyResponse_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceModifyResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceModifyResponse_protocolIEs* plist, 
   PDUSessionResourceModifyResponse_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyResponse_protocolIEs (
   PDUSessionResourceModifyResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyResponse                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU SESSION RESOURCE MODIFY RESPONSE
 **************************************************************
PDUSessionResourceModifyResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceModifyResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceModifyResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceModifyResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyResponse {
   PDUSessionResourceModifyResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceModifyResponse;

EXTERN int asn1PE_PDUSessionResourceModifyResponse (OSCTXT* pctxt, PDUSessionResourceModifyResponse* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyResponse (OSCTXT* pctxt, PDUSessionResourceModifyResponse* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyResponse 
   (const char* name, const PDUSessionResourceModifyResponse* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyResponse (const char* name, 
   PDUSessionResourceModifyResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyResponse (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyResponse* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyResponse (
   PDUSessionResourceModifyResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotify_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotify'
*/
typedef struct EXTERN PDUSessionResourceNotify_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceNotifyIEs_TVALUE t;

      /**
       * PDUSessionResourceNotifyIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceNotifyIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceNotifyIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceNotifyList
          * criticality: reject
          * presence: optional
          */
         PDUSessionResourceNotifyList *_PDUSessionResourceNotifyIEs_id_PDUSessionResourceNotifyList;
         /**
          * id: id-PDUSessionResourceReleasedListNot
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceReleasedListNot *_PDUSessionResourceNotifyIEs_id_PDUSessionResourceReleasedListNot;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: optional
          */
         UserLocationInformation *_PDUSessionResourceNotifyIEs_id_UserLocationInformation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceNotify_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceNotify_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotify_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotify_protocolIEs_element 
   (const char* name, const PDUSessionResourceNotify_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotify_protocolIEs_element (
   const char* name, PDUSessionResourceNotify_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotify_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotify_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceNotify_protocolIEs_element_PDUSessionResourceNotifyIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceNotify_protocolIEs_element_PDUSessionResourceNotifyIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceNotify_protocolIEs_element_PDUSessionResourceNotifyIEs_id_PDUSessionResourceNotifyList
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs_element* pElem, 
   PDUSessionResourceNotifyList *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceNotify_protocolIEs_element_PDUSessionResourceNotifyIEs_id_PDUSessionResourceReleasedListNot
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs_element* pElem, 
   PDUSessionResourceReleasedListNot *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceNotify_protocolIEs_element_PDUSessionResourceNotifyIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN int asn1Init_PDUSessionResourceNotify_protocolIEs_element (
   PDUSessionResourceNotify_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotify_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotify'
*/
/* List of PDUSessionResourceNotify_protocolIEs_element */
typedef OSRTDList PDUSessionResourceNotify_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceNotify_protocolIEs (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotify_protocolIEs (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotify_protocolIEs 
   (const char* name, const PDUSessionResourceNotify_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotify_protocolIEs (const char* name, 
   PDUSessionResourceNotify_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotify_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotify_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceNotifyIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceNotifyIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type PDUSessionResourceNotifyList to list */
EXTERN int asn1Append_PDUSessionResourceNotifyIEs_id_PDUSessionResourceNotifyList
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs* plist, 
   PDUSessionResourceNotifyList *pvalue);

/* Append IE with value type PDUSessionResourceReleasedListNot to list */
EXTERN int asn1Append_PDUSessionResourceNotifyIEs_id_PDUSessionResourceReleasedListNot
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs* plist, 
   PDUSessionResourceReleasedListNot *pvalue);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_PDUSessionResourceNotifyIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PDUSessionResourceNotify_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceNotify_protocolIEs_element* 
   asn1Get_PDUSessionResourceNotify_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceNotify_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceNotify_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceNotify_protocolIEs* plist, 
   PDUSessionResourceNotify_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceNotify_protocolIEs (
   PDUSessionResourceNotify_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotify                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU Session Resource Notify Elementary Procedure
 **************************************************************
 **************************************************************
 PDU SESSION RESOURCE NOTIFY
 **************************************************************
PDUSessionResourceNotify ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceNotifyIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceNotifyIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceNotifyIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceNotify {
   PDUSessionResourceNotify_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceNotify;

EXTERN int asn1PE_PDUSessionResourceNotify (OSCTXT* pctxt, PDUSessionResourceNotify* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotify (OSCTXT* pctxt, PDUSessionResourceNotify* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotify 
   (const char* name, const PDUSessionResourceNotify* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotify (const char* name, 
   PDUSessionResourceNotify* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotify (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotify* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotify (PDUSessionResourceNotify* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndication_protocolIEs_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyIndication'
*/
typedef struct EXTERN PDUSessionResourceModifyIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyIndicationIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyIndicationIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceModifyIndicationIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceModifyIndicationIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceModifyListModInd
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionResourceModifyListModInd *_PDUSessionResourceModifyIndicationIEs_id_PDUSessionResourceModifyListModInd;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceModifyIndication_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceModifyIndication_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndication_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndication_protocolIEs_element 
   (const char* name, const PDUSessionResourceModifyIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndication_protocolIEs_element (
   const char* name, 
   PDUSessionResourceModifyIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyIndication_protocolIEs_element_PDUSessionResourceModifyIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs_element* pElem
   , AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyIndication_protocolIEs_element_PDUSessionResourceModifyIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs_element* pElem
   , RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyIndication_protocolIEs_element_PDUSessionResourceModifyIndicationIEs_id_PDUSessionResourceModifyListModInd
   (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs_element* pElem
   , PDUSessionResourceModifyListModInd *pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyIndication_protocolIEs_element (
   PDUSessionResourceModifyIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndication_protocolIEs            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyIndication'
*/
/* List of PDUSessionResourceModifyIndication_protocolIEs_element */
typedef OSRTDList PDUSessionResourceModifyIndication_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceModifyIndication_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndication_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndication_protocolIEs 
   (const char* name, const PDUSessionResourceModifyIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndication_protocolIEs (
   const char* name, PDUSessionResourceModifyIndication_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndication_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceModifyListModInd to list */
EXTERN int asn1Append_PDUSessionResourceModifyIndicationIEs_id_PDUSessionResourceModifyListModInd
   (OSCTXT* pctxt, PDUSessionResourceModifyIndication_protocolIEs* plist, 
   PDUSessionResourceModifyListModInd *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyIndication_protocolIEs_element* 
   asn1Get_PDUSessionResourceModifyIndication_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceModifyIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceModifyIndication_protocolIEs* plist, 
   PDUSessionResourceModifyIndication_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyIndication_protocolIEs (
   PDUSessionResourceModifyIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndication                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU Session Resource Modify Indication Elementary Procedure
 **************************************************************
 **************************************************************
 PDU SESSION RESOURCE MODIFY INDICATION
 **************************************************************
PDUSessionResourceModifyIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceModifyIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceModifyIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceModifyIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyIndication {
   PDUSessionResourceModifyIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceModifyIndication;

EXTERN int asn1PE_PDUSessionResourceModifyIndication (OSCTXT* pctxt, PDUSessionResourceModifyIndication* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndication (OSCTXT* pctxt, PDUSessionResourceModifyIndication* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndication 
   (const char* name, const PDUSessionResourceModifyIndication* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndication (const char* name, 
   PDUSessionResourceModifyIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndication (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndication* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyIndication (
   PDUSessionResourceModifyIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyConfirm_protocolIEs_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyConfirm'
*/
typedef struct EXTERN PDUSessionResourceModifyConfirm_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyConfirmIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyConfirmIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PDUSessionResourceModifyConfirmIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PDUSessionResourceModifyConfirmIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceModifyListModCfm
          * criticality: ignore
          * presence: mandatory
          */
         PDUSessionResourceModifyListModCfm *_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceModifyListModCfm;
         /**
          * id: id-PDUSessionResourceFailedToModifyListModCfm
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceFailedToModifyListModCfm *_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceFailedToModifyListModCfm;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_PDUSessionResourceModifyConfirmIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceModifyConfirm_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceModifyConfirm_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyConfirm_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyConfirm_protocolIEs_element 
   (const char* name, const PDUSessionResourceModifyConfirm_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyConfirm_protocolIEs_element (
   const char* name, 
   PDUSessionResourceModifyConfirm_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyConfirm_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyConfirm_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyConfirm_protocolIEs_element_PDUSessionResourceModifyConfirmIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyConfirm_protocolIEs_element_PDUSessionResourceModifyConfirmIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PDUSessionResourceModifyConfirm_protocolIEs_element_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceModifyListModCfm
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs_element* pElem, 
   PDUSessionResourceModifyListModCfm *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyConfirm_protocolIEs_element_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceFailedToModifyListModCfm
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs_element* pElem, 
   PDUSessionResourceFailedToModifyListModCfm *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyConfirm_protocolIEs_element_PDUSessionResourceModifyConfirmIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyConfirm_protocolIEs_element (
   PDUSessionResourceModifyConfirm_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyConfirm_protocolIEs               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyConfirm'
*/
/* List of PDUSessionResourceModifyConfirm_protocolIEs_element */
typedef OSRTDList PDUSessionResourceModifyConfirm_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceModifyConfirm_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyConfirm_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyConfirm_protocolIEs 
   (const char* name, const PDUSessionResourceModifyConfirm_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyConfirm_protocolIEs (
   const char* name, PDUSessionResourceModifyConfirm_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyConfirm_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyConfirm_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyConfirmIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PDUSessionResourceModifyConfirmIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceModifyListModCfm to list */
EXTERN int asn1Append_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceModifyListModCfm
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs* plist, 
   PDUSessionResourceModifyListModCfm *pvalue);

/* Append IE with value type PDUSessionResourceFailedToModifyListModCfm to list */
EXTERN int asn1Append_PDUSessionResourceModifyConfirmIEs_id_PDUSessionResourceFailedToModifyListModCfm
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs* plist, 
   PDUSessionResourceFailedToModifyListModCfm *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_PDUSessionResourceModifyConfirmIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PDUSessionResourceModifyConfirm_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyConfirm_protocolIEs_element* 
   asn1Get_PDUSessionResourceModifyConfirm_protocolIEs (ProtocolIE_ID id, 
   PDUSessionResourceModifyConfirm_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyConfirm_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceModifyConfirm_protocolIEs* plist, 
   PDUSessionResourceModifyConfirm_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyConfirm_protocolIEs (
   PDUSessionResourceModifyConfirm_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyConfirm                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PDU SESSION RESOURCE MODIFY CONFIRM
 **************************************************************
PDUSessionResourceModifyConfirm ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceModifyConfirmIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceModifyConfirmIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceModifyConfirmIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyConfirm {
   PDUSessionResourceModifyConfirm_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceModifyConfirm;

EXTERN int asn1PE_PDUSessionResourceModifyConfirm (OSCTXT* pctxt, PDUSessionResourceModifyConfirm* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyConfirm (OSCTXT* pctxt, PDUSessionResourceModifyConfirm* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyConfirm 
   (const char* name, const PDUSessionResourceModifyConfirm* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyConfirm (const char* name, 
   PDUSessionResourceModifyConfirm* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyConfirm (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyConfirm* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyConfirm (
   PDUSessionResourceModifyConfirm* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupRequest_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupRequest'
*/
typedef struct EXTERN InitialContextSetupRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      InitialContextSetupRequestIEs_TVALUE t;

      /**
       * InitialContextSetupRequestIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _InitialContextSetupRequestIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _InitialContextSetupRequestIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-OldAMF
          * criticality: reject
          * presence: optional
          */
         AMFName _InitialContextSetupRequestIEs_id_OldAMF;
         /**
          * id: id-UEAggregateMaximumBitRate
          * criticality: reject
          * presence: conditional
          */
         UEAggregateMaximumBitRate *_InitialContextSetupRequestIEs_id_UEAggregateMaximumBitRate;
         /**
          * id: id-CoreNetworkAssistanceInformationForInactive
          * criticality: ignore
          * presence: optional
          */
         CoreNetworkAssistanceInformationForInactive *_InitialContextSetupRequestIEs_id_CoreNetworkAssistanceInformationForInactive;
         /**
          * id: id-GUAMI
          * criticality: reject
          * presence: mandatory
          */
         GUAMI *_InitialContextSetupRequestIEs_id_GUAMI;
         /**
          * id: id-PDUSessionResourceSetupListCxtReq
          * criticality: reject
          * presence: optional
          */
         PDUSessionResourceSetupListCxtReq *_InitialContextSetupRequestIEs_id_PDUSessionResourceSetupListCxtReq;
         /**
          * id: id-AllowedNSSAI
          * criticality: reject
          * presence: mandatory
          */
         AllowedNSSAI *_InitialContextSetupRequestIEs_id_AllowedNSSAI;
         /**
          * id: id-UESecurityCapabilities
          * criticality: reject
          * presence: mandatory
          */
         UESecurityCapabilities *_InitialContextSetupRequestIEs_id_UESecurityCapabilities;
         /**
          * id: id-SecurityKey
          * criticality: reject
          * presence: mandatory
          */
         SecurityKey *_InitialContextSetupRequestIEs_id_SecurityKey;
         /**
          * id: id-TraceActivation
          * criticality: ignore
          * presence: optional
          */
         TraceActivation *_InitialContextSetupRequestIEs_id_TraceActivation;
         /**
          * id: id-MobilityRestrictionList
          * criticality: ignore
          * presence: optional
          */
         MobilityRestrictionList *_InitialContextSetupRequestIEs_id_MobilityRestrictionList;
         /**
          * id: id-UERadioCapability
          * criticality: ignore
          * presence: optional
          */
         UERadioCapability *_InitialContextSetupRequestIEs_id_UERadioCapability;
         /**
          * id: id-IndexToRFSP
          * criticality: ignore
          * presence: optional
          */
         IndexToRFSP _InitialContextSetupRequestIEs_id_IndexToRFSP;
         /**
          * id: id-MaskedIMEISV
          * criticality: ignore
          * presence: optional
          */
         MaskedIMEISV *_InitialContextSetupRequestIEs_id_MaskedIMEISV;
         /**
          * id: id-NAS-PDU
          * criticality: ignore
          * presence: optional
          */
         NAS_PDU *_InitialContextSetupRequestIEs_id_NAS_PDU;
         /**
          * id: id-EmergencyFallbackIndicator
          * criticality: reject
          * presence: optional
          */
         EmergencyFallbackIndicator *_InitialContextSetupRequestIEs_id_EmergencyFallbackIndicator;
         /**
          * id: id-RRCInactiveTransitionReportRequest
          * criticality: ignore
          * presence: optional
          */
         RRCInactiveTransitionReportRequest _InitialContextSetupRequestIEs_id_RRCInactiveTransitionReportRequest;
         /**
          * id: id-UERadioCapabilityForPaging
          * criticality: ignore
          * presence: optional
          */
         UERadioCapabilityForPaging *_InitialContextSetupRequestIEs_id_UERadioCapabilityForPaging;
         /**
          * id: id-RedirectionVoiceFallback
          * criticality: ignore
          * presence: optional
          */
         RedirectionVoiceFallback _InitialContextSetupRequestIEs_id_RedirectionVoiceFallback;
         /**
          * id: id-LocationReportingRequestType
          * criticality: ignore
          * presence: optional
          */
         LocationReportingRequestType *_InitialContextSetupRequestIEs_id_LocationReportingRequestType;
         /**
          * id: id-CNAssistedRANTuning
          * criticality: ignore
          * presence: optional
          */
         CNAssistedRANTuning *_InitialContextSetupRequestIEs_id_CNAssistedRANTuning;

         ASN1OpenType* extElem1;
      } u;
   } value;
} InitialContextSetupRequest_protocolIEs_element;

EXTERN int asn1PE_InitialContextSetupRequest_protocolIEs_element (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_InitialContextSetupRequest_protocolIEs_element (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_InitialContextSetupRequest_protocolIEs_element 
   (const char* name, const InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupRequest_protocolIEs_element (
   const char* name, InitialContextSetupRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_OldAMF
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   AMFName value);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   UEAggregateMaximumBitRate *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   CoreNetworkAssistanceInformationForInactive *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_GUAMI
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   GUAMI *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_PDUSessionResourceSetupListCxtReq
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   PDUSessionResourceSetupListCxtReq *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_AllowedNSSAI
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   AllowedNSSAI *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_SecurityKey
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   SecurityKey *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_TraceActivation
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   TraceActivation *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_MobilityRestrictionList
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   MobilityRestrictionList *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_UERadioCapability
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   UERadioCapability *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_IndexToRFSP
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   IndexToRFSP value);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_MaskedIMEISV
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   MaskedIMEISV *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_NAS_PDU
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   NAS_PDU *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_EmergencyFallbackIndicator
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   EmergencyFallbackIndicator *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   RRCInactiveTransitionReportRequest value);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_UERadioCapabilityForPaging
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   UERadioCapabilityForPaging *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_RedirectionVoiceFallback
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   RedirectionVoiceFallback value);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   LocationReportingRequestType *pvalue);

EXTERN void asn1SetTC_InitialContextSetupRequest_protocolIEs_element_InitialContextSetupRequestIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs_element* pElem, 
   CNAssistedRANTuning *pvalue);

EXTERN int asn1Init_InitialContextSetupRequest_protocolIEs_element (
   InitialContextSetupRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupRequest_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupRequest'
*/
/* List of InitialContextSetupRequest_protocolIEs_element */
typedef OSRTDList InitialContextSetupRequest_protocolIEs;

EXTERN int asn1PE_InitialContextSetupRequest_protocolIEs (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PD_InitialContextSetupRequest_protocolIEs (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* pvalue);

EXTERN void asn1Print_InitialContextSetupRequest_protocolIEs 
   (const char* name, const InitialContextSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupRequest_protocolIEs (const char* name, 
   InitialContextSetupRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type AMFName to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_OldAMF
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, AMFName 
   value);

/* Append IE with value type UEAggregateMaximumBitRate to list */
struct UEAggregateMaximumBitRate ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   UEAggregateMaximumBitRate *pvalue);

/* Append IE with value type CoreNetworkAssistanceInformationForInactive to list */
struct CoreNetworkAssistanceInformationForInactive ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   CoreNetworkAssistanceInformationForInactive *pvalue);

/* Append IE with value type GUAMI to list */
struct GUAMI ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_GUAMI
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct GUAMI 
   *pvalue);

/* Append IE with value type PDUSessionResourceSetupListCxtReq to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_PDUSessionResourceSetupListCxtReq
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, 
   PDUSessionResourceSetupListCxtReq *pvalue);

/* Append IE with value type AllowedNSSAI to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_AllowedNSSAI
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, AllowedNSSAI 
   *pvalue);

/* Append IE with value type UESecurityCapabilities to list */
struct UESecurityCapabilities ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   UESecurityCapabilities *pvalue);

/* Append IE with value type SecurityKey to list */
struct SecurityKey ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_SecurityKey
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   SecurityKey *pvalue);

/* Append IE with value type TraceActivation to list */
struct TraceActivation ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_TraceActivation
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   TraceActivation *pvalue);

/* Append IE with value type MobilityRestrictionList to list */
struct MobilityRestrictionList ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_MobilityRestrictionList
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   MobilityRestrictionList *pvalue);

/* Append IE with value type UERadioCapability to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_UERadioCapability
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, 
   UERadioCapability *pvalue);

/* Append IE with value type IndexToRFSP to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_IndexToRFSP
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, IndexToRFSP 
   value);

/* Append IE with value type MaskedIMEISV to list */
struct MaskedIMEISV ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_MaskedIMEISV
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   MaskedIMEISV *pvalue);

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_NAS_PDU
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, NAS_PDU 
   *pvalue);

/* Append IE with value type EmergencyFallbackIndicator to list */
struct EmergencyFallbackIndicator ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_EmergencyFallbackIndicator
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   EmergencyFallbackIndicator *pvalue);

/* Append IE with value type RRCInactiveTransitionReportRequest to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, 
   RRCInactiveTransitionReportRequest value);

/* Append IE with value type UERadioCapabilityForPaging to list */
struct UERadioCapabilityForPaging ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_UERadioCapabilityForPaging
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   UERadioCapabilityForPaging *pvalue);

/* Append IE with value type RedirectionVoiceFallback to list */
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_RedirectionVoiceFallback
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, 
   RedirectionVoiceFallback value);

/* Append IE with value type LocationReportingRequestType to list */
struct LocationReportingRequestType ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   LocationReportingRequestType *pvalue);

/* Append IE with value type CNAssistedRANTuning to list */
struct CNAssistedRANTuning ;
EXTERN int asn1Append_InitialContextSetupRequestIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, InitialContextSetupRequest_protocolIEs* plist, struct 
   CNAssistedRANTuning *pvalue);

/* Get IE using id key value */
EXTERN struct InitialContextSetupRequest_protocolIEs_element* 
   asn1Get_InitialContextSetupRequest_protocolIEs (ProtocolIE_ID id, 
   InitialContextSetupRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_InitialContextSetupRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   InitialContextSetupRequest_protocolIEs* plist, 
   InitialContextSetupRequest_protocolIEs* pmatches);

EXTERN int asn1Init_InitialContextSetupRequest_protocolIEs (
   InitialContextSetupRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupRequest                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE CONTEXT MANAGEMENT ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 Initial Context Setup Elementary Procedure
 **************************************************************
 **************************************************************
 INITIAL CONTEXT SETUP REQUEST
 **************************************************************
InitialContextSetupRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({InitialContextSetupRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({InitialContextSetupRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({InitialContextSetupRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN InitialContextSetupRequest {
   InitialContextSetupRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} InitialContextSetupRequest;

EXTERN int asn1PE_InitialContextSetupRequest (OSCTXT* pctxt, InitialContextSetupRequest* pvalue);

EXTERN int asn1PD_InitialContextSetupRequest (OSCTXT* pctxt, InitialContextSetupRequest* pvalue);

EXTERN void asn1Print_InitialContextSetupRequest 
   (const char* name, const InitialContextSetupRequest* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupRequest (const char* name, 
   InitialContextSetupRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupRequest (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupRequest* pvalue);

EXTERN int asn1Init_InitialContextSetupRequest (InitialContextSetupRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupResponse_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupResponse'
*/
typedef struct EXTERN InitialContextSetupResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      InitialContextSetupResponseIEs_TVALUE t;

      /**
       * InitialContextSetupResponseIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _InitialContextSetupResponseIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _InitialContextSetupResponseIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceSetupListCxtRes
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceSetupListCxtRes *_InitialContextSetupResponseIEs_id_PDUSessionResourceSetupListCxtRes;
         /**
          * id: id-PDUSessionResourceFailedToSetupListCxtRes
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceFailedToSetupListCxtRes *_InitialContextSetupResponseIEs_id_PDUSessionResourceFailedToSetupListCxtRes;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_InitialContextSetupResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} InitialContextSetupResponse_protocolIEs_element;

EXTERN int asn1PE_InitialContextSetupResponse_protocolIEs_element (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_InitialContextSetupResponse_protocolIEs_element (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_InitialContextSetupResponse_protocolIEs_element 
   (const char* name, const InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupResponse_protocolIEs_element (
   const char* name, InitialContextSetupResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_id_PDUSessionResourceSetupListCxtRes
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs_element* pElem, 
   PDUSessionResourceSetupListCxtRes *pvalue);

EXTERN void asn1SetTC_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_id_PDUSessionResourceFailedToSetupListCxtRes
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs_element* pElem, 
   PDUSessionResourceFailedToSetupListCxtRes *pvalue);

EXTERN void asn1SetTC_InitialContextSetupResponse_protocolIEs_element_InitialContextSetupResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_InitialContextSetupResponse_protocolIEs_element (
   InitialContextSetupResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupResponse_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupResponse'
*/
/* List of InitialContextSetupResponse_protocolIEs_element */
typedef OSRTDList InitialContextSetupResponse_protocolIEs;

EXTERN int asn1PE_InitialContextSetupResponse_protocolIEs (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PD_InitialContextSetupResponse_protocolIEs (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs* pvalue);

EXTERN void asn1Print_InitialContextSetupResponse_protocolIEs 
   (const char* name, const InitialContextSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupResponse_protocolIEs (const char* name, 
   InitialContextSetupResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupResponse_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_InitialContextSetupResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_InitialContextSetupResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceSetupListCxtRes to list */
EXTERN int asn1Append_InitialContextSetupResponseIEs_id_PDUSessionResourceSetupListCxtRes
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs* plist, 
   PDUSessionResourceSetupListCxtRes *pvalue);

/* Append IE with value type PDUSessionResourceFailedToSetupListCxtRes to list */
EXTERN int asn1Append_InitialContextSetupResponseIEs_id_PDUSessionResourceFailedToSetupListCxtRes
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs* plist, 
   PDUSessionResourceFailedToSetupListCxtRes *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_InitialContextSetupResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, InitialContextSetupResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct InitialContextSetupResponse_protocolIEs_element* 
   asn1Get_InitialContextSetupResponse_protocolIEs (ProtocolIE_ID id, 
   InitialContextSetupResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_InitialContextSetupResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   InitialContextSetupResponse_protocolIEs* plist, 
   InitialContextSetupResponse_protocolIEs* pmatches);

EXTERN int asn1Init_InitialContextSetupResponse_protocolIEs (
   InitialContextSetupResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupResponse                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 INITIAL CONTEXT SETUP RESPONSE
 **************************************************************
InitialContextSetupResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({InitialContextSetupResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({InitialContextSetupResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({InitialContextSetupResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN InitialContextSetupResponse {
   InitialContextSetupResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} InitialContextSetupResponse;

EXTERN int asn1PE_InitialContextSetupResponse (OSCTXT* pctxt, InitialContextSetupResponse* pvalue);

EXTERN int asn1PD_InitialContextSetupResponse (OSCTXT* pctxt, InitialContextSetupResponse* pvalue);

EXTERN void asn1Print_InitialContextSetupResponse 
   (const char* name, const InitialContextSetupResponse* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupResponse (const char* name, 
   InitialContextSetupResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupResponse (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupResponse* pvalue);

EXTERN int asn1Init_InitialContextSetupResponse (InitialContextSetupResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupFailure_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupFailure'
*/
typedef struct EXTERN InitialContextSetupFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      InitialContextSetupFailureIEs_TVALUE t;

      /**
       * InitialContextSetupFailureIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _InitialContextSetupFailureIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _InitialContextSetupFailureIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceFailedToSetupListCxtFail
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceFailedToSetupListCxtFail *_InitialContextSetupFailureIEs_id_PDUSessionResourceFailedToSetupListCxtFail;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_InitialContextSetupFailureIEs_id_Cause;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_InitialContextSetupFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} InitialContextSetupFailure_protocolIEs_element;

EXTERN int asn1PE_InitialContextSetupFailure_protocolIEs_element (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_InitialContextSetupFailure_protocolIEs_element (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_InitialContextSetupFailure_protocolIEs_element 
   (const char* name, const InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupFailure_protocolIEs_element (
   const char* name, InitialContextSetupFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_id_PDUSessionResourceFailedToSetupListCxtFail
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs_element* pElem, 
   PDUSessionResourceFailedToSetupListCxtFail *pvalue);

EXTERN void asn1SetTC_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_id_Cause
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs_element* pElem, 
   Cause *pvalue);

EXTERN void asn1SetTC_InitialContextSetupFailure_protocolIEs_element_InitialContextSetupFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_InitialContextSetupFailure_protocolIEs_element (
   InitialContextSetupFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupFailure_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialContextSetupFailure'
*/
/* List of InitialContextSetupFailure_protocolIEs_element */
typedef OSRTDList InitialContextSetupFailure_protocolIEs;

EXTERN int asn1PE_InitialContextSetupFailure_protocolIEs (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs* pvalue);

EXTERN int asn1PD_InitialContextSetupFailure_protocolIEs (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs* pvalue);

EXTERN void asn1Print_InitialContextSetupFailure_protocolIEs 
   (const char* name, const InitialContextSetupFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupFailure_protocolIEs (const char* name, 
   InitialContextSetupFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupFailure_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_InitialContextSetupFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_InitialContextSetupFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceFailedToSetupListCxtFail to list */
EXTERN int asn1Append_InitialContextSetupFailureIEs_id_PDUSessionResourceFailedToSetupListCxtFail
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs* plist, 
   PDUSessionResourceFailedToSetupListCxtFail *pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_InitialContextSetupFailureIEs_id_Cause
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs* plist, struct Cause 
   *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_InitialContextSetupFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, InitialContextSetupFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct InitialContextSetupFailure_protocolIEs_element* 
   asn1Get_InitialContextSetupFailure_protocolIEs (ProtocolIE_ID id, 
   InitialContextSetupFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_InitialContextSetupFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   InitialContextSetupFailure_protocolIEs* plist, 
   InitialContextSetupFailure_protocolIEs* pmatches);

EXTERN int asn1Init_InitialContextSetupFailure_protocolIEs (
   InitialContextSetupFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialContextSetupFailure                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 INITIAL CONTEXT SETUP FAILURE
 **************************************************************
InitialContextSetupFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({InitialContextSetupFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({InitialContextSetupFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({InitialContextSetupFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN InitialContextSetupFailure {
   InitialContextSetupFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} InitialContextSetupFailure;

EXTERN int asn1PE_InitialContextSetupFailure (OSCTXT* pctxt, InitialContextSetupFailure* pvalue);

EXTERN int asn1PD_InitialContextSetupFailure (OSCTXT* pctxt, InitialContextSetupFailure* pvalue);

EXTERN void asn1Print_InitialContextSetupFailure 
   (const char* name, const InitialContextSetupFailure* pvalue);

EXTERN int asn1PrtToStr_InitialContextSetupFailure (const char* name, 
   InitialContextSetupFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialContextSetupFailure (OSCTXT *pctxt, 
   const char* name, const InitialContextSetupFailure* pvalue);

EXTERN int asn1Init_InitialContextSetupFailure (InitialContextSetupFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseRequest_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseRequest'
*/
typedef struct EXTERN UEContextReleaseRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UEContextReleaseRequest_IEs_TVALUE t;

      /**
       * UEContextReleaseRequest-IEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UEContextReleaseRequest_IEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UEContextReleaseRequest_IEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceListCxtRelReq
          * criticality: reject
          * presence: optional
          */
         PDUSessionResourceListCxtRelReq *_UEContextReleaseRequest_IEs_id_PDUSessionResourceListCxtRelReq;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_UEContextReleaseRequest_IEs_id_Cause;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UEContextReleaseRequest_protocolIEs_element;

EXTERN int asn1PE_UEContextReleaseRequest_protocolIEs_element (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_UEContextReleaseRequest_protocolIEs_element (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_UEContextReleaseRequest_protocolIEs_element 
   (const char* name, const UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseRequest_protocolIEs_element (
   const char* name, UEContextReleaseRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_id_PDUSessionResourceListCxtRelReq
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs_element* pElem, 
   PDUSessionResourceListCxtRelReq *pvalue);

EXTERN void asn1SetTC_UEContextReleaseRequest_protocolIEs_element_UEContextReleaseRequest_IEs_id_Cause
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs_element* pElem, Cause 
   *pvalue);

EXTERN int asn1Init_UEContextReleaseRequest_protocolIEs_element (
   UEContextReleaseRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseRequest_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseRequest'
*/
/* List of UEContextReleaseRequest_protocolIEs_element */
typedef OSRTDList UEContextReleaseRequest_protocolIEs;

EXTERN int asn1PE_UEContextReleaseRequest_protocolIEs (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs* pvalue);

EXTERN int asn1PD_UEContextReleaseRequest_protocolIEs (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs* pvalue);

EXTERN void asn1Print_UEContextReleaseRequest_protocolIEs 
   (const char* name, const UEContextReleaseRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseRequest_protocolIEs (const char* name, 
   UEContextReleaseRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextReleaseRequest_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextReleaseRequest_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type PDUSessionResourceListCxtRelReq to list */
EXTERN int asn1Append_UEContextReleaseRequest_IEs_id_PDUSessionResourceListCxtRelReq
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs* plist, 
   PDUSessionResourceListCxtRelReq *pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_UEContextReleaseRequest_IEs_id_Cause
   (OSCTXT* pctxt, UEContextReleaseRequest_protocolIEs* plist, struct Cause 
   *pvalue);

/* Get IE using id key value */
EXTERN struct UEContextReleaseRequest_protocolIEs_element* 
   asn1Get_UEContextReleaseRequest_protocolIEs (ProtocolIE_ID id, 
   UEContextReleaseRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEContextReleaseRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UEContextReleaseRequest_protocolIEs* plist, 
   UEContextReleaseRequest_protocolIEs* pmatches);

EXTERN int asn1Init_UEContextReleaseRequest_protocolIEs (
   UEContextReleaseRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseRequest                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE Context Release Request Elementary Procedure
 **************************************************************
 **************************************************************
 UE CONTEXT RELEASE REQUEST
 **************************************************************
UEContextReleaseRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEContextReleaseRequest-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEContextReleaseRequest-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEContextReleaseRequest-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UEContextReleaseRequest {
   UEContextReleaseRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UEContextReleaseRequest;

EXTERN int asn1PE_UEContextReleaseRequest (OSCTXT* pctxt, UEContextReleaseRequest* pvalue);

EXTERN int asn1PD_UEContextReleaseRequest (OSCTXT* pctxt, UEContextReleaseRequest* pvalue);

EXTERN void asn1Print_UEContextReleaseRequest 
   (const char* name, const UEContextReleaseRequest* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseRequest (const char* name, 
   UEContextReleaseRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseRequest (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseRequest* pvalue);

EXTERN int asn1Init_UEContextReleaseRequest (UEContextReleaseRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseCommand_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseCommand'
*/
typedef struct EXTERN UEContextReleaseCommand_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UEContextReleaseCommand_IEs_TVALUE t;

      /**
       * UEContextReleaseCommand-IEs information objects
       */
      union {
         /**
          * id: id-UE-NGAP-IDs
          * criticality: reject
          * presence: mandatory
          */
         UE_NGAP_IDs *_UEContextReleaseCommand_IEs_id_UE_NGAP_IDs;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_UEContextReleaseCommand_IEs_id_Cause;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UEContextReleaseCommand_protocolIEs_element;

EXTERN int asn1PE_UEContextReleaseCommand_protocolIEs_element (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PD_UEContextReleaseCommand_protocolIEs_element (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1Print_UEContextReleaseCommand_protocolIEs_element 
   (const char* name, const UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseCommand_protocolIEs_element (
   const char* name, UEContextReleaseCommand_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseCommand_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseCommand_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UEContextReleaseCommand_protocolIEs_element_UEContextReleaseCommand_IEs_id_UE_NGAP_IDs
   (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs_element* pElem, 
   UE_NGAP_IDs *pvalue);

EXTERN void asn1SetTC_UEContextReleaseCommand_protocolIEs_element_UEContextReleaseCommand_IEs_id_Cause
   (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs_element* pElem, Cause 
   *pvalue);

EXTERN int asn1Init_UEContextReleaseCommand_protocolIEs_element (
   UEContextReleaseCommand_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseCommand_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseCommand'
*/
/* List of UEContextReleaseCommand_protocolIEs_element */
typedef OSRTDList UEContextReleaseCommand_protocolIEs;

EXTERN int asn1PE_UEContextReleaseCommand_protocolIEs (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PD_UEContextReleaseCommand_protocolIEs (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs* pvalue);

EXTERN void asn1Print_UEContextReleaseCommand_protocolIEs 
   (const char* name, const UEContextReleaseCommand_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseCommand_protocolIEs (const char* name, 
   UEContextReleaseCommand_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseCommand_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseCommand_protocolIEs* pvalue);

/* Append IE with value type UE_NGAP_IDs to list */
struct UE_NGAP_IDs ;
EXTERN int asn1Append_UEContextReleaseCommand_IEs_id_UE_NGAP_IDs
   (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs* plist, struct 
   UE_NGAP_IDs *pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_UEContextReleaseCommand_IEs_id_Cause
   (OSCTXT* pctxt, UEContextReleaseCommand_protocolIEs* plist, struct Cause 
   *pvalue);

/* Get IE using id key value */
EXTERN struct UEContextReleaseCommand_protocolIEs_element* 
   asn1Get_UEContextReleaseCommand_protocolIEs (ProtocolIE_ID id, 
   UEContextReleaseCommand_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEContextReleaseCommand_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UEContextReleaseCommand_protocolIEs* plist, 
   UEContextReleaseCommand_protocolIEs* pmatches);

EXTERN int asn1Init_UEContextReleaseCommand_protocolIEs (
   UEContextReleaseCommand_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseCommand                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE Context Release Elementary Procedure
 **************************************************************
 **************************************************************
 UE CONTEXT RELEASE COMMAND
 **************************************************************
UEContextReleaseCommand ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEContextReleaseCommand-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEContextReleaseCommand-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEContextReleaseCommand-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UEContextReleaseCommand {
   UEContextReleaseCommand_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UEContextReleaseCommand;

EXTERN int asn1PE_UEContextReleaseCommand (OSCTXT* pctxt, UEContextReleaseCommand* pvalue);

EXTERN int asn1PD_UEContextReleaseCommand (OSCTXT* pctxt, UEContextReleaseCommand* pvalue);

EXTERN void asn1Print_UEContextReleaseCommand 
   (const char* name, const UEContextReleaseCommand* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseCommand (const char* name, 
   UEContextReleaseCommand* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseCommand (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseCommand* pvalue);

EXTERN int asn1Init_UEContextReleaseCommand (UEContextReleaseCommand* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseComplete_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseComplete'
*/
typedef struct EXTERN UEContextReleaseComplete_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UEContextReleaseComplete_IEs_TVALUE t;

      /**
       * UEContextReleaseComplete-IEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UEContextReleaseComplete_IEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UEContextReleaseComplete_IEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: optional
          */
         UserLocationInformation *_UEContextReleaseComplete_IEs_id_UserLocationInformation;
         /**
          * id: id-InfoOnRecommendedCellsAndRANNodesForPaging
          * criticality: ignore
          * presence: optional
          */
         InfoOnRecommendedCellsAndRANNodesForPaging *_UEContextReleaseComplete_IEs_id_InfoOnRecommendedCellsAndRANNodesForPaging;
         /**
          * id: id-PDUSessionResourceListCxtRelCpl
          * criticality: reject
          * presence: optional
          */
         PDUSessionResourceListCxtRelCpl *_UEContextReleaseComplete_IEs_id_PDUSessionResourceListCxtRelCpl;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_UEContextReleaseComplete_IEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UEContextReleaseComplete_protocolIEs_element;

EXTERN int asn1PE_UEContextReleaseComplete_protocolIEs_element (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN int asn1PD_UEContextReleaseComplete_protocolIEs_element (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN void asn1Print_UEContextReleaseComplete_protocolIEs_element 
   (const char* name, const UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseComplete_protocolIEs_element (
   const char* name, UEContextReleaseComplete_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseComplete_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseComplete_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_id_UserLocationInformation
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN void asn1SetTC_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_id_InfoOnRecommendedCellsAndRANNodesForPaging
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pElem, 
   InfoOnRecommendedCellsAndRANNodesForPaging *pvalue);

EXTERN void asn1SetTC_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_id_PDUSessionResourceListCxtRelCpl
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pElem, 
   PDUSessionResourceListCxtRelCpl *pvalue);

EXTERN void asn1SetTC_UEContextReleaseComplete_protocolIEs_element_UEContextReleaseComplete_IEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_UEContextReleaseComplete_protocolIEs_element (
   UEContextReleaseComplete_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseComplete_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextReleaseComplete'
*/
/* List of UEContextReleaseComplete_protocolIEs_element */
typedef OSRTDList UEContextReleaseComplete_protocolIEs;

EXTERN int asn1PE_UEContextReleaseComplete_protocolIEs (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* pvalue);

EXTERN int asn1PD_UEContextReleaseComplete_protocolIEs (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* pvalue);

EXTERN void asn1Print_UEContextReleaseComplete_protocolIEs 
   (const char* name, const UEContextReleaseComplete_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseComplete_protocolIEs (const char* name, 
   UEContextReleaseComplete_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseComplete_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseComplete_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextReleaseComplete_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextReleaseComplete_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_UEContextReleaseComplete_IEs_id_UserLocationInformation
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Append IE with value type InfoOnRecommendedCellsAndRANNodesForPaging to list */
struct InfoOnRecommendedCellsAndRANNodesForPaging ;
EXTERN int asn1Append_UEContextReleaseComplete_IEs_id_InfoOnRecommendedCellsAndRANNodesForPaging
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* plist, struct 
   InfoOnRecommendedCellsAndRANNodesForPaging *pvalue);

/* Append IE with value type PDUSessionResourceListCxtRelCpl to list */
EXTERN int asn1Append_UEContextReleaseComplete_IEs_id_PDUSessionResourceListCxtRelCpl
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* plist, 
   PDUSessionResourceListCxtRelCpl *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_UEContextReleaseComplete_IEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UEContextReleaseComplete_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct UEContextReleaseComplete_protocolIEs_element* 
   asn1Get_UEContextReleaseComplete_protocolIEs (ProtocolIE_ID id, 
   UEContextReleaseComplete_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEContextReleaseComplete_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UEContextReleaseComplete_protocolIEs* plist, 
   UEContextReleaseComplete_protocolIEs* pmatches);

EXTERN int asn1Init_UEContextReleaseComplete_protocolIEs (
   UEContextReleaseComplete_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextReleaseComplete                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE CONTEXT RELEASE COMPLETE
 **************************************************************
UEContextReleaseComplete ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEContextReleaseComplete-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEContextReleaseComplete-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEContextReleaseComplete-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UEContextReleaseComplete {
   UEContextReleaseComplete_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UEContextReleaseComplete;

EXTERN int asn1PE_UEContextReleaseComplete (OSCTXT* pctxt, UEContextReleaseComplete* pvalue);

EXTERN int asn1PD_UEContextReleaseComplete (OSCTXT* pctxt, UEContextReleaseComplete* pvalue);

EXTERN void asn1Print_UEContextReleaseComplete 
   (const char* name, const UEContextReleaseComplete* pvalue);

EXTERN int asn1PrtToStr_UEContextReleaseComplete (const char* name, 
   UEContextReleaseComplete* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextReleaseComplete (OSCTXT *pctxt, 
   const char* name, const UEContextReleaseComplete* pvalue);

EXTERN int asn1Init_UEContextReleaseComplete (UEContextReleaseComplete* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationRequest_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationRequest'
*/
typedef struct EXTERN UEContextModificationRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UEContextModificationRequestIEs_TVALUE t;

      /**
       * UEContextModificationRequestIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UEContextModificationRequestIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UEContextModificationRequestIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RANPagingPriority
          * criticality: ignore
          * presence: optional
          */
         RANPagingPriority _UEContextModificationRequestIEs_id_RANPagingPriority;
         /**
          * id: id-SecurityKey
          * criticality: reject
          * presence: optional
          */
         SecurityKey *_UEContextModificationRequestIEs_id_SecurityKey;
         /**
          * id: id-IndexToRFSP
          * criticality: ignore
          * presence: optional
          */
         IndexToRFSP _UEContextModificationRequestIEs_id_IndexToRFSP;
         /**
          * id: id-UEAggregateMaximumBitRate
          * criticality: ignore
          * presence: optional
          */
         UEAggregateMaximumBitRate *_UEContextModificationRequestIEs_id_UEAggregateMaximumBitRate;
         /**
          * id: id-UESecurityCapabilities
          * criticality: reject
          * presence: optional
          */
         UESecurityCapabilities *_UEContextModificationRequestIEs_id_UESecurityCapabilities;
         /**
          * id: id-CoreNetworkAssistanceInformationForInactive
          * criticality: ignore
          * presence: optional
          */
         CoreNetworkAssistanceInformationForInactive *_UEContextModificationRequestIEs_id_CoreNetworkAssistanceInformationForInactive;
         /**
          * id: id-EmergencyFallbackIndicator
          * criticality: reject
          * presence: optional
          */
         EmergencyFallbackIndicator *_UEContextModificationRequestIEs_id_EmergencyFallbackIndicator;
         /**
          * id: id-NewAMF-UE-NGAP-ID
          * criticality: reject
          * presence: optional
          */
         AMF_UE_NGAP_ID _UEContextModificationRequestIEs_id_NewAMF_UE_NGAP_ID;
         /**
          * id: id-RRCInactiveTransitionReportRequest
          * criticality: ignore
          * presence: optional
          */
         RRCInactiveTransitionReportRequest _UEContextModificationRequestIEs_id_RRCInactiveTransitionReportRequest;
         /**
          * id: id-NewGUAMI
          * criticality: reject
          * presence: optional
          */
         GUAMI *_UEContextModificationRequestIEs_id_NewGUAMI;
         /**
          * id: id-CNAssistedRANTuning
          * criticality: ignore
          * presence: optional
          */
         CNAssistedRANTuning *_UEContextModificationRequestIEs_id_CNAssistedRANTuning;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UEContextModificationRequest_protocolIEs_element;

EXTERN int asn1PE_UEContextModificationRequest_protocolIEs_element (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_UEContextModificationRequest_protocolIEs_element (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_UEContextModificationRequest_protocolIEs_element 
   (const char* name, const UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationRequest_protocolIEs_element (
   const char* name, UEContextModificationRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UEContextModificationRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_RANPagingPriority
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   RANPagingPriority value);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_SecurityKey
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   SecurityKey *pvalue);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_IndexToRFSP
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   IndexToRFSP value);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   UEAggregateMaximumBitRate *pvalue);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   CoreNetworkAssistanceInformationForInactive *pvalue);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_EmergencyFallbackIndicator
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   EmergencyFallbackIndicator *pvalue);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_NewAMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   RRCInactiveTransitionReportRequest value);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_NewGUAMI
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   GUAMI *pvalue);

EXTERN void asn1SetTC_UEContextModificationRequest_protocolIEs_element_UEContextModificationRequestIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs_element* pElem, 
   CNAssistedRANTuning *pvalue);

EXTERN int asn1Init_UEContextModificationRequest_protocolIEs_element (
   UEContextModificationRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationRequest_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationRequest'
*/
/* List of UEContextModificationRequest_protocolIEs_element */
typedef OSRTDList UEContextModificationRequest_protocolIEs;

EXTERN int asn1PE_UEContextModificationRequest_protocolIEs (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* pvalue);

EXTERN int asn1PD_UEContextModificationRequest_protocolIEs (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* pvalue);

EXTERN void asn1Print_UEContextModificationRequest_protocolIEs 
   (const char* name, const UEContextModificationRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationRequest_protocolIEs (const char* name, 
   UEContextModificationRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UEContextModificationRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextModificationRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextModificationRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RANPagingPriority to list */
EXTERN int asn1Append_UEContextModificationRequestIEs_id_RANPagingPriority
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, 
   RANPagingPriority value);

/* Append IE with value type SecurityKey to list */
struct SecurityKey ;
EXTERN int asn1Append_UEContextModificationRequestIEs_id_SecurityKey
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, struct 
   SecurityKey *pvalue);

/* Append IE with value type IndexToRFSP to list */
EXTERN int asn1Append_UEContextModificationRequestIEs_id_IndexToRFSP
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, 
   IndexToRFSP value);

/* Append IE with value type UEAggregateMaximumBitRate to list */
struct UEAggregateMaximumBitRate ;
EXTERN int asn1Append_UEContextModificationRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, struct 
   UEAggregateMaximumBitRate *pvalue);

/* Append IE with value type UESecurityCapabilities to list */
struct UESecurityCapabilities ;
EXTERN int asn1Append_UEContextModificationRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, struct 
   UESecurityCapabilities *pvalue);

/* Append IE with value type CoreNetworkAssistanceInformationForInactive to list */
struct CoreNetworkAssistanceInformationForInactive ;
EXTERN int asn1Append_UEContextModificationRequestIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, struct 
   CoreNetworkAssistanceInformationForInactive *pvalue);

/* Append IE with value type EmergencyFallbackIndicator to list */
struct EmergencyFallbackIndicator ;
EXTERN int asn1Append_UEContextModificationRequestIEs_id_EmergencyFallbackIndicator
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, struct 
   EmergencyFallbackIndicator *pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextModificationRequestIEs_id_NewAMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RRCInactiveTransitionReportRequest to list */
EXTERN int asn1Append_UEContextModificationRequestIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, 
   RRCInactiveTransitionReportRequest value);

/* Append IE with value type GUAMI to list */
struct GUAMI ;
EXTERN int asn1Append_UEContextModificationRequestIEs_id_NewGUAMI
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, struct 
   GUAMI *pvalue);

/* Append IE with value type CNAssistedRANTuning to list */
struct CNAssistedRANTuning ;
EXTERN int asn1Append_UEContextModificationRequestIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, UEContextModificationRequest_protocolIEs* plist, struct 
   CNAssistedRANTuning *pvalue);

/* Get IE using id key value */
EXTERN struct UEContextModificationRequest_protocolIEs_element* 
   asn1Get_UEContextModificationRequest_protocolIEs (ProtocolIE_ID id, 
   UEContextModificationRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEContextModificationRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UEContextModificationRequest_protocolIEs* plist, 
   UEContextModificationRequest_protocolIEs* pmatches);

EXTERN int asn1Init_UEContextModificationRequest_protocolIEs (
   UEContextModificationRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationRequest                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE Context Modification Elementary Procedure
 **************************************************************
 **************************************************************
 UE CONTEXT MODIFICATION REQUEST
 **************************************************************
UEContextModificationRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEContextModificationRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEContextModificationRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEContextModificationRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UEContextModificationRequest {
   UEContextModificationRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UEContextModificationRequest;

EXTERN int asn1PE_UEContextModificationRequest (OSCTXT* pctxt, UEContextModificationRequest* pvalue);

EXTERN int asn1PD_UEContextModificationRequest (OSCTXT* pctxt, UEContextModificationRequest* pvalue);

EXTERN void asn1Print_UEContextModificationRequest 
   (const char* name, const UEContextModificationRequest* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationRequest (const char* name, 
   UEContextModificationRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationRequest (OSCTXT *pctxt, 
   const char* name, const UEContextModificationRequest* pvalue);

EXTERN int asn1Init_UEContextModificationRequest (
   UEContextModificationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationResponse_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationResponse'
*/
typedef struct EXTERN UEContextModificationResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UEContextModificationResponseIEs_TVALUE t;

      /**
       * UEContextModificationResponseIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UEContextModificationResponseIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UEContextModificationResponseIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RRCState
          * criticality: ignore
          * presence: optional
          */
         RRCState _UEContextModificationResponseIEs_id_RRCState;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: optional
          */
         UserLocationInformation *_UEContextModificationResponseIEs_id_UserLocationInformation;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_UEContextModificationResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UEContextModificationResponse_protocolIEs_element;

EXTERN int asn1PE_UEContextModificationResponse_protocolIEs_element (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_UEContextModificationResponse_protocolIEs_element (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_UEContextModificationResponse_protocolIEs_element 
   (const char* name, const UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationResponse_protocolIEs_element (
   const char* name, 
   UEContextModificationResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UEContextModificationResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_id_RRCState
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs_element* pElem, 
   RRCState value);

EXTERN void asn1SetTC_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_id_UserLocationInformation
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN void asn1SetTC_UEContextModificationResponse_protocolIEs_element_UEContextModificationResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_UEContextModificationResponse_protocolIEs_element (
   UEContextModificationResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationResponse_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationResponse'
*/
/* List of UEContextModificationResponse_protocolIEs_element */
typedef OSRTDList UEContextModificationResponse_protocolIEs;

EXTERN int asn1PE_UEContextModificationResponse_protocolIEs (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs* pvalue);

EXTERN int asn1PD_UEContextModificationResponse_protocolIEs (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs* pvalue);

EXTERN void asn1Print_UEContextModificationResponse_protocolIEs 
   (const char* name, const UEContextModificationResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationResponse_protocolIEs (const char* name, 
   UEContextModificationResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UEContextModificationResponse_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextModificationResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextModificationResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RRCState to list */
EXTERN int asn1Append_UEContextModificationResponseIEs_id_RRCState
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs* plist, RRCState 
   value);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_UEContextModificationResponseIEs_id_UserLocationInformation
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_UEContextModificationResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UEContextModificationResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct UEContextModificationResponse_protocolIEs_element* 
   asn1Get_UEContextModificationResponse_protocolIEs (ProtocolIE_ID id, 
   UEContextModificationResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEContextModificationResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UEContextModificationResponse_protocolIEs* plist, 
   UEContextModificationResponse_protocolIEs* pmatches);

EXTERN int asn1Init_UEContextModificationResponse_protocolIEs (
   UEContextModificationResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationResponse                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE CONTEXT MODIFICATION RESPONSE
 **************************************************************
UEContextModificationResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEContextModificationResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEContextModificationResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEContextModificationResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UEContextModificationResponse {
   UEContextModificationResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UEContextModificationResponse;

EXTERN int asn1PE_UEContextModificationResponse (OSCTXT* pctxt, UEContextModificationResponse* pvalue);

EXTERN int asn1PD_UEContextModificationResponse (OSCTXT* pctxt, UEContextModificationResponse* pvalue);

EXTERN void asn1Print_UEContextModificationResponse 
   (const char* name, const UEContextModificationResponse* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationResponse (const char* name, 
   UEContextModificationResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationResponse (OSCTXT *pctxt, 
   const char* name, const UEContextModificationResponse* pvalue);

EXTERN int asn1Init_UEContextModificationResponse (
   UEContextModificationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationFailure_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationFailure'
*/
typedef struct EXTERN UEContextModificationFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UEContextModificationFailureIEs_TVALUE t;

      /**
       * UEContextModificationFailureIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UEContextModificationFailureIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UEContextModificationFailureIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_UEContextModificationFailureIEs_id_Cause;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_UEContextModificationFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UEContextModificationFailure_protocolIEs_element;

EXTERN int asn1PE_UEContextModificationFailure_protocolIEs_element (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_UEContextModificationFailure_protocolIEs_element (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_UEContextModificationFailure_protocolIEs_element 
   (const char* name, const UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationFailure_protocolIEs_element (
   const char* name, UEContextModificationFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UEContextModificationFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_id_Cause
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs_element* pElem, 
   Cause *pvalue);

EXTERN void asn1SetTC_UEContextModificationFailure_protocolIEs_element_UEContextModificationFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_UEContextModificationFailure_protocolIEs_element (
   UEContextModificationFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationFailure_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEContextModificationFailure'
*/
/* List of UEContextModificationFailure_protocolIEs_element */
typedef OSRTDList UEContextModificationFailure_protocolIEs;

EXTERN int asn1PE_UEContextModificationFailure_protocolIEs (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs* pvalue);

EXTERN int asn1PD_UEContextModificationFailure_protocolIEs (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs* pvalue);

EXTERN void asn1Print_UEContextModificationFailure_protocolIEs 
   (const char* name, const UEContextModificationFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationFailure_protocolIEs (const char* name, 
   UEContextModificationFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UEContextModificationFailure_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextModificationFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UEContextModificationFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_UEContextModificationFailureIEs_id_Cause
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs* plist, struct 
   Cause *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_UEContextModificationFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UEContextModificationFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct UEContextModificationFailure_protocolIEs_element* 
   asn1Get_UEContextModificationFailure_protocolIEs (ProtocolIE_ID id, 
   UEContextModificationFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEContextModificationFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UEContextModificationFailure_protocolIEs* plist, 
   UEContextModificationFailure_protocolIEs* pmatches);

EXTERN int asn1Init_UEContextModificationFailure_protocolIEs (
   UEContextModificationFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextModificationFailure                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE CONTEXT MODIFICATION FAILURE
 **************************************************************
UEContextModificationFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEContextModificationFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEContextModificationFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEContextModificationFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UEContextModificationFailure {
   UEContextModificationFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UEContextModificationFailure;

EXTERN int asn1PE_UEContextModificationFailure (OSCTXT* pctxt, UEContextModificationFailure* pvalue);

EXTERN int asn1PD_UEContextModificationFailure (OSCTXT* pctxt, UEContextModificationFailure* pvalue);

EXTERN void asn1Print_UEContextModificationFailure 
   (const char* name, const UEContextModificationFailure* pvalue);

EXTERN int asn1PrtToStr_UEContextModificationFailure (const char* name, 
   UEContextModificationFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextModificationFailure (OSCTXT *pctxt, 
   const char* name, const UEContextModificationFailure* pvalue);

EXTERN int asn1Init_UEContextModificationFailure (
   UEContextModificationFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  RRCInactiveTransitionReport_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RRCInactiveTransitionReport'
*/
typedef struct EXTERN RRCInactiveTransitionReport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      RRCInactiveTransitionReportIEs_TVALUE t;

      /**
       * RRCInactiveTransitionReportIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _RRCInactiveTransitionReportIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _RRCInactiveTransitionReportIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RRCState
          * criticality: ignore
          * presence: mandatory
          */
         RRCState _RRCInactiveTransitionReportIEs_id_RRCState;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: mandatory
          */
         UserLocationInformation *_RRCInactiveTransitionReportIEs_id_UserLocationInformation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} RRCInactiveTransitionReport_protocolIEs_element;

EXTERN int asn1PE_RRCInactiveTransitionReport_protocolIEs_element (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs_element* pvalue);

EXTERN int asn1PD_RRCInactiveTransitionReport_protocolIEs_element (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs_element* pvalue);

EXTERN void asn1Print_RRCInactiveTransitionReport_protocolIEs_element 
   (const char* name, const RRCInactiveTransitionReport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_RRCInactiveTransitionReport_protocolIEs_element (
   const char* name, RRCInactiveTransitionReport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RRCInactiveTransitionReport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const RRCInactiveTransitionReport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_RRCInactiveTransitionReport_protocolIEs_element_RRCInactiveTransitionReportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_RRCInactiveTransitionReport_protocolIEs_element_RRCInactiveTransitionReportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_RRCInactiveTransitionReport_protocolIEs_element_RRCInactiveTransitionReportIEs_id_RRCState
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs_element* pElem, 
   RRCState value);

EXTERN void asn1SetTC_RRCInactiveTransitionReport_protocolIEs_element_RRCInactiveTransitionReportIEs_id_UserLocationInformation
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN int asn1Init_RRCInactiveTransitionReport_protocolIEs_element (
   RRCInactiveTransitionReport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RRCInactiveTransitionReport_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RRCInactiveTransitionReport'
*/
/* List of RRCInactiveTransitionReport_protocolIEs_element */
typedef OSRTDList RRCInactiveTransitionReport_protocolIEs;

EXTERN int asn1PE_RRCInactiveTransitionReport_protocolIEs (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs* pvalue);

EXTERN int asn1PD_RRCInactiveTransitionReport_protocolIEs (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs* pvalue);

EXTERN void asn1Print_RRCInactiveTransitionReport_protocolIEs 
   (const char* name, const RRCInactiveTransitionReport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_RRCInactiveTransitionReport_protocolIEs (const char* name, 
   RRCInactiveTransitionReport_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RRCInactiveTransitionReport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const RRCInactiveTransitionReport_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_RRCInactiveTransitionReportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_RRCInactiveTransitionReportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RRCState to list */
EXTERN int asn1Append_RRCInactiveTransitionReportIEs_id_RRCState
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs* plist, RRCState 
   value);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_RRCInactiveTransitionReportIEs_id_UserLocationInformation
   (OSCTXT* pctxt, RRCInactiveTransitionReport_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Get IE using id key value */
EXTERN struct RRCInactiveTransitionReport_protocolIEs_element* 
   asn1Get_RRCInactiveTransitionReport_protocolIEs (ProtocolIE_ID id, 
   RRCInactiveTransitionReport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RRCInactiveTransitionReport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   RRCInactiveTransitionReport_protocolIEs* plist, 
   RRCInactiveTransitionReport_protocolIEs* pmatches);

EXTERN int asn1Init_RRCInactiveTransitionReport_protocolIEs (
   RRCInactiveTransitionReport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  RRCInactiveTransitionReport                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 RRC INACTIVE TRANSITION REPORT
 **************************************************************
RRCInactiveTransitionReport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({RRCInactiveTransitionReportIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({RRCInactiveTransitionReportIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({RRCInactiveTransitionReportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN RRCInactiveTransitionReport {
   RRCInactiveTransitionReport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} RRCInactiveTransitionReport;

EXTERN int asn1PE_RRCInactiveTransitionReport (OSCTXT* pctxt, RRCInactiveTransitionReport* pvalue);

EXTERN int asn1PD_RRCInactiveTransitionReport (OSCTXT* pctxt, RRCInactiveTransitionReport* pvalue);

EXTERN void asn1Print_RRCInactiveTransitionReport 
   (const char* name, const RRCInactiveTransitionReport* pvalue);

EXTERN int asn1PrtToStr_RRCInactiveTransitionReport (const char* name, 
   RRCInactiveTransitionReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RRCInactiveTransitionReport (OSCTXT *pctxt, 
   const char* name, const RRCInactiveTransitionReport* pvalue);

EXTERN int asn1Init_RRCInactiveTransitionReport (RRCInactiveTransitionReport* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequired_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequired'
*/
typedef struct EXTERN HandoverRequired_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverRequiredIEs_TVALUE t;

      /**
       * HandoverRequiredIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverRequiredIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _HandoverRequiredIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-HandoverType
          * criticality: reject
          * presence: mandatory
          */
         HandoverType _HandoverRequiredIEs_id_HandoverType;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_HandoverRequiredIEs_id_Cause;
         /**
          * id: id-TargetID
          * criticality: reject
          * presence: mandatory
          */
         TargetID *_HandoverRequiredIEs_id_TargetID;
         /**
          * id: id-DirectForwardingPathAvailability
          * criticality: ignore
          * presence: optional
          */
         DirectForwardingPathAvailability _HandoverRequiredIEs_id_DirectForwardingPathAvailability;
         /**
          * id: id-PDUSessionResourceListHORqd
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionResourceListHORqd *_HandoverRequiredIEs_id_PDUSessionResourceListHORqd;
         /**
          * id: id-SourceToTarget-TransparentContainer
          * criticality: reject
          * presence: mandatory
          */
         SourceToTarget_TransparentContainer *_HandoverRequiredIEs_id_SourceToTarget_TransparentContainer;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverRequired_protocolIEs_element;

EXTERN int asn1PE_HandoverRequired_protocolIEs_element (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverRequired_protocolIEs_element (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverRequired_protocolIEs_element 
   (const char* name, const HandoverRequired_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverRequired_protocolIEs_element (const char* name, 
   HandoverRequired_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequired_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverRequired_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_HandoverType
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, HandoverType 
   value);

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_Cause
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, Cause *pvalue)
   ;

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_TargetID
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, TargetID 
   *pvalue);

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_DirectForwardingPathAvailability
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, 
   DirectForwardingPathAvailability value);

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_PDUSessionResourceListHORqd
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, 
   PDUSessionResourceListHORqd *pvalue);

EXTERN void asn1SetTC_HandoverRequired_protocolIEs_element_HandoverRequiredIEs_id_SourceToTarget_TransparentContainer
   (OSCTXT* pctxt, HandoverRequired_protocolIEs_element* pElem, 
   SourceToTarget_TransparentContainer *pvalue);

EXTERN int asn1Init_HandoverRequired_protocolIEs_element (
   HandoverRequired_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequired_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequired'
*/
/* List of HandoverRequired_protocolIEs_element */
typedef OSRTDList HandoverRequired_protocolIEs;

EXTERN int asn1PE_HandoverRequired_protocolIEs (OSCTXT* pctxt, HandoverRequired_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverRequired_protocolIEs (OSCTXT* pctxt, HandoverRequired_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverRequired_protocolIEs 
   (const char* name, const HandoverRequired_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverRequired_protocolIEs (const char* name, 
   HandoverRequired_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequired_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverRequired_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverRequiredIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverRequiredIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type HandoverType to list */
EXTERN int asn1Append_HandoverRequiredIEs_id_HandoverType
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, HandoverType value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_HandoverRequiredIEs_id_Cause
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, struct Cause *pvalue);

/* Append IE with value type TargetID to list */
struct TargetID ;
EXTERN int asn1Append_HandoverRequiredIEs_id_TargetID
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, struct TargetID 
   *pvalue);

/* Append IE with value type DirectForwardingPathAvailability to list */
EXTERN int asn1Append_HandoverRequiredIEs_id_DirectForwardingPathAvailability
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, 
   DirectForwardingPathAvailability value);

/* Append IE with value type PDUSessionResourceListHORqd to list */
EXTERN int asn1Append_HandoverRequiredIEs_id_PDUSessionResourceListHORqd
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, 
   PDUSessionResourceListHORqd *pvalue);

/* Append IE with value type SourceToTarget_TransparentContainer to list */
EXTERN int asn1Append_HandoverRequiredIEs_id_SourceToTarget_TransparentContainer
   (OSCTXT* pctxt, HandoverRequired_protocolIEs* plist, 
   SourceToTarget_TransparentContainer *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverRequired_protocolIEs_element* 
   asn1Get_HandoverRequired_protocolIEs (ProtocolIE_ID id, 
   HandoverRequired_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverRequired_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, HandoverRequired_protocolIEs* plist, 
   HandoverRequired_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverRequired_protocolIEs (
   HandoverRequired_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequired                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE MOBILITY MANAGEMENT ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 Handover Preparation Elementary Procedure
 **************************************************************
 **************************************************************
 HANDOVER REQUIRED
 **************************************************************
HandoverRequired ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverRequiredIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverRequiredIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverRequiredIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverRequired {
   HandoverRequired_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverRequired;

EXTERN int asn1PE_HandoverRequired (OSCTXT* pctxt, HandoverRequired* pvalue);

EXTERN int asn1PD_HandoverRequired (OSCTXT* pctxt, HandoverRequired* pvalue);

EXTERN void asn1Print_HandoverRequired 
   (const char* name, const HandoverRequired* pvalue);

EXTERN int asn1PrtToStr_HandoverRequired (const char* name, HandoverRequired* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequired (OSCTXT *pctxt, 
   const char* name, const HandoverRequired* pvalue);

EXTERN int asn1Init_HandoverRequired (HandoverRequired* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommand_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCommand'
*/
typedef struct EXTERN HandoverCommand_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverCommandIEs_TVALUE t;

      /**
       * HandoverCommandIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverCommandIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _HandoverCommandIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-HandoverType
          * criticality: reject
          * presence: mandatory
          */
         HandoverType _HandoverCommandIEs_id_HandoverType;
         /**
          * id: id-NASSecurityParametersFromNGRAN
          * criticality: reject
          * presence: conditional
          */
         NASSecurityParametersFromNGRAN *_HandoverCommandIEs_id_NASSecurityParametersFromNGRAN;
         /**
          * id: id-PDUSessionResourceHandoverList
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceHandoverList *_HandoverCommandIEs_id_PDUSessionResourceHandoverList;
         /**
          * id: id-PDUSessionResourceToReleaseListHOCmd
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceToReleaseListHOCmd *_HandoverCommandIEs_id_PDUSessionResourceToReleaseListHOCmd;
         /**
          * id: id-TargetToSource-TransparentContainer
          * criticality: reject
          * presence: mandatory
          */
         TargetToSource_TransparentContainer *_HandoverCommandIEs_id_TargetToSource_TransparentContainer;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_HandoverCommandIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverCommand_protocolIEs_element;

EXTERN int asn1PE_HandoverCommand_protocolIEs_element (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverCommand_protocolIEs_element (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverCommand_protocolIEs_element 
   (const char* name, const HandoverCommand_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverCommand_protocolIEs_element (const char* name, 
   HandoverCommand_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCommand_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverCommand_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_HandoverType
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, HandoverType 
   value);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_NASSecurityParametersFromNGRAN
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, 
   NASSecurityParametersFromNGRAN *pvalue);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_PDUSessionResourceHandoverList
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, 
   PDUSessionResourceHandoverList *pvalue);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_PDUSessionResourceToReleaseListHOCmd
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, 
   PDUSessionResourceToReleaseListHOCmd *pvalue);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_TargetToSource_TransparentContainer
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, 
   TargetToSource_TransparentContainer *pvalue);

EXTERN void asn1SetTC_HandoverCommand_protocolIEs_element_HandoverCommandIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverCommand_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_HandoverCommand_protocolIEs_element (
   HandoverCommand_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommand_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCommand'
*/
/* List of HandoverCommand_protocolIEs_element */
typedef OSRTDList HandoverCommand_protocolIEs;

EXTERN int asn1PE_HandoverCommand_protocolIEs (OSCTXT* pctxt, HandoverCommand_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverCommand_protocolIEs (OSCTXT* pctxt, HandoverCommand_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverCommand_protocolIEs 
   (const char* name, const HandoverCommand_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverCommand_protocolIEs (const char* name, 
   HandoverCommand_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCommand_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverCommand_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverCommandIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverCommandIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type HandoverType to list */
EXTERN int asn1Append_HandoverCommandIEs_id_HandoverType
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, HandoverType value);

/* Append IE with value type NASSecurityParametersFromNGRAN to list */
EXTERN int asn1Append_HandoverCommandIEs_id_NASSecurityParametersFromNGRAN
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, 
   NASSecurityParametersFromNGRAN *pvalue);

/* Append IE with value type PDUSessionResourceHandoverList to list */
EXTERN int asn1Append_HandoverCommandIEs_id_PDUSessionResourceHandoverList
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, 
   PDUSessionResourceHandoverList *pvalue);

/* Append IE with value type PDUSessionResourceToReleaseListHOCmd to list */
EXTERN int asn1Append_HandoverCommandIEs_id_PDUSessionResourceToReleaseListHOCmd
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, 
   PDUSessionResourceToReleaseListHOCmd *pvalue);

/* Append IE with value type TargetToSource_TransparentContainer to list */
EXTERN int asn1Append_HandoverCommandIEs_id_TargetToSource_TransparentContainer
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, 
   TargetToSource_TransparentContainer *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_HandoverCommandIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverCommand_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverCommand_protocolIEs_element* 
   asn1Get_HandoverCommand_protocolIEs (ProtocolIE_ID id, 
   HandoverCommand_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverCommand_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, HandoverCommand_protocolIEs* plist, 
   HandoverCommand_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverCommand_protocolIEs (HandoverCommand_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommand                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 HANDOVER COMMAND
 **************************************************************
HandoverCommand ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverCommandIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverCommandIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverCommandIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverCommand {
   HandoverCommand_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverCommand;

EXTERN int asn1PE_HandoverCommand (OSCTXT* pctxt, HandoverCommand* pvalue);

EXTERN int asn1PD_HandoverCommand (OSCTXT* pctxt, HandoverCommand* pvalue);

EXTERN void asn1Print_HandoverCommand 
   (const char* name, const HandoverCommand* pvalue);

EXTERN int asn1PrtToStr_HandoverCommand (const char* name, HandoverCommand* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCommand (OSCTXT *pctxt, 
   const char* name, const HandoverCommand* pvalue);

EXTERN int asn1Init_HandoverCommand (HandoverCommand* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationFailure_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverPreparationFailure'
*/
typedef struct EXTERN HandoverPreparationFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverPreparationFailureIEs_TVALUE t;

      /**
       * HandoverPreparationFailureIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverPreparationFailureIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _HandoverPreparationFailureIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_HandoverPreparationFailureIEs_id_Cause;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_HandoverPreparationFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverPreparationFailure_protocolIEs_element;

EXTERN int asn1PE_HandoverPreparationFailure_protocolIEs_element (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverPreparationFailure_protocolIEs_element (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverPreparationFailure_protocolIEs_element 
   (const char* name, const HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverPreparationFailure_protocolIEs_element (
   const char* name, HandoverPreparationFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverPreparationFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverPreparationFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_id_Cause
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs_element* pElem, 
   Cause *pvalue);

EXTERN void asn1SetTC_HandoverPreparationFailure_protocolIEs_element_HandoverPreparationFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_HandoverPreparationFailure_protocolIEs_element (
   HandoverPreparationFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationFailure_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverPreparationFailure'
*/
/* List of HandoverPreparationFailure_protocolIEs_element */
typedef OSRTDList HandoverPreparationFailure_protocolIEs;

EXTERN int asn1PE_HandoverPreparationFailure_protocolIEs (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverPreparationFailure_protocolIEs (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverPreparationFailure_protocolIEs 
   (const char* name, const HandoverPreparationFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverPreparationFailure_protocolIEs (const char* name, 
   HandoverPreparationFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverPreparationFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverPreparationFailure_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverPreparationFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverPreparationFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_HandoverPreparationFailureIEs_id_Cause
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs* plist, struct Cause 
   *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_HandoverPreparationFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverPreparationFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverPreparationFailure_protocolIEs_element* 
   asn1Get_HandoverPreparationFailure_protocolIEs (ProtocolIE_ID id, 
   HandoverPreparationFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverPreparationFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   HandoverPreparationFailure_protocolIEs* plist, 
   HandoverPreparationFailure_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverPreparationFailure_protocolIEs (
   HandoverPreparationFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationFailure                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 HANDOVER PREPARATION FAILURE
 **************************************************************
HandoverPreparationFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverPreparationFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverPreparationFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverPreparationFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverPreparationFailure {
   HandoverPreparationFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverPreparationFailure;

EXTERN int asn1PE_HandoverPreparationFailure (OSCTXT* pctxt, HandoverPreparationFailure* pvalue);

EXTERN int asn1PD_HandoverPreparationFailure (OSCTXT* pctxt, HandoverPreparationFailure* pvalue);

EXTERN void asn1Print_HandoverPreparationFailure 
   (const char* name, const HandoverPreparationFailure* pvalue);

EXTERN int asn1PrtToStr_HandoverPreparationFailure (const char* name, 
   HandoverPreparationFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverPreparationFailure (OSCTXT *pctxt, 
   const char* name, const HandoverPreparationFailure* pvalue);

EXTERN int asn1Init_HandoverPreparationFailure (HandoverPreparationFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequest_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequest'
*/
typedef struct EXTERN HandoverRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverRequestIEs_TVALUE t;

      /**
       * HandoverRequestIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverRequestIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-HandoverType
          * criticality: reject
          * presence: mandatory
          */
         HandoverType _HandoverRequestIEs_id_HandoverType;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_HandoverRequestIEs_id_Cause;
         /**
          * id: id-UEAggregateMaximumBitRate
          * criticality: reject
          * presence: mandatory
          */
         UEAggregateMaximumBitRate *_HandoverRequestIEs_id_UEAggregateMaximumBitRate;
         /**
          * id: id-CoreNetworkAssistanceInformationForInactive
          * criticality: ignore
          * presence: optional
          */
         CoreNetworkAssistanceInformationForInactive *_HandoverRequestIEs_id_CoreNetworkAssistanceInformationForInactive;
         /**
          * id: id-UESecurityCapabilities
          * criticality: reject
          * presence: mandatory
          */
         UESecurityCapabilities *_HandoverRequestIEs_id_UESecurityCapabilities;
         /**
          * id: id-SecurityContext
          * criticality: reject
          * presence: mandatory
          */
         SecurityContext *_HandoverRequestIEs_id_SecurityContext;
         /**
          * id: id-NewSecurityContextInd
          * criticality: reject
          * presence: optional
          */
         NewSecurityContextInd _HandoverRequestIEs_id_NewSecurityContextInd;
         /**
          * id: id-NASC
          * criticality: reject
          * presence: optional
          */
         NAS_PDU *_HandoverRequestIEs_id_NASC;
         /**
          * id: id-PDUSessionResourceSetupListHOReq
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionResourceSetupListHOReq *_HandoverRequestIEs_id_PDUSessionResourceSetupListHOReq;
         /**
          * id: id-AllowedNSSAI
          * criticality: reject
          * presence: mandatory
          */
         AllowedNSSAI *_HandoverRequestIEs_id_AllowedNSSAI;
         /**
          * id: id-TraceActivation
          * criticality: ignore
          * presence: optional
          */
         TraceActivation *_HandoverRequestIEs_id_TraceActivation;
         /**
          * id: id-MaskedIMEISV
          * criticality: ignore
          * presence: optional
          */
         MaskedIMEISV *_HandoverRequestIEs_id_MaskedIMEISV;
         /**
          * id: id-SourceToTarget-TransparentContainer
          * criticality: reject
          * presence: mandatory
          */
         SourceToTarget_TransparentContainer *_HandoverRequestIEs_id_SourceToTarget_TransparentContainer;
         /**
          * id: id-MobilityRestrictionList
          * criticality: ignore
          * presence: optional
          */
         MobilityRestrictionList *_HandoverRequestIEs_id_MobilityRestrictionList;
         /**
          * id: id-LocationReportingRequestType
          * criticality: ignore
          * presence: optional
          */
         LocationReportingRequestType *_HandoverRequestIEs_id_LocationReportingRequestType;
         /**
          * id: id-RRCInactiveTransitionReportRequest
          * criticality: ignore
          * presence: optional
          */
         RRCInactiveTransitionReportRequest _HandoverRequestIEs_id_RRCInactiveTransitionReportRequest;
         /**
          * id: id-GUAMI
          * criticality: reject
          * presence: mandatory
          */
         GUAMI *_HandoverRequestIEs_id_GUAMI;
         /**
          * id: id-RedirectionVoiceFallback
          * criticality: ignore
          * presence: optional
          */
         RedirectionVoiceFallback _HandoverRequestIEs_id_RedirectionVoiceFallback;
         /**
          * id: id-CNAssistedRANTuning
          * criticality: ignore
          * presence: optional
          */
         CNAssistedRANTuning *_HandoverRequestIEs_id_CNAssistedRANTuning;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverRequest_protocolIEs_element;

EXTERN int asn1PE_HandoverRequest_protocolIEs_element (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverRequest_protocolIEs_element (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverRequest_protocolIEs_element 
   (const char* name, const HandoverRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverRequest_protocolIEs_element (const char* name, 
   HandoverRequest_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_HandoverType
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, HandoverType 
   value);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_Cause
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, Cause *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   UEAggregateMaximumBitRate *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   CoreNetworkAssistanceInformationForInactive *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_SecurityContext
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, SecurityContext 
   *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_NewSecurityContextInd
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   NewSecurityContextInd value);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_NASC
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, NAS_PDU *pvalue)
   ;

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_PDUSessionResourceSetupListHOReq
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   PDUSessionResourceSetupListHOReq *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_AllowedNSSAI
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, AllowedNSSAI 
   *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_TraceActivation
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, TraceActivation 
   *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_MaskedIMEISV
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, MaskedIMEISV 
   *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_SourceToTarget_TransparentContainer
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   SourceToTarget_TransparentContainer *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_MobilityRestrictionList
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   MobilityRestrictionList *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   LocationReportingRequestType *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   RRCInactiveTransitionReportRequest value);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_GUAMI
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, GUAMI *pvalue);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_RedirectionVoiceFallback
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   RedirectionVoiceFallback value);

EXTERN void asn1SetTC_HandoverRequest_protocolIEs_element_HandoverRequestIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, HandoverRequest_protocolIEs_element* pElem, 
   CNAssistedRANTuning *pvalue);

EXTERN int asn1Init_HandoverRequest_protocolIEs_element (
   HandoverRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequest_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequest'
*/
/* List of HandoverRequest_protocolIEs_element */
typedef OSRTDList HandoverRequest_protocolIEs;

EXTERN int asn1PE_HandoverRequest_protocolIEs (OSCTXT* pctxt, HandoverRequest_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverRequest_protocolIEs (OSCTXT* pctxt, HandoverRequest_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverRequest_protocolIEs 
   (const char* name, const HandoverRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverRequest_protocolIEs (const char* name, 
   HandoverRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type HandoverType to list */
EXTERN int asn1Append_HandoverRequestIEs_id_HandoverType
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, HandoverType value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_HandoverRequestIEs_id_Cause
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct Cause *pvalue);

/* Append IE with value type UEAggregateMaximumBitRate to list */
struct UEAggregateMaximumBitRate ;
EXTERN int asn1Append_HandoverRequestIEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct 
   UEAggregateMaximumBitRate *pvalue);

/* Append IE with value type CoreNetworkAssistanceInformationForInactive to list */
struct CoreNetworkAssistanceInformationForInactive ;
EXTERN int asn1Append_HandoverRequestIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct 
   CoreNetworkAssistanceInformationForInactive *pvalue);

/* Append IE with value type UESecurityCapabilities to list */
struct UESecurityCapabilities ;
EXTERN int asn1Append_HandoverRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct 
   UESecurityCapabilities *pvalue);

/* Append IE with value type SecurityContext to list */
struct SecurityContext ;
EXTERN int asn1Append_HandoverRequestIEs_id_SecurityContext
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct SecurityContext 
   *pvalue);

/* Append IE with value type NewSecurityContextInd to list */
EXTERN int asn1Append_HandoverRequestIEs_id_NewSecurityContextInd
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, NewSecurityContextInd 
   value);

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_HandoverRequestIEs_id_NASC
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, NAS_PDU *pvalue);

/* Append IE with value type PDUSessionResourceSetupListHOReq to list */
EXTERN int asn1Append_HandoverRequestIEs_id_PDUSessionResourceSetupListHOReq
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, 
   PDUSessionResourceSetupListHOReq *pvalue);

/* Append IE with value type AllowedNSSAI to list */
EXTERN int asn1Append_HandoverRequestIEs_id_AllowedNSSAI
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, AllowedNSSAI *pvalue);

/* Append IE with value type TraceActivation to list */
struct TraceActivation ;
EXTERN int asn1Append_HandoverRequestIEs_id_TraceActivation
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct TraceActivation 
   *pvalue);

/* Append IE with value type MaskedIMEISV to list */
struct MaskedIMEISV ;
EXTERN int asn1Append_HandoverRequestIEs_id_MaskedIMEISV
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct MaskedIMEISV 
   *pvalue);

/* Append IE with value type SourceToTarget_TransparentContainer to list */
EXTERN int asn1Append_HandoverRequestIEs_id_SourceToTarget_TransparentContainer
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, 
   SourceToTarget_TransparentContainer *pvalue);

/* Append IE with value type MobilityRestrictionList to list */
struct MobilityRestrictionList ;
EXTERN int asn1Append_HandoverRequestIEs_id_MobilityRestrictionList
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct 
   MobilityRestrictionList *pvalue);

/* Append IE with value type LocationReportingRequestType to list */
struct LocationReportingRequestType ;
EXTERN int asn1Append_HandoverRequestIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct 
   LocationReportingRequestType *pvalue);

/* Append IE with value type RRCInactiveTransitionReportRequest to list */
EXTERN int asn1Append_HandoverRequestIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, 
   RRCInactiveTransitionReportRequest value);

/* Append IE with value type GUAMI to list */
struct GUAMI ;
EXTERN int asn1Append_HandoverRequestIEs_id_GUAMI
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct GUAMI *pvalue);

/* Append IE with value type RedirectionVoiceFallback to list */
EXTERN int asn1Append_HandoverRequestIEs_id_RedirectionVoiceFallback
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, 
   RedirectionVoiceFallback value);

/* Append IE with value type CNAssistedRANTuning to list */
struct CNAssistedRANTuning ;
EXTERN int asn1Append_HandoverRequestIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, HandoverRequest_protocolIEs* plist, struct 
   CNAssistedRANTuning *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverRequest_protocolIEs_element* 
   asn1Get_HandoverRequest_protocolIEs (ProtocolIE_ID id, 
   HandoverRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, HandoverRequest_protocolIEs* plist, 
   HandoverRequest_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverRequest_protocolIEs (HandoverRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequest                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Handover Resource Allocation Elementary Procedure
 **************************************************************
 **************************************************************
 HANDOVER REQUEST
 **************************************************************
HandoverRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverRequest {
   HandoverRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverRequest;

EXTERN int asn1PE_HandoverRequest (OSCTXT* pctxt, HandoverRequest* pvalue);

EXTERN int asn1PD_HandoverRequest (OSCTXT* pctxt, HandoverRequest* pvalue);

EXTERN void asn1Print_HandoverRequest 
   (const char* name, const HandoverRequest* pvalue);

EXTERN int asn1PrtToStr_HandoverRequest (const char* name, HandoverRequest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequest (OSCTXT *pctxt, 
   const char* name, const HandoverRequest* pvalue);

EXTERN int asn1Init_HandoverRequest (HandoverRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledge_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequestAcknowledge'
*/
typedef struct EXTERN HandoverRequestAcknowledge_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverRequestAcknowledgeIEs_TVALUE t;

      /**
       * HandoverRequestAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _HandoverRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceAdmittedList
          * criticality: ignore
          * presence: mandatory
          */
         PDUSessionResourceAdmittedList *_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceAdmittedList;
         /**
          * id: id-PDUSessionResourceFailedToSetupListHOAck
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceFailedToSetupListHOAck *_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceFailedToSetupListHOAck;
         /**
          * id: id-TargetToSource-TransparentContainer
          * criticality: reject
          * presence: mandatory
          */
         TargetToSource_TransparentContainer *_HandoverRequestAcknowledgeIEs_id_TargetToSource_TransparentContainer;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_HandoverRequestAcknowledgeIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverRequestAcknowledge_protocolIEs_element;

EXTERN int asn1PE_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverRequestAcknowledge_protocolIEs_element 
   (const char* name, const HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverRequestAcknowledge_protocolIEs_element (
   const char* name, HandoverRequestAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequestAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceAdmittedList
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   PDUSessionResourceAdmittedList *pvalue);

EXTERN void asn1SetTC_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceFailedToSetupListHOAck
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   PDUSessionResourceFailedToSetupListHOAck *pvalue);

EXTERN void asn1SetTC_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_id_TargetToSource_TransparentContainer
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   TargetToSource_TransparentContainer *pvalue);

EXTERN void asn1SetTC_HandoverRequestAcknowledge_protocolIEs_element_HandoverRequestAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_HandoverRequestAcknowledge_protocolIEs_element (
   HandoverRequestAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledge_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequestAcknowledge'
*/
/* List of HandoverRequestAcknowledge_protocolIEs_element */
typedef OSRTDList HandoverRequestAcknowledge_protocolIEs;

EXTERN int asn1PE_HandoverRequestAcknowledge_protocolIEs (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverRequestAcknowledge_protocolIEs (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverRequestAcknowledge_protocolIEs 
   (const char* name, const HandoverRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverRequestAcknowledge_protocolIEs (const char* name, 
   HandoverRequestAcknowledge_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequestAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverRequestAcknowledge_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceAdmittedList to list */
EXTERN int asn1Append_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceAdmittedList
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* plist, 
   PDUSessionResourceAdmittedList *pvalue);

/* Append IE with value type PDUSessionResourceFailedToSetupListHOAck to list */
EXTERN int asn1Append_HandoverRequestAcknowledgeIEs_id_PDUSessionResourceFailedToSetupListHOAck
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* plist, 
   PDUSessionResourceFailedToSetupListHOAck *pvalue);

/* Append IE with value type TargetToSource_TransparentContainer to list */
EXTERN int asn1Append_HandoverRequestAcknowledgeIEs_id_TargetToSource_TransparentContainer
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* plist, 
   TargetToSource_TransparentContainer *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_HandoverRequestAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverRequestAcknowledge_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverRequestAcknowledge_protocolIEs_element* 
   asn1Get_HandoverRequestAcknowledge_protocolIEs (ProtocolIE_ID id, 
   HandoverRequestAcknowledge_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverRequestAcknowledge_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   HandoverRequestAcknowledge_protocolIEs* plist, 
   HandoverRequestAcknowledge_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverRequestAcknowledge_protocolIEs (
   HandoverRequestAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledge                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 HANDOVER REQUEST ACKNOWLEDGE
 **************************************************************
HandoverRequestAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverRequestAcknowledgeIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverRequestAcknowledgeIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverRequestAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverRequestAcknowledge {
   HandoverRequestAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverRequestAcknowledge;

EXTERN int asn1PE_HandoverRequestAcknowledge (OSCTXT* pctxt, HandoverRequestAcknowledge* pvalue);

EXTERN int asn1PD_HandoverRequestAcknowledge (OSCTXT* pctxt, HandoverRequestAcknowledge* pvalue);

EXTERN void asn1Print_HandoverRequestAcknowledge 
   (const char* name, const HandoverRequestAcknowledge* pvalue);

EXTERN int asn1PrtToStr_HandoverRequestAcknowledge (const char* name, 
   HandoverRequestAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequestAcknowledge (OSCTXT *pctxt, 
   const char* name, const HandoverRequestAcknowledge* pvalue);

EXTERN int asn1Init_HandoverRequestAcknowledge (HandoverRequestAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFailure_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverFailure'
*/
typedef struct EXTERN HandoverFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverFailureIEs_TVALUE t;

      /**
       * HandoverFailureIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverFailureIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_HandoverFailureIEs_id_Cause;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_HandoverFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverFailure_protocolIEs_element;

EXTERN int asn1PE_HandoverFailure_protocolIEs_element (OSCTXT* pctxt, HandoverFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverFailure_protocolIEs_element (OSCTXT* pctxt, HandoverFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverFailure_protocolIEs_element 
   (const char* name, const HandoverFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverFailure_protocolIEs_element (const char* name, 
   HandoverFailure_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverFailure_protocolIEs_element_HandoverFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverFailure_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverFailure_protocolIEs_element_HandoverFailureIEs_id_Cause
   (OSCTXT* pctxt, HandoverFailure_protocolIEs_element* pElem, Cause *pvalue);

EXTERN void asn1SetTC_HandoverFailure_protocolIEs_element_HandoverFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_HandoverFailure_protocolIEs_element (
   HandoverFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFailure_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverFailure'
*/
/* List of HandoverFailure_protocolIEs_element */
typedef OSRTDList HandoverFailure_protocolIEs;

EXTERN int asn1PE_HandoverFailure_protocolIEs (OSCTXT* pctxt, HandoverFailure_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverFailure_protocolIEs (OSCTXT* pctxt, HandoverFailure_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverFailure_protocolIEs 
   (const char* name, const HandoverFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverFailure_protocolIEs (const char* name, 
   HandoverFailure_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverFailure_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverFailure_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_HandoverFailureIEs_id_Cause
   (OSCTXT* pctxt, HandoverFailure_protocolIEs* plist, struct Cause *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_HandoverFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverFailure_protocolIEs_element* 
   asn1Get_HandoverFailure_protocolIEs (ProtocolIE_ID id, 
   HandoverFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, HandoverFailure_protocolIEs* plist, 
   HandoverFailure_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverFailure_protocolIEs (HandoverFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFailure                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 HANDOVER FAILURE
 **************************************************************
HandoverFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverFailure {
   HandoverFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverFailure;

EXTERN int asn1PE_HandoverFailure (OSCTXT* pctxt, HandoverFailure* pvalue);

EXTERN int asn1PD_HandoverFailure (OSCTXT* pctxt, HandoverFailure* pvalue);

EXTERN void asn1Print_HandoverFailure 
   (const char* name, const HandoverFailure* pvalue);

EXTERN int asn1PrtToStr_HandoverFailure (const char* name, HandoverFailure* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverFailure (OSCTXT *pctxt, 
   const char* name, const HandoverFailure* pvalue);

EXTERN int asn1Init_HandoverFailure (HandoverFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverNotify_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverNotify'
*/
typedef struct EXTERN HandoverNotify_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverNotifyIEs_TVALUE t;

      /**
       * HandoverNotifyIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverNotifyIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _HandoverNotifyIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: mandatory
          */
         UserLocationInformation *_HandoverNotifyIEs_id_UserLocationInformation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverNotify_protocolIEs_element;

EXTERN int asn1PE_HandoverNotify_protocolIEs_element (OSCTXT* pctxt, HandoverNotify_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverNotify_protocolIEs_element (OSCTXT* pctxt, HandoverNotify_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverNotify_protocolIEs_element 
   (const char* name, const HandoverNotify_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverNotify_protocolIEs_element (const char* name, 
   HandoverNotify_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverNotify_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverNotify_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverNotify_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverNotify_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverNotify_protocolIEs_element_HandoverNotifyIEs_id_UserLocationInformation
   (OSCTXT* pctxt, HandoverNotify_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN int asn1Init_HandoverNotify_protocolIEs_element (
   HandoverNotify_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverNotify_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverNotify'
*/
/* List of HandoverNotify_protocolIEs_element */
typedef OSRTDList HandoverNotify_protocolIEs;

EXTERN int asn1PE_HandoverNotify_protocolIEs (OSCTXT* pctxt, HandoverNotify_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverNotify_protocolIEs (OSCTXT* pctxt, HandoverNotify_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverNotify_protocolIEs 
   (const char* name, const HandoverNotify_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverNotify_protocolIEs (const char* name, 
   HandoverNotify_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverNotify_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverNotify_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverNotifyIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverNotify_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverNotifyIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverNotify_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_HandoverNotifyIEs_id_UserLocationInformation
   (OSCTXT* pctxt, HandoverNotify_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverNotify_protocolIEs_element* 
   asn1Get_HandoverNotify_protocolIEs (ProtocolIE_ID id, 
   HandoverNotify_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverNotify_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, HandoverNotify_protocolIEs* plist, 
   HandoverNotify_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverNotify_protocolIEs (HandoverNotify_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverNotify                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Handover Notification Elementary Procedure
 **************************************************************
 **************************************************************
 HANDOVER NOTIFY
 **************************************************************
HandoverNotify ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverNotifyIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverNotifyIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverNotifyIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverNotify {
   HandoverNotify_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverNotify;

EXTERN int asn1PE_HandoverNotify (OSCTXT* pctxt, HandoverNotify* pvalue);

EXTERN int asn1PD_HandoverNotify (OSCTXT* pctxt, HandoverNotify* pvalue);

EXTERN void asn1Print_HandoverNotify (const char* name, const HandoverNotify* pvalue);

EXTERN int asn1PrtToStr_HandoverNotify (const char* name, HandoverNotify* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverNotify (OSCTXT *pctxt, 
   const char* name, const HandoverNotify* pvalue);

EXTERN int asn1Init_HandoverNotify (HandoverNotify* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequest_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequest'
*/
typedef struct EXTERN PathSwitchRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PathSwitchRequestIEs_TVALUE t;

      /**
       * PathSwitchRequestIEs information objects
       */
      union {
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PathSwitchRequestIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-SourceAMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PathSwitchRequestIEs_id_SourceAMF_UE_NGAP_ID;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: mandatory
          */
         UserLocationInformation *_PathSwitchRequestIEs_id_UserLocationInformation;
         /**
          * id: id-UESecurityCapabilities
          * criticality: ignore
          * presence: mandatory
          */
         UESecurityCapabilities *_PathSwitchRequestIEs_id_UESecurityCapabilities;
         /**
          * id: id-PDUSessionResourceToBeSwitchedDLList
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionResourceToBeSwitchedDLList *_PathSwitchRequestIEs_id_PDUSessionResourceToBeSwitchedDLList;
         /**
          * id: id-PDUSessionResourceFailedToSetupListPSReq
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceFailedToSetupListPSReq *_PathSwitchRequestIEs_id_PDUSessionResourceFailedToSetupListPSReq;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PathSwitchRequest_protocolIEs_element;

EXTERN int asn1PE_PathSwitchRequest_protocolIEs_element (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_PathSwitchRequest_protocolIEs_element (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_PathSwitchRequest_protocolIEs_element 
   (const char* name, const PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequest_protocolIEs_element (const char* name, 
   PathSwitchRequest_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_id_SourceAMF_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN void asn1SetTC_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pElem, 
   UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_id_PDUSessionResourceToBeSwitchedDLList
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pElem, 
   PDUSessionResourceToBeSwitchedDLList *pvalue);

EXTERN void asn1SetTC_PathSwitchRequest_protocolIEs_element_PathSwitchRequestIEs_id_PDUSessionResourceFailedToSetupListPSReq
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs_element* pElem, 
   PDUSessionResourceFailedToSetupListPSReq *pvalue);

EXTERN int asn1Init_PathSwitchRequest_protocolIEs_element (
   PathSwitchRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequest_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequest'
*/
/* List of PathSwitchRequest_protocolIEs_element */
typedef OSRTDList PathSwitchRequest_protocolIEs;

EXTERN int asn1PE_PathSwitchRequest_protocolIEs (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* pvalue);

EXTERN int asn1PD_PathSwitchRequest_protocolIEs (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* pvalue);

EXTERN void asn1Print_PathSwitchRequest_protocolIEs 
   (const char* name, const PathSwitchRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequest_protocolIEs (const char* name, 
   PathSwitchRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequest_protocolIEs* pvalue);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PathSwitchRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* plist, RAN_UE_NGAP_ID value)
   ;

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PathSwitchRequestIEs_id_SourceAMF_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* plist, AMF_UE_NGAP_ID value)
   ;

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_PathSwitchRequestIEs_id_UserLocationInformation
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Append IE with value type UESecurityCapabilities to list */
struct UESecurityCapabilities ;
EXTERN int asn1Append_PathSwitchRequestIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* plist, struct 
   UESecurityCapabilities *pvalue);

/* Append IE with value type PDUSessionResourceToBeSwitchedDLList to list */
EXTERN int asn1Append_PathSwitchRequestIEs_id_PDUSessionResourceToBeSwitchedDLList
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* plist, 
   PDUSessionResourceToBeSwitchedDLList *pvalue);

/* Append IE with value type PDUSessionResourceFailedToSetupListPSReq to list */
EXTERN int asn1Append_PathSwitchRequestIEs_id_PDUSessionResourceFailedToSetupListPSReq
   (OSCTXT* pctxt, PathSwitchRequest_protocolIEs* plist, 
   PDUSessionResourceFailedToSetupListPSReq *pvalue);

/* Get IE using id key value */
EXTERN struct PathSwitchRequest_protocolIEs_element* 
   asn1Get_PathSwitchRequest_protocolIEs (ProtocolIE_ID id, 
   PathSwitchRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PathSwitchRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, PathSwitchRequest_protocolIEs* plist, 
   PathSwitchRequest_protocolIEs* pmatches);

EXTERN int asn1Init_PathSwitchRequest_protocolIEs (
   PathSwitchRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequest                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Path Switch Request Elementary Procedure
 **************************************************************
 **************************************************************
 PATH SWITCH REQUEST
 **************************************************************
PathSwitchRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PathSwitchRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PathSwitchRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PathSwitchRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PathSwitchRequest {
   PathSwitchRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PathSwitchRequest;

EXTERN int asn1PE_PathSwitchRequest (OSCTXT* pctxt, PathSwitchRequest* pvalue);

EXTERN int asn1PD_PathSwitchRequest (OSCTXT* pctxt, PathSwitchRequest* pvalue);

EXTERN void asn1Print_PathSwitchRequest 
   (const char* name, const PathSwitchRequest* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequest (const char* name, 
   PathSwitchRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequest (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequest* pvalue);

EXTERN int asn1Init_PathSwitchRequest (PathSwitchRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledge_protocolIEs_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestAcknowledge'
*/
typedef struct EXTERN PathSwitchRequestAcknowledge_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PathSwitchRequestAcknowledgeIEs_TVALUE t;

      /**
       * PathSwitchRequestAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PathSwitchRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PathSwitchRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-UESecurityCapabilities
          * criticality: reject
          * presence: optional
          */
         UESecurityCapabilities *_PathSwitchRequestAcknowledgeIEs_id_UESecurityCapabilities;
         /**
          * id: id-SecurityContext
          * criticality: reject
          * presence: mandatory
          */
         SecurityContext *_PathSwitchRequestAcknowledgeIEs_id_SecurityContext;
         /**
          * id: id-NewSecurityContextInd
          * criticality: reject
          * presence: optional
          */
         NewSecurityContextInd _PathSwitchRequestAcknowledgeIEs_id_NewSecurityContextInd;
         /**
          * id: id-PDUSessionResourceSwitchedList
          * criticality: ignore
          * presence: mandatory
          */
         PDUSessionResourceSwitchedList *_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceSwitchedList;
         /**
          * id: id-PDUSessionResourceReleasedListPSAck
          * criticality: ignore
          * presence: optional
          */
         PDUSessionResourceReleasedListPSAck *_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceReleasedListPSAck;
         /**
          * id: id-AllowedNSSAI
          * criticality: reject
          * presence: mandatory
          */
         AllowedNSSAI *_PathSwitchRequestAcknowledgeIEs_id_AllowedNSSAI;
         /**
          * id: id-CoreNetworkAssistanceInformationForInactive
          * criticality: ignore
          * presence: optional
          */
         CoreNetworkAssistanceInformationForInactive *_PathSwitchRequestAcknowledgeIEs_id_CoreNetworkAssistanceInformationForInactive;
         /**
          * id: id-RRCInactiveTransitionReportRequest
          * criticality: ignore
          * presence: optional
          */
         RRCInactiveTransitionReportRequest _PathSwitchRequestAcknowledgeIEs_id_RRCInactiveTransitionReportRequest;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_PathSwitchRequestAcknowledgeIEs_id_CriticalityDiagnostics;
         /**
          * id: id-RedirectionVoiceFallback
          * criticality: ignore
          * presence: optional
          */
         RedirectionVoiceFallback _PathSwitchRequestAcknowledgeIEs_id_RedirectionVoiceFallback;
         /**
          * id: id-CNAssistedRANTuning
          * criticality: ignore
          * presence: optional
          */
         CNAssistedRANTuning *_PathSwitchRequestAcknowledgeIEs_id_CNAssistedRANTuning;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PathSwitchRequestAcknowledge_protocolIEs_element;

EXTERN int asn1PE_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_PathSwitchRequestAcknowledge_protocolIEs_element 
   (const char* name, const PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestAcknowledge_protocolIEs_element (
   const char* name, PathSwitchRequestAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   UESecurityCapabilities *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_SecurityContext
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   SecurityContext *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_NewSecurityContextInd
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   NewSecurityContextInd value);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceSwitchedList
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   PDUSessionResourceSwitchedList *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceReleasedListPSAck
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   PDUSessionResourceReleasedListPSAck *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_AllowedNSSAI
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   AllowedNSSAI *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   CoreNetworkAssistanceInformationForInactive *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   RRCInactiveTransitionReportRequest value);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_RedirectionVoiceFallback
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   RedirectionVoiceFallback value);

EXTERN void asn1SetTC_PathSwitchRequestAcknowledge_protocolIEs_element_PathSwitchRequestAcknowledgeIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs_element* pElem, 
   CNAssistedRANTuning *pvalue);

EXTERN int asn1Init_PathSwitchRequestAcknowledge_protocolIEs_element (
   PathSwitchRequestAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledge_protocolIEs                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestAcknowledge'
*/
/* List of PathSwitchRequestAcknowledge_protocolIEs_element */
typedef OSRTDList PathSwitchRequestAcknowledge_protocolIEs;

EXTERN int asn1PE_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_PathSwitchRequestAcknowledge_protocolIEs 
   (const char* name, const PathSwitchRequestAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestAcknowledge_protocolIEs (const char* name, 
   PathSwitchRequestAcknowledge_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestAcknowledge_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type UESecurityCapabilities to list */
struct UESecurityCapabilities ;
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_UESecurityCapabilities
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, struct 
   UESecurityCapabilities *pvalue);

/* Append IE with value type SecurityContext to list */
struct SecurityContext ;
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_SecurityContext
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, struct 
   SecurityContext *pvalue);

/* Append IE with value type NewSecurityContextInd to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_NewSecurityContextInd
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   NewSecurityContextInd value);

/* Append IE with value type PDUSessionResourceSwitchedList to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceSwitchedList
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   PDUSessionResourceSwitchedList *pvalue);

/* Append IE with value type PDUSessionResourceReleasedListPSAck to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_PDUSessionResourceReleasedListPSAck
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   PDUSessionResourceReleasedListPSAck *pvalue);

/* Append IE with value type AllowedNSSAI to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_AllowedNSSAI
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   AllowedNSSAI *pvalue);

/* Append IE with value type CoreNetworkAssistanceInformationForInactive to list */
struct CoreNetworkAssistanceInformationForInactive ;
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_CoreNetworkAssistanceInformationForInactive
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, struct 
   CoreNetworkAssistanceInformationForInactive *pvalue);

/* Append IE with value type RRCInactiveTransitionReportRequest to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_RRCInactiveTransitionReportRequest
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   RRCInactiveTransitionReportRequest value);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Append IE with value type RedirectionVoiceFallback to list */
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_RedirectionVoiceFallback
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, 
   RedirectionVoiceFallback value);

/* Append IE with value type CNAssistedRANTuning to list */
struct CNAssistedRANTuning ;
EXTERN int asn1Append_PathSwitchRequestAcknowledgeIEs_id_CNAssistedRANTuning
   (OSCTXT* pctxt, PathSwitchRequestAcknowledge_protocolIEs* plist, struct 
   CNAssistedRANTuning *pvalue);

/* Get IE using id key value */
EXTERN struct PathSwitchRequestAcknowledge_protocolIEs_element* 
   asn1Get_PathSwitchRequestAcknowledge_protocolIEs (ProtocolIE_ID id, 
   PathSwitchRequestAcknowledge_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PathSwitchRequestAcknowledge_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PathSwitchRequestAcknowledge_protocolIEs* plist, 
   PathSwitchRequestAcknowledge_protocolIEs* pmatches);

EXTERN int asn1Init_PathSwitchRequestAcknowledge_protocolIEs (
   PathSwitchRequestAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledge                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PATH SWITCH REQUEST ACKNOWLEDGE
 **************************************************************
PathSwitchRequestAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PathSwitchRequestAcknowledgeIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PathSwitchRequestAcknowledgeIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PathSwitchRequestAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PathSwitchRequestAcknowledge {
   PathSwitchRequestAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PathSwitchRequestAcknowledge;

EXTERN int asn1PE_PathSwitchRequestAcknowledge (OSCTXT* pctxt, PathSwitchRequestAcknowledge* pvalue);

EXTERN int asn1PD_PathSwitchRequestAcknowledge (OSCTXT* pctxt, PathSwitchRequestAcknowledge* pvalue);

EXTERN void asn1Print_PathSwitchRequestAcknowledge 
   (const char* name, const PathSwitchRequestAcknowledge* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestAcknowledge (const char* name, 
   PathSwitchRequestAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestAcknowledge (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestAcknowledge* pvalue);

EXTERN int asn1Init_PathSwitchRequestAcknowledge (
   PathSwitchRequestAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestFailure_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestFailure'
*/
typedef struct EXTERN PathSwitchRequestFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PathSwitchRequestFailureIEs_TVALUE t;

      /**
       * PathSwitchRequestFailureIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _PathSwitchRequestFailureIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _PathSwitchRequestFailureIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceReleasedListPSFail
          * criticality: ignore
          * presence: mandatory
          */
         PDUSessionResourceReleasedListPSFail *_PathSwitchRequestFailureIEs_id_PDUSessionResourceReleasedListPSFail;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_PathSwitchRequestFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PathSwitchRequestFailure_protocolIEs_element;

EXTERN int asn1PE_PathSwitchRequestFailure_protocolIEs_element (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_PathSwitchRequestFailure_protocolIEs_element (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_PathSwitchRequestFailure_protocolIEs_element 
   (const char* name, const PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestFailure_protocolIEs_element (
   const char* name, PathSwitchRequestFailure_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_id_PDUSessionResourceReleasedListPSFail
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs_element* pElem, 
   PDUSessionResourceReleasedListPSFail *pvalue);

EXTERN void asn1SetTC_PathSwitchRequestFailure_protocolIEs_element_PathSwitchRequestFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_PathSwitchRequestFailure_protocolIEs_element (
   PathSwitchRequestFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestFailure_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestFailure'
*/
/* List of PathSwitchRequestFailure_protocolIEs_element */
typedef OSRTDList PathSwitchRequestFailure_protocolIEs;

EXTERN int asn1PE_PathSwitchRequestFailure_protocolIEs (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs* pvalue);

EXTERN int asn1PD_PathSwitchRequestFailure_protocolIEs (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs* pvalue);

EXTERN void asn1Print_PathSwitchRequestFailure_protocolIEs 
   (const char* name, const PathSwitchRequestFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestFailure_protocolIEs (const char* name, 
   PathSwitchRequestFailure_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestFailure_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_PathSwitchRequestFailureIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_PathSwitchRequestFailureIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type PDUSessionResourceReleasedListPSFail to list */
EXTERN int asn1Append_PathSwitchRequestFailureIEs_id_PDUSessionResourceReleasedListPSFail
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs* plist, 
   PDUSessionResourceReleasedListPSFail *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_PathSwitchRequestFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PathSwitchRequestFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct PathSwitchRequestFailure_protocolIEs_element* 
   asn1Get_PathSwitchRequestFailure_protocolIEs (ProtocolIE_ID id, 
   PathSwitchRequestFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PathSwitchRequestFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PathSwitchRequestFailure_protocolIEs* plist, 
   PathSwitchRequestFailure_protocolIEs* pmatches);

EXTERN int asn1Init_PathSwitchRequestFailure_protocolIEs (
   PathSwitchRequestFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestFailure                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PATH SWITCH REQUEST FAILURE
 **************************************************************
PathSwitchRequestFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PathSwitchRequestFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PathSwitchRequestFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PathSwitchRequestFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PathSwitchRequestFailure {
   PathSwitchRequestFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PathSwitchRequestFailure;

EXTERN int asn1PE_PathSwitchRequestFailure (OSCTXT* pctxt, PathSwitchRequestFailure* pvalue);

EXTERN int asn1PD_PathSwitchRequestFailure (OSCTXT* pctxt, PathSwitchRequestFailure* pvalue);

EXTERN void asn1Print_PathSwitchRequestFailure 
   (const char* name, const PathSwitchRequestFailure* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestFailure (const char* name, 
   PathSwitchRequestFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestFailure (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestFailure* pvalue);

EXTERN int asn1Init_PathSwitchRequestFailure (PathSwitchRequestFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancel_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancel'
*/
typedef struct EXTERN HandoverCancel_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverCancelIEs_TVALUE t;

      /**
       * HandoverCancelIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverCancelIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _HandoverCancelIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_HandoverCancelIEs_id_Cause;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverCancel_protocolIEs_element;

EXTERN int asn1PE_HandoverCancel_protocolIEs_element (OSCTXT* pctxt, HandoverCancel_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverCancel_protocolIEs_element (OSCTXT* pctxt, HandoverCancel_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverCancel_protocolIEs_element 
   (const char* name, const HandoverCancel_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverCancel_protocolIEs_element (const char* name, 
   HandoverCancel_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCancel_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverCancel_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverCancel_protocolIEs_element_HandoverCancelIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancel_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverCancel_protocolIEs_element_HandoverCancelIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancel_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_HandoverCancel_protocolIEs_element_HandoverCancelIEs_id_Cause
   (OSCTXT* pctxt, HandoverCancel_protocolIEs_element* pElem, Cause *pvalue);

EXTERN int asn1Init_HandoverCancel_protocolIEs_element (
   HandoverCancel_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancel_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancel'
*/
/* List of HandoverCancel_protocolIEs_element */
typedef OSRTDList HandoverCancel_protocolIEs;

EXTERN int asn1PE_HandoverCancel_protocolIEs (OSCTXT* pctxt, HandoverCancel_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverCancel_protocolIEs (OSCTXT* pctxt, HandoverCancel_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverCancel_protocolIEs 
   (const char* name, const HandoverCancel_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverCancel_protocolIEs (const char* name, 
   HandoverCancel_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCancel_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverCancel_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverCancelIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancel_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverCancelIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancel_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_HandoverCancelIEs_id_Cause
   (OSCTXT* pctxt, HandoverCancel_protocolIEs* plist, struct Cause *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverCancel_protocolIEs_element* 
   asn1Get_HandoverCancel_protocolIEs (ProtocolIE_ID id, 
   HandoverCancel_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverCancel_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, HandoverCancel_protocolIEs* plist, 
   HandoverCancel_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverCancel_protocolIEs (HandoverCancel_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancel                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Handover Cancellation Elementary Procedure
 **************************************************************
 **************************************************************
 HANDOVER CANCEL
 **************************************************************
HandoverCancel ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverCancelIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverCancelIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverCancelIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverCancel {
   HandoverCancel_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverCancel;

EXTERN int asn1PE_HandoverCancel (OSCTXT* pctxt, HandoverCancel* pvalue);

EXTERN int asn1PD_HandoverCancel (OSCTXT* pctxt, HandoverCancel* pvalue);

EXTERN void asn1Print_HandoverCancel (const char* name, const HandoverCancel* pvalue);

EXTERN int asn1PrtToStr_HandoverCancel (const char* name, HandoverCancel* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCancel (OSCTXT *pctxt, 
   const char* name, const HandoverCancel* pvalue);

EXTERN int asn1Init_HandoverCancel (HandoverCancel* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancelAcknowledge_protocolIEs_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancelAcknowledge'
*/
typedef struct EXTERN HandoverCancelAcknowledge_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverCancelAcknowledgeIEs_TVALUE t;

      /**
       * HandoverCancelAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _HandoverCancelAcknowledgeIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _HandoverCancelAcknowledgeIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_HandoverCancelAcknowledgeIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} HandoverCancelAcknowledge_protocolIEs_element;

EXTERN int asn1PE_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_HandoverCancelAcknowledge_protocolIEs_element 
   (const char* name, const HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_HandoverCancelAcknowledge_protocolIEs_element (
   const char* name, HandoverCancelAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCancelAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const HandoverCancelAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_HandoverCancelAcknowledge_protocolIEs_element_HandoverCancelAcknowledgeIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_HandoverCancelAcknowledge_protocolIEs_element_HandoverCancelAcknowledgeIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_HandoverCancelAcknowledge_protocolIEs_element_HandoverCancelAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_HandoverCancelAcknowledge_protocolIEs_element (
   HandoverCancelAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancelAcknowledge_protocolIEs                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCancelAcknowledge'
*/
/* List of HandoverCancelAcknowledge_protocolIEs_element */
typedef OSRTDList HandoverCancelAcknowledge_protocolIEs;

EXTERN int asn1PE_HandoverCancelAcknowledge_protocolIEs (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_HandoverCancelAcknowledge_protocolIEs (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_HandoverCancelAcknowledge_protocolIEs 
   (const char* name, const HandoverCancelAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_HandoverCancelAcknowledge_protocolIEs (const char* name, 
   HandoverCancelAcknowledge_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCancelAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const HandoverCancelAcknowledge_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverCancelAcknowledgeIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_HandoverCancelAcknowledgeIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_HandoverCancelAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, HandoverCancelAcknowledge_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverCancelAcknowledge_protocolIEs_element* 
   asn1Get_HandoverCancelAcknowledge_protocolIEs (ProtocolIE_ID id, 
   HandoverCancelAcknowledge_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverCancelAcknowledge_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   HandoverCancelAcknowledge_protocolIEs* plist, 
   HandoverCancelAcknowledge_protocolIEs* pmatches);

EXTERN int asn1Init_HandoverCancelAcknowledge_protocolIEs (
   HandoverCancelAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCancelAcknowledge                                 */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 HANDOVER CANCEL ACKNOWLEDGE
 **************************************************************
HandoverCancelAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({HandoverCancelAcknowledgeIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({HandoverCancelAcknowledgeIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({HandoverCancelAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN HandoverCancelAcknowledge {
   HandoverCancelAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} HandoverCancelAcknowledge;

EXTERN int asn1PE_HandoverCancelAcknowledge (OSCTXT* pctxt, HandoverCancelAcknowledge* pvalue);

EXTERN int asn1PD_HandoverCancelAcknowledge (OSCTXT* pctxt, HandoverCancelAcknowledge* pvalue);

EXTERN void asn1Print_HandoverCancelAcknowledge 
   (const char* name, const HandoverCancelAcknowledge* pvalue);

EXTERN int asn1PrtToStr_HandoverCancelAcknowledge (const char* name, 
   HandoverCancelAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCancelAcknowledge (OSCTXT *pctxt, 
   const char* name, const HandoverCancelAcknowledge* pvalue);

EXTERN int asn1Init_HandoverCancelAcknowledge (HandoverCancelAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkRANStatusTransfer_protocolIEs_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkRANStatusTransfer'
*/
typedef struct EXTERN UplinkRANStatusTransfer_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UplinkRANStatusTransferIEs_TVALUE t;

      /**
       * UplinkRANStatusTransferIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UplinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UplinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RANStatusTransfer-TransparentContainer
          * criticality: reject
          * presence: mandatory
          */
         RANStatusTransfer_TransparentContainer *_UplinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UplinkRANStatusTransfer_protocolIEs_element;

EXTERN int asn1PE_UplinkRANStatusTransfer_protocolIEs_element (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_UplinkRANStatusTransfer_protocolIEs_element (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_UplinkRANStatusTransfer_protocolIEs_element 
   (const char* name, const UplinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UplinkRANStatusTransfer_protocolIEs_element (
   const char* name, UplinkRANStatusTransfer_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkRANStatusTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UplinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UplinkRANStatusTransfer_protocolIEs_element_UplinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UplinkRANStatusTransfer_protocolIEs_element_UplinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UplinkRANStatusTransfer_protocolIEs_element_UplinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer
   (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs_element* pElem, 
   RANStatusTransfer_TransparentContainer *pvalue);

EXTERN int asn1Init_UplinkRANStatusTransfer_protocolIEs_element (
   UplinkRANStatusTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkRANStatusTransfer_protocolIEs                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkRANStatusTransfer'
*/
/* List of UplinkRANStatusTransfer_protocolIEs_element */
typedef OSRTDList UplinkRANStatusTransfer_protocolIEs;

EXTERN int asn1PE_UplinkRANStatusTransfer_protocolIEs (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_UplinkRANStatusTransfer_protocolIEs (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_UplinkRANStatusTransfer_protocolIEs 
   (const char* name, const UplinkRANStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UplinkRANStatusTransfer_protocolIEs (const char* name, 
   UplinkRANStatusTransfer_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkRANStatusTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UplinkRANStatusTransfer_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UplinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UplinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type RANStatusTransfer_TransparentContainer to list */
struct RANStatusTransfer_TransparentContainer ;
EXTERN int asn1Append_UplinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer
   (OSCTXT* pctxt, UplinkRANStatusTransfer_protocolIEs* plist, struct 
   RANStatusTransfer_TransparentContainer *pvalue);

/* Get IE using id key value */
EXTERN struct UplinkRANStatusTransfer_protocolIEs_element* 
   asn1Get_UplinkRANStatusTransfer_protocolIEs (ProtocolIE_ID id, 
   UplinkRANStatusTransfer_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UplinkRANStatusTransfer_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UplinkRANStatusTransfer_protocolIEs* plist, 
   UplinkRANStatusTransfer_protocolIEs* pmatches);

EXTERN int asn1Init_UplinkRANStatusTransfer_protocolIEs (
   UplinkRANStatusTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkRANStatusTransfer                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Uplink RAN Status Transfer Elementary Procedure
 **************************************************************
 **************************************************************
 UPLINK RAN STATUS TRANSFER
 **************************************************************
UplinkRANStatusTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UplinkRANStatusTransferIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UplinkRANStatusTransferIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UplinkRANStatusTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UplinkRANStatusTransfer {
   UplinkRANStatusTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UplinkRANStatusTransfer;

EXTERN int asn1PE_UplinkRANStatusTransfer (OSCTXT* pctxt, UplinkRANStatusTransfer* pvalue);

EXTERN int asn1PD_UplinkRANStatusTransfer (OSCTXT* pctxt, UplinkRANStatusTransfer* pvalue);

EXTERN void asn1Print_UplinkRANStatusTransfer 
   (const char* name, const UplinkRANStatusTransfer* pvalue);

EXTERN int asn1PrtToStr_UplinkRANStatusTransfer (const char* name, 
   UplinkRANStatusTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkRANStatusTransfer (OSCTXT *pctxt, 
   const char* name, const UplinkRANStatusTransfer* pvalue);

EXTERN int asn1Init_UplinkRANStatusTransfer (UplinkRANStatusTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkRANStatusTransfer_protocolIEs_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkRANStatusTransfer'
*/
typedef struct EXTERN DownlinkRANStatusTransfer_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      DownlinkRANStatusTransferIEs_TVALUE t;

      /**
       * DownlinkRANStatusTransferIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _DownlinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _DownlinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RANStatusTransfer-TransparentContainer
          * criticality: reject
          * presence: mandatory
          */
         RANStatusTransfer_TransparentContainer *_DownlinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer;

         ASN1OpenType* extElem1;
      } u;
   } value;
} DownlinkRANStatusTransfer_protocolIEs_element;

EXTERN int asn1PE_DownlinkRANStatusTransfer_protocolIEs_element (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_DownlinkRANStatusTransfer_protocolIEs_element (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_DownlinkRANStatusTransfer_protocolIEs_element 
   (const char* name, const DownlinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_DownlinkRANStatusTransfer_protocolIEs_element (
   const char* name, DownlinkRANStatusTransfer_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkRANStatusTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const DownlinkRANStatusTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_DownlinkRANStatusTransfer_protocolIEs_element_DownlinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_DownlinkRANStatusTransfer_protocolIEs_element_DownlinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_DownlinkRANStatusTransfer_protocolIEs_element_DownlinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer
   (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs_element* pElem, 
   RANStatusTransfer_TransparentContainer *pvalue);

EXTERN int asn1Init_DownlinkRANStatusTransfer_protocolIEs_element (
   DownlinkRANStatusTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkRANStatusTransfer_protocolIEs                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkRANStatusTransfer'
*/
/* List of DownlinkRANStatusTransfer_protocolIEs_element */
typedef OSRTDList DownlinkRANStatusTransfer_protocolIEs;

EXTERN int asn1PE_DownlinkRANStatusTransfer_protocolIEs (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_DownlinkRANStatusTransfer_protocolIEs (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_DownlinkRANStatusTransfer_protocolIEs 
   (const char* name, const DownlinkRANStatusTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_DownlinkRANStatusTransfer_protocolIEs (const char* name, 
   DownlinkRANStatusTransfer_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkRANStatusTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const DownlinkRANStatusTransfer_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_DownlinkRANStatusTransferIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_DownlinkRANStatusTransferIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RANStatusTransfer_TransparentContainer to list */
struct RANStatusTransfer_TransparentContainer ;
EXTERN int asn1Append_DownlinkRANStatusTransferIEs_id_RANStatusTransfer_TransparentContainer
   (OSCTXT* pctxt, DownlinkRANStatusTransfer_protocolIEs* plist, struct 
   RANStatusTransfer_TransparentContainer *pvalue);

/* Get IE using id key value */
EXTERN struct DownlinkRANStatusTransfer_protocolIEs_element* 
   asn1Get_DownlinkRANStatusTransfer_protocolIEs (ProtocolIE_ID id, 
   DownlinkRANStatusTransfer_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DownlinkRANStatusTransfer_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   DownlinkRANStatusTransfer_protocolIEs* plist, 
   DownlinkRANStatusTransfer_protocolIEs* pmatches);

EXTERN int asn1Init_DownlinkRANStatusTransfer_protocolIEs (
   DownlinkRANStatusTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkRANStatusTransfer                                 */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Downlink RAN Status Transfer Elementary Procedure
 **************************************************************
 **************************************************************
 DOWNLINK RAN STATUS TRANSFER
 **************************************************************
DownlinkRANStatusTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DownlinkRANStatusTransferIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DownlinkRANStatusTransferIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DownlinkRANStatusTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN DownlinkRANStatusTransfer {
   DownlinkRANStatusTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} DownlinkRANStatusTransfer;

EXTERN int asn1PE_DownlinkRANStatusTransfer (OSCTXT* pctxt, DownlinkRANStatusTransfer* pvalue);

EXTERN int asn1PD_DownlinkRANStatusTransfer (OSCTXT* pctxt, DownlinkRANStatusTransfer* pvalue);

EXTERN void asn1Print_DownlinkRANStatusTransfer 
   (const char* name, const DownlinkRANStatusTransfer* pvalue);

EXTERN int asn1PrtToStr_DownlinkRANStatusTransfer (const char* name, 
   DownlinkRANStatusTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkRANStatusTransfer (OSCTXT *pctxt, 
   const char* name, const DownlinkRANStatusTransfer* pvalue);

EXTERN int asn1Init_DownlinkRANStatusTransfer (DownlinkRANStatusTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_protocolIEs_element                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Paging'
*/
typedef struct EXTERN Paging_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PagingIEs_TVALUE t;

      /**
       * PagingIEs information objects
       */
      union {
         /**
          * id: id-UEPagingIdentity
          * criticality: ignore
          * presence: mandatory
          */
         UEPagingIdentity *_PagingIEs_id_UEPagingIdentity;
         /**
          * id: id-PagingDRX
          * criticality: ignore
          * presence: optional
          */
         PagingDRX _PagingIEs_id_PagingDRX;
         /**
          * id: id-TAIListForPaging
          * criticality: ignore
          * presence: mandatory
          */
         TAIListForPaging *_PagingIEs_id_TAIListForPaging;
         /**
          * id: id-PagingPriority
          * criticality: ignore
          * presence: optional
          */
         PagingPriority _PagingIEs_id_PagingPriority;
         /**
          * id: id-UERadioCapabilityForPaging
          * criticality: ignore
          * presence: optional
          */
         UERadioCapabilityForPaging *_PagingIEs_id_UERadioCapabilityForPaging;
         /**
          * id: id-PagingOrigin
          * criticality: ignore
          * presence: optional
          */
         PagingOrigin _PagingIEs_id_PagingOrigin;
         /**
          * id: id-AssistanceDataForPaging
          * criticality: ignore
          * presence: optional
          */
         AssistanceDataForPaging *_PagingIEs_id_AssistanceDataForPaging;

         ASN1OpenType* extElem1;
      } u;
   } value;
} Paging_protocolIEs_element;

EXTERN int asn1PE_Paging_protocolIEs_element (OSCTXT* pctxt, Paging_protocolIEs_element* pvalue);

EXTERN int asn1PD_Paging_protocolIEs_element (OSCTXT* pctxt, Paging_protocolIEs_element* pvalue);

EXTERN void asn1Print_Paging_protocolIEs_element 
   (const char* name, const Paging_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_Paging_protocolIEs_element (const char* name, 
   Paging_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Paging_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const Paging_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_Paging_protocolIEs_element_PagingIEs_id_UEPagingIdentity
   (OSCTXT* pctxt, Paging_protocolIEs_element* pElem, UEPagingIdentity *pvalue)
   ;

EXTERN void asn1SetTC_Paging_protocolIEs_element_PagingIEs_id_PagingDRX
   (OSCTXT* pctxt, Paging_protocolIEs_element* pElem, PagingDRX value);

EXTERN void asn1SetTC_Paging_protocolIEs_element_PagingIEs_id_TAIListForPaging
   (OSCTXT* pctxt, Paging_protocolIEs_element* pElem, TAIListForPaging *pvalue)
   ;

EXTERN void asn1SetTC_Paging_protocolIEs_element_PagingIEs_id_PagingPriority
   (OSCTXT* pctxt, Paging_protocolIEs_element* pElem, PagingPriority value);

EXTERN void asn1SetTC_Paging_protocolIEs_element_PagingIEs_id_UERadioCapabilityForPaging
   (OSCTXT* pctxt, Paging_protocolIEs_element* pElem, 
   UERadioCapabilityForPaging *pvalue);

EXTERN void asn1SetTC_Paging_protocolIEs_element_PagingIEs_id_PagingOrigin
   (OSCTXT* pctxt, Paging_protocolIEs_element* pElem, PagingOrigin value);

EXTERN void asn1SetTC_Paging_protocolIEs_element_PagingIEs_id_AssistanceDataForPaging
   (OSCTXT* pctxt, Paging_protocolIEs_element* pElem, AssistanceDataForPaging 
   *pvalue);

EXTERN int asn1Init_Paging_protocolIEs_element (Paging_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging_protocolIEs                                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Paging'
*/
/* List of Paging_protocolIEs_element */
typedef OSRTDList Paging_protocolIEs;

EXTERN int asn1PE_Paging_protocolIEs (OSCTXT* pctxt, Paging_protocolIEs* pvalue);

EXTERN int asn1PD_Paging_protocolIEs (OSCTXT* pctxt, Paging_protocolIEs* pvalue);

EXTERN void asn1Print_Paging_protocolIEs 
   (const char* name, const Paging_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_Paging_protocolIEs (const char* name, 
   Paging_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Paging_protocolIEs (OSCTXT *pctxt, 
   const char* name, const Paging_protocolIEs* pvalue);

/* Append IE with value type UEPagingIdentity to list */
struct UEPagingIdentity ;
EXTERN int asn1Append_PagingIEs_id_UEPagingIdentity
   (OSCTXT* pctxt, Paging_protocolIEs* plist, struct UEPagingIdentity *pvalue)
   ;

/* Append IE with value type PagingDRX to list */
EXTERN int asn1Append_PagingIEs_id_PagingDRX
   (OSCTXT* pctxt, Paging_protocolIEs* plist, PagingDRX value);

/* Append IE with value type TAIListForPaging to list */
EXTERN int asn1Append_PagingIEs_id_TAIListForPaging
   (OSCTXT* pctxt, Paging_protocolIEs* plist, TAIListForPaging *pvalue);

/* Append IE with value type PagingPriority to list */
EXTERN int asn1Append_PagingIEs_id_PagingPriority
   (OSCTXT* pctxt, Paging_protocolIEs* plist, PagingPriority value);

/* Append IE with value type UERadioCapabilityForPaging to list */
struct UERadioCapabilityForPaging ;
EXTERN int asn1Append_PagingIEs_id_UERadioCapabilityForPaging
   (OSCTXT* pctxt, Paging_protocolIEs* plist, struct 
   UERadioCapabilityForPaging *pvalue);

/* Append IE with value type PagingOrigin to list */
EXTERN int asn1Append_PagingIEs_id_PagingOrigin
   (OSCTXT* pctxt, Paging_protocolIEs* plist, PagingOrigin value);

/* Append IE with value type AssistanceDataForPaging to list */
struct AssistanceDataForPaging ;
EXTERN int asn1Append_PagingIEs_id_AssistanceDataForPaging
   (OSCTXT* pctxt, Paging_protocolIEs* plist, struct AssistanceDataForPaging 
   *pvalue);

/* Get IE using id key value */
EXTERN struct Paging_protocolIEs_element* asn1Get_Paging_protocolIEs 
   (ProtocolIE_ID id, Paging_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_Paging_protocolIEs (OSCTXT* pctxt, ProtocolIE_ID id, 
   Paging_protocolIEs* plist, Paging_protocolIEs* pmatches);

EXTERN int asn1Init_Paging_protocolIEs (Paging_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  Paging                                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PAGING ELEMENTARY PROCEDURE
 **************************************************************
 **************************************************************
 PAGING
 **************************************************************
Paging ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PagingIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PagingIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PagingIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN Paging {
   Paging_protocolIEs protocolIEs;
   OSRTDList extElem1;
} Paging;

EXTERN int asn1PE_Paging (OSCTXT* pctxt, Paging* pvalue);

EXTERN int asn1PD_Paging (OSCTXT* pctxt, Paging* pvalue);

EXTERN void asn1Print_Paging (const char* name, const Paging* pvalue);

EXTERN int asn1PrtToStr_Paging (const char* name, Paging* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Paging (OSCTXT *pctxt, 
   const char* name, const Paging* pvalue);

EXTERN int asn1Init_Paging (Paging* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialUEMessage_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialUEMessage'
*/
typedef struct EXTERN InitialUEMessage_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      InitialUEMessage_IEs_TVALUE t;

      /**
       * InitialUEMessage-IEs information objects
       */
      union {
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _InitialUEMessage_IEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-NAS-PDU
          * criticality: reject
          * presence: mandatory
          */
         NAS_PDU *_InitialUEMessage_IEs_id_NAS_PDU;
         /**
          * id: id-UserLocationInformation
          * criticality: reject
          * presence: mandatory
          */
         UserLocationInformation *_InitialUEMessage_IEs_id_UserLocationInformation;
         /**
          * id: id-RRCEstablishmentCause
          * criticality: ignore
          * presence: mandatory
          */
         RRCEstablishmentCause _InitialUEMessage_IEs_id_RRCEstablishmentCause;
         /**
          * id: id-FiveG-S-TMSI
          * criticality: reject
          * presence: optional
          */
         FiveG_S_TMSI *_InitialUEMessage_IEs_id_FiveG_S_TMSI;
         /**
          * id: id-AMFSetID
          * criticality: ignore
          * presence: optional
          */
         AMFSetID *_InitialUEMessage_IEs_id_AMFSetID;
         /**
          * id: id-UEContextRequest
          * criticality: ignore
          * presence: optional
          */
         UEContextRequest _InitialUEMessage_IEs_id_UEContextRequest;
         /**
          * id: id-AllowedNSSAI
          * criticality: reject
          * presence: optional
          */
         AllowedNSSAI *_InitialUEMessage_IEs_id_AllowedNSSAI;
         /**
          * id: id-SourceToTarget-AMFInformationReroute
          * criticality: ignore
          * presence: optional
          */
         SourceToTarget_AMFInformationReroute *_InitialUEMessage_IEs_id_SourceToTarget_AMFInformationReroute;

         ASN1OpenType* extElem1;
      } u;
   } value;
} InitialUEMessage_protocolIEs_element;

EXTERN int asn1PE_InitialUEMessage_protocolIEs_element (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pvalue);

EXTERN int asn1PD_InitialUEMessage_protocolIEs_element (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pvalue);

EXTERN void asn1Print_InitialUEMessage_protocolIEs_element 
   (const char* name, const InitialUEMessage_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_InitialUEMessage_protocolIEs_element (const char* name, 
   InitialUEMessage_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialUEMessage_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const InitialUEMessage_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_NAS_PDU
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, NAS_PDU *pvalue
   );

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_UserLocationInformation
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_RRCEstablishmentCause
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, 
   RRCEstablishmentCause value);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_FiveG_S_TMSI
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, FiveG_S_TMSI 
   *pvalue);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_AMFSetID
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, AMFSetID 
   *pvalue);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_UEContextRequest
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, 
   UEContextRequest value);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_AllowedNSSAI
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, AllowedNSSAI 
   *pvalue);

EXTERN void asn1SetTC_InitialUEMessage_protocolIEs_element_InitialUEMessage_IEs_id_SourceToTarget_AMFInformationReroute
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs_element* pElem, 
   SourceToTarget_AMFInformationReroute *pvalue);

EXTERN int asn1Init_InitialUEMessage_protocolIEs_element (
   InitialUEMessage_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialUEMessage_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InitialUEMessage'
*/
/* List of InitialUEMessage_protocolIEs_element */
typedef OSRTDList InitialUEMessage_protocolIEs;

EXTERN int asn1PE_InitialUEMessage_protocolIEs (OSCTXT* pctxt, InitialUEMessage_protocolIEs* pvalue);

EXTERN int asn1PD_InitialUEMessage_protocolIEs (OSCTXT* pctxt, InitialUEMessage_protocolIEs* pvalue);

EXTERN void asn1Print_InitialUEMessage_protocolIEs 
   (const char* name, const InitialUEMessage_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_InitialUEMessage_protocolIEs (const char* name, 
   InitialUEMessage_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialUEMessage_protocolIEs (OSCTXT *pctxt, 
   const char* name, const InitialUEMessage_protocolIEs* pvalue);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_InitialUEMessage_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_InitialUEMessage_IEs_id_NAS_PDU
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, NAS_PDU *pvalue);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_InitialUEMessage_IEs_id_UserLocationInformation
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Append IE with value type RRCEstablishmentCause to list */
EXTERN int asn1Append_InitialUEMessage_IEs_id_RRCEstablishmentCause
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, RRCEstablishmentCause 
   value);

/* Append IE with value type FiveG_S_TMSI to list */
struct FiveG_S_TMSI ;
EXTERN int asn1Append_InitialUEMessage_IEs_id_FiveG_S_TMSI
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, struct FiveG_S_TMSI 
   *pvalue);

/* Append IE with value type AMFSetID to list */
EXTERN int asn1Append_InitialUEMessage_IEs_id_AMFSetID
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, AMFSetID *pvalue);

/* Append IE with value type UEContextRequest to list */
EXTERN int asn1Append_InitialUEMessage_IEs_id_UEContextRequest
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, UEContextRequest value)
   ;

/* Append IE with value type AllowedNSSAI to list */
EXTERN int asn1Append_InitialUEMessage_IEs_id_AllowedNSSAI
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, AllowedNSSAI *pvalue);

/* Append IE with value type SourceToTarget_AMFInformationReroute to list */
struct SourceToTarget_AMFInformationReroute ;
EXTERN int asn1Append_InitialUEMessage_IEs_id_SourceToTarget_AMFInformationReroute
   (OSCTXT* pctxt, InitialUEMessage_protocolIEs* plist, struct 
   SourceToTarget_AMFInformationReroute *pvalue);

/* Get IE using id key value */
EXTERN struct InitialUEMessage_protocolIEs_element* 
   asn1Get_InitialUEMessage_protocolIEs (ProtocolIE_ID id, 
   InitialUEMessage_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_InitialUEMessage_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, InitialUEMessage_protocolIEs* plist, 
   InitialUEMessage_protocolIEs* pmatches);

EXTERN int asn1Init_InitialUEMessage_protocolIEs (
   InitialUEMessage_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  InitialUEMessage                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 NAS TRANSPORT ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 INITIAL UE MESSAGE
 **************************************************************
InitialUEMessage ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({InitialUEMessage-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({InitialUEMessage-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({InitialUEMessage-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN InitialUEMessage {
   InitialUEMessage_protocolIEs protocolIEs;
   OSRTDList extElem1;
} InitialUEMessage;

EXTERN int asn1PE_InitialUEMessage (OSCTXT* pctxt, InitialUEMessage* pvalue);

EXTERN int asn1PD_InitialUEMessage (OSCTXT* pctxt, InitialUEMessage* pvalue);

EXTERN void asn1Print_InitialUEMessage 
   (const char* name, const InitialUEMessage* pvalue);

EXTERN int asn1PrtToStr_InitialUEMessage (const char* name, InitialUEMessage* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitialUEMessage (OSCTXT *pctxt, 
   const char* name, const InitialUEMessage* pvalue);

EXTERN int asn1Init_InitialUEMessage (InitialUEMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNASTransport_protocolIEs_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNASTransport'
*/
typedef struct EXTERN DownlinkNASTransport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      DownlinkNASTransport_IEs_TVALUE t;

      /**
       * DownlinkNASTransport-IEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _DownlinkNASTransport_IEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _DownlinkNASTransport_IEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-OldAMF
          * criticality: reject
          * presence: optional
          */
         AMFName _DownlinkNASTransport_IEs_id_OldAMF;
         /**
          * id: id-RANPagingPriority
          * criticality: ignore
          * presence: optional
          */
         RANPagingPriority _DownlinkNASTransport_IEs_id_RANPagingPriority;
         /**
          * id: id-NAS-PDU
          * criticality: reject
          * presence: mandatory
          */
         NAS_PDU *_DownlinkNASTransport_IEs_id_NAS_PDU;
         /**
          * id: id-MobilityRestrictionList
          * criticality: ignore
          * presence: optional
          */
         MobilityRestrictionList *_DownlinkNASTransport_IEs_id_MobilityRestrictionList;
         /**
          * id: id-IndexToRFSP
          * criticality: ignore
          * presence: optional
          */
         IndexToRFSP _DownlinkNASTransport_IEs_id_IndexToRFSP;
         /**
          * id: id-UEAggregateMaximumBitRate
          * criticality: ignore
          * presence: optional
          */
         UEAggregateMaximumBitRate *_DownlinkNASTransport_IEs_id_UEAggregateMaximumBitRate;
         /**
          * id: id-AllowedNSSAI
          * criticality: reject
          * presence: optional
          */
         AllowedNSSAI *_DownlinkNASTransport_IEs_id_AllowedNSSAI;

         ASN1OpenType* extElem1;
      } u;
   } value;
} DownlinkNASTransport_protocolIEs_element;

EXTERN int asn1PE_DownlinkNASTransport_protocolIEs_element (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_DownlinkNASTransport_protocolIEs_element (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_DownlinkNASTransport_protocolIEs_element 
   (const char* name, const DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_DownlinkNASTransport_protocolIEs_element (const char* name, 
   DownlinkNASTransport_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkNASTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const DownlinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_OldAMF
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, AMFName 
   value);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_RANPagingPriority
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, 
   RANPagingPriority value);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_NAS_PDU
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, NAS_PDU 
   *pvalue);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_MobilityRestrictionList
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, 
   MobilityRestrictionList *pvalue);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_IndexToRFSP
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, 
   IndexToRFSP value);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, 
   UEAggregateMaximumBitRate *pvalue);

EXTERN void asn1SetTC_DownlinkNASTransport_protocolIEs_element_DownlinkNASTransport_IEs_id_AllowedNSSAI
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs_element* pElem, 
   AllowedNSSAI *pvalue);

EXTERN int asn1Init_DownlinkNASTransport_protocolIEs_element (
   DownlinkNASTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNASTransport_protocolIEs                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNASTransport'
*/
/* List of DownlinkNASTransport_protocolIEs_element */
typedef OSRTDList DownlinkNASTransport_protocolIEs;

EXTERN int asn1PE_DownlinkNASTransport_protocolIEs (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PD_DownlinkNASTransport_protocolIEs (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* pvalue);

EXTERN void asn1Print_DownlinkNASTransport_protocolIEs 
   (const char* name, const DownlinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_DownlinkNASTransport_protocolIEs (const char* name, 
   DownlinkNASTransport_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkNASTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const DownlinkNASTransport_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type AMFName to list */
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_OldAMF
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, AMFName value);

/* Append IE with value type RANPagingPriority to list */
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_RANPagingPriority
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, RANPagingPriority 
   value);

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_NAS_PDU
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, NAS_PDU *pvalue);

/* Append IE with value type MobilityRestrictionList to list */
struct MobilityRestrictionList ;
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_MobilityRestrictionList
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, struct 
   MobilityRestrictionList *pvalue);

/* Append IE with value type IndexToRFSP to list */
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_IndexToRFSP
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, IndexToRFSP value)
   ;

/* Append IE with value type UEAggregateMaximumBitRate to list */
struct UEAggregateMaximumBitRate ;
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_UEAggregateMaximumBitRate
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, struct 
   UEAggregateMaximumBitRate *pvalue);

/* Append IE with value type AllowedNSSAI to list */
EXTERN int asn1Append_DownlinkNASTransport_IEs_id_AllowedNSSAI
   (OSCTXT* pctxt, DownlinkNASTransport_protocolIEs* plist, AllowedNSSAI 
   *pvalue);

/* Get IE using id key value */
EXTERN struct DownlinkNASTransport_protocolIEs_element* 
   asn1Get_DownlinkNASTransport_protocolIEs (ProtocolIE_ID id, 
   DownlinkNASTransport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DownlinkNASTransport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, DownlinkNASTransport_protocolIEs* plist, 
   DownlinkNASTransport_protocolIEs* pmatches);

EXTERN int asn1Init_DownlinkNASTransport_protocolIEs (
   DownlinkNASTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNASTransport                                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 DOWNLINK NAS TRANSPORT
 **************************************************************
DownlinkNASTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DownlinkNASTransport-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DownlinkNASTransport-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DownlinkNASTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN DownlinkNASTransport {
   DownlinkNASTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} DownlinkNASTransport;

EXTERN int asn1PE_DownlinkNASTransport (OSCTXT* pctxt, DownlinkNASTransport* pvalue);

EXTERN int asn1PD_DownlinkNASTransport (OSCTXT* pctxt, DownlinkNASTransport* pvalue);

EXTERN void asn1Print_DownlinkNASTransport 
   (const char* name, const DownlinkNASTransport* pvalue);

EXTERN int asn1PrtToStr_DownlinkNASTransport (const char* name, 
   DownlinkNASTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkNASTransport (OSCTXT *pctxt, 
   const char* name, const DownlinkNASTransport* pvalue);

EXTERN int asn1Init_DownlinkNASTransport (DownlinkNASTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNASTransport_protocolIEs_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNASTransport'
*/
typedef struct EXTERN UplinkNASTransport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UplinkNASTransport_IEs_TVALUE t;

      /**
       * UplinkNASTransport-IEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UplinkNASTransport_IEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UplinkNASTransport_IEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-NAS-PDU
          * criticality: reject
          * presence: mandatory
          */
         NAS_PDU *_UplinkNASTransport_IEs_id_NAS_PDU;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: mandatory
          */
         UserLocationInformation *_UplinkNASTransport_IEs_id_UserLocationInformation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UplinkNASTransport_protocolIEs_element;

EXTERN int asn1PE_UplinkNASTransport_protocolIEs_element (OSCTXT* pctxt, UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_UplinkNASTransport_protocolIEs_element (OSCTXT* pctxt, UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_UplinkNASTransport_protocolIEs_element 
   (const char* name, const UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UplinkNASTransport_protocolIEs_element (const char* name, 
   UplinkNASTransport_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkNASTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UplinkNASTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_id_NAS_PDU
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs_element* pElem, NAS_PDU 
   *pvalue);

EXTERN void asn1SetTC_UplinkNASTransport_protocolIEs_element_UplinkNASTransport_IEs_id_UserLocationInformation
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN int asn1Init_UplinkNASTransport_protocolIEs_element (
   UplinkNASTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNASTransport_protocolIEs                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNASTransport'
*/
/* List of UplinkNASTransport_protocolIEs_element */
typedef OSRTDList UplinkNASTransport_protocolIEs;

EXTERN int asn1PE_UplinkNASTransport_protocolIEs (OSCTXT* pctxt, UplinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PD_UplinkNASTransport_protocolIEs (OSCTXT* pctxt, UplinkNASTransport_protocolIEs* pvalue);

EXTERN void asn1Print_UplinkNASTransport_protocolIEs 
   (const char* name, const UplinkNASTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UplinkNASTransport_protocolIEs (const char* name, 
   UplinkNASTransport_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkNASTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UplinkNASTransport_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UplinkNASTransport_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs* plist, AMF_UE_NGAP_ID value)
   ;

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UplinkNASTransport_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs* plist, RAN_UE_NGAP_ID value)
   ;

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_UplinkNASTransport_IEs_id_NAS_PDU
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs* plist, NAS_PDU *pvalue);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_UplinkNASTransport_IEs_id_UserLocationInformation
   (OSCTXT* pctxt, UplinkNASTransport_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Get IE using id key value */
EXTERN struct UplinkNASTransport_protocolIEs_element* 
   asn1Get_UplinkNASTransport_protocolIEs (ProtocolIE_ID id, 
   UplinkNASTransport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UplinkNASTransport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, UplinkNASTransport_protocolIEs* plist, 
   UplinkNASTransport_protocolIEs* pmatches);

EXTERN int asn1Init_UplinkNASTransport_protocolIEs (
   UplinkNASTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNASTransport                                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UPLINK NAS TRANSPORT
 **************************************************************
UplinkNASTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UplinkNASTransport-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UplinkNASTransport-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UplinkNASTransport-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UplinkNASTransport {
   UplinkNASTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UplinkNASTransport;

EXTERN int asn1PE_UplinkNASTransport (OSCTXT* pctxt, UplinkNASTransport* pvalue);

EXTERN int asn1PD_UplinkNASTransport (OSCTXT* pctxt, UplinkNASTransport* pvalue);

EXTERN void asn1Print_UplinkNASTransport 
   (const char* name, const UplinkNASTransport* pvalue);

EXTERN int asn1PrtToStr_UplinkNASTransport (const char* name, 
   UplinkNASTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkNASTransport (OSCTXT *pctxt, 
   const char* name, const UplinkNASTransport* pvalue);

EXTERN int asn1Init_UplinkNASTransport (UplinkNASTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  NASNonDeliveryIndication_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASNonDeliveryIndication'
*/
typedef struct EXTERN NASNonDeliveryIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NASNonDeliveryIndication_IEs_TVALUE t;

      /**
       * NASNonDeliveryIndication-IEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _NASNonDeliveryIndication_IEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _NASNonDeliveryIndication_IEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-NAS-PDU
          * criticality: ignore
          * presence: mandatory
          */
         NAS_PDU *_NASNonDeliveryIndication_IEs_id_NAS_PDU;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_NASNonDeliveryIndication_IEs_id_Cause;

         ASN1OpenType* extElem1;
      } u;
   } value;
} NASNonDeliveryIndication_protocolIEs_element;

EXTERN int asn1PE_NASNonDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_NASNonDeliveryIndication_protocolIEs_element (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_NASNonDeliveryIndication_protocolIEs_element 
   (const char* name, const NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_NASNonDeliveryIndication_protocolIEs_element (
   const char* name, NASNonDeliveryIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NASNonDeliveryIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const NASNonDeliveryIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_id_NAS_PDU
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs_element* pElem, 
   NAS_PDU *pvalue);

EXTERN void asn1SetTC_NASNonDeliveryIndication_protocolIEs_element_NASNonDeliveryIndication_IEs_id_Cause
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs_element* pElem, Cause 
   *pvalue);

EXTERN int asn1Init_NASNonDeliveryIndication_protocolIEs_element (
   NASNonDeliveryIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NASNonDeliveryIndication_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASNonDeliveryIndication'
*/
/* List of NASNonDeliveryIndication_protocolIEs_element */
typedef OSRTDList NASNonDeliveryIndication_protocolIEs;

EXTERN int asn1PE_NASNonDeliveryIndication_protocolIEs (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs* pvalue);

EXTERN int asn1PD_NASNonDeliveryIndication_protocolIEs (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs* pvalue);

EXTERN void asn1Print_NASNonDeliveryIndication_protocolIEs 
   (const char* name, const NASNonDeliveryIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_NASNonDeliveryIndication_protocolIEs (const char* name, 
   NASNonDeliveryIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NASNonDeliveryIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const NASNonDeliveryIndication_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_NASNonDeliveryIndication_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_NASNonDeliveryIndication_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type NAS_PDU to list */
EXTERN int asn1Append_NASNonDeliveryIndication_IEs_id_NAS_PDU
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs* plist, NAS_PDU 
   *pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_NASNonDeliveryIndication_IEs_id_Cause
   (OSCTXT* pctxt, NASNonDeliveryIndication_protocolIEs* plist, struct Cause 
   *pvalue);

/* Get IE using id key value */
EXTERN struct NASNonDeliveryIndication_protocolIEs_element* 
   asn1Get_NASNonDeliveryIndication_protocolIEs (ProtocolIE_ID id, 
   NASNonDeliveryIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NASNonDeliveryIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   NASNonDeliveryIndication_protocolIEs* plist, 
   NASNonDeliveryIndication_protocolIEs* pmatches);

EXTERN int asn1Init_NASNonDeliveryIndication_protocolIEs (
   NASNonDeliveryIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NASNonDeliveryIndication                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 NAS NON DELIVERY INDICATION
 **************************************************************
NASNonDeliveryIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NASNonDeliveryIndication-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NASNonDeliveryIndication-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NASNonDeliveryIndication-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN NASNonDeliveryIndication {
   NASNonDeliveryIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} NASNonDeliveryIndication;

EXTERN int asn1PE_NASNonDeliveryIndication (OSCTXT* pctxt, NASNonDeliveryIndication* pvalue);

EXTERN int asn1PD_NASNonDeliveryIndication (OSCTXT* pctxt, NASNonDeliveryIndication* pvalue);

EXTERN void asn1Print_NASNonDeliveryIndication 
   (const char* name, const NASNonDeliveryIndication* pvalue);

EXTERN int asn1PrtToStr_NASNonDeliveryIndication (const char* name, 
   NASNonDeliveryIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NASNonDeliveryIndication (OSCTXT *pctxt, 
   const char* name, const NASNonDeliveryIndication* pvalue);

EXTERN int asn1Init_NASNonDeliveryIndication (NASNonDeliveryIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  RerouteNASRequest_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RerouteNASRequest'
*/
typedef struct EXTERN RerouteNASRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      RerouteNASRequest_IEs_TVALUE t;

      /**
       * RerouteNASRequest-IEs information objects
       */
      union {
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _RerouteNASRequest_IEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: optional
          */
         AMF_UE_NGAP_ID _RerouteNASRequest_IEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-NGAP-Message
          * criticality: reject
          * presence: mandatory
          */
         _RerouteNASRequest_IEs_Value *_RerouteNASRequest_IEs_id_NGAP_Message;
         /**
          * id: id-AMFSetID
          * criticality: reject
          * presence: mandatory
          */
         AMFSetID *_RerouteNASRequest_IEs_id_AMFSetID;
         /**
          * id: id-AllowedNSSAI
          * criticality: reject
          * presence: optional
          */
         AllowedNSSAI *_RerouteNASRequest_IEs_id_AllowedNSSAI;
         /**
          * id: id-SourceToTarget-AMFInformationReroute
          * criticality: ignore
          * presence: optional
          */
         SourceToTarget_AMFInformationReroute *_RerouteNASRequest_IEs_id_SourceToTarget_AMFInformationReroute;

         ASN1OpenType* extElem1;
      } u;
   } value;
} RerouteNASRequest_protocolIEs_element;

EXTERN int asn1PE_RerouteNASRequest_protocolIEs_element (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_RerouteNASRequest_protocolIEs_element (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_RerouteNASRequest_protocolIEs_element 
   (const char* name, const RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_RerouteNASRequest_protocolIEs_element (const char* name, 
   RerouteNASRequest_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RerouteNASRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const RerouteNASRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_id_NGAP_Message
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pElem, 
   _RerouteNASRequest_IEs_Value *pvalue);

EXTERN void asn1SetTC_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_id_AMFSetID
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pElem, AMFSetID 
   *pvalue);

EXTERN void asn1SetTC_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_id_AllowedNSSAI
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pElem, AllowedNSSAI 
   *pvalue);

EXTERN void asn1SetTC_RerouteNASRequest_protocolIEs_element_RerouteNASRequest_IEs_id_SourceToTarget_AMFInformationReroute
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs_element* pElem, 
   SourceToTarget_AMFInformationReroute *pvalue);

EXTERN int asn1Init_RerouteNASRequest_protocolIEs_element (
   RerouteNASRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RerouteNASRequest_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RerouteNASRequest'
*/
/* List of RerouteNASRequest_protocolIEs_element */
typedef OSRTDList RerouteNASRequest_protocolIEs;

EXTERN int asn1PE_RerouteNASRequest_protocolIEs (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* pvalue);

EXTERN int asn1PD_RerouteNASRequest_protocolIEs (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* pvalue);

EXTERN void asn1Print_RerouteNASRequest_protocolIEs 
   (const char* name, const RerouteNASRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_RerouteNASRequest_protocolIEs (const char* name, 
   RerouteNASRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RerouteNASRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const RerouteNASRequest_protocolIEs* pvalue);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_RerouteNASRequest_IEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* plist, RAN_UE_NGAP_ID value)
   ;

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_RerouteNASRequest_IEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* plist, AMF_UE_NGAP_ID value)
   ;

/* Append IE with value type _RerouteNASRequest_IEs_Value to list */
EXTERN int asn1Append_RerouteNASRequest_IEs_id_NGAP_Message
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* plist, 
   _RerouteNASRequest_IEs_Value *pvalue);

/* Append IE with value type AMFSetID to list */
EXTERN int asn1Append_RerouteNASRequest_IEs_id_AMFSetID
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* plist, AMFSetID *pvalue);

/* Append IE with value type AllowedNSSAI to list */
EXTERN int asn1Append_RerouteNASRequest_IEs_id_AllowedNSSAI
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* plist, AllowedNSSAI *pvalue)
   ;

/* Append IE with value type SourceToTarget_AMFInformationReroute to list */
struct SourceToTarget_AMFInformationReroute ;
EXTERN int asn1Append_RerouteNASRequest_IEs_id_SourceToTarget_AMFInformationReroute
   (OSCTXT* pctxt, RerouteNASRequest_protocolIEs* plist, struct 
   SourceToTarget_AMFInformationReroute *pvalue);

/* Get IE using id key value */
EXTERN struct RerouteNASRequest_protocolIEs_element* 
   asn1Get_RerouteNASRequest_protocolIEs (ProtocolIE_ID id, 
   RerouteNASRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RerouteNASRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, RerouteNASRequest_protocolIEs* plist, 
   RerouteNASRequest_protocolIEs* pmatches);

EXTERN int asn1Init_RerouteNASRequest_protocolIEs (
   RerouteNASRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  RerouteNASRequest                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 REROUTE NAS REQUEST
 **************************************************************
RerouteNASRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({RerouteNASRequest-IEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({RerouteNASRequest-IEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({RerouteNASRequest-IEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN RerouteNASRequest {
   RerouteNASRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} RerouteNASRequest;

EXTERN int asn1PE_RerouteNASRequest (OSCTXT* pctxt, RerouteNASRequest* pvalue);

EXTERN int asn1PD_RerouteNASRequest (OSCTXT* pctxt, RerouteNASRequest* pvalue);

EXTERN void asn1Print_RerouteNASRequest 
   (const char* name, const RerouteNASRequest* pvalue);

EXTERN int asn1PrtToStr_RerouteNASRequest (const char* name, 
   RerouteNASRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RerouteNASRequest (OSCTXT *pctxt, 
   const char* name, const RerouteNASRequest* pvalue);

EXTERN int asn1Init_RerouteNASRequest (RerouteNASRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupRequest_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGSetupRequest'
*/
typedef struct EXTERN NGSetupRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGSetupRequestIEs_TVALUE t;

      /**
       * NGSetupRequestIEs information objects
       */
      union {
         /**
          * id: id-GlobalRANNodeID
          * criticality: reject
          * presence: mandatory
          */
         GlobalRANNodeID *_NGSetupRequestIEs_id_GlobalRANNodeID;
         /**
          * id: id-RANNodeName
          * criticality: ignore
          * presence: optional
          */
         RANNodeName _NGSetupRequestIEs_id_RANNodeName;
         /**
          * id: id-SupportedTAList
          * criticality: reject
          * presence: mandatory
          */
         SupportedTAList *_NGSetupRequestIEs_id_SupportedTAList;
         /**
          * id: id-DefaultPagingDRX
          * criticality: ignore
          * presence: mandatory
          */
         PagingDRX _NGSetupRequestIEs_id_DefaultPagingDRX;
         /**
          * id: id-UERetentionInformation
          * criticality: ignore
          * presence: optional
          */
         UERetentionInformation _NGSetupRequestIEs_id_UERetentionInformation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} NGSetupRequest_protocolIEs_element;

EXTERN int asn1PE_NGSetupRequest_protocolIEs_element (OSCTXT* pctxt, NGSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_NGSetupRequest_protocolIEs_element (OSCTXT* pctxt, NGSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_NGSetupRequest_protocolIEs_element 
   (const char* name, const NGSetupRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_NGSetupRequest_protocolIEs_element (const char* name, 
   NGSetupRequest_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const NGSetupRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_NGSetupRequest_protocolIEs_element_NGSetupRequestIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs_element* pElem, GlobalRANNodeID 
   *pvalue);

EXTERN void asn1SetTC_NGSetupRequest_protocolIEs_element_NGSetupRequestIEs_id_RANNodeName
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs_element* pElem, RANNodeName value
   );

EXTERN void asn1SetTC_NGSetupRequest_protocolIEs_element_NGSetupRequestIEs_id_SupportedTAList
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs_element* pElem, SupportedTAList 
   *pvalue);

EXTERN void asn1SetTC_NGSetupRequest_protocolIEs_element_NGSetupRequestIEs_id_DefaultPagingDRX
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs_element* pElem, PagingDRX value)
   ;

EXTERN void asn1SetTC_NGSetupRequest_protocolIEs_element_NGSetupRequestIEs_id_UERetentionInformation
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs_element* pElem, 
   UERetentionInformation value);

EXTERN int asn1Init_NGSetupRequest_protocolIEs_element (
   NGSetupRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupRequest_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGSetupRequest'
*/
/* List of NGSetupRequest_protocolIEs_element */
typedef OSRTDList NGSetupRequest_protocolIEs;

EXTERN int asn1PE_NGSetupRequest_protocolIEs (OSCTXT* pctxt, NGSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PD_NGSetupRequest_protocolIEs (OSCTXT* pctxt, NGSetupRequest_protocolIEs* pvalue);

EXTERN void asn1Print_NGSetupRequest_protocolIEs 
   (const char* name, const NGSetupRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_NGSetupRequest_protocolIEs (const char* name, 
   NGSetupRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const NGSetupRequest_protocolIEs* pvalue);

/* Append IE with value type GlobalRANNodeID to list */
struct GlobalRANNodeID ;
EXTERN int asn1Append_NGSetupRequestIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs* plist, struct GlobalRANNodeID 
   *pvalue);

/* Append IE with value type RANNodeName to list */
EXTERN int asn1Append_NGSetupRequestIEs_id_RANNodeName
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs* plist, RANNodeName value);

/* Append IE with value type SupportedTAList to list */
EXTERN int asn1Append_NGSetupRequestIEs_id_SupportedTAList
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs* plist, SupportedTAList *pvalue)
   ;

/* Append IE with value type PagingDRX to list */
EXTERN int asn1Append_NGSetupRequestIEs_id_DefaultPagingDRX
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs* plist, PagingDRX value);

/* Append IE with value type UERetentionInformation to list */
EXTERN int asn1Append_NGSetupRequestIEs_id_UERetentionInformation
   (OSCTXT* pctxt, NGSetupRequest_protocolIEs* plist, UERetentionInformation 
   value);

/* Get IE using id key value */
EXTERN struct NGSetupRequest_protocolIEs_element* 
   asn1Get_NGSetupRequest_protocolIEs (ProtocolIE_ID id, 
   NGSetupRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NGSetupRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, NGSetupRequest_protocolIEs* plist, 
   NGSetupRequest_protocolIEs* pmatches);

EXTERN int asn1Init_NGSetupRequest_protocolIEs (NGSetupRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupRequest                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 INTERFACE MANAGEMENT ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 NG Setup Elementary Procedure
 **************************************************************
 **************************************************************
 NG SETUP REQUEST
 **************************************************************
NGSetupRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NGSetupRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NGSetupRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NGSetupRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN NGSetupRequest {
   NGSetupRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} NGSetupRequest;

EXTERN int asn1PE_NGSetupRequest (OSCTXT* pctxt, NGSetupRequest* pvalue);

EXTERN int asn1PD_NGSetupRequest (OSCTXT* pctxt, NGSetupRequest* pvalue);

EXTERN void asn1Print_NGSetupRequest (const char* name, const NGSetupRequest* pvalue);

EXTERN int asn1PrtToStr_NGSetupRequest (const char* name, NGSetupRequest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupRequest (OSCTXT *pctxt, 
   const char* name, const NGSetupRequest* pvalue);

EXTERN int asn1Init_NGSetupRequest (NGSetupRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupResponse_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGSetupResponse'
*/
typedef struct EXTERN NGSetupResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGSetupResponseIEs_TVALUE t;

      /**
       * NGSetupResponseIEs information objects
       */
      union {
         /**
          * id: id-AMFName
          * criticality: reject
          * presence: mandatory
          */
         AMFName _NGSetupResponseIEs_id_AMFName;
         /**
          * id: id-ServedGUAMIList
          * criticality: reject
          * presence: mandatory
          */
         ServedGUAMIList *_NGSetupResponseIEs_id_ServedGUAMIList;
         /**
          * id: id-RelativeAMFCapacity
          * criticality: ignore
          * presence: mandatory
          */
         RelativeAMFCapacity _NGSetupResponseIEs_id_RelativeAMFCapacity;
         /**
          * id: id-PLMNSupportList
          * criticality: reject
          * presence: mandatory
          */
         PLMNSupportList *_NGSetupResponseIEs_id_PLMNSupportList;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_NGSetupResponseIEs_id_CriticalityDiagnostics;
         /**
          * id: id-UERetentionInformation
          * criticality: ignore
          * presence: optional
          */
         UERetentionInformation _NGSetupResponseIEs_id_UERetentionInformation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} NGSetupResponse_protocolIEs_element;

EXTERN int asn1PE_NGSetupResponse_protocolIEs_element (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_NGSetupResponse_protocolIEs_element (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_NGSetupResponse_protocolIEs_element 
   (const char* name, const NGSetupResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_NGSetupResponse_protocolIEs_element (const char* name, 
   NGSetupResponse_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const NGSetupResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_NGSetupResponse_protocolIEs_element_NGSetupResponseIEs_id_AMFName
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pElem, AMFName value);

EXTERN void asn1SetTC_NGSetupResponse_protocolIEs_element_NGSetupResponseIEs_id_ServedGUAMIList
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pElem, ServedGUAMIList 
   *pvalue);

EXTERN void asn1SetTC_NGSetupResponse_protocolIEs_element_NGSetupResponseIEs_id_RelativeAMFCapacity
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pElem, 
   RelativeAMFCapacity value);

EXTERN void asn1SetTC_NGSetupResponse_protocolIEs_element_NGSetupResponseIEs_id_PLMNSupportList
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pElem, PLMNSupportList 
   *pvalue);

EXTERN void asn1SetTC_NGSetupResponse_protocolIEs_element_NGSetupResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN void asn1SetTC_NGSetupResponse_protocolIEs_element_NGSetupResponseIEs_id_UERetentionInformation
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs_element* pElem, 
   UERetentionInformation value);

EXTERN int asn1Init_NGSetupResponse_protocolIEs_element (
   NGSetupResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupResponse_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGSetupResponse'
*/
/* List of NGSetupResponse_protocolIEs_element */
typedef OSRTDList NGSetupResponse_protocolIEs;

EXTERN int asn1PE_NGSetupResponse_protocolIEs (OSCTXT* pctxt, NGSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PD_NGSetupResponse_protocolIEs (OSCTXT* pctxt, NGSetupResponse_protocolIEs* pvalue);

EXTERN void asn1Print_NGSetupResponse_protocolIEs 
   (const char* name, const NGSetupResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_NGSetupResponse_protocolIEs (const char* name, 
   NGSetupResponse_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const NGSetupResponse_protocolIEs* pvalue);

/* Append IE with value type AMFName to list */
EXTERN int asn1Append_NGSetupResponseIEs_id_AMFName
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs* plist, AMFName value);

/* Append IE with value type ServedGUAMIList to list */
EXTERN int asn1Append_NGSetupResponseIEs_id_ServedGUAMIList
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs* plist, ServedGUAMIList *pvalue)
   ;

/* Append IE with value type RelativeAMFCapacity to list */
EXTERN int asn1Append_NGSetupResponseIEs_id_RelativeAMFCapacity
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs* plist, RelativeAMFCapacity 
   value);

/* Append IE with value type PLMNSupportList to list */
EXTERN int asn1Append_NGSetupResponseIEs_id_PLMNSupportList
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs* plist, PLMNSupportList *pvalue)
   ;

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_NGSetupResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Append IE with value type UERetentionInformation to list */
EXTERN int asn1Append_NGSetupResponseIEs_id_UERetentionInformation
   (OSCTXT* pctxt, NGSetupResponse_protocolIEs* plist, UERetentionInformation 
   value);

/* Get IE using id key value */
EXTERN struct NGSetupResponse_protocolIEs_element* 
   asn1Get_NGSetupResponse_protocolIEs (ProtocolIE_ID id, 
   NGSetupResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NGSetupResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, NGSetupResponse_protocolIEs* plist, 
   NGSetupResponse_protocolIEs* pmatches);

EXTERN int asn1Init_NGSetupResponse_protocolIEs (NGSetupResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupResponse                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 NG SETUP RESPONSE
 **************************************************************
NGSetupResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NGSetupResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NGSetupResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NGSetupResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN NGSetupResponse {
   NGSetupResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} NGSetupResponse;

EXTERN int asn1PE_NGSetupResponse (OSCTXT* pctxt, NGSetupResponse* pvalue);

EXTERN int asn1PD_NGSetupResponse (OSCTXT* pctxt, NGSetupResponse* pvalue);

EXTERN void asn1Print_NGSetupResponse 
   (const char* name, const NGSetupResponse* pvalue);

EXTERN int asn1PrtToStr_NGSetupResponse (const char* name, NGSetupResponse* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupResponse (OSCTXT *pctxt, 
   const char* name, const NGSetupResponse* pvalue);

EXTERN int asn1Init_NGSetupResponse (NGSetupResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupFailure_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGSetupFailure'
*/
typedef struct EXTERN NGSetupFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGSetupFailureIEs_TVALUE t;

      /**
       * NGSetupFailureIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_NGSetupFailureIEs_id_Cause;
         /**
          * id: id-TimeToWait
          * criticality: ignore
          * presence: optional
          */
         TimeToWait _NGSetupFailureIEs_id_TimeToWait;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_NGSetupFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} NGSetupFailure_protocolIEs_element;

EXTERN int asn1PE_NGSetupFailure_protocolIEs_element (OSCTXT* pctxt, NGSetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_NGSetupFailure_protocolIEs_element (OSCTXT* pctxt, NGSetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_NGSetupFailure_protocolIEs_element 
   (const char* name, const NGSetupFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_NGSetupFailure_protocolIEs_element (const char* name, 
   NGSetupFailure_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const NGSetupFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_NGSetupFailure_protocolIEs_element_NGSetupFailureIEs_id_Cause
   (OSCTXT* pctxt, NGSetupFailure_protocolIEs_element* pElem, Cause *pvalue);

EXTERN void asn1SetTC_NGSetupFailure_protocolIEs_element_NGSetupFailureIEs_id_TimeToWait
   (OSCTXT* pctxt, NGSetupFailure_protocolIEs_element* pElem, TimeToWait value)
   ;

EXTERN void asn1SetTC_NGSetupFailure_protocolIEs_element_NGSetupFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, NGSetupFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_NGSetupFailure_protocolIEs_element (
   NGSetupFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupFailure_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGSetupFailure'
*/
/* List of NGSetupFailure_protocolIEs_element */
typedef OSRTDList NGSetupFailure_protocolIEs;

EXTERN int asn1PE_NGSetupFailure_protocolIEs (OSCTXT* pctxt, NGSetupFailure_protocolIEs* pvalue);

EXTERN int asn1PD_NGSetupFailure_protocolIEs (OSCTXT* pctxt, NGSetupFailure_protocolIEs* pvalue);

EXTERN void asn1Print_NGSetupFailure_protocolIEs 
   (const char* name, const NGSetupFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_NGSetupFailure_protocolIEs (const char* name, 
   NGSetupFailure_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const NGSetupFailure_protocolIEs* pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_NGSetupFailureIEs_id_Cause
   (OSCTXT* pctxt, NGSetupFailure_protocolIEs* plist, struct Cause *pvalue);

/* Append IE with value type TimeToWait to list */
EXTERN int asn1Append_NGSetupFailureIEs_id_TimeToWait
   (OSCTXT* pctxt, NGSetupFailure_protocolIEs* plist, TimeToWait value);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_NGSetupFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, NGSetupFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct NGSetupFailure_protocolIEs_element* 
   asn1Get_NGSetupFailure_protocolIEs (ProtocolIE_ID id, 
   NGSetupFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NGSetupFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, NGSetupFailure_protocolIEs* plist, 
   NGSetupFailure_protocolIEs* pmatches);

EXTERN int asn1Init_NGSetupFailure_protocolIEs (NGSetupFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NGSetupFailure                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 NG SETUP FAILURE
 **************************************************************
NGSetupFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NGSetupFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NGSetupFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NGSetupFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN NGSetupFailure {
   NGSetupFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} NGSetupFailure;

EXTERN int asn1PE_NGSetupFailure (OSCTXT* pctxt, NGSetupFailure* pvalue);

EXTERN int asn1PD_NGSetupFailure (OSCTXT* pctxt, NGSetupFailure* pvalue);

EXTERN void asn1Print_NGSetupFailure (const char* name, const NGSetupFailure* pvalue);

EXTERN int asn1PrtToStr_NGSetupFailure (const char* name, NGSetupFailure* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGSetupFailure (OSCTXT *pctxt, 
   const char* name, const NGSetupFailure* pvalue);

EXTERN int asn1Init_NGSetupFailure (NGSetupFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdate_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANConfigurationUpdate'
*/
typedef struct EXTERN RANConfigurationUpdate_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      RANConfigurationUpdateIEs_TVALUE t;

      /**
       * RANConfigurationUpdateIEs information objects
       */
      union {
         /**
          * id: id-RANNodeName
          * criticality: ignore
          * presence: optional
          */
         RANNodeName _RANConfigurationUpdateIEs_id_RANNodeName;
         /**
          * id: id-SupportedTAList
          * criticality: reject
          * presence: optional
          */
         SupportedTAList *_RANConfigurationUpdateIEs_id_SupportedTAList;
         /**
          * id: id-DefaultPagingDRX
          * criticality: ignore
          * presence: optional
          */
         PagingDRX _RANConfigurationUpdateIEs_id_DefaultPagingDRX;
         /**
          * id: id-GlobalRANNodeID
          * criticality: ignore
          * presence: optional
          */
         GlobalRANNodeID *_RANConfigurationUpdateIEs_id_GlobalRANNodeID;
         /**
          * id: id-NGRAN-TNLAssociationToRemoveList
          * criticality: reject
          * presence: optional
          */
         NGRAN_TNLAssociationToRemoveList *_RANConfigurationUpdateIEs_id_NGRAN_TNLAssociationToRemoveList;

         ASN1OpenType* extElem1;
      } u;
   } value;
} RANConfigurationUpdate_protocolIEs_element;

EXTERN int asn1PE_RANConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PD_RANConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Print_RANConfigurationUpdate_protocolIEs_element 
   (const char* name, const RANConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdate_protocolIEs_element (const char* name, 
   RANConfigurationUpdate_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_RANConfigurationUpdate_protocolIEs_element_RANConfigurationUpdateIEs_id_RANNodeName
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs_element* pElem, 
   RANNodeName value);

EXTERN void asn1SetTC_RANConfigurationUpdate_protocolIEs_element_RANConfigurationUpdateIEs_id_SupportedTAList
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs_element* pElem, 
   SupportedTAList *pvalue);

EXTERN void asn1SetTC_RANConfigurationUpdate_protocolIEs_element_RANConfigurationUpdateIEs_id_DefaultPagingDRX
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs_element* pElem, 
   PagingDRX value);

EXTERN void asn1SetTC_RANConfigurationUpdate_protocolIEs_element_RANConfigurationUpdateIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs_element* pElem, 
   GlobalRANNodeID *pvalue);

EXTERN void asn1SetTC_RANConfigurationUpdate_protocolIEs_element_RANConfigurationUpdateIEs_id_NGRAN_TNLAssociationToRemoveList
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs_element* pElem, 
   NGRAN_TNLAssociationToRemoveList *pvalue);

EXTERN int asn1Init_RANConfigurationUpdate_protocolIEs_element (
   RANConfigurationUpdate_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdate_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANConfigurationUpdate'
*/
/* List of RANConfigurationUpdate_protocolIEs_element */
typedef OSRTDList RANConfigurationUpdate_protocolIEs;

EXTERN int asn1PE_RANConfigurationUpdate_protocolIEs (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PD_RANConfigurationUpdate_protocolIEs (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs* pvalue);

EXTERN void asn1Print_RANConfigurationUpdate_protocolIEs 
   (const char* name, const RANConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdate_protocolIEs (const char* name, 
   RANConfigurationUpdate_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdate_protocolIEs (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdate_protocolIEs* pvalue);

/* Append IE with value type RANNodeName to list */
EXTERN int asn1Append_RANConfigurationUpdateIEs_id_RANNodeName
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs* plist, RANNodeName 
   value);

/* Append IE with value type SupportedTAList to list */
EXTERN int asn1Append_RANConfigurationUpdateIEs_id_SupportedTAList
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs* plist, SupportedTAList 
   *pvalue);

/* Append IE with value type PagingDRX to list */
EXTERN int asn1Append_RANConfigurationUpdateIEs_id_DefaultPagingDRX
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs* plist, PagingDRX value)
   ;

/* Append IE with value type GlobalRANNodeID to list */
struct GlobalRANNodeID ;
EXTERN int asn1Append_RANConfigurationUpdateIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs* plist, struct 
   GlobalRANNodeID *pvalue);

/* Append IE with value type NGRAN_TNLAssociationToRemoveList to list */
EXTERN int asn1Append_RANConfigurationUpdateIEs_id_NGRAN_TNLAssociationToRemoveList
   (OSCTXT* pctxt, RANConfigurationUpdate_protocolIEs* plist, 
   NGRAN_TNLAssociationToRemoveList *pvalue);

/* Get IE using id key value */
EXTERN struct RANConfigurationUpdate_protocolIEs_element* 
   asn1Get_RANConfigurationUpdate_protocolIEs (ProtocolIE_ID id, 
   RANConfigurationUpdate_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RANConfigurationUpdate_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   RANConfigurationUpdate_protocolIEs* plist, 
   RANConfigurationUpdate_protocolIEs* pmatches);

EXTERN int asn1Init_RANConfigurationUpdate_protocolIEs (
   RANConfigurationUpdate_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdate                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 RAN Configuration Update Elementary Procedure
 **************************************************************
 **************************************************************
 RAN CONFIGURATION UPDATE 
 **************************************************************
RANConfigurationUpdate ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({RANConfigurationUpdateIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({RANConfigurationUpdateIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({RANConfigurationUpdateIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN RANConfigurationUpdate {
   RANConfigurationUpdate_protocolIEs protocolIEs;
   OSRTDList extElem1;
} RANConfigurationUpdate;

EXTERN int asn1PE_RANConfigurationUpdate (OSCTXT* pctxt, RANConfigurationUpdate* pvalue);

EXTERN int asn1PD_RANConfigurationUpdate (OSCTXT* pctxt, RANConfigurationUpdate* pvalue);

EXTERN void asn1Print_RANConfigurationUpdate 
   (const char* name, const RANConfigurationUpdate* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdate (const char* name, 
   RANConfigurationUpdate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdate (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdate* pvalue);

EXTERN int asn1Init_RANConfigurationUpdate (RANConfigurationUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdateAcknowledge_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANConfigurationUpdateAcknowledge'
*/
typedef struct EXTERN RANConfigurationUpdateAcknowledge_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      RANConfigurationUpdateAcknowledgeIEs_TVALUE t;

      /**
       * RANConfigurationUpdateAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_RANConfigurationUpdateAcknowledgeIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} RANConfigurationUpdateAcknowledge_protocolIEs_element;

EXTERN int asn1PE_RANConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, RANConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_RANConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, RANConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_RANConfigurationUpdateAcknowledge_protocolIEs_element 
   (const char* name, const RANConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdateAcknowledge_protocolIEs_element (
   const char* name, 
   RANConfigurationUpdateAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1Init_RANConfigurationUpdateAcknowledge_protocolIEs_element (
   RANConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdateAcknowledge_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANConfigurationUpdateAcknowledge'
*/
/* List of RANConfigurationUpdateAcknowledge_protocolIEs_element */
typedef OSRTDList RANConfigurationUpdateAcknowledge_protocolIEs;

EXTERN int asn1PE_RANConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, RANConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_RANConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, RANConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_RANConfigurationUpdateAcknowledge_protocolIEs 
   (const char* name, const RANConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdateAcknowledge_protocolIEs (
   const char* name, RANConfigurationUpdateAcknowledge_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdateAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct RANConfigurationUpdateAcknowledge_protocolIEs_element* 
   asn1Get_RANConfigurationUpdateAcknowledge_protocolIEs (ProtocolIE_ID id, 
   RANConfigurationUpdateAcknowledge_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RANConfigurationUpdateAcknowledge_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   RANConfigurationUpdateAcknowledge_protocolIEs* plist, 
   RANConfigurationUpdateAcknowledge_protocolIEs* pmatches);

EXTERN int asn1Init_RANConfigurationUpdateAcknowledge_protocolIEs (
   RANConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdateAcknowledge                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 RAN CONFIGURATION UPDATE ACKNOWLEDGE
 **************************************************************
RANConfigurationUpdateAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({RANConfigurationUpdateAcknowledgeIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({RANConfigurationUpdateAcknowledgeIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({RANConfigurationUpdateAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN RANConfigurationUpdateAcknowledge {
   RANConfigurationUpdateAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} RANConfigurationUpdateAcknowledge;

EXTERN int asn1PE_RANConfigurationUpdateAcknowledge (OSCTXT* pctxt, RANConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PD_RANConfigurationUpdateAcknowledge (OSCTXT* pctxt, RANConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Print_RANConfigurationUpdateAcknowledge 
   (const char* name, const RANConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdateAcknowledge (const char* name, 
   RANConfigurationUpdateAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdateAcknowledge (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1Init_RANConfigurationUpdateAcknowledge (
   RANConfigurationUpdateAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdateFailure_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANConfigurationUpdateFailure'
*/
typedef struct EXTERN RANConfigurationUpdateFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      RANConfigurationUpdateFailureIEs_TVALUE t;

      /**
       * RANConfigurationUpdateFailureIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_RANConfigurationUpdateFailureIEs_id_Cause;
         /**
          * id: id-TimeToWait
          * criticality: ignore
          * presence: optional
          */
         TimeToWait _RANConfigurationUpdateFailureIEs_id_TimeToWait;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_RANConfigurationUpdateFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} RANConfigurationUpdateFailure_protocolIEs_element;

EXTERN int asn1PE_RANConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_RANConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_RANConfigurationUpdateFailure_protocolIEs_element 
   (const char* name, const RANConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdateFailure_protocolIEs_element (
   const char* name, 
   RANConfigurationUpdateFailure_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdateFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_RANConfigurationUpdateFailure_protocolIEs_element_RANConfigurationUpdateFailureIEs_id_Cause
   (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs_element* pElem, 
   Cause *pvalue);

EXTERN void asn1SetTC_RANConfigurationUpdateFailure_protocolIEs_element_RANConfigurationUpdateFailureIEs_id_TimeToWait
   (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs_element* pElem, 
   TimeToWait value);

EXTERN void asn1SetTC_RANConfigurationUpdateFailure_protocolIEs_element_RANConfigurationUpdateFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_RANConfigurationUpdateFailure_protocolIEs_element (
   RANConfigurationUpdateFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdateFailure_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANConfigurationUpdateFailure'
*/
/* List of RANConfigurationUpdateFailure_protocolIEs_element */
typedef OSRTDList RANConfigurationUpdateFailure_protocolIEs;

EXTERN int asn1PE_RANConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PD_RANConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN void asn1Print_RANConfigurationUpdateFailure_protocolIEs 
   (const char* name, const RANConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdateFailure_protocolIEs (const char* name, 
   RANConfigurationUpdateFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdateFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdateFailure_protocolIEs* pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_RANConfigurationUpdateFailureIEs_id_Cause
   (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs* plist, struct 
   Cause *pvalue);

/* Append IE with value type TimeToWait to list */
EXTERN int asn1Append_RANConfigurationUpdateFailureIEs_id_TimeToWait
   (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs* plist, 
   TimeToWait value);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_RANConfigurationUpdateFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, RANConfigurationUpdateFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct RANConfigurationUpdateFailure_protocolIEs_element* 
   asn1Get_RANConfigurationUpdateFailure_protocolIEs (ProtocolIE_ID id, 
   RANConfigurationUpdateFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RANConfigurationUpdateFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   RANConfigurationUpdateFailure_protocolIEs* plist, 
   RANConfigurationUpdateFailure_protocolIEs* pmatches);

EXTERN int asn1Init_RANConfigurationUpdateFailure_protocolIEs (
   RANConfigurationUpdateFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  RANConfigurationUpdateFailure                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 RAN CONFIGURATION UPDATE FAILURE
 **************************************************************
RANConfigurationUpdateFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({RANConfigurationUpdateFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({RANConfigurationUpdateFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({RANConfigurationUpdateFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN RANConfigurationUpdateFailure {
   RANConfigurationUpdateFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} RANConfigurationUpdateFailure;

EXTERN int asn1PE_RANConfigurationUpdateFailure (OSCTXT* pctxt, RANConfigurationUpdateFailure* pvalue);

EXTERN int asn1PD_RANConfigurationUpdateFailure (OSCTXT* pctxt, RANConfigurationUpdateFailure* pvalue);

EXTERN void asn1Print_RANConfigurationUpdateFailure 
   (const char* name, const RANConfigurationUpdateFailure* pvalue);

EXTERN int asn1PrtToStr_RANConfigurationUpdateFailure (const char* name, 
   RANConfigurationUpdateFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANConfigurationUpdateFailure (OSCTXT *pctxt, 
   const char* name, const RANConfigurationUpdateFailure* pvalue);

EXTERN int asn1Init_RANConfigurationUpdateFailure (
   RANConfigurationUpdateFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdate_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFConfigurationUpdate'
*/
typedef struct EXTERN AMFConfigurationUpdate_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      AMFConfigurationUpdateIEs_TVALUE t;

      /**
       * AMFConfigurationUpdateIEs information objects
       */
      union {
         /**
          * id: id-AMFName
          * criticality: reject
          * presence: optional
          */
         AMFName _AMFConfigurationUpdateIEs_id_AMFName;
         /**
          * id: id-ServedGUAMIList
          * criticality: reject
          * presence: optional
          */
         ServedGUAMIList *_AMFConfigurationUpdateIEs_id_ServedGUAMIList;
         /**
          * id: id-RelativeAMFCapacity
          * criticality: ignore
          * presence: optional
          */
         RelativeAMFCapacity _AMFConfigurationUpdateIEs_id_RelativeAMFCapacity;
         /**
          * id: id-PLMNSupportList
          * criticality: reject
          * presence: optional
          */
         PLMNSupportList *_AMFConfigurationUpdateIEs_id_PLMNSupportList;
         /**
          * id: id-AMF-TNLAssociationToAddList
          * criticality: ignore
          * presence: optional
          */
         AMF_TNLAssociationToAddList *_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToAddList;
         /**
          * id: id-AMF-TNLAssociationToRemoveList
          * criticality: ignore
          * presence: optional
          */
         AMF_TNLAssociationToRemoveList *_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToRemoveList;
         /**
          * id: id-AMF-TNLAssociationToUpdateList
          * criticality: ignore
          * presence: optional
          */
         AMF_TNLAssociationToUpdateList *_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToUpdateList;

         ASN1OpenType* extElem1;
      } u;
   } value;
} AMFConfigurationUpdate_protocolIEs_element;

EXTERN int asn1PE_AMFConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdate_protocolIEs_element (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdate_protocolIEs_element 
   (const char* name, const AMFConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdate_protocolIEs_element (const char* name, 
   AMFConfigurationUpdate_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdate_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdate_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdate_protocolIEs_element_AMFConfigurationUpdateIEs_id_AMFName
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pElem, AMFName 
   value);

EXTERN void asn1SetTC_AMFConfigurationUpdate_protocolIEs_element_AMFConfigurationUpdateIEs_id_ServedGUAMIList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pElem, 
   ServedGUAMIList *pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdate_protocolIEs_element_AMFConfigurationUpdateIEs_id_RelativeAMFCapacity
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pElem, 
   RelativeAMFCapacity value);

EXTERN void asn1SetTC_AMFConfigurationUpdate_protocolIEs_element_AMFConfigurationUpdateIEs_id_PLMNSupportList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pElem, 
   PLMNSupportList *pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdate_protocolIEs_element_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToAddList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pElem, 
   AMF_TNLAssociationToAddList *pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdate_protocolIEs_element_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToRemoveList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pElem, 
   AMF_TNLAssociationToRemoveList *pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdate_protocolIEs_element_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToUpdateList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs_element* pElem, 
   AMF_TNLAssociationToUpdateList *pvalue);

EXTERN int asn1Init_AMFConfigurationUpdate_protocolIEs_element (
   AMFConfigurationUpdate_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdate_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFConfigurationUpdate'
*/
/* List of AMFConfigurationUpdate_protocolIEs_element */
typedef OSRTDList AMFConfigurationUpdate_protocolIEs;

EXTERN int asn1PE_AMFConfigurationUpdate_protocolIEs (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdate_protocolIEs (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdate_protocolIEs 
   (const char* name, const AMFConfigurationUpdate_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdate_protocolIEs (const char* name, 
   AMFConfigurationUpdate_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdate_protocolIEs (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdate_protocolIEs* pvalue);

/* Append IE with value type AMFName to list */
EXTERN int asn1Append_AMFConfigurationUpdateIEs_id_AMFName
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* plist, AMFName value);

/* Append IE with value type ServedGUAMIList to list */
EXTERN int asn1Append_AMFConfigurationUpdateIEs_id_ServedGUAMIList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* plist, ServedGUAMIList 
   *pvalue);

/* Append IE with value type RelativeAMFCapacity to list */
EXTERN int asn1Append_AMFConfigurationUpdateIEs_id_RelativeAMFCapacity
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* plist, 
   RelativeAMFCapacity value);

/* Append IE with value type PLMNSupportList to list */
EXTERN int asn1Append_AMFConfigurationUpdateIEs_id_PLMNSupportList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* plist, PLMNSupportList 
   *pvalue);

/* Append IE with value type AMF_TNLAssociationToAddList to list */
EXTERN int asn1Append_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToAddList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* plist, 
   AMF_TNLAssociationToAddList *pvalue);

/* Append IE with value type AMF_TNLAssociationToRemoveList to list */
EXTERN int asn1Append_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToRemoveList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* plist, 
   AMF_TNLAssociationToRemoveList *pvalue);

/* Append IE with value type AMF_TNLAssociationToUpdateList to list */
EXTERN int asn1Append_AMFConfigurationUpdateIEs_id_AMF_TNLAssociationToUpdateList
   (OSCTXT* pctxt, AMFConfigurationUpdate_protocolIEs* plist, 
   AMF_TNLAssociationToUpdateList *pvalue);

/* Get IE using id key value */
EXTERN struct AMFConfigurationUpdate_protocolIEs_element* 
   asn1Get_AMFConfigurationUpdate_protocolIEs (ProtocolIE_ID id, 
   AMFConfigurationUpdate_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMFConfigurationUpdate_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   AMFConfigurationUpdate_protocolIEs* plist, 
   AMFConfigurationUpdate_protocolIEs* pmatches);

EXTERN int asn1Init_AMFConfigurationUpdate_protocolIEs (
   AMFConfigurationUpdate_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdate                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 AMF Configuration Update Elementary Procedure
 **************************************************************
 **************************************************************
 AMF CONFIGURATION UPDATE 
 **************************************************************
AMFConfigurationUpdate ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({AMFConfigurationUpdateIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({AMFConfigurationUpdateIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({AMFConfigurationUpdateIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN AMFConfigurationUpdate {
   AMFConfigurationUpdate_protocolIEs protocolIEs;
   OSRTDList extElem1;
} AMFConfigurationUpdate;

EXTERN int asn1PE_AMFConfigurationUpdate (OSCTXT* pctxt, AMFConfigurationUpdate* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdate (OSCTXT* pctxt, AMFConfigurationUpdate* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdate 
   (const char* name, const AMFConfigurationUpdate* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdate (const char* name, 
   AMFConfigurationUpdate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdate (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdate* pvalue);

EXTERN int asn1Init_AMFConfigurationUpdate (AMFConfigurationUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdateAcknowledge_protocolIEs_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFConfigurationUpdateAcknowledge'
*/
typedef struct EXTERN AMFConfigurationUpdateAcknowledge_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      AMFConfigurationUpdateAcknowledgeIEs_TVALUE t;

      /**
       * AMFConfigurationUpdateAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-AMF-TNLAssociationSetupList
          * criticality: ignore
          * presence: optional
          */
         AMF_TNLAssociationSetupList *_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationSetupList;
         /**
          * id: id-AMF-TNLAssociationFailedToSetupList
          * criticality: ignore
          * presence: optional
          */
         TNLAssociationList *_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationFailedToSetupList;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_AMFConfigurationUpdateAcknowledgeIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} AMFConfigurationUpdateAcknowledge_protocolIEs_element;

EXTERN int asn1PE_AMFConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdateAcknowledge_protocolIEs_element 
   (const char* name, const AMFConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdateAcknowledge_protocolIEs_element (
   const char* name, 
   AMFConfigurationUpdateAcknowledge_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdateAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdateAcknowledge_protocolIEs_element_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationSetupList
   (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs_element* pElem
   , AMF_TNLAssociationSetupList *pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdateAcknowledge_protocolIEs_element_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationFailedToSetupList
   (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs_element* pElem
   , TNLAssociationList *pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdateAcknowledge_protocolIEs_element_AMFConfigurationUpdateAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs_element* pElem
   , CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_AMFConfigurationUpdateAcknowledge_protocolIEs_element (
   AMFConfigurationUpdateAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdateAcknowledge_protocolIEs             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFConfigurationUpdateAcknowledge'
*/
/* List of AMFConfigurationUpdateAcknowledge_protocolIEs_element */
typedef OSRTDList AMFConfigurationUpdateAcknowledge_protocolIEs;

EXTERN int asn1PE_AMFConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdateAcknowledge_protocolIEs (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdateAcknowledge_protocolIEs 
   (const char* name, const AMFConfigurationUpdateAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdateAcknowledge_protocolIEs (
   const char* name, AMFConfigurationUpdateAcknowledge_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdateAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/* Append IE with value type AMF_TNLAssociationSetupList to list */
EXTERN int asn1Append_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationSetupList
   (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs* plist, 
   AMF_TNLAssociationSetupList *pvalue);

/* Append IE with value type TNLAssociationList to list */
EXTERN int asn1Append_AMFConfigurationUpdateAcknowledgeIEs_id_AMF_TNLAssociationFailedToSetupList
   (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs* plist, 
   TNLAssociationList *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_AMFConfigurationUpdateAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge_protocolIEs* plist, 
   struct CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct AMFConfigurationUpdateAcknowledge_protocolIEs_element* 
   asn1Get_AMFConfigurationUpdateAcknowledge_protocolIEs (ProtocolIE_ID id, 
   AMFConfigurationUpdateAcknowledge_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMFConfigurationUpdateAcknowledge_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   AMFConfigurationUpdateAcknowledge_protocolIEs* plist, 
   AMFConfigurationUpdateAcknowledge_protocolIEs* pmatches);

EXTERN int asn1Init_AMFConfigurationUpdateAcknowledge_protocolIEs (
   AMFConfigurationUpdateAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdateAcknowledge                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 AMF CONFIGURATION UPDATE ACKNOWLEDGE
 **************************************************************
AMFConfigurationUpdateAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({AMFConfigurationUpdateAcknowledgeIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({AMFConfigurationUpdateAcknowledgeIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({AMFConfigurationUpdateAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN AMFConfigurationUpdateAcknowledge {
   AMFConfigurationUpdateAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} AMFConfigurationUpdateAcknowledge;

EXTERN int asn1PE_AMFConfigurationUpdateAcknowledge (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdateAcknowledge (OSCTXT* pctxt, AMFConfigurationUpdateAcknowledge* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdateAcknowledge 
   (const char* name, const AMFConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdateAcknowledge (const char* name, 
   AMFConfigurationUpdateAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdateAcknowledge (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdateAcknowledge* pvalue);

EXTERN int asn1Init_AMFConfigurationUpdateAcknowledge (
   AMFConfigurationUpdateAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdateFailure_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFConfigurationUpdateFailure'
*/
typedef struct EXTERN AMFConfigurationUpdateFailure_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      AMFConfigurationUpdateFailureIEs_TVALUE t;

      /**
       * AMFConfigurationUpdateFailureIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_AMFConfigurationUpdateFailureIEs_id_Cause;
         /**
          * id: id-TimeToWait
          * criticality: ignore
          * presence: optional
          */
         TimeToWait _AMFConfigurationUpdateFailureIEs_id_TimeToWait;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_AMFConfigurationUpdateFailureIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} AMFConfigurationUpdateFailure_protocolIEs_element;

EXTERN int asn1PE_AMFConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdateFailure_protocolIEs_element (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdateFailure_protocolIEs_element 
   (const char* name, const AMFConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdateFailure_protocolIEs_element (
   const char* name, 
   AMFConfigurationUpdateFailure_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdateFailure_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdateFailure_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdateFailure_protocolIEs_element_AMFConfigurationUpdateFailureIEs_id_Cause
   (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs_element* pElem, 
   Cause *pvalue);

EXTERN void asn1SetTC_AMFConfigurationUpdateFailure_protocolIEs_element_AMFConfigurationUpdateFailureIEs_id_TimeToWait
   (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs_element* pElem, 
   TimeToWait value);

EXTERN void asn1SetTC_AMFConfigurationUpdateFailure_protocolIEs_element_AMFConfigurationUpdateFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_AMFConfigurationUpdateFailure_protocolIEs_element (
   AMFConfigurationUpdateFailure_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdateFailure_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFConfigurationUpdateFailure'
*/
/* List of AMFConfigurationUpdateFailure_protocolIEs_element */
typedef OSRTDList AMFConfigurationUpdateFailure_protocolIEs;

EXTERN int asn1PE_AMFConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdateFailure_protocolIEs (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdateFailure_protocolIEs 
   (const char* name, const AMFConfigurationUpdateFailure_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdateFailure_protocolIEs (const char* name, 
   AMFConfigurationUpdateFailure_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdateFailure_protocolIEs (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdateFailure_protocolIEs* pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_AMFConfigurationUpdateFailureIEs_id_Cause
   (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs* plist, struct 
   Cause *pvalue);

/* Append IE with value type TimeToWait to list */
EXTERN int asn1Append_AMFConfigurationUpdateFailureIEs_id_TimeToWait
   (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs* plist, 
   TimeToWait value);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_AMFConfigurationUpdateFailureIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, AMFConfigurationUpdateFailure_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct AMFConfigurationUpdateFailure_protocolIEs_element* 
   asn1Get_AMFConfigurationUpdateFailure_protocolIEs (ProtocolIE_ID id, 
   AMFConfigurationUpdateFailure_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMFConfigurationUpdateFailure_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   AMFConfigurationUpdateFailure_protocolIEs* plist, 
   AMFConfigurationUpdateFailure_protocolIEs* pmatches);

EXTERN int asn1Init_AMFConfigurationUpdateFailure_protocolIEs (
   AMFConfigurationUpdateFailure_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFConfigurationUpdateFailure                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 AMF CONFIGURATION UPDATE FAILURE
 **************************************************************
AMFConfigurationUpdateFailure ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({AMFConfigurationUpdateFailureIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({AMFConfigurationUpdateFailureIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({AMFConfigurationUpdateFailureIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN AMFConfigurationUpdateFailure {
   AMFConfigurationUpdateFailure_protocolIEs protocolIEs;
   OSRTDList extElem1;
} AMFConfigurationUpdateFailure;

EXTERN int asn1PE_AMFConfigurationUpdateFailure (OSCTXT* pctxt, AMFConfigurationUpdateFailure* pvalue);

EXTERN int asn1PD_AMFConfigurationUpdateFailure (OSCTXT* pctxt, AMFConfigurationUpdateFailure* pvalue);

EXTERN void asn1Print_AMFConfigurationUpdateFailure 
   (const char* name, const AMFConfigurationUpdateFailure* pvalue);

EXTERN int asn1PrtToStr_AMFConfigurationUpdateFailure (const char* name, 
   AMFConfigurationUpdateFailure* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFConfigurationUpdateFailure (OSCTXT *pctxt, 
   const char* name, const AMFConfigurationUpdateFailure* pvalue);

EXTERN int asn1Init_AMFConfigurationUpdateFailure (
   AMFConfigurationUpdateFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFStatusIndication_protocolIEs_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFStatusIndication'
*/
typedef struct EXTERN AMFStatusIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      AMFStatusIndicationIEs_TVALUE t;

      /**
       * AMFStatusIndicationIEs information objects
       */
      union {
         /**
          * id: id-UnavailableGUAMIList
          * criticality: reject
          * presence: mandatory
          */
         UnavailableGUAMIList *_AMFStatusIndicationIEs_id_UnavailableGUAMIList;

         ASN1OpenType* extElem1;
      } u;
   } value;
} AMFStatusIndication_protocolIEs_element;

EXTERN int asn1PE_AMFStatusIndication_protocolIEs_element (OSCTXT* pctxt, AMFStatusIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_AMFStatusIndication_protocolIEs_element (OSCTXT* pctxt, AMFStatusIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_AMFStatusIndication_protocolIEs_element 
   (const char* name, const AMFStatusIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_AMFStatusIndication_protocolIEs_element (const char* name, 
   AMFStatusIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFStatusIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const AMFStatusIndication_protocolIEs_element* pvalue);

EXTERN int asn1Init_AMFStatusIndication_protocolIEs_element (
   AMFStatusIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFStatusIndication_protocolIEs                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFStatusIndication'
*/
/* List of AMFStatusIndication_protocolIEs_element */
typedef OSRTDList AMFStatusIndication_protocolIEs;

EXTERN int asn1PE_AMFStatusIndication_protocolIEs (OSCTXT* pctxt, AMFStatusIndication_protocolIEs* pvalue);

EXTERN int asn1PD_AMFStatusIndication_protocolIEs (OSCTXT* pctxt, AMFStatusIndication_protocolIEs* pvalue);

EXTERN void asn1Print_AMFStatusIndication_protocolIEs 
   (const char* name, const AMFStatusIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_AMFStatusIndication_protocolIEs (const char* name, 
   AMFStatusIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFStatusIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const AMFStatusIndication_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct AMFStatusIndication_protocolIEs_element* 
   asn1Get_AMFStatusIndication_protocolIEs (ProtocolIE_ID id, 
   AMFStatusIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMFStatusIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, AMFStatusIndication_protocolIEs* plist, 
   AMFStatusIndication_protocolIEs* pmatches);

EXTERN int asn1Init_AMFStatusIndication_protocolIEs (
   AMFStatusIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFStatusIndication                                       */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 AMF Status Indication Elementary Procedure
 **************************************************************
 **************************************************************
 AMF STATUS INDICATION
 **************************************************************
AMFStatusIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({AMFStatusIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({AMFStatusIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({AMFStatusIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN AMFStatusIndication {
   AMFStatusIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} AMFStatusIndication;

EXTERN int asn1PE_AMFStatusIndication (OSCTXT* pctxt, AMFStatusIndication* pvalue);

EXTERN int asn1PD_AMFStatusIndication (OSCTXT* pctxt, AMFStatusIndication* pvalue);

EXTERN void asn1Print_AMFStatusIndication 
   (const char* name, const AMFStatusIndication* pvalue);

EXTERN int asn1PrtToStr_AMFStatusIndication (const char* name, 
   AMFStatusIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFStatusIndication (OSCTXT *pctxt, 
   const char* name, const AMFStatusIndication* pvalue);

EXTERN int asn1Init_AMFStatusIndication (AMFStatusIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  NGReset_protocolIEs_element                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGReset'
*/
typedef struct EXTERN NGReset_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGResetIEs_TVALUE t;

      /**
       * NGResetIEs information objects
       */
      union {
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_NGResetIEs_id_Cause;
         /**
          * id: id-ResetType
          * criticality: reject
          * presence: mandatory
          */
         ResetType *_NGResetIEs_id_ResetType;

         ASN1OpenType* extElem1;
      } u;
   } value;
} NGReset_protocolIEs_element;

EXTERN int asn1PE_NGReset_protocolIEs_element (OSCTXT* pctxt, NGReset_protocolIEs_element* pvalue);

EXTERN int asn1PD_NGReset_protocolIEs_element (OSCTXT* pctxt, NGReset_protocolIEs_element* pvalue);

EXTERN void asn1Print_NGReset_protocolIEs_element 
   (const char* name, const NGReset_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_NGReset_protocolIEs_element (const char* name, 
   NGReset_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGReset_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const NGReset_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_NGReset_protocolIEs_element_NGResetIEs_id_Cause
   (OSCTXT* pctxt, NGReset_protocolIEs_element* pElem, Cause *pvalue);

EXTERN void asn1SetTC_NGReset_protocolIEs_element_NGResetIEs_id_ResetType
   (OSCTXT* pctxt, NGReset_protocolIEs_element* pElem, ResetType *pvalue);

EXTERN int asn1Init_NGReset_protocolIEs_element (NGReset_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NGReset_protocolIEs                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGReset'
*/
/* List of NGReset_protocolIEs_element */
typedef OSRTDList NGReset_protocolIEs;

EXTERN int asn1PE_NGReset_protocolIEs (OSCTXT* pctxt, NGReset_protocolIEs* pvalue);

EXTERN int asn1PD_NGReset_protocolIEs (OSCTXT* pctxt, NGReset_protocolIEs* pvalue);

EXTERN void asn1Print_NGReset_protocolIEs 
   (const char* name, const NGReset_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_NGReset_protocolIEs (const char* name, 
   NGReset_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGReset_protocolIEs (OSCTXT *pctxt, 
   const char* name, const NGReset_protocolIEs* pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_NGResetIEs_id_Cause
   (OSCTXT* pctxt, NGReset_protocolIEs* plist, struct Cause *pvalue);

/* Append IE with value type ResetType to list */
struct ResetType ;
EXTERN int asn1Append_NGResetIEs_id_ResetType
   (OSCTXT* pctxt, NGReset_protocolIEs* plist, struct ResetType *pvalue);

/* Get IE using id key value */
EXTERN struct NGReset_protocolIEs_element* asn1Get_NGReset_protocolIEs 
   (ProtocolIE_ID id, NGReset_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NGReset_protocolIEs (OSCTXT* pctxt, ProtocolIE_ID id, 
   NGReset_protocolIEs* plist, NGReset_protocolIEs* pmatches);

EXTERN int asn1Init_NGReset_protocolIEs (NGReset_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NGReset                                                   */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 NG Reset Elementary Procedure
 **************************************************************
 **************************************************************
 NG RESET
 **************************************************************
NGReset ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NGResetIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NGResetIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NGResetIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN NGReset {
   NGReset_protocolIEs protocolIEs;
   OSRTDList extElem1;
} NGReset;

EXTERN int asn1PE_NGReset (OSCTXT* pctxt, NGReset* pvalue);

EXTERN int asn1PD_NGReset (OSCTXT* pctxt, NGReset* pvalue);

EXTERN void asn1Print_NGReset (const char* name, const NGReset* pvalue);

EXTERN int asn1PrtToStr_NGReset (const char* name, NGReset* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGReset (OSCTXT *pctxt, 
   const char* name, const NGReset* pvalue);

EXTERN int asn1Init_NGReset (NGReset* pvalue);

/**************************************************************/
/*                                                            */
/*  NGResetAcknowledge_protocolIEs_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGResetAcknowledge'
*/
typedef struct EXTERN NGResetAcknowledge_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGResetAcknowledgeIEs_TVALUE t;

      /**
       * NGResetAcknowledgeIEs information objects
       */
      union {
         /**
          * id: id-UE-associatedLogicalNG-connectionList
          * criticality: ignore
          * presence: optional
          */
         UE_associatedLogicalNG_connectionList *_NGResetAcknowledgeIEs_id_UE_associatedLogicalNG_connectionList;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_NGResetAcknowledgeIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} NGResetAcknowledge_protocolIEs_element;

EXTERN int asn1PE_NGResetAcknowledge_protocolIEs_element (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PD_NGResetAcknowledge_protocolIEs_element (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1Print_NGResetAcknowledge_protocolIEs_element 
   (const char* name, const NGResetAcknowledge_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_NGResetAcknowledge_protocolIEs_element (const char* name, 
   NGResetAcknowledge_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGResetAcknowledge_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const NGResetAcknowledge_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_NGResetAcknowledge_protocolIEs_element_NGResetAcknowledgeIEs_id_UE_associatedLogicalNG_connectionList
   (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs_element* pElem, 
   UE_associatedLogicalNG_connectionList *pvalue);

EXTERN void asn1SetTC_NGResetAcknowledge_protocolIEs_element_NGResetAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_NGResetAcknowledge_protocolIEs_element (
   NGResetAcknowledge_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NGResetAcknowledge_protocolIEs                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGResetAcknowledge'
*/
/* List of NGResetAcknowledge_protocolIEs_element */
typedef OSRTDList NGResetAcknowledge_protocolIEs;

EXTERN int asn1PE_NGResetAcknowledge_protocolIEs (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PD_NGResetAcknowledge_protocolIEs (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs* pvalue);

EXTERN void asn1Print_NGResetAcknowledge_protocolIEs 
   (const char* name, const NGResetAcknowledge_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_NGResetAcknowledge_protocolIEs (const char* name, 
   NGResetAcknowledge_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGResetAcknowledge_protocolIEs (OSCTXT *pctxt, 
   const char* name, const NGResetAcknowledge_protocolIEs* pvalue);

/* Append IE with value type UE_associatedLogicalNG_connectionList to list */
EXTERN int asn1Append_NGResetAcknowledgeIEs_id_UE_associatedLogicalNG_connectionList
   (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs* plist, 
   UE_associatedLogicalNG_connectionList *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_NGResetAcknowledgeIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, NGResetAcknowledge_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct NGResetAcknowledge_protocolIEs_element* 
   asn1Get_NGResetAcknowledge_protocolIEs (ProtocolIE_ID id, 
   NGResetAcknowledge_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NGResetAcknowledge_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, NGResetAcknowledge_protocolIEs* plist, 
   NGResetAcknowledge_protocolIEs* pmatches);

EXTERN int asn1Init_NGResetAcknowledge_protocolIEs (
   NGResetAcknowledge_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  NGResetAcknowledge                                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 NG RESET ACKNOWLEDGE
 **************************************************************
NGResetAcknowledge ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NGResetAcknowledgeIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NGResetAcknowledgeIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NGResetAcknowledgeIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN NGResetAcknowledge {
   NGResetAcknowledge_protocolIEs protocolIEs;
   OSRTDList extElem1;
} NGResetAcknowledge;

EXTERN int asn1PE_NGResetAcknowledge (OSCTXT* pctxt, NGResetAcknowledge* pvalue);

EXTERN int asn1PD_NGResetAcknowledge (OSCTXT* pctxt, NGResetAcknowledge* pvalue);

EXTERN void asn1Print_NGResetAcknowledge 
   (const char* name, const NGResetAcknowledge* pvalue);

EXTERN int asn1PrtToStr_NGResetAcknowledge (const char* name, 
   NGResetAcknowledge* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGResetAcknowledge (OSCTXT *pctxt, 
   const char* name, const NGResetAcknowledge* pvalue);

EXTERN int asn1Init_NGResetAcknowledge (NGResetAcknowledge* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ErrorIndication'
*/
typedef struct EXTERN ErrorIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      ErrorIndicationIEs_TVALUE t;

      /**
       * ErrorIndicationIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: optional
          */
         AMF_UE_NGAP_ID _ErrorIndicationIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: optional
          */
         RAN_UE_NGAP_ID _ErrorIndicationIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: optional
          */
         Cause *_ErrorIndicationIEs_id_Cause;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_ErrorIndicationIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} ErrorIndication_protocolIEs_element;

EXTERN int asn1PE_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, ErrorIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_ErrorIndication_protocolIEs_element (OSCTXT* pctxt, ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_ErrorIndication_protocolIEs_element 
   (const char* name, const ErrorIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_ErrorIndication_protocolIEs_element (const char* name, 
   ErrorIndication_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ErrorIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const ErrorIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, ErrorIndication_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, ErrorIndication_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_id_Cause
   (OSCTXT* pctxt, ErrorIndication_protocolIEs_element* pElem, Cause *pvalue);

EXTERN void asn1SetTC_ErrorIndication_protocolIEs_element_ErrorIndicationIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, ErrorIndication_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_ErrorIndication_protocolIEs_element (
   ErrorIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ErrorIndication'
*/
/* List of ErrorIndication_protocolIEs_element */
typedef OSRTDList ErrorIndication_protocolIEs;

EXTERN int asn1PE_ErrorIndication_protocolIEs (OSCTXT* pctxt, ErrorIndication_protocolIEs* pvalue);

EXTERN int asn1PD_ErrorIndication_protocolIEs (OSCTXT* pctxt, ErrorIndication_protocolIEs* pvalue);

EXTERN void asn1Print_ErrorIndication_protocolIEs 
   (const char* name, const ErrorIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_ErrorIndication_protocolIEs (const char* name, 
   ErrorIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ErrorIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const ErrorIndication_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_ErrorIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, ErrorIndication_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_ErrorIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, ErrorIndication_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_ErrorIndicationIEs_id_Cause
   (OSCTXT* pctxt, ErrorIndication_protocolIEs* plist, struct Cause *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_ErrorIndicationIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, ErrorIndication_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct ErrorIndication_protocolIEs_element* 
   asn1Get_ErrorIndication_protocolIEs (ProtocolIE_ID id, 
   ErrorIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_ErrorIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, ErrorIndication_protocolIEs* plist, 
   ErrorIndication_protocolIEs* pmatches);

EXTERN int asn1Init_ErrorIndication_protocolIEs (ErrorIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  ErrorIndication                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Error Indication Elementary Procedure
 **************************************************************
 **************************************************************
 ERROR INDICATION
 **************************************************************
ErrorIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({ErrorIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({ErrorIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({ErrorIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN ErrorIndication {
   ErrorIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} ErrorIndication;

EXTERN int asn1PE_ErrorIndication (OSCTXT* pctxt, ErrorIndication* pvalue);

EXTERN int asn1PD_ErrorIndication (OSCTXT* pctxt, ErrorIndication* pvalue);

EXTERN void asn1Print_ErrorIndication 
   (const char* name, const ErrorIndication* pvalue);

EXTERN int asn1PrtToStr_ErrorIndication (const char* name, ErrorIndication* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ErrorIndication (OSCTXT *pctxt, 
   const char* name, const ErrorIndication* pvalue);

EXTERN int asn1Init_ErrorIndication (ErrorIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStart_protocolIEs_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStart'
*/
typedef struct EXTERN OverloadStart_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      OverloadStartIEs_TVALUE t;

      /**
       * OverloadStartIEs information objects
       */
      union {
         /**
          * id: id-AMFOverloadResponse
          * criticality: reject
          * presence: optional
          */
         OverloadResponse *_OverloadStartIEs_id_AMFOverloadResponse;
         /**
          * id: id-AMFTrafficLoadReductionIndication
          * criticality: ignore
          * presence: optional
          */
         TrafficLoadReductionIndication _OverloadStartIEs_id_AMFTrafficLoadReductionIndication;
         /**
          * id: id-OverloadStartNSSAIList
          * criticality: ignore
          * presence: optional
          */
         OverloadStartNSSAIList *_OverloadStartIEs_id_OverloadStartNSSAIList;

         ASN1OpenType* extElem1;
      } u;
   } value;
} OverloadStart_protocolIEs_element;

EXTERN int asn1PE_OverloadStart_protocolIEs_element (OSCTXT* pctxt, OverloadStart_protocolIEs_element* pvalue);

EXTERN int asn1PD_OverloadStart_protocolIEs_element (OSCTXT* pctxt, OverloadStart_protocolIEs_element* pvalue);

EXTERN void asn1Print_OverloadStart_protocolIEs_element 
   (const char* name, const OverloadStart_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_OverloadStart_protocolIEs_element (const char* name, 
   OverloadStart_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStart_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const OverloadStart_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_OverloadStart_protocolIEs_element_OverloadStartIEs_id_AMFOverloadResponse
   (OSCTXT* pctxt, OverloadStart_protocolIEs_element* pElem, OverloadResponse 
   *pvalue);

EXTERN void asn1SetTC_OverloadStart_protocolIEs_element_OverloadStartIEs_id_AMFTrafficLoadReductionIndication
   (OSCTXT* pctxt, OverloadStart_protocolIEs_element* pElem, 
   TrafficLoadReductionIndication value);

EXTERN void asn1SetTC_OverloadStart_protocolIEs_element_OverloadStartIEs_id_OverloadStartNSSAIList
   (OSCTXT* pctxt, OverloadStart_protocolIEs_element* pElem, 
   OverloadStartNSSAIList *pvalue);

EXTERN int asn1Init_OverloadStart_protocolIEs_element (
   OverloadStart_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStart_protocolIEs                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStart'
*/
/* List of OverloadStart_protocolIEs_element */
typedef OSRTDList OverloadStart_protocolIEs;

EXTERN int asn1PE_OverloadStart_protocolIEs (OSCTXT* pctxt, OverloadStart_protocolIEs* pvalue);

EXTERN int asn1PD_OverloadStart_protocolIEs (OSCTXT* pctxt, OverloadStart_protocolIEs* pvalue);

EXTERN void asn1Print_OverloadStart_protocolIEs 
   (const char* name, const OverloadStart_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_OverloadStart_protocolIEs (const char* name, 
   OverloadStart_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStart_protocolIEs (OSCTXT *pctxt, 
   const char* name, const OverloadStart_protocolIEs* pvalue);

/* Append IE with value type OverloadResponse to list */
struct OverloadResponse ;
EXTERN int asn1Append_OverloadStartIEs_id_AMFOverloadResponse
   (OSCTXT* pctxt, OverloadStart_protocolIEs* plist, struct OverloadResponse 
   *pvalue);

/* Append IE with value type TrafficLoadReductionIndication to list */
EXTERN int asn1Append_OverloadStartIEs_id_AMFTrafficLoadReductionIndication
   (OSCTXT* pctxt, OverloadStart_protocolIEs* plist, 
   TrafficLoadReductionIndication value);

/* Append IE with value type OverloadStartNSSAIList to list */
EXTERN int asn1Append_OverloadStartIEs_id_OverloadStartNSSAIList
   (OSCTXT* pctxt, OverloadStart_protocolIEs* plist, OverloadStartNSSAIList 
   *pvalue);

/* Get IE using id key value */
EXTERN struct OverloadStart_protocolIEs_element* 
   asn1Get_OverloadStart_protocolIEs (ProtocolIE_ID id, 
   OverloadStart_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_OverloadStart_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, OverloadStart_protocolIEs* plist, 
   OverloadStart_protocolIEs* pmatches);

EXTERN int asn1Init_OverloadStart_protocolIEs (OverloadStart_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStart                                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 OVERLOAD START
 **************************************************************
OverloadStart ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({OverloadStartIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({OverloadStartIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({OverloadStartIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN OverloadStart {
   OverloadStart_protocolIEs protocolIEs;
   OSRTDList extElem1;
} OverloadStart;

EXTERN int asn1PE_OverloadStart (OSCTXT* pctxt, OverloadStart* pvalue);

EXTERN int asn1PD_OverloadStart (OSCTXT* pctxt, OverloadStart* pvalue);

EXTERN void asn1Print_OverloadStart (const char* name, const OverloadStart* pvalue);

EXTERN int asn1PrtToStr_OverloadStart (const char* name, OverloadStart* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStart (OSCTXT *pctxt, 
   const char* name, const OverloadStart* pvalue);

EXTERN int asn1Init_OverloadStart (OverloadStart* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStop_protocolIEs_element                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStop'
*/
typedef struct EXTERN OverloadStop_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} OverloadStop_protocolIEs_element;

EXTERN int asn1PE_OverloadStop_protocolIEs_element (OSCTXT* pctxt, OverloadStop_protocolIEs_element* pvalue);

EXTERN int asn1PD_OverloadStop_protocolIEs_element (OSCTXT* pctxt, OverloadStop_protocolIEs_element* pvalue);

EXTERN void asn1Print_OverloadStop_protocolIEs_element 
   (const char* name, const OverloadStop_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_OverloadStop_protocolIEs_element (const char* name, 
   OverloadStop_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStop_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const OverloadStop_protocolIEs_element* pvalue);

EXTERN int asn1Init_OverloadStop_protocolIEs_element (
   OverloadStop_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStop_protocolIEs                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStop'
*/
/* List of OverloadStop_protocolIEs_element */
typedef OSRTDList OverloadStop_protocolIEs;

EXTERN int asn1PE_OverloadStop_protocolIEs (OSCTXT* pctxt, OverloadStop_protocolIEs* pvalue);

EXTERN int asn1PD_OverloadStop_protocolIEs (OSCTXT* pctxt, OverloadStop_protocolIEs* pvalue);

EXTERN void asn1Print_OverloadStop_protocolIEs 
   (const char* name, const OverloadStop_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_OverloadStop_protocolIEs (const char* name, 
   OverloadStop_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStop_protocolIEs (OSCTXT *pctxt, 
   const char* name, const OverloadStop_protocolIEs* pvalue);

/* Get IE using id key value */
EXTERN struct OverloadStop_protocolIEs_element* 
   asn1Get_OverloadStop_protocolIEs (ProtocolIE_ID id, 
   OverloadStop_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_OverloadStop_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, OverloadStop_protocolIEs* plist, 
   OverloadStop_protocolIEs* pmatches);

EXTERN int asn1Init_OverloadStop_protocolIEs (OverloadStop_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStop                                              */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 OVERLOAD STOP
 **************************************************************
OverloadStop ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({OverloadStopIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({OverloadStopIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({OverloadStopIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN OverloadStop {
   OverloadStop_protocolIEs protocolIEs;
   OSRTDList extElem1;
} OverloadStop;

EXTERN int asn1PE_OverloadStop (OSCTXT* pctxt, OverloadStop* pvalue);

EXTERN int asn1PD_OverloadStop (OSCTXT* pctxt, OverloadStop* pvalue);

EXTERN void asn1Print_OverloadStop (const char* name, const OverloadStop* pvalue);

EXTERN int asn1PrtToStr_OverloadStop (const char* name, OverloadStop* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStop (OSCTXT *pctxt, 
   const char* name, const OverloadStop* pvalue);

EXTERN int asn1Init_OverloadStop (OverloadStop* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkRANConfigurationTransfer_protocolIEs_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkRANConfigurationTransfer'
*/
typedef struct EXTERN UplinkRANConfigurationTransfer_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UplinkRANConfigurationTransferIEs_TVALUE t;

      /**
       * UplinkRANConfigurationTransferIEs information objects
       */
      union {
         /**
          * id: id-SONConfigurationTransferUL
          * criticality: ignore
          * presence: optional
          */
         SONConfigurationTransfer *_UplinkRANConfigurationTransferIEs_id_SONConfigurationTransferUL;
         /**
          * id: id-ENDC-SONConfigurationTransferUL
          * criticality: ignore
          * presence: optional
          */
         EN_DCSONConfigurationTransfer *_UplinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferUL;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UplinkRANConfigurationTransfer_protocolIEs_element;

EXTERN int asn1PE_UplinkRANConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_UplinkRANConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_UplinkRANConfigurationTransfer_protocolIEs_element 
   (const char* name, const UplinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UplinkRANConfigurationTransfer_protocolIEs_element (
   const char* name, 
   UplinkRANConfigurationTransfer_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkRANConfigurationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UplinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UplinkRANConfigurationTransfer_protocolIEs_element_UplinkRANConfigurationTransferIEs_id_SONConfigurationTransferUL
   (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs_element* pElem, 
   SONConfigurationTransfer *pvalue);

EXTERN void asn1SetTC_UplinkRANConfigurationTransfer_protocolIEs_element_UplinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferUL
   (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs_element* pElem, 
   EN_DCSONConfigurationTransfer *pvalue);

EXTERN int asn1Init_UplinkRANConfigurationTransfer_protocolIEs_element (
   UplinkRANConfigurationTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkRANConfigurationTransfer_protocolIEs                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkRANConfigurationTransfer'
*/
/* List of UplinkRANConfigurationTransfer_protocolIEs_element */
typedef OSRTDList UplinkRANConfigurationTransfer_protocolIEs;

EXTERN int asn1PE_UplinkRANConfigurationTransfer_protocolIEs (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_UplinkRANConfigurationTransfer_protocolIEs (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_UplinkRANConfigurationTransfer_protocolIEs 
   (const char* name, const UplinkRANConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UplinkRANConfigurationTransfer_protocolIEs (const char* name, 
   UplinkRANConfigurationTransfer_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkRANConfigurationTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UplinkRANConfigurationTransfer_protocolIEs* pvalue);

/* Append IE with value type SONConfigurationTransfer to list */
struct SONConfigurationTransfer ;
EXTERN int asn1Append_UplinkRANConfigurationTransferIEs_id_SONConfigurationTransferUL
   (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs* plist, struct 
   SONConfigurationTransfer *pvalue);

/* Append IE with value type EN_DCSONConfigurationTransfer to list */
EXTERN int asn1Append_UplinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferUL
   (OSCTXT* pctxt, UplinkRANConfigurationTransfer_protocolIEs* plist, 
   EN_DCSONConfigurationTransfer *pvalue);

/* Get IE using id key value */
EXTERN struct UplinkRANConfigurationTransfer_protocolIEs_element* 
   asn1Get_UplinkRANConfigurationTransfer_protocolIEs (ProtocolIE_ID id, 
   UplinkRANConfigurationTransfer_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UplinkRANConfigurationTransfer_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UplinkRANConfigurationTransfer_protocolIEs* plist, 
   UplinkRANConfigurationTransfer_protocolIEs* pmatches);

EXTERN int asn1Init_UplinkRANConfigurationTransfer_protocolIEs (
   UplinkRANConfigurationTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkRANConfigurationTransfer                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 CONFIGURATION TRANSFER ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 UPLINK RAN CONFIGURATION TRANSFER
 **************************************************************
UplinkRANConfigurationTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UplinkRANConfigurationTransferIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UplinkRANConfigurationTransferIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UplinkRANConfigurationTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UplinkRANConfigurationTransfer {
   UplinkRANConfigurationTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UplinkRANConfigurationTransfer;

EXTERN int asn1PE_UplinkRANConfigurationTransfer (OSCTXT* pctxt, UplinkRANConfigurationTransfer* pvalue);

EXTERN int asn1PD_UplinkRANConfigurationTransfer (OSCTXT* pctxt, UplinkRANConfigurationTransfer* pvalue);

EXTERN void asn1Print_UplinkRANConfigurationTransfer 
   (const char* name, const UplinkRANConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_UplinkRANConfigurationTransfer (const char* name, 
   UplinkRANConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkRANConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const UplinkRANConfigurationTransfer* pvalue);

EXTERN int asn1Init_UplinkRANConfigurationTransfer (
   UplinkRANConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkRANConfigurationTransfer_protocolIEs_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkRANConfigurationTransfer'
*/
typedef struct EXTERN DownlinkRANConfigurationTransfer_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      DownlinkRANConfigurationTransferIEs_TVALUE t;

      /**
       * DownlinkRANConfigurationTransferIEs information objects
       */
      union {
         /**
          * id: id-SONConfigurationTransferDL
          * criticality: ignore
          * presence: optional
          */
         SONConfigurationTransfer *_DownlinkRANConfigurationTransferIEs_id_SONConfigurationTransferDL;
         /**
          * id: id-ENDC-SONConfigurationTransferDL
          * criticality: ignore
          * presence: optional
          */
         EN_DCSONConfigurationTransfer *_DownlinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferDL;

         ASN1OpenType* extElem1;
      } u;
   } value;
} DownlinkRANConfigurationTransfer_protocolIEs_element;

EXTERN int asn1PE_DownlinkRANConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_DownlinkRANConfigurationTransfer_protocolIEs_element (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_DownlinkRANConfigurationTransfer_protocolIEs_element 
   (const char* name, const DownlinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_DownlinkRANConfigurationTransfer_protocolIEs_element (
   const char* name, 
   DownlinkRANConfigurationTransfer_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkRANConfigurationTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const DownlinkRANConfigurationTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_DownlinkRANConfigurationTransfer_protocolIEs_element_DownlinkRANConfigurationTransferIEs_id_SONConfigurationTransferDL
   (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs_element* pElem
   , SONConfigurationTransfer *pvalue);

EXTERN void asn1SetTC_DownlinkRANConfigurationTransfer_protocolIEs_element_DownlinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferDL
   (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs_element* pElem
   , EN_DCSONConfigurationTransfer *pvalue);

EXTERN int asn1Init_DownlinkRANConfigurationTransfer_protocolIEs_element (
   DownlinkRANConfigurationTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkRANConfigurationTransfer_protocolIEs              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkRANConfigurationTransfer'
*/
/* List of DownlinkRANConfigurationTransfer_protocolIEs_element */
typedef OSRTDList DownlinkRANConfigurationTransfer_protocolIEs;

EXTERN int asn1PE_DownlinkRANConfigurationTransfer_protocolIEs (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_DownlinkRANConfigurationTransfer_protocolIEs (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_DownlinkRANConfigurationTransfer_protocolIEs 
   (const char* name, const DownlinkRANConfigurationTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_DownlinkRANConfigurationTransfer_protocolIEs (
   const char* name, DownlinkRANConfigurationTransfer_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkRANConfigurationTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const DownlinkRANConfigurationTransfer_protocolIEs* pvalue);

/* Append IE with value type SONConfigurationTransfer to list */
struct SONConfigurationTransfer ;
EXTERN int asn1Append_DownlinkRANConfigurationTransferIEs_id_SONConfigurationTransferDL
   (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs* plist, struct 
   SONConfigurationTransfer *pvalue);

/* Append IE with value type EN_DCSONConfigurationTransfer to list */
EXTERN int asn1Append_DownlinkRANConfigurationTransferIEs_id_ENDC_SONConfigurationTransferDL
   (OSCTXT* pctxt, DownlinkRANConfigurationTransfer_protocolIEs* plist, 
   EN_DCSONConfigurationTransfer *pvalue);

/* Get IE using id key value */
EXTERN struct DownlinkRANConfigurationTransfer_protocolIEs_element* 
   asn1Get_DownlinkRANConfigurationTransfer_protocolIEs (ProtocolIE_ID id, 
   DownlinkRANConfigurationTransfer_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DownlinkRANConfigurationTransfer_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   DownlinkRANConfigurationTransfer_protocolIEs* plist, 
   DownlinkRANConfigurationTransfer_protocolIEs* pmatches);

EXTERN int asn1Init_DownlinkRANConfigurationTransfer_protocolIEs (
   DownlinkRANConfigurationTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkRANConfigurationTransfer                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 DOWNLINK RAN CONFIGURATION TRANSFER
 **************************************************************
DownlinkRANConfigurationTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DownlinkRANConfigurationTransferIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DownlinkRANConfigurationTransferIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DownlinkRANConfigurationTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN DownlinkRANConfigurationTransfer {
   DownlinkRANConfigurationTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} DownlinkRANConfigurationTransfer;

EXTERN int asn1PE_DownlinkRANConfigurationTransfer (OSCTXT* pctxt, DownlinkRANConfigurationTransfer* pvalue);

EXTERN int asn1PD_DownlinkRANConfigurationTransfer (OSCTXT* pctxt, DownlinkRANConfigurationTransfer* pvalue);

EXTERN void asn1Print_DownlinkRANConfigurationTransfer 
   (const char* name, const DownlinkRANConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_DownlinkRANConfigurationTransfer (const char* name, 
   DownlinkRANConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkRANConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const DownlinkRANConfigurationTransfer* pvalue);

EXTERN int asn1Init_DownlinkRANConfigurationTransfer (
   DownlinkRANConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningRequest_protocolIEs_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningRequest'
*/
typedef struct EXTERN WriteReplaceWarningRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      WriteReplaceWarningRequestIEs_TVALUE t;

      /**
       * WriteReplaceWarningRequestIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: reject
          * presence: mandatory
          */
         MessageIdentifier *_WriteReplaceWarningRequestIEs_id_MessageIdentifier;
         /**
          * id: id-SerialNumber
          * criticality: reject
          * presence: mandatory
          */
         SerialNumber *_WriteReplaceWarningRequestIEs_id_SerialNumber;
         /**
          * id: id-WarningAreaList
          * criticality: ignore
          * presence: optional
          */
         WarningAreaList *_WriteReplaceWarningRequestIEs_id_WarningAreaList;
         /**
          * id: id-RepetitionPeriod
          * criticality: reject
          * presence: mandatory
          */
         RepetitionPeriod _WriteReplaceWarningRequestIEs_id_RepetitionPeriod;
         /**
          * id: id-NumberOfBroadcastsRequested
          * criticality: reject
          * presence: mandatory
          */
         NumberOfBroadcastsRequested _WriteReplaceWarningRequestIEs_id_NumberOfBroadcastsRequested;
         /**
          * id: id-WarningType
          * criticality: ignore
          * presence: optional
          */
         WarningType *_WriteReplaceWarningRequestIEs_id_WarningType;
         /**
          * id: id-WarningSecurityInfo
          * criticality: ignore
          * presence: optional
          */
         WarningSecurityInfo *_WriteReplaceWarningRequestIEs_id_WarningSecurityInfo;
         /**
          * id: id-DataCodingScheme
          * criticality: ignore
          * presence: optional
          */
         DataCodingScheme *_WriteReplaceWarningRequestIEs_id_DataCodingScheme;
         /**
          * id: id-WarningMessageContents
          * criticality: ignore
          * presence: optional
          */
         WarningMessageContents *_WriteReplaceWarningRequestIEs_id_WarningMessageContents;
         /**
          * id: id-ConcurrentWarningMessageInd
          * criticality: reject
          * presence: optional
          */
         ConcurrentWarningMessageInd _WriteReplaceWarningRequestIEs_id_ConcurrentWarningMessageInd;
         /**
          * id: id-WarningAreaCoordinates
          * criticality: ignore
          * presence: optional
          */
         WarningAreaCoordinates *_WriteReplaceWarningRequestIEs_id_WarningAreaCoordinates;

         ASN1OpenType* extElem1;
      } u;
   } value;
} WriteReplaceWarningRequest_protocolIEs_element;

EXTERN int asn1PE_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_WriteReplaceWarningRequest_protocolIEs_element 
   (const char* name, const WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_WriteReplaceWarningRequest_protocolIEs_element (
   const char* name, WriteReplaceWarningRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WriteReplaceWarningRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const WriteReplaceWarningRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_MessageIdentifier
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   MessageIdentifier *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_SerialNumber
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   SerialNumber *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_WarningAreaList
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   WarningAreaList *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_RepetitionPeriod
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   RepetitionPeriod value);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_NumberOfBroadcastsRequested
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   NumberOfBroadcastsRequested value);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_WarningType
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   WarningType *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_WarningSecurityInfo
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   WarningSecurityInfo *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_DataCodingScheme
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   DataCodingScheme *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_WarningMessageContents
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   WarningMessageContents *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_ConcurrentWarningMessageInd
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   ConcurrentWarningMessageInd value);

EXTERN void asn1SetTC_WriteReplaceWarningRequest_protocolIEs_element_WriteReplaceWarningRequestIEs_id_WarningAreaCoordinates
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs_element* pElem, 
   WarningAreaCoordinates *pvalue);

EXTERN int asn1Init_WriteReplaceWarningRequest_protocolIEs_element (
   WriteReplaceWarningRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningRequest_protocolIEs                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningRequest'
*/
/* List of WriteReplaceWarningRequest_protocolIEs_element */
typedef OSRTDList WriteReplaceWarningRequest_protocolIEs;

EXTERN int asn1PE_WriteReplaceWarningRequest_protocolIEs (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* pvalue);

EXTERN int asn1PD_WriteReplaceWarningRequest_protocolIEs (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* pvalue);

EXTERN void asn1Print_WriteReplaceWarningRequest_protocolIEs 
   (const char* name, const WriteReplaceWarningRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_WriteReplaceWarningRequest_protocolIEs (const char* name, 
   WriteReplaceWarningRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WriteReplaceWarningRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const WriteReplaceWarningRequest_protocolIEs* pvalue);

/* Append IE with value type MessageIdentifier to list */
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_MessageIdentifier
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, 
   MessageIdentifier *pvalue);

/* Append IE with value type SerialNumber to list */
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_SerialNumber
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, SerialNumber 
   *pvalue);

/* Append IE with value type WarningAreaList to list */
struct WarningAreaList ;
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_WarningAreaList
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, struct 
   WarningAreaList *pvalue);

/* Append IE with value type RepetitionPeriod to list */
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_RepetitionPeriod
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, 
   RepetitionPeriod value);

/* Append IE with value type NumberOfBroadcastsRequested to list */
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_NumberOfBroadcastsRequested
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, 
   NumberOfBroadcastsRequested value);

/* Append IE with value type WarningType to list */
struct WarningType ;
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_WarningType
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, struct 
   WarningType *pvalue);

/* Append IE with value type WarningSecurityInfo to list */
struct WarningSecurityInfo ;
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_WarningSecurityInfo
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, struct 
   WarningSecurityInfo *pvalue);

/* Append IE with value type DataCodingScheme to list */
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_DataCodingScheme
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, 
   DataCodingScheme *pvalue);

/* Append IE with value type WarningMessageContents to list */
struct WarningMessageContents ;
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_WarningMessageContents
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, struct 
   WarningMessageContents *pvalue);

/* Append IE with value type ConcurrentWarningMessageInd to list */
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_ConcurrentWarningMessageInd
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, 
   ConcurrentWarningMessageInd value);

/* Append IE with value type WarningAreaCoordinates to list */
struct WarningAreaCoordinates ;
EXTERN int asn1Append_WriteReplaceWarningRequestIEs_id_WarningAreaCoordinates
   (OSCTXT* pctxt, WriteReplaceWarningRequest_protocolIEs* plist, struct 
   WarningAreaCoordinates *pvalue);

/* Get IE using id key value */
EXTERN struct WriteReplaceWarningRequest_protocolIEs_element* 
   asn1Get_WriteReplaceWarningRequest_protocolIEs (ProtocolIE_ID id, 
   WriteReplaceWarningRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_WriteReplaceWarningRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   WriteReplaceWarningRequest_protocolIEs* plist, 
   WriteReplaceWarningRequest_protocolIEs* pmatches);

EXTERN int asn1Init_WriteReplaceWarningRequest_protocolIEs (
   WriteReplaceWarningRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningRequest                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 WARNING MESSAGE TRANSMISSION ELEMENTARY PROCEDURES 
 **************************************************************
 **************************************************************
 Write-Replace Warning Elementary Procedure
 **************************************************************
 **************************************************************
 WRITE-REPLACE WARNING REQUEST
 **************************************************************
WriteReplaceWarningRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({WriteReplaceWarningRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({WriteReplaceWarningRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({WriteReplaceWarningRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN WriteReplaceWarningRequest {
   WriteReplaceWarningRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} WriteReplaceWarningRequest;

EXTERN int asn1PE_WriteReplaceWarningRequest (OSCTXT* pctxt, WriteReplaceWarningRequest* pvalue);

EXTERN int asn1PD_WriteReplaceWarningRequest (OSCTXT* pctxt, WriteReplaceWarningRequest* pvalue);

EXTERN void asn1Print_WriteReplaceWarningRequest 
   (const char* name, const WriteReplaceWarningRequest* pvalue);

EXTERN int asn1PrtToStr_WriteReplaceWarningRequest (const char* name, 
   WriteReplaceWarningRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WriteReplaceWarningRequest (OSCTXT *pctxt, 
   const char* name, const WriteReplaceWarningRequest* pvalue);

EXTERN int asn1Init_WriteReplaceWarningRequest (WriteReplaceWarningRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningResponse_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningResponse'
*/
typedef struct EXTERN WriteReplaceWarningResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      WriteReplaceWarningResponseIEs_TVALUE t;

      /**
       * WriteReplaceWarningResponseIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: reject
          * presence: mandatory
          */
         MessageIdentifier *_WriteReplaceWarningResponseIEs_id_MessageIdentifier;
         /**
          * id: id-SerialNumber
          * criticality: reject
          * presence: mandatory
          */
         SerialNumber *_WriteReplaceWarningResponseIEs_id_SerialNumber;
         /**
          * id: id-BroadcastCompletedAreaList
          * criticality: ignore
          * presence: optional
          */
         BroadcastCompletedAreaList *_WriteReplaceWarningResponseIEs_id_BroadcastCompletedAreaList;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_WriteReplaceWarningResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} WriteReplaceWarningResponse_protocolIEs_element;

EXTERN int asn1PE_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_WriteReplaceWarningResponse_protocolIEs_element 
   (const char* name, const WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_WriteReplaceWarningResponse_protocolIEs_element (
   const char* name, WriteReplaceWarningResponse_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WriteReplaceWarningResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const WriteReplaceWarningResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_id_MessageIdentifier
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs_element* pElem, 
   MessageIdentifier *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_id_SerialNumber
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs_element* pElem, 
   SerialNumber *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_id_BroadcastCompletedAreaList
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs_element* pElem, 
   BroadcastCompletedAreaList *pvalue);

EXTERN void asn1SetTC_WriteReplaceWarningResponse_protocolIEs_element_WriteReplaceWarningResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_WriteReplaceWarningResponse_protocolIEs_element (
   WriteReplaceWarningResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningResponse_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WriteReplaceWarningResponse'
*/
/* List of WriteReplaceWarningResponse_protocolIEs_element */
typedef OSRTDList WriteReplaceWarningResponse_protocolIEs;

EXTERN int asn1PE_WriteReplaceWarningResponse_protocolIEs (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs* pvalue);

EXTERN int asn1PD_WriteReplaceWarningResponse_protocolIEs (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs* pvalue);

EXTERN void asn1Print_WriteReplaceWarningResponse_protocolIEs 
   (const char* name, const WriteReplaceWarningResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_WriteReplaceWarningResponse_protocolIEs (const char* name, 
   WriteReplaceWarningResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WriteReplaceWarningResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const WriteReplaceWarningResponse_protocolIEs* pvalue);

/* Append IE with value type MessageIdentifier to list */
EXTERN int asn1Append_WriteReplaceWarningResponseIEs_id_MessageIdentifier
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs* plist, 
   MessageIdentifier *pvalue);

/* Append IE with value type SerialNumber to list */
EXTERN int asn1Append_WriteReplaceWarningResponseIEs_id_SerialNumber
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs* plist, 
   SerialNumber *pvalue);

/* Append IE with value type BroadcastCompletedAreaList to list */
struct BroadcastCompletedAreaList ;
EXTERN int asn1Append_WriteReplaceWarningResponseIEs_id_BroadcastCompletedAreaList
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs* plist, struct 
   BroadcastCompletedAreaList *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_WriteReplaceWarningResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, WriteReplaceWarningResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct WriteReplaceWarningResponse_protocolIEs_element* 
   asn1Get_WriteReplaceWarningResponse_protocolIEs (ProtocolIE_ID id, 
   WriteReplaceWarningResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_WriteReplaceWarningResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   WriteReplaceWarningResponse_protocolIEs* plist, 
   WriteReplaceWarningResponse_protocolIEs* pmatches);

EXTERN int asn1Init_WriteReplaceWarningResponse_protocolIEs (
   WriteReplaceWarningResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  WriteReplaceWarningResponse                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 WRITE-REPLACE WARNING RESPONSE
 **************************************************************
WriteReplaceWarningResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({WriteReplaceWarningResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({WriteReplaceWarningResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({WriteReplaceWarningResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN WriteReplaceWarningResponse {
   WriteReplaceWarningResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} WriteReplaceWarningResponse;

EXTERN int asn1PE_WriteReplaceWarningResponse (OSCTXT* pctxt, WriteReplaceWarningResponse* pvalue);

EXTERN int asn1PD_WriteReplaceWarningResponse (OSCTXT* pctxt, WriteReplaceWarningResponse* pvalue);

EXTERN void asn1Print_WriteReplaceWarningResponse 
   (const char* name, const WriteReplaceWarningResponse* pvalue);

EXTERN int asn1PrtToStr_WriteReplaceWarningResponse (const char* name, 
   WriteReplaceWarningResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WriteReplaceWarningResponse (OSCTXT *pctxt, 
   const char* name, const WriteReplaceWarningResponse* pvalue);

EXTERN int asn1Init_WriteReplaceWarningResponse (WriteReplaceWarningResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSCancelRequest_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSCancelRequest'
*/
typedef struct EXTERN PWSCancelRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PWSCancelRequestIEs_TVALUE t;

      /**
       * PWSCancelRequestIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: reject
          * presence: mandatory
          */
         MessageIdentifier *_PWSCancelRequestIEs_id_MessageIdentifier;
         /**
          * id: id-SerialNumber
          * criticality: reject
          * presence: mandatory
          */
         SerialNumber *_PWSCancelRequestIEs_id_SerialNumber;
         /**
          * id: id-WarningAreaList
          * criticality: ignore
          * presence: optional
          */
         WarningAreaList *_PWSCancelRequestIEs_id_WarningAreaList;
         /**
          * id: id-CancelAllWarningMessages
          * criticality: reject
          * presence: optional
          */
         CancelAllWarningMessages _PWSCancelRequestIEs_id_CancelAllWarningMessages;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PWSCancelRequest_protocolIEs_element;

EXTERN int asn1PE_PWSCancelRequest_protocolIEs_element (OSCTXT* pctxt, PWSCancelRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_PWSCancelRequest_protocolIEs_element (OSCTXT* pctxt, PWSCancelRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_PWSCancelRequest_protocolIEs_element 
   (const char* name, const PWSCancelRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PWSCancelRequest_protocolIEs_element (const char* name, 
   PWSCancelRequest_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSCancelRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PWSCancelRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PWSCancelRequest_protocolIEs_element_PWSCancelRequestIEs_id_MessageIdentifier
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs_element* pElem, 
   MessageIdentifier *pvalue);

EXTERN void asn1SetTC_PWSCancelRequest_protocolIEs_element_PWSCancelRequestIEs_id_SerialNumber
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs_element* pElem, SerialNumber 
   *pvalue);

EXTERN void asn1SetTC_PWSCancelRequest_protocolIEs_element_PWSCancelRequestIEs_id_WarningAreaList
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs_element* pElem, 
   WarningAreaList *pvalue);

EXTERN void asn1SetTC_PWSCancelRequest_protocolIEs_element_PWSCancelRequestIEs_id_CancelAllWarningMessages
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs_element* pElem, 
   CancelAllWarningMessages value);

EXTERN int asn1Init_PWSCancelRequest_protocolIEs_element (
   PWSCancelRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSCancelRequest_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSCancelRequest'
*/
/* List of PWSCancelRequest_protocolIEs_element */
typedef OSRTDList PWSCancelRequest_protocolIEs;

EXTERN int asn1PE_PWSCancelRequest_protocolIEs (OSCTXT* pctxt, PWSCancelRequest_protocolIEs* pvalue);

EXTERN int asn1PD_PWSCancelRequest_protocolIEs (OSCTXT* pctxt, PWSCancelRequest_protocolIEs* pvalue);

EXTERN void asn1Print_PWSCancelRequest_protocolIEs 
   (const char* name, const PWSCancelRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PWSCancelRequest_protocolIEs (const char* name, 
   PWSCancelRequest_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSCancelRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PWSCancelRequest_protocolIEs* pvalue);

/* Append IE with value type MessageIdentifier to list */
EXTERN int asn1Append_PWSCancelRequestIEs_id_MessageIdentifier
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs* plist, MessageIdentifier 
   *pvalue);

/* Append IE with value type SerialNumber to list */
EXTERN int asn1Append_PWSCancelRequestIEs_id_SerialNumber
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs* plist, SerialNumber *pvalue);

/* Append IE with value type WarningAreaList to list */
struct WarningAreaList ;
EXTERN int asn1Append_PWSCancelRequestIEs_id_WarningAreaList
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs* plist, struct WarningAreaList 
   *pvalue);

/* Append IE with value type CancelAllWarningMessages to list */
EXTERN int asn1Append_PWSCancelRequestIEs_id_CancelAllWarningMessages
   (OSCTXT* pctxt, PWSCancelRequest_protocolIEs* plist, 
   CancelAllWarningMessages value);

/* Get IE using id key value */
EXTERN struct PWSCancelRequest_protocolIEs_element* 
   asn1Get_PWSCancelRequest_protocolIEs (ProtocolIE_ID id, 
   PWSCancelRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PWSCancelRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, PWSCancelRequest_protocolIEs* plist, 
   PWSCancelRequest_protocolIEs* pmatches);

EXTERN int asn1Init_PWSCancelRequest_protocolIEs (
   PWSCancelRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSCancelRequest                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PWS Cancel Elementary Procedure
 **************************************************************
 **************************************************************
 PWS CANCEL REQUEST
 **************************************************************
PWSCancelRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PWSCancelRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PWSCancelRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PWSCancelRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PWSCancelRequest {
   PWSCancelRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PWSCancelRequest;

EXTERN int asn1PE_PWSCancelRequest (OSCTXT* pctxt, PWSCancelRequest* pvalue);

EXTERN int asn1PD_PWSCancelRequest (OSCTXT* pctxt, PWSCancelRequest* pvalue);

EXTERN void asn1Print_PWSCancelRequest 
   (const char* name, const PWSCancelRequest* pvalue);

EXTERN int asn1PrtToStr_PWSCancelRequest (const char* name, PWSCancelRequest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSCancelRequest (OSCTXT *pctxt, 
   const char* name, const PWSCancelRequest* pvalue);

EXTERN int asn1Init_PWSCancelRequest (PWSCancelRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSCancelResponse_protocolIEs_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSCancelResponse'
*/
typedef struct EXTERN PWSCancelResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PWSCancelResponseIEs_TVALUE t;

      /**
       * PWSCancelResponseIEs information objects
       */
      union {
         /**
          * id: id-MessageIdentifier
          * criticality: reject
          * presence: mandatory
          */
         MessageIdentifier *_PWSCancelResponseIEs_id_MessageIdentifier;
         /**
          * id: id-SerialNumber
          * criticality: reject
          * presence: mandatory
          */
         SerialNumber *_PWSCancelResponseIEs_id_SerialNumber;
         /**
          * id: id-BroadcastCancelledAreaList
          * criticality: ignore
          * presence: optional
          */
         BroadcastCancelledAreaList *_PWSCancelResponseIEs_id_BroadcastCancelledAreaList;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_PWSCancelResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PWSCancelResponse_protocolIEs_element;

EXTERN int asn1PE_PWSCancelResponse_protocolIEs_element (OSCTXT* pctxt, PWSCancelResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_PWSCancelResponse_protocolIEs_element (OSCTXT* pctxt, PWSCancelResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_PWSCancelResponse_protocolIEs_element 
   (const char* name, const PWSCancelResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PWSCancelResponse_protocolIEs_element (const char* name, 
   PWSCancelResponse_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSCancelResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PWSCancelResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PWSCancelResponse_protocolIEs_element_PWSCancelResponseIEs_id_MessageIdentifier
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs_element* pElem, 
   MessageIdentifier *pvalue);

EXTERN void asn1SetTC_PWSCancelResponse_protocolIEs_element_PWSCancelResponseIEs_id_SerialNumber
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs_element* pElem, SerialNumber 
   *pvalue);

EXTERN void asn1SetTC_PWSCancelResponse_protocolIEs_element_PWSCancelResponseIEs_id_BroadcastCancelledAreaList
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs_element* pElem, 
   BroadcastCancelledAreaList *pvalue);

EXTERN void asn1SetTC_PWSCancelResponse_protocolIEs_element_PWSCancelResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_PWSCancelResponse_protocolIEs_element (
   PWSCancelResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSCancelResponse_protocolIEs                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSCancelResponse'
*/
/* List of PWSCancelResponse_protocolIEs_element */
typedef OSRTDList PWSCancelResponse_protocolIEs;

EXTERN int asn1PE_PWSCancelResponse_protocolIEs (OSCTXT* pctxt, PWSCancelResponse_protocolIEs* pvalue);

EXTERN int asn1PD_PWSCancelResponse_protocolIEs (OSCTXT* pctxt, PWSCancelResponse_protocolIEs* pvalue);

EXTERN void asn1Print_PWSCancelResponse_protocolIEs 
   (const char* name, const PWSCancelResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PWSCancelResponse_protocolIEs (const char* name, 
   PWSCancelResponse_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSCancelResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PWSCancelResponse_protocolIEs* pvalue);

/* Append IE with value type MessageIdentifier to list */
EXTERN int asn1Append_PWSCancelResponseIEs_id_MessageIdentifier
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs* plist, MessageIdentifier 
   *pvalue);

/* Append IE with value type SerialNumber to list */
EXTERN int asn1Append_PWSCancelResponseIEs_id_SerialNumber
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs* plist, SerialNumber *pvalue)
   ;

/* Append IE with value type BroadcastCancelledAreaList to list */
struct BroadcastCancelledAreaList ;
EXTERN int asn1Append_PWSCancelResponseIEs_id_BroadcastCancelledAreaList
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs* plist, struct 
   BroadcastCancelledAreaList *pvalue);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_PWSCancelResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, PWSCancelResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct PWSCancelResponse_protocolIEs_element* 
   asn1Get_PWSCancelResponse_protocolIEs (ProtocolIE_ID id, 
   PWSCancelResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PWSCancelResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, PWSCancelResponse_protocolIEs* plist, 
   PWSCancelResponse_protocolIEs* pmatches);

EXTERN int asn1Init_PWSCancelResponse_protocolIEs (
   PWSCancelResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSCancelResponse                                         */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PWS CANCEL RESPONSE
 **************************************************************
PWSCancelResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PWSCancelResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PWSCancelResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PWSCancelResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PWSCancelResponse {
   PWSCancelResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PWSCancelResponse;

EXTERN int asn1PE_PWSCancelResponse (OSCTXT* pctxt, PWSCancelResponse* pvalue);

EXTERN int asn1PD_PWSCancelResponse (OSCTXT* pctxt, PWSCancelResponse* pvalue);

EXTERN void asn1Print_PWSCancelResponse 
   (const char* name, const PWSCancelResponse* pvalue);

EXTERN int asn1PrtToStr_PWSCancelResponse (const char* name, 
   PWSCancelResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSCancelResponse (OSCTXT *pctxt, 
   const char* name, const PWSCancelResponse* pvalue);

EXTERN int asn1Init_PWSCancelResponse (PWSCancelResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSRestartIndication_protocolIEs_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSRestartIndication'
*/
typedef struct EXTERN PWSRestartIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PWSRestartIndicationIEs_TVALUE t;

      /**
       * PWSRestartIndicationIEs information objects
       */
      union {
         /**
          * id: id-CellIDListForRestart
          * criticality: reject
          * presence: mandatory
          */
         CellIDListForRestart *_PWSRestartIndicationIEs_id_CellIDListForRestart;
         /**
          * id: id-GlobalRANNodeID
          * criticality: reject
          * presence: mandatory
          */
         GlobalRANNodeID *_PWSRestartIndicationIEs_id_GlobalRANNodeID;
         /**
          * id: id-TAIListForRestart
          * criticality: reject
          * presence: mandatory
          */
         TAIListForRestart *_PWSRestartIndicationIEs_id_TAIListForRestart;
         /**
          * id: id-EmergencyAreaIDListForRestart
          * criticality: reject
          * presence: optional
          */
         EmergencyAreaIDListForRestart *_PWSRestartIndicationIEs_id_EmergencyAreaIDListForRestart;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PWSRestartIndication_protocolIEs_element;

EXTERN int asn1PE_PWSRestartIndication_protocolIEs_element (OSCTXT* pctxt, PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_PWSRestartIndication_protocolIEs_element (OSCTXT* pctxt, PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_PWSRestartIndication_protocolIEs_element 
   (const char* name, const PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PWSRestartIndication_protocolIEs_element (const char* name, 
   PWSRestartIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSRestartIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PWSRestartIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_id_CellIDListForRestart
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs_element* pElem, 
   CellIDListForRestart *pvalue);

EXTERN void asn1SetTC_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs_element* pElem, 
   GlobalRANNodeID *pvalue);

EXTERN void asn1SetTC_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_id_TAIListForRestart
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs_element* pElem, 
   TAIListForRestart *pvalue);

EXTERN void asn1SetTC_PWSRestartIndication_protocolIEs_element_PWSRestartIndicationIEs_id_EmergencyAreaIDListForRestart
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs_element* pElem, 
   EmergencyAreaIDListForRestart *pvalue);

EXTERN int asn1Init_PWSRestartIndication_protocolIEs_element (
   PWSRestartIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSRestartIndication_protocolIEs                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSRestartIndication'
*/
/* List of PWSRestartIndication_protocolIEs_element */
typedef OSRTDList PWSRestartIndication_protocolIEs;

EXTERN int asn1PE_PWSRestartIndication_protocolIEs (OSCTXT* pctxt, PWSRestartIndication_protocolIEs* pvalue);

EXTERN int asn1PD_PWSRestartIndication_protocolIEs (OSCTXT* pctxt, PWSRestartIndication_protocolIEs* pvalue);

EXTERN void asn1Print_PWSRestartIndication_protocolIEs 
   (const char* name, const PWSRestartIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PWSRestartIndication_protocolIEs (const char* name, 
   PWSRestartIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSRestartIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PWSRestartIndication_protocolIEs* pvalue);

/* Append IE with value type CellIDListForRestart to list */
struct CellIDListForRestart ;
EXTERN int asn1Append_PWSRestartIndicationIEs_id_CellIDListForRestart
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs* plist, struct 
   CellIDListForRestart *pvalue);

/* Append IE with value type GlobalRANNodeID to list */
struct GlobalRANNodeID ;
EXTERN int asn1Append_PWSRestartIndicationIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs* plist, struct 
   GlobalRANNodeID *pvalue);

/* Append IE with value type TAIListForRestart to list */
EXTERN int asn1Append_PWSRestartIndicationIEs_id_TAIListForRestart
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs* plist, TAIListForRestart 
   *pvalue);

/* Append IE with value type EmergencyAreaIDListForRestart to list */
struct EmergencyAreaIDListForRestart ;
EXTERN int asn1Append_PWSRestartIndicationIEs_id_EmergencyAreaIDListForRestart
   (OSCTXT* pctxt, PWSRestartIndication_protocolIEs* plist, struct 
   EmergencyAreaIDListForRestart *pvalue);

/* Get IE using id key value */
EXTERN struct PWSRestartIndication_protocolIEs_element* 
   asn1Get_PWSRestartIndication_protocolIEs (ProtocolIE_ID id, 
   PWSRestartIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PWSRestartIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, PWSRestartIndication_protocolIEs* plist, 
   PWSRestartIndication_protocolIEs* pmatches);

EXTERN int asn1Init_PWSRestartIndication_protocolIEs (
   PWSRestartIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSRestartIndication                                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PWS Restart Indication Elementary Procedure
 **************************************************************
 **************************************************************
 PWS RESTART INDICATION
 **************************************************************
PWSRestartIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PWSRestartIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PWSRestartIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PWSRestartIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PWSRestartIndication {
   PWSRestartIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PWSRestartIndication;

EXTERN int asn1PE_PWSRestartIndication (OSCTXT* pctxt, PWSRestartIndication* pvalue);

EXTERN int asn1PD_PWSRestartIndication (OSCTXT* pctxt, PWSRestartIndication* pvalue);

EXTERN void asn1Print_PWSRestartIndication 
   (const char* name, const PWSRestartIndication* pvalue);

EXTERN int asn1PrtToStr_PWSRestartIndication (const char* name, 
   PWSRestartIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSRestartIndication (OSCTXT *pctxt, 
   const char* name, const PWSRestartIndication* pvalue);

EXTERN int asn1Init_PWSRestartIndication (PWSRestartIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailureIndication_protocolIEs_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSFailureIndication'
*/
typedef struct EXTERN PWSFailureIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PWSFailureIndicationIEs_TVALUE t;

      /**
       * PWSFailureIndicationIEs information objects
       */
      union {
         /**
          * id: id-PWSFailedCellIDList
          * criticality: reject
          * presence: mandatory
          */
         PWSFailedCellIDList *_PWSFailureIndicationIEs_id_PWSFailedCellIDList;
         /**
          * id: id-GlobalRANNodeID
          * criticality: reject
          * presence: mandatory
          */
         GlobalRANNodeID *_PWSFailureIndicationIEs_id_GlobalRANNodeID;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PWSFailureIndication_protocolIEs_element;

EXTERN int asn1PE_PWSFailureIndication_protocolIEs_element (OSCTXT* pctxt, PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_PWSFailureIndication_protocolIEs_element (OSCTXT* pctxt, PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_PWSFailureIndication_protocolIEs_element 
   (const char* name, const PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PWSFailureIndication_protocolIEs_element (const char* name, 
   PWSFailureIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PWSFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PWSFailureIndication_protocolIEs_element_PWSFailureIndicationIEs_id_PWSFailedCellIDList
   (OSCTXT* pctxt, PWSFailureIndication_protocolIEs_element* pElem, 
   PWSFailedCellIDList *pvalue);

EXTERN void asn1SetTC_PWSFailureIndication_protocolIEs_element_PWSFailureIndicationIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, PWSFailureIndication_protocolIEs_element* pElem, 
   GlobalRANNodeID *pvalue);

EXTERN int asn1Init_PWSFailureIndication_protocolIEs_element (
   PWSFailureIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailureIndication_protocolIEs                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSFailureIndication'
*/
/* List of PWSFailureIndication_protocolIEs_element */
typedef OSRTDList PWSFailureIndication_protocolIEs;

EXTERN int asn1PE_PWSFailureIndication_protocolIEs (OSCTXT* pctxt, PWSFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PD_PWSFailureIndication_protocolIEs (OSCTXT* pctxt, PWSFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Print_PWSFailureIndication_protocolIEs 
   (const char* name, const PWSFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PWSFailureIndication_protocolIEs (const char* name, 
   PWSFailureIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSFailureIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PWSFailureIndication_protocolIEs* pvalue);

/* Append IE with value type PWSFailedCellIDList to list */
struct PWSFailedCellIDList ;
EXTERN int asn1Append_PWSFailureIndicationIEs_id_PWSFailedCellIDList
   (OSCTXT* pctxt, PWSFailureIndication_protocolIEs* plist, struct 
   PWSFailedCellIDList *pvalue);

/* Append IE with value type GlobalRANNodeID to list */
struct GlobalRANNodeID ;
EXTERN int asn1Append_PWSFailureIndicationIEs_id_GlobalRANNodeID
   (OSCTXT* pctxt, PWSFailureIndication_protocolIEs* plist, struct 
   GlobalRANNodeID *pvalue);

/* Get IE using id key value */
EXTERN struct PWSFailureIndication_protocolIEs_element* 
   asn1Get_PWSFailureIndication_protocolIEs (ProtocolIE_ID id, 
   PWSFailureIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PWSFailureIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, PWSFailureIndication_protocolIEs* plist, 
   PWSFailureIndication_protocolIEs* pmatches);

EXTERN int asn1Init_PWSFailureIndication_protocolIEs (
   PWSFailureIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailureIndication                                      */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PWS Failure Indication Elementary Procedure
 **************************************************************
 **************************************************************
 PWS FAILURE INDICATION
 **************************************************************
PWSFailureIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PWSFailureIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PWSFailureIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PWSFailureIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PWSFailureIndication {
   PWSFailureIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PWSFailureIndication;

EXTERN int asn1PE_PWSFailureIndication (OSCTXT* pctxt, PWSFailureIndication* pvalue);

EXTERN int asn1PD_PWSFailureIndication (OSCTXT* pctxt, PWSFailureIndication* pvalue);

EXTERN void asn1Print_PWSFailureIndication 
   (const char* name, const PWSFailureIndication* pvalue);

EXTERN int asn1PrtToStr_PWSFailureIndication (const char* name, 
   PWSFailureIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSFailureIndication (OSCTXT *pctxt, 
   const char* name, const PWSFailureIndication* pvalue);

EXTERN int asn1Init_PWSFailureIndication (PWSFailureIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkUEAssociatedNRPPaTransport_protocolIEs_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkUEAssociatedNRPPaTransport'
*/
typedef struct EXTERN DownlinkUEAssociatedNRPPaTransport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      DownlinkUEAssociatedNRPPaTransportIEs_TVALUE t;

      /**
       * DownlinkUEAssociatedNRPPaTransportIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _DownlinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _DownlinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RoutingID
          * criticality: reject
          * presence: mandatory
          */
         RoutingID *_DownlinkUEAssociatedNRPPaTransportIEs_id_RoutingID;
         /**
          * id: id-NRPPa-PDU
          * criticality: reject
          * presence: mandatory
          */
         NRPPa_PDU *_DownlinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU;

         ASN1OpenType* extElem1;
      } u;
   } value;
} DownlinkUEAssociatedNRPPaTransport_protocolIEs_element;

EXTERN int asn1PE_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element 
   (const char* name, const DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element (
   const char* name, 
   DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element_DownlinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element_DownlinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element_DownlinkUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , RoutingID *pvalue);

EXTERN void asn1SetTC_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element_DownlinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , NRPPa_PDU *pvalue);

EXTERN int asn1Init_DownlinkUEAssociatedNRPPaTransport_protocolIEs_element (
   DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkUEAssociatedNRPPaTransport_protocolIEs            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkUEAssociatedNRPPaTransport'
*/
/* List of DownlinkUEAssociatedNRPPaTransport_protocolIEs_element */
typedef OSRTDList DownlinkUEAssociatedNRPPaTransport_protocolIEs;

EXTERN int asn1PE_DownlinkUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_DownlinkUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_DownlinkUEAssociatedNRPPaTransport_protocolIEs 
   (const char* name, const DownlinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_DownlinkUEAssociatedNRPPaTransport_protocolIEs (
   const char* name, DownlinkUEAssociatedNRPPaTransport_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkUEAssociatedNRPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const DownlinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_DownlinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_DownlinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RoutingID to list */
EXTERN int asn1Append_DownlinkUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   RoutingID *pvalue);

/* Append IE with value type NRPPa_PDU to list */
EXTERN int asn1Append_DownlinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   NRPPa_PDU *pvalue);

/* Get IE using id key value */
EXTERN struct DownlinkUEAssociatedNRPPaTransport_protocolIEs_element* 
   asn1Get_DownlinkUEAssociatedNRPPaTransport_protocolIEs (ProtocolIE_ID id, 
   DownlinkUEAssociatedNRPPaTransport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DownlinkUEAssociatedNRPPaTransport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   DownlinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   DownlinkUEAssociatedNRPPaTransport_protocolIEs* pmatches);

EXTERN int asn1Init_DownlinkUEAssociatedNRPPaTransport_protocolIEs (
   DownlinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkUEAssociatedNRPPaTransport                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 NRPPA TRANSPORT ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 DOWNLINK UE ASSOCIATED NRPPA TRANSPORT
 **************************************************************
DownlinkUEAssociatedNRPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DownlinkUEAssociatedNRPPaTransportIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DownlinkUEAssociatedNRPPaTransportIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DownlinkUEAssociatedNRPPaTransportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN DownlinkUEAssociatedNRPPaTransport {
   DownlinkUEAssociatedNRPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} DownlinkUEAssociatedNRPPaTransport;

EXTERN int asn1PE_DownlinkUEAssociatedNRPPaTransport (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PD_DownlinkUEAssociatedNRPPaTransport (OSCTXT* pctxt, DownlinkUEAssociatedNRPPaTransport* pvalue);

EXTERN void asn1Print_DownlinkUEAssociatedNRPPaTransport 
   (const char* name, const DownlinkUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PrtToStr_DownlinkUEAssociatedNRPPaTransport (const char* name, 
   DownlinkUEAssociatedNRPPaTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkUEAssociatedNRPPaTransport (OSCTXT *pctxt, 
   const char* name, const DownlinkUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1Init_DownlinkUEAssociatedNRPPaTransport (
   DownlinkUEAssociatedNRPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkUEAssociatedNRPPaTransport_protocolIEs_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkUEAssociatedNRPPaTransport'
*/
typedef struct EXTERN UplinkUEAssociatedNRPPaTransport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UplinkUEAssociatedNRPPaTransportIEs_TVALUE t;

      /**
       * UplinkUEAssociatedNRPPaTransportIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UplinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UplinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-RoutingID
          * criticality: reject
          * presence: mandatory
          */
         RoutingID *_UplinkUEAssociatedNRPPaTransportIEs_id_RoutingID;
         /**
          * id: id-NRPPa-PDU
          * criticality: reject
          * presence: mandatory
          */
         NRPPa_PDU *_UplinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UplinkUEAssociatedNRPPaTransport_protocolIEs_element;

EXTERN int asn1PE_UplinkUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_UplinkUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_UplinkUEAssociatedNRPPaTransport_protocolIEs_element 
   (const char* name, const UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UplinkUEAssociatedNRPPaTransport_protocolIEs_element (
   const char* name, 
   UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UplinkUEAssociatedNRPPaTransport_protocolIEs_element_UplinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UplinkUEAssociatedNRPPaTransport_protocolIEs_element_UplinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UplinkUEAssociatedNRPPaTransport_protocolIEs_element_UplinkUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , RoutingID *pvalue);

EXTERN void asn1SetTC_UplinkUEAssociatedNRPPaTransport_protocolIEs_element_UplinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , NRPPa_PDU *pvalue);

EXTERN int asn1Init_UplinkUEAssociatedNRPPaTransport_protocolIEs_element (
   UplinkUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkUEAssociatedNRPPaTransport_protocolIEs              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkUEAssociatedNRPPaTransport'
*/
/* List of UplinkUEAssociatedNRPPaTransport_protocolIEs_element */
typedef OSRTDList UplinkUEAssociatedNRPPaTransport_protocolIEs;

EXTERN int asn1PE_UplinkUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_UplinkUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_UplinkUEAssociatedNRPPaTransport_protocolIEs 
   (const char* name, const UplinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UplinkUEAssociatedNRPPaTransport_protocolIEs (
   const char* name, UplinkUEAssociatedNRPPaTransport_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkUEAssociatedNRPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UplinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UplinkUEAssociatedNRPPaTransportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UplinkUEAssociatedNRPPaTransportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type RoutingID to list */
EXTERN int asn1Append_UplinkUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   RoutingID *pvalue);

/* Append IE with value type NRPPa_PDU to list */
EXTERN int asn1Append_UplinkUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   NRPPa_PDU *pvalue);

/* Get IE using id key value */
EXTERN struct UplinkUEAssociatedNRPPaTransport_protocolIEs_element* 
   asn1Get_UplinkUEAssociatedNRPPaTransport_protocolIEs (ProtocolIE_ID id, 
   UplinkUEAssociatedNRPPaTransport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UplinkUEAssociatedNRPPaTransport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UplinkUEAssociatedNRPPaTransport_protocolIEs* plist, 
   UplinkUEAssociatedNRPPaTransport_protocolIEs* pmatches);

EXTERN int asn1Init_UplinkUEAssociatedNRPPaTransport_protocolIEs (
   UplinkUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkUEAssociatedNRPPaTransport                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UPLINK UE ASSOCIATED NRPPA TRANSPORT
 **************************************************************
UplinkUEAssociatedNRPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UplinkUEAssociatedNRPPaTransportIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UplinkUEAssociatedNRPPaTransportIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UplinkUEAssociatedNRPPaTransportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UplinkUEAssociatedNRPPaTransport {
   UplinkUEAssociatedNRPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UplinkUEAssociatedNRPPaTransport;

EXTERN int asn1PE_UplinkUEAssociatedNRPPaTransport (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PD_UplinkUEAssociatedNRPPaTransport (OSCTXT* pctxt, UplinkUEAssociatedNRPPaTransport* pvalue);

EXTERN void asn1Print_UplinkUEAssociatedNRPPaTransport 
   (const char* name, const UplinkUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PrtToStr_UplinkUEAssociatedNRPPaTransport (const char* name, 
   UplinkUEAssociatedNRPPaTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkUEAssociatedNRPPaTransport (OSCTXT *pctxt, 
   const char* name, const UplinkUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1Init_UplinkUEAssociatedNRPPaTransport (
   UplinkUEAssociatedNRPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_elemen  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNonUEAssociatedNRPPaTransport'
*/
typedef struct EXTERN DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      DownlinkNonUEAssociatedNRPPaTransportIEs_TVALUE t;

      /**
       * DownlinkNonUEAssociatedNRPPaTransportIEs information objects
       */
      union {
         /**
          * id: id-RoutingID
          * criticality: reject
          * presence: mandatory
          */
         RoutingID *_DownlinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID;
         /**
          * id: id-NRPPa-PDU
          * criticality: reject
          * presence: mandatory
          */
         NRPPa_PDU *_DownlinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU;

         ASN1OpenType* extElem1;
      } u;
   } value;
} DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element;

EXTERN int asn1PE_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element 
   (const char* name, const DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element (
   const char* name, 
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element_DownlinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , RoutingID *pvalue);

EXTERN void asn1SetTC_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element_DownlinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , NRPPa_PDU *pvalue);

EXTERN int asn1Init_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element (
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNonUEAssociatedNRPPaTransport_protocolIEs         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DownlinkNonUEAssociatedNRPPaTransport'
*/
/* List of DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element */
typedef OSRTDList DownlinkNonUEAssociatedNRPPaTransport_protocolIEs;

EXTERN int asn1PE_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs 
   (const char* name, const DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs (
   const char* name, 
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/* Append IE with value type RoutingID to list */
EXTERN int asn1Append_DownlinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* plist, 
   RoutingID *pvalue);

/* Append IE with value type NRPPa_PDU to list */
EXTERN int asn1Append_DownlinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* plist, 
   NRPPa_PDU *pvalue);

/* Get IE using id key value */
EXTERN struct DownlinkNonUEAssociatedNRPPaTransport_protocolIEs_element* 
   asn1Get_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs 
   (ProtocolIE_ID id, 
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* plist, 
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* pmatches);

EXTERN int asn1Init_DownlinkNonUEAssociatedNRPPaTransport_protocolIEs (
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DownlinkNonUEAssociatedNRPPaTransport                     */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 DOWNLINK NON UE ASSOCIATED NRPPA TRANSPORT
 **************************************************************
DownlinkNonUEAssociatedNRPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DownlinkNonUEAssociatedNRPPaTransportIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DownlinkNonUEAssociatedNRPPaTransportIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DownlinkNonUEAssociatedNRPPaTransportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN DownlinkNonUEAssociatedNRPPaTransport {
   DownlinkNonUEAssociatedNRPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} DownlinkNonUEAssociatedNRPPaTransport;

EXTERN int asn1PE_DownlinkNonUEAssociatedNRPPaTransport (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PD_DownlinkNonUEAssociatedNRPPaTransport (OSCTXT* pctxt, DownlinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN void asn1Print_DownlinkNonUEAssociatedNRPPaTransport 
   (const char* name, const DownlinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PrtToStr_DownlinkNonUEAssociatedNRPPaTransport (const char* name, 
   DownlinkNonUEAssociatedNRPPaTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DownlinkNonUEAssociatedNRPPaTransport (OSCTXT *pctxt, 
   const char* name, const DownlinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1Init_DownlinkNonUEAssociatedNRPPaTransport (
   DownlinkNonUEAssociatedNRPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNonUEAssociatedNRPPaTransport'
*/
typedef struct EXTERN UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UplinkNonUEAssociatedNRPPaTransportIEs_TVALUE t;

      /**
       * UplinkNonUEAssociatedNRPPaTransportIEs information objects
       */
      union {
         /**
          * id: id-RoutingID
          * criticality: reject
          * presence: mandatory
          */
         RoutingID *_UplinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID;
         /**
          * id: id-NRPPa-PDU
          * criticality: reject
          * presence: mandatory
          */
         NRPPa_PDU *_UplinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element;

EXTERN int asn1PE_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PD_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1Print_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element 
   (const char* name, const UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element (
   const char* name, 
   UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element_UplinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , RoutingID *pvalue);

EXTERN void asn1SetTC_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element_UplinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pElem
   , NRPPa_PDU *pvalue);

EXTERN int asn1Init_UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element (
   UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNonUEAssociatedNRPPaTransport_protocolIEs           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkNonUEAssociatedNRPPaTransport'
*/
/* List of UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element */
typedef OSRTDList UplinkNonUEAssociatedNRPPaTransport_protocolIEs;

EXTERN int asn1PE_UplinkNonUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PD_UplinkNonUEAssociatedNRPPaTransport_protocolIEs (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN void asn1Print_UplinkNonUEAssociatedNRPPaTransport_protocolIEs 
   (const char* name, const UplinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UplinkNonUEAssociatedNRPPaTransport_protocolIEs (
   const char* name, UplinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkNonUEAssociatedNRPPaTransport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UplinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/* Append IE with value type RoutingID to list */
EXTERN int asn1Append_UplinkNonUEAssociatedNRPPaTransportIEs_id_RoutingID
   (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs* plist, 
   RoutingID *pvalue);

/* Append IE with value type NRPPa_PDU to list */
EXTERN int asn1Append_UplinkNonUEAssociatedNRPPaTransportIEs_id_NRPPa_PDU
   (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport_protocolIEs* plist, 
   NRPPa_PDU *pvalue);

/* Get IE using id key value */
EXTERN struct UplinkNonUEAssociatedNRPPaTransport_protocolIEs_element* 
   asn1Get_UplinkNonUEAssociatedNRPPaTransport_protocolIEs (ProtocolIE_ID id, 
   UplinkNonUEAssociatedNRPPaTransport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UplinkNonUEAssociatedNRPPaTransport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UplinkNonUEAssociatedNRPPaTransport_protocolIEs* plist, 
   UplinkNonUEAssociatedNRPPaTransport_protocolIEs* pmatches);

EXTERN int asn1Init_UplinkNonUEAssociatedNRPPaTransport_protocolIEs (
   UplinkNonUEAssociatedNRPPaTransport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkNonUEAssociatedNRPPaTransport                       */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UPLINK NON UE ASSOCIATED NRPPA TRANSPORT
 **************************************************************
UplinkNonUEAssociatedNRPPaTransport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UplinkNonUEAssociatedNRPPaTransportIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UplinkNonUEAssociatedNRPPaTransportIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UplinkNonUEAssociatedNRPPaTransportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UplinkNonUEAssociatedNRPPaTransport {
   UplinkNonUEAssociatedNRPPaTransport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UplinkNonUEAssociatedNRPPaTransport;

EXTERN int asn1PE_UplinkNonUEAssociatedNRPPaTransport (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PD_UplinkNonUEAssociatedNRPPaTransport (OSCTXT* pctxt, UplinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN void asn1Print_UplinkNonUEAssociatedNRPPaTransport 
   (const char* name, const UplinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1PrtToStr_UplinkNonUEAssociatedNRPPaTransport (const char* name, 
   UplinkNonUEAssociatedNRPPaTransport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UplinkNonUEAssociatedNRPPaTransport (OSCTXT *pctxt, 
   const char* name, const UplinkNonUEAssociatedNRPPaTransport* pvalue);

EXTERN int asn1Init_UplinkNonUEAssociatedNRPPaTransport (
   UplinkNonUEAssociatedNRPPaTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceStart_protocolIEs_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceStart'
*/
typedef struct EXTERN TraceStart_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      TraceStartIEs_TVALUE t;

      /**
       * TraceStartIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _TraceStartIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _TraceStartIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-TraceActivation
          * criticality: ignore
          * presence: mandatory
          */
         TraceActivation *_TraceStartIEs_id_TraceActivation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} TraceStart_protocolIEs_element;

EXTERN int asn1PE_TraceStart_protocolIEs_element (OSCTXT* pctxt, TraceStart_protocolIEs_element* pvalue);

EXTERN int asn1PD_TraceStart_protocolIEs_element (OSCTXT* pctxt, TraceStart_protocolIEs_element* pvalue);

EXTERN void asn1Print_TraceStart_protocolIEs_element 
   (const char* name, const TraceStart_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_TraceStart_protocolIEs_element (const char* name, 
   TraceStart_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceStart_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const TraceStart_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_TraceStart_protocolIEs_element_TraceStartIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, TraceStart_protocolIEs_element* pElem, AMF_UE_NGAP_ID value)
   ;

EXTERN void asn1SetTC_TraceStart_protocolIEs_element_TraceStartIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, TraceStart_protocolIEs_element* pElem, RAN_UE_NGAP_ID value)
   ;

EXTERN void asn1SetTC_TraceStart_protocolIEs_element_TraceStartIEs_id_TraceActivation
   (OSCTXT* pctxt, TraceStart_protocolIEs_element* pElem, TraceActivation 
   *pvalue);

EXTERN int asn1Init_TraceStart_protocolIEs_element (
   TraceStart_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceStart_protocolIEs                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceStart'
*/
/* List of TraceStart_protocolIEs_element */
typedef OSRTDList TraceStart_protocolIEs;

EXTERN int asn1PE_TraceStart_protocolIEs (OSCTXT* pctxt, TraceStart_protocolIEs* pvalue);

EXTERN int asn1PD_TraceStart_protocolIEs (OSCTXT* pctxt, TraceStart_protocolIEs* pvalue);

EXTERN void asn1Print_TraceStart_protocolIEs 
   (const char* name, const TraceStart_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_TraceStart_protocolIEs (const char* name, 
   TraceStart_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceStart_protocolIEs (OSCTXT *pctxt, 
   const char* name, const TraceStart_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_TraceStartIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, TraceStart_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_TraceStartIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, TraceStart_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type TraceActivation to list */
struct TraceActivation ;
EXTERN int asn1Append_TraceStartIEs_id_TraceActivation
   (OSCTXT* pctxt, TraceStart_protocolIEs* plist, struct TraceActivation 
   *pvalue);

/* Get IE using id key value */
EXTERN struct TraceStart_protocolIEs_element* asn1Get_TraceStart_protocolIEs 
   (ProtocolIE_ID id, TraceStart_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TraceStart_protocolIEs (OSCTXT* pctxt, ProtocolIE_ID id, 
   TraceStart_protocolIEs* plist, TraceStart_protocolIEs* pmatches);

EXTERN int asn1Init_TraceStart_protocolIEs (TraceStart_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceStart                                                */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 TRACE ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 TRACE START
 **************************************************************
TraceStart ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({TraceStartIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({TraceStartIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({TraceStartIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN TraceStart {
   TraceStart_protocolIEs protocolIEs;
   OSRTDList extElem1;
} TraceStart;

EXTERN int asn1PE_TraceStart (OSCTXT* pctxt, TraceStart* pvalue);

EXTERN int asn1PD_TraceStart (OSCTXT* pctxt, TraceStart* pvalue);

EXTERN void asn1Print_TraceStart (const char* name, const TraceStart* pvalue);

EXTERN int asn1PrtToStr_TraceStart (const char* name, TraceStart* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceStart (OSCTXT *pctxt, 
   const char* name, const TraceStart* pvalue);

EXTERN int asn1Init_TraceStart (TraceStart* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceFailureIndication_protocolIEs_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceFailureIndication'
*/
typedef struct EXTERN TraceFailureIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      TraceFailureIndicationIEs_TVALUE t;

      /**
       * TraceFailureIndicationIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _TraceFailureIndicationIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _TraceFailureIndicationIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-NGRANTraceID
          * criticality: ignore
          * presence: mandatory
          */
         NGRANTraceID *_TraceFailureIndicationIEs_id_NGRANTraceID;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_TraceFailureIndicationIEs_id_Cause;

         ASN1OpenType* extElem1;
      } u;
   } value;
} TraceFailureIndication_protocolIEs_element;

EXTERN int asn1PE_TraceFailureIndication_protocolIEs_element (OSCTXT* pctxt, TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_TraceFailureIndication_protocolIEs_element (OSCTXT* pctxt, TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_TraceFailureIndication_protocolIEs_element 
   (const char* name, const TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_TraceFailureIndication_protocolIEs_element (const char* name, 
   TraceFailureIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const TraceFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_id_NGRANTraceID
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs_element* pElem, 
   NGRANTraceID *pvalue);

EXTERN void asn1SetTC_TraceFailureIndication_protocolIEs_element_TraceFailureIndicationIEs_id_Cause
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs_element* pElem, Cause 
   *pvalue);

EXTERN int asn1Init_TraceFailureIndication_protocolIEs_element (
   TraceFailureIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceFailureIndication_protocolIEs                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceFailureIndication'
*/
/* List of TraceFailureIndication_protocolIEs_element */
typedef OSRTDList TraceFailureIndication_protocolIEs;

EXTERN int asn1PE_TraceFailureIndication_protocolIEs (OSCTXT* pctxt, TraceFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PD_TraceFailureIndication_protocolIEs (OSCTXT* pctxt, TraceFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Print_TraceFailureIndication_protocolIEs 
   (const char* name, const TraceFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_TraceFailureIndication_protocolIEs (const char* name, 
   TraceFailureIndication_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceFailureIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const TraceFailureIndication_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_TraceFailureIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_TraceFailureIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type NGRANTraceID to list */
struct NGRANTraceID ;
EXTERN int asn1Append_TraceFailureIndicationIEs_id_NGRANTraceID
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs* plist, struct 
   NGRANTraceID *pvalue);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_TraceFailureIndicationIEs_id_Cause
   (OSCTXT* pctxt, TraceFailureIndication_protocolIEs* plist, struct Cause 
   *pvalue);

/* Get IE using id key value */
EXTERN struct TraceFailureIndication_protocolIEs_element* 
   asn1Get_TraceFailureIndication_protocolIEs (ProtocolIE_ID id, 
   TraceFailureIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TraceFailureIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   TraceFailureIndication_protocolIEs* plist, 
   TraceFailureIndication_protocolIEs* pmatches);

EXTERN int asn1Init_TraceFailureIndication_protocolIEs (
   TraceFailureIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceFailureIndication                                    */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 TRACE FAILURE INDICATION
 **************************************************************
TraceFailureIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({TraceFailureIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({TraceFailureIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({TraceFailureIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN TraceFailureIndication {
   TraceFailureIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} TraceFailureIndication;

EXTERN int asn1PE_TraceFailureIndication (OSCTXT* pctxt, TraceFailureIndication* pvalue);

EXTERN int asn1PD_TraceFailureIndication (OSCTXT* pctxt, TraceFailureIndication* pvalue);

EXTERN void asn1Print_TraceFailureIndication 
   (const char* name, const TraceFailureIndication* pvalue);

EXTERN int asn1PrtToStr_TraceFailureIndication (const char* name, 
   TraceFailureIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceFailureIndication (OSCTXT *pctxt, 
   const char* name, const TraceFailureIndication* pvalue);

EXTERN int asn1Init_TraceFailureIndication (TraceFailureIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  DeactivateTrace_protocolIEs_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DeactivateTrace'
*/
typedef struct EXTERN DeactivateTrace_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      DeactivateTraceIEs_TVALUE t;

      /**
       * DeactivateTraceIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _DeactivateTraceIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _DeactivateTraceIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-NGRANTraceID
          * criticality: ignore
          * presence: mandatory
          */
         NGRANTraceID *_DeactivateTraceIEs_id_NGRANTraceID;

         ASN1OpenType* extElem1;
      } u;
   } value;
} DeactivateTrace_protocolIEs_element;

EXTERN int asn1PE_DeactivateTrace_protocolIEs_element (OSCTXT* pctxt, DeactivateTrace_protocolIEs_element* pvalue);

EXTERN int asn1PD_DeactivateTrace_protocolIEs_element (OSCTXT* pctxt, DeactivateTrace_protocolIEs_element* pvalue);

EXTERN void asn1Print_DeactivateTrace_protocolIEs_element 
   (const char* name, const DeactivateTrace_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_DeactivateTrace_protocolIEs_element (const char* name, 
   DeactivateTrace_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DeactivateTrace_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const DeactivateTrace_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_DeactivateTrace_protocolIEs_element_DeactivateTraceIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DeactivateTrace_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_DeactivateTrace_protocolIEs_element_DeactivateTraceIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DeactivateTrace_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_DeactivateTrace_protocolIEs_element_DeactivateTraceIEs_id_NGRANTraceID
   (OSCTXT* pctxt, DeactivateTrace_protocolIEs_element* pElem, NGRANTraceID 
   *pvalue);

EXTERN int asn1Init_DeactivateTrace_protocolIEs_element (
   DeactivateTrace_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DeactivateTrace_protocolIEs                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DeactivateTrace'
*/
/* List of DeactivateTrace_protocolIEs_element */
typedef OSRTDList DeactivateTrace_protocolIEs;

EXTERN int asn1PE_DeactivateTrace_protocolIEs (OSCTXT* pctxt, DeactivateTrace_protocolIEs* pvalue);

EXTERN int asn1PD_DeactivateTrace_protocolIEs (OSCTXT* pctxt, DeactivateTrace_protocolIEs* pvalue);

EXTERN void asn1Print_DeactivateTrace_protocolIEs 
   (const char* name, const DeactivateTrace_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_DeactivateTrace_protocolIEs (const char* name, 
   DeactivateTrace_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DeactivateTrace_protocolIEs (OSCTXT *pctxt, 
   const char* name, const DeactivateTrace_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_DeactivateTraceIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, DeactivateTrace_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_DeactivateTraceIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, DeactivateTrace_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type NGRANTraceID to list */
struct NGRANTraceID ;
EXTERN int asn1Append_DeactivateTraceIEs_id_NGRANTraceID
   (OSCTXT* pctxt, DeactivateTrace_protocolIEs* plist, struct NGRANTraceID 
   *pvalue);

/* Get IE using id key value */
EXTERN struct DeactivateTrace_protocolIEs_element* 
   asn1Get_DeactivateTrace_protocolIEs (ProtocolIE_ID id, 
   DeactivateTrace_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DeactivateTrace_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, DeactivateTrace_protocolIEs* plist, 
   DeactivateTrace_protocolIEs* pmatches);

EXTERN int asn1Init_DeactivateTrace_protocolIEs (DeactivateTrace_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  DeactivateTrace                                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 DEACTIVATE TRACE
 **************************************************************
DeactivateTrace ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DeactivateTraceIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DeactivateTraceIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DeactivateTraceIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN DeactivateTrace {
   DeactivateTrace_protocolIEs protocolIEs;
   OSRTDList extElem1;
} DeactivateTrace;

EXTERN int asn1PE_DeactivateTrace (OSCTXT* pctxt, DeactivateTrace* pvalue);

EXTERN int asn1PD_DeactivateTrace (OSCTXT* pctxt, DeactivateTrace* pvalue);

EXTERN void asn1Print_DeactivateTrace 
   (const char* name, const DeactivateTrace* pvalue);

EXTERN int asn1PrtToStr_DeactivateTrace (const char* name, DeactivateTrace* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DeactivateTrace (OSCTXT *pctxt, 
   const char* name, const DeactivateTrace* pvalue);

EXTERN int asn1Init_DeactivateTrace (DeactivateTrace* pvalue);

/**************************************************************/
/*                                                            */
/*  CellTrafficTrace_protocolIEs_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellTrafficTrace'
*/
typedef struct EXTERN CellTrafficTrace_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      CellTrafficTraceIEs_TVALUE t;

      /**
       * CellTrafficTraceIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _CellTrafficTraceIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _CellTrafficTraceIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-NGRANTraceID
          * criticality: ignore
          * presence: mandatory
          */
         NGRANTraceID *_CellTrafficTraceIEs_id_NGRANTraceID;
         /**
          * id: id-NGRAN-CGI
          * criticality: ignore
          * presence: mandatory
          */
         NGRAN_CGI *_CellTrafficTraceIEs_id_NGRAN_CGI;
         /**
          * id: id-TraceCollectionEntityIPAddress
          * criticality: ignore
          * presence: mandatory
          */
         TransportLayerAddress *_CellTrafficTraceIEs_id_TraceCollectionEntityIPAddress;

         ASN1OpenType* extElem1;
      } u;
   } value;
} CellTrafficTrace_protocolIEs_element;

EXTERN int asn1PE_CellTrafficTrace_protocolIEs_element (OSCTXT* pctxt, CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN int asn1PD_CellTrafficTrace_protocolIEs_element (OSCTXT* pctxt, CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN void asn1Print_CellTrafficTrace_protocolIEs_element 
   (const char* name, const CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_CellTrafficTrace_protocolIEs_element (const char* name, 
   CellTrafficTrace_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellTrafficTrace_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const CellTrafficTrace_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_id_NGRANTraceID
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs_element* pElem, NGRANTraceID 
   *pvalue);

EXTERN void asn1SetTC_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_id_NGRAN_CGI
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs_element* pElem, NGRAN_CGI 
   *pvalue);

EXTERN void asn1SetTC_CellTrafficTrace_protocolIEs_element_CellTrafficTraceIEs_id_TraceCollectionEntityIPAddress
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs_element* pElem, 
   TransportLayerAddress *pvalue);

EXTERN int asn1Init_CellTrafficTrace_protocolIEs_element (
   CellTrafficTrace_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellTrafficTrace_protocolIEs                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellTrafficTrace'
*/
/* List of CellTrafficTrace_protocolIEs_element */
typedef OSRTDList CellTrafficTrace_protocolIEs;

EXTERN int asn1PE_CellTrafficTrace_protocolIEs (OSCTXT* pctxt, CellTrafficTrace_protocolIEs* pvalue);

EXTERN int asn1PD_CellTrafficTrace_protocolIEs (OSCTXT* pctxt, CellTrafficTrace_protocolIEs* pvalue);

EXTERN void asn1Print_CellTrafficTrace_protocolIEs 
   (const char* name, const CellTrafficTrace_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_CellTrafficTrace_protocolIEs (const char* name, 
   CellTrafficTrace_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellTrafficTrace_protocolIEs (OSCTXT *pctxt, 
   const char* name, const CellTrafficTrace_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_CellTrafficTraceIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_CellTrafficTraceIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type NGRANTraceID to list */
struct NGRANTraceID ;
EXTERN int asn1Append_CellTrafficTraceIEs_id_NGRANTraceID
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs* plist, struct NGRANTraceID 
   *pvalue);

/* Append IE with value type NGRAN_CGI to list */
struct NGRAN_CGI ;
EXTERN int asn1Append_CellTrafficTraceIEs_id_NGRAN_CGI
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs* plist, struct NGRAN_CGI 
   *pvalue);

/* Append IE with value type TransportLayerAddress to list */
EXTERN int asn1Append_CellTrafficTraceIEs_id_TraceCollectionEntityIPAddress
   (OSCTXT* pctxt, CellTrafficTrace_protocolIEs* plist, TransportLayerAddress 
   *pvalue);

/* Get IE using id key value */
EXTERN struct CellTrafficTrace_protocolIEs_element* 
   asn1Get_CellTrafficTrace_protocolIEs (ProtocolIE_ID id, 
   CellTrafficTrace_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CellTrafficTrace_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, CellTrafficTrace_protocolIEs* plist, 
   CellTrafficTrace_protocolIEs* pmatches);

EXTERN int asn1Init_CellTrafficTrace_protocolIEs (
   CellTrafficTrace_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  CellTrafficTrace                                          */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 CELL TRAFFIC TRACE
 **************************************************************
CellTrafficTrace ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({CellTrafficTraceIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({CellTrafficTraceIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({CellTrafficTraceIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN CellTrafficTrace {
   CellTrafficTrace_protocolIEs protocolIEs;
   OSRTDList extElem1;
} CellTrafficTrace;

EXTERN int asn1PE_CellTrafficTrace (OSCTXT* pctxt, CellTrafficTrace* pvalue);

EXTERN int asn1PD_CellTrafficTrace (OSCTXT* pctxt, CellTrafficTrace* pvalue);

EXTERN void asn1Print_CellTrafficTrace 
   (const char* name, const CellTrafficTrace* pvalue);

EXTERN int asn1PrtToStr_CellTrafficTrace (const char* name, CellTrafficTrace* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellTrafficTrace (OSCTXT *pctxt, 
   const char* name, const CellTrafficTrace* pvalue);

EXTERN int asn1Init_CellTrafficTrace (CellTrafficTrace* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingControl_protocolIEs_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingControl'
*/
typedef struct EXTERN LocationReportingControl_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      LocationReportingControlIEs_TVALUE t;

      /**
       * LocationReportingControlIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _LocationReportingControlIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _LocationReportingControlIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-LocationReportingRequestType
          * criticality: ignore
          * presence: mandatory
          */
         LocationReportingRequestType *_LocationReportingControlIEs_id_LocationReportingRequestType;

         ASN1OpenType* extElem1;
      } u;
   } value;
} LocationReportingControl_protocolIEs_element;

EXTERN int asn1PE_LocationReportingControl_protocolIEs_element (OSCTXT* pctxt, LocationReportingControl_protocolIEs_element* pvalue);

EXTERN int asn1PD_LocationReportingControl_protocolIEs_element (OSCTXT* pctxt, LocationReportingControl_protocolIEs_element* pvalue);

EXTERN void asn1Print_LocationReportingControl_protocolIEs_element 
   (const char* name, const LocationReportingControl_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_LocationReportingControl_protocolIEs_element (
   const char* name, LocationReportingControl_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingControl_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const LocationReportingControl_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_LocationReportingControl_protocolIEs_element_LocationReportingControlIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingControl_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_LocationReportingControl_protocolIEs_element_LocationReportingControlIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingControl_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_LocationReportingControl_protocolIEs_element_LocationReportingControlIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, LocationReportingControl_protocolIEs_element* pElem, 
   LocationReportingRequestType *pvalue);

EXTERN int asn1Init_LocationReportingControl_protocolIEs_element (
   LocationReportingControl_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingControl_protocolIEs                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingControl'
*/
/* List of LocationReportingControl_protocolIEs_element */
typedef OSRTDList LocationReportingControl_protocolIEs;

EXTERN int asn1PE_LocationReportingControl_protocolIEs (OSCTXT* pctxt, LocationReportingControl_protocolIEs* pvalue);

EXTERN int asn1PD_LocationReportingControl_protocolIEs (OSCTXT* pctxt, LocationReportingControl_protocolIEs* pvalue);

EXTERN void asn1Print_LocationReportingControl_protocolIEs 
   (const char* name, const LocationReportingControl_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_LocationReportingControl_protocolIEs (const char* name, 
   LocationReportingControl_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingControl_protocolIEs (OSCTXT *pctxt, 
   const char* name, const LocationReportingControl_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_LocationReportingControlIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingControl_protocolIEs* plist, AMF_UE_NGAP_ID 
   value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_LocationReportingControlIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingControl_protocolIEs* plist, RAN_UE_NGAP_ID 
   value);

/* Append IE with value type LocationReportingRequestType to list */
struct LocationReportingRequestType ;
EXTERN int asn1Append_LocationReportingControlIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, LocationReportingControl_protocolIEs* plist, struct 
   LocationReportingRequestType *pvalue);

/* Get IE using id key value */
EXTERN struct LocationReportingControl_protocolIEs_element* 
   asn1Get_LocationReportingControl_protocolIEs (ProtocolIE_ID id, 
   LocationReportingControl_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_LocationReportingControl_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   LocationReportingControl_protocolIEs* plist, 
   LocationReportingControl_protocolIEs* pmatches);

EXTERN int asn1Init_LocationReportingControl_protocolIEs (
   LocationReportingControl_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingControl                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 LOCATION REPORTING ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 LOCATION REPORTING CONTROL
 **************************************************************
LocationReportingControl ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({LocationReportingControlIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({LocationReportingControlIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({LocationReportingControlIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN LocationReportingControl {
   LocationReportingControl_protocolIEs protocolIEs;
   OSRTDList extElem1;
} LocationReportingControl;

EXTERN int asn1PE_LocationReportingControl (OSCTXT* pctxt, LocationReportingControl* pvalue);

EXTERN int asn1PD_LocationReportingControl (OSCTXT* pctxt, LocationReportingControl* pvalue);

EXTERN void asn1Print_LocationReportingControl 
   (const char* name, const LocationReportingControl* pvalue);

EXTERN int asn1PrtToStr_LocationReportingControl (const char* name, 
   LocationReportingControl* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingControl (OSCTXT *pctxt, 
   const char* name, const LocationReportingControl* pvalue);

EXTERN int asn1Init_LocationReportingControl (LocationReportingControl* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingFailureIndication_protocolIEs_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingFailureIndication'
*/
typedef struct EXTERN LocationReportingFailureIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      LocationReportingFailureIndicationIEs_TVALUE t;

      /**
       * LocationReportingFailureIndicationIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _LocationReportingFailureIndicationIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _LocationReportingFailureIndicationIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-Cause
          * criticality: ignore
          * presence: mandatory
          */
         Cause *_LocationReportingFailureIndicationIEs_id_Cause;

         ASN1OpenType* extElem1;
      } u;
   } value;
} LocationReportingFailureIndication_protocolIEs_element;

EXTERN int asn1PE_LocationReportingFailureIndication_protocolIEs_element (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_LocationReportingFailureIndication_protocolIEs_element (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_LocationReportingFailureIndication_protocolIEs_element 
   (const char* name, const LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_LocationReportingFailureIndication_protocolIEs_element (
   const char* name, 
   LocationReportingFailureIndication_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingFailureIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const LocationReportingFailureIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_LocationReportingFailureIndication_protocolIEs_element_LocationReportingFailureIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs_element* pElem
   , AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_LocationReportingFailureIndication_protocolIEs_element_LocationReportingFailureIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs_element* pElem
   , RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_LocationReportingFailureIndication_protocolIEs_element_LocationReportingFailureIndicationIEs_id_Cause
   (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs_element* pElem
   , Cause *pvalue);

EXTERN int asn1Init_LocationReportingFailureIndication_protocolIEs_element (
   LocationReportingFailureIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingFailureIndication_protocolIEs            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingFailureIndication'
*/
/* List of LocationReportingFailureIndication_protocolIEs_element */
typedef OSRTDList LocationReportingFailureIndication_protocolIEs;

EXTERN int asn1PE_LocationReportingFailureIndication_protocolIEs (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PD_LocationReportingFailureIndication_protocolIEs (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs* pvalue);

EXTERN void asn1Print_LocationReportingFailureIndication_protocolIEs 
   (const char* name, const LocationReportingFailureIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_LocationReportingFailureIndication_protocolIEs (
   const char* name, LocationReportingFailureIndication_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingFailureIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const LocationReportingFailureIndication_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_LocationReportingFailureIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_LocationReportingFailureIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type Cause to list */
struct Cause ;
EXTERN int asn1Append_LocationReportingFailureIndicationIEs_id_Cause
   (OSCTXT* pctxt, LocationReportingFailureIndication_protocolIEs* plist, 
   struct Cause *pvalue);

/* Get IE using id key value */
EXTERN struct LocationReportingFailureIndication_protocolIEs_element* 
   asn1Get_LocationReportingFailureIndication_protocolIEs (ProtocolIE_ID id, 
   LocationReportingFailureIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_LocationReportingFailureIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   LocationReportingFailureIndication_protocolIEs* plist, 
   LocationReportingFailureIndication_protocolIEs* pmatches);

EXTERN int asn1Init_LocationReportingFailureIndication_protocolIEs (
   LocationReportingFailureIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingFailureIndication                        */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 LOCATION REPORTING FAILURE INDICATION
 **************************************************************
LocationReportingFailureIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({LocationReportingFailureIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({LocationReportingFailureIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({LocationReportingFailureIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN LocationReportingFailureIndication {
   LocationReportingFailureIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} LocationReportingFailureIndication;

EXTERN int asn1PE_LocationReportingFailureIndication (OSCTXT* pctxt, LocationReportingFailureIndication* pvalue);

EXTERN int asn1PD_LocationReportingFailureIndication (OSCTXT* pctxt, LocationReportingFailureIndication* pvalue);

EXTERN void asn1Print_LocationReportingFailureIndication 
   (const char* name, const LocationReportingFailureIndication* pvalue);

EXTERN int asn1PrtToStr_LocationReportingFailureIndication (const char* name, 
   LocationReportingFailureIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingFailureIndication (OSCTXT *pctxt, 
   const char* name, const LocationReportingFailureIndication* pvalue);

EXTERN int asn1Init_LocationReportingFailureIndication (
   LocationReportingFailureIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReport_protocolIEs_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReport'
*/
typedef struct EXTERN LocationReport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      LocationReportIEs_TVALUE t;

      /**
       * LocationReportIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _LocationReportIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _LocationReportIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: mandatory
          */
         UserLocationInformation *_LocationReportIEs_id_UserLocationInformation;
         /**
          * id: id-UEPresenceInAreaOfInterestList
          * criticality: ignore
          * presence: optional
          */
         UEPresenceInAreaOfInterestList *_LocationReportIEs_id_UEPresenceInAreaOfInterestList;
         /**
          * id: id-LocationReportingRequestType
          * criticality: ignore
          * presence: mandatory
          */
         LocationReportingRequestType *_LocationReportIEs_id_LocationReportingRequestType;

         ASN1OpenType* extElem1;
      } u;
   } value;
} LocationReport_protocolIEs_element;

EXTERN int asn1PE_LocationReport_protocolIEs_element (OSCTXT* pctxt, LocationReport_protocolIEs_element* pvalue);

EXTERN int asn1PD_LocationReport_protocolIEs_element (OSCTXT* pctxt, LocationReport_protocolIEs_element* pvalue);

EXTERN void asn1Print_LocationReport_protocolIEs_element 
   (const char* name, const LocationReport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_LocationReport_protocolIEs_element (const char* name, 
   LocationReport_protocolIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const LocationReport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_LocationReport_protocolIEs_element_LocationReportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReport_protocolIEs_element* pElem, AMF_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_LocationReport_protocolIEs_element_LocationReportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReport_protocolIEs_element* pElem, RAN_UE_NGAP_ID 
   value);

EXTERN void asn1SetTC_LocationReport_protocolIEs_element_LocationReportIEs_id_UserLocationInformation
   (OSCTXT* pctxt, LocationReport_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN void asn1SetTC_LocationReport_protocolIEs_element_LocationReportIEs_id_UEPresenceInAreaOfInterestList
   (OSCTXT* pctxt, LocationReport_protocolIEs_element* pElem, 
   UEPresenceInAreaOfInterestList *pvalue);

EXTERN void asn1SetTC_LocationReport_protocolIEs_element_LocationReportIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, LocationReport_protocolIEs_element* pElem, 
   LocationReportingRequestType *pvalue);

EXTERN int asn1Init_LocationReport_protocolIEs_element (
   LocationReport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReport_protocolIEs                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReport'
*/
/* List of LocationReport_protocolIEs_element */
typedef OSRTDList LocationReport_protocolIEs;

EXTERN int asn1PE_LocationReport_protocolIEs (OSCTXT* pctxt, LocationReport_protocolIEs* pvalue);

EXTERN int asn1PD_LocationReport_protocolIEs (OSCTXT* pctxt, LocationReport_protocolIEs* pvalue);

EXTERN void asn1Print_LocationReport_protocolIEs 
   (const char* name, const LocationReport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_LocationReport_protocolIEs (const char* name, 
   LocationReport_protocolIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const LocationReport_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_LocationReportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReport_protocolIEs* plist, AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_LocationReportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, LocationReport_protocolIEs* plist, RAN_UE_NGAP_ID value);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_LocationReportIEs_id_UserLocationInformation
   (OSCTXT* pctxt, LocationReport_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Append IE with value type UEPresenceInAreaOfInterestList to list */
EXTERN int asn1Append_LocationReportIEs_id_UEPresenceInAreaOfInterestList
   (OSCTXT* pctxt, LocationReport_protocolIEs* plist, 
   UEPresenceInAreaOfInterestList *pvalue);

/* Append IE with value type LocationReportingRequestType to list */
struct LocationReportingRequestType ;
EXTERN int asn1Append_LocationReportIEs_id_LocationReportingRequestType
   (OSCTXT* pctxt, LocationReport_protocolIEs* plist, struct 
   LocationReportingRequestType *pvalue);

/* Get IE using id key value */
EXTERN struct LocationReport_protocolIEs_element* 
   asn1Get_LocationReport_protocolIEs (ProtocolIE_ID id, 
   LocationReport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_LocationReport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, LocationReport_protocolIEs* plist, 
   LocationReport_protocolIEs* pmatches);

EXTERN int asn1Init_LocationReport_protocolIEs (LocationReport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReport                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 LOCATION REPORT
 **************************************************************
LocationReport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({LocationReportIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({LocationReportIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({LocationReportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN LocationReport {
   LocationReport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} LocationReport;

EXTERN int asn1PE_LocationReport (OSCTXT* pctxt, LocationReport* pvalue);

EXTERN int asn1PD_LocationReport (OSCTXT* pctxt, LocationReport* pvalue);

EXTERN void asn1Print_LocationReport (const char* name, const LocationReport* pvalue);

EXTERN int asn1PrtToStr_LocationReport (const char* name, LocationReport* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReport (OSCTXT *pctxt, 
   const char* name, const LocationReport* pvalue);

EXTERN int asn1Init_LocationReport (LocationReport* pvalue);

/**************************************************************/
/*                                                            */
/*  UETNLABindingReleaseRequest_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UETNLABindingReleaseRequest'
*/
typedef struct EXTERN UETNLABindingReleaseRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UETNLABindingReleaseRequestIEs_TVALUE t;

      /**
       * UETNLABindingReleaseRequestIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UETNLABindingReleaseRequestIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UETNLABindingReleaseRequestIEs_id_RAN_UE_NGAP_ID;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UETNLABindingReleaseRequest_protocolIEs_element;

EXTERN int asn1PE_UETNLABindingReleaseRequest_protocolIEs_element (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_UETNLABindingReleaseRequest_protocolIEs_element (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_UETNLABindingReleaseRequest_protocolIEs_element 
   (const char* name, const UETNLABindingReleaseRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UETNLABindingReleaseRequest_protocolIEs_element (
   const char* name, UETNLABindingReleaseRequest_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UETNLABindingReleaseRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UETNLABindingReleaseRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UETNLABindingReleaseRequest_protocolIEs_element_UETNLABindingReleaseRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UETNLABindingReleaseRequest_protocolIEs_element_UETNLABindingReleaseRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN int asn1Init_UETNLABindingReleaseRequest_protocolIEs_element (
   UETNLABindingReleaseRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UETNLABindingReleaseRequest_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UETNLABindingReleaseRequest'
*/
/* List of UETNLABindingReleaseRequest_protocolIEs_element */
typedef OSRTDList UETNLABindingReleaseRequest_protocolIEs;

EXTERN int asn1PE_UETNLABindingReleaseRequest_protocolIEs (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs* pvalue);

EXTERN int asn1PD_UETNLABindingReleaseRequest_protocolIEs (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs* pvalue);

EXTERN void asn1Print_UETNLABindingReleaseRequest_protocolIEs 
   (const char* name, const UETNLABindingReleaseRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UETNLABindingReleaseRequest_protocolIEs (const char* name, 
   UETNLABindingReleaseRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UETNLABindingReleaseRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UETNLABindingReleaseRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UETNLABindingReleaseRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UETNLABindingReleaseRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UETNLABindingReleaseRequest_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Get IE using id key value */
EXTERN struct UETNLABindingReleaseRequest_protocolIEs_element* 
   asn1Get_UETNLABindingReleaseRequest_protocolIEs (ProtocolIE_ID id, 
   UETNLABindingReleaseRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UETNLABindingReleaseRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UETNLABindingReleaseRequest_protocolIEs* plist, 
   UETNLABindingReleaseRequest_protocolIEs* pmatches);

EXTERN int asn1Init_UETNLABindingReleaseRequest_protocolIEs (
   UETNLABindingReleaseRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UETNLABindingReleaseRequest                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE TNLA BINDING ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 UE TNLA BINDING RELEASE REQUEST
 **************************************************************
UETNLABindingReleaseRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UETNLABindingReleaseRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UETNLABindingReleaseRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UETNLABindingReleaseRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UETNLABindingReleaseRequest {
   UETNLABindingReleaseRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UETNLABindingReleaseRequest;

EXTERN int asn1PE_UETNLABindingReleaseRequest (OSCTXT* pctxt, UETNLABindingReleaseRequest* pvalue);

EXTERN int asn1PD_UETNLABindingReleaseRequest (OSCTXT* pctxt, UETNLABindingReleaseRequest* pvalue);

EXTERN void asn1Print_UETNLABindingReleaseRequest 
   (const char* name, const UETNLABindingReleaseRequest* pvalue);

EXTERN int asn1PrtToStr_UETNLABindingReleaseRequest (const char* name, 
   UETNLABindingReleaseRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UETNLABindingReleaseRequest (OSCTXT *pctxt, 
   const char* name, const UETNLABindingReleaseRequest* pvalue);

EXTERN int asn1Init_UETNLABindingReleaseRequest (UETNLABindingReleaseRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityInfoIndication_protocolIEs_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityInfoIndication'
*/
typedef struct EXTERN UERadioCapabilityInfoIndication_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UERadioCapabilityInfoIndicationIEs_TVALUE t;

      /**
       * UERadioCapabilityInfoIndicationIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UERadioCapabilityInfoIndicationIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UERadioCapabilityInfoIndicationIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-UERadioCapability
          * criticality: ignore
          * presence: mandatory
          */
         UERadioCapability *_UERadioCapabilityInfoIndicationIEs_id_UERadioCapability;
         /**
          * id: id-UERadioCapabilityForPaging
          * criticality: ignore
          * presence: optional
          */
         UERadioCapabilityForPaging *_UERadioCapabilityInfoIndicationIEs_id_UERadioCapabilityForPaging;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UERadioCapabilityInfoIndication_protocolIEs_element;

EXTERN int asn1PE_UERadioCapabilityInfoIndication_protocolIEs_element (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN int asn1PD_UERadioCapabilityInfoIndication_protocolIEs_element (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN void asn1Print_UERadioCapabilityInfoIndication_protocolIEs_element 
   (const char* name, const UERadioCapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityInfoIndication_protocolIEs_element (
   const char* name, 
   UERadioCapabilityInfoIndication_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityInfoIndication_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityInfoIndication_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UERadioCapabilityInfoIndication_protocolIEs_element_UERadioCapabilityInfoIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UERadioCapabilityInfoIndication_protocolIEs_element_UERadioCapabilityInfoIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UERadioCapabilityInfoIndication_protocolIEs_element_UERadioCapabilityInfoIndicationIEs_id_UERadioCapability
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs_element* pElem, 
   UERadioCapability *pvalue);

EXTERN void asn1SetTC_UERadioCapabilityInfoIndication_protocolIEs_element_UERadioCapabilityInfoIndicationIEs_id_UERadioCapabilityForPaging
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs_element* pElem, 
   UERadioCapabilityForPaging *pvalue);

EXTERN int asn1Init_UERadioCapabilityInfoIndication_protocolIEs_element (
   UERadioCapabilityInfoIndication_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityInfoIndication_protocolIEs               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityInfoIndication'
*/
/* List of UERadioCapabilityInfoIndication_protocolIEs_element */
typedef OSRTDList UERadioCapabilityInfoIndication_protocolIEs;

EXTERN int asn1PE_UERadioCapabilityInfoIndication_protocolIEs (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs* pvalue);

EXTERN int asn1PD_UERadioCapabilityInfoIndication_protocolIEs (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs* pvalue);

EXTERN void asn1Print_UERadioCapabilityInfoIndication_protocolIEs 
   (const char* name, const UERadioCapabilityInfoIndication_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityInfoIndication_protocolIEs (
   const char* name, UERadioCapabilityInfoIndication_protocolIEs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityInfoIndication_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityInfoIndication_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UERadioCapabilityInfoIndicationIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UERadioCapabilityInfoIndicationIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type UERadioCapability to list */
EXTERN int asn1Append_UERadioCapabilityInfoIndicationIEs_id_UERadioCapability
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs* plist, 
   UERadioCapability *pvalue);

/* Append IE with value type UERadioCapabilityForPaging to list */
struct UERadioCapabilityForPaging ;
EXTERN int asn1Append_UERadioCapabilityInfoIndicationIEs_id_UERadioCapabilityForPaging
   (OSCTXT* pctxt, UERadioCapabilityInfoIndication_protocolIEs* plist, struct 
   UERadioCapabilityForPaging *pvalue);

/* Get IE using id key value */
EXTERN struct UERadioCapabilityInfoIndication_protocolIEs_element* 
   asn1Get_UERadioCapabilityInfoIndication_protocolIEs (ProtocolIE_ID id, 
   UERadioCapabilityInfoIndication_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UERadioCapabilityInfoIndication_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UERadioCapabilityInfoIndication_protocolIEs* plist, 
   UERadioCapabilityInfoIndication_protocolIEs* pmatches);

EXTERN int asn1Init_UERadioCapabilityInfoIndication_protocolIEs (
   UERadioCapabilityInfoIndication_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityInfoIndication                           */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE RADIO CAPABILITY MANAGEMENT ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 UE RADIO CAPABILITY INFO INDICATION
 **************************************************************
UERadioCapabilityInfoIndication ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UERadioCapabilityInfoIndicationIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UERadioCapabilityInfoIndicationIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UERadioCapabilityInfoIndicationIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UERadioCapabilityInfoIndication {
   UERadioCapabilityInfoIndication_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UERadioCapabilityInfoIndication;

EXTERN int asn1PE_UERadioCapabilityInfoIndication (OSCTXT* pctxt, UERadioCapabilityInfoIndication* pvalue);

EXTERN int asn1PD_UERadioCapabilityInfoIndication (OSCTXT* pctxt, UERadioCapabilityInfoIndication* pvalue);

EXTERN void asn1Print_UERadioCapabilityInfoIndication 
   (const char* name, const UERadioCapabilityInfoIndication* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityInfoIndication (const char* name, 
   UERadioCapabilityInfoIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityInfoIndication (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityInfoIndication* pvalue);

EXTERN int asn1Init_UERadioCapabilityInfoIndication (
   UERadioCapabilityInfoIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityCheckRequest_protocolIEs_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityCheckRequest'
*/
typedef struct EXTERN UERadioCapabilityCheckRequest_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UERadioCapabilityCheckRequestIEs_TVALUE t;

      /**
       * UERadioCapabilityCheckRequestIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UERadioCapabilityCheckRequestIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: reject
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UERadioCapabilityCheckRequestIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-UERadioCapability
          * criticality: ignore
          * presence: optional
          */
         UERadioCapability *_UERadioCapabilityCheckRequestIEs_id_UERadioCapability;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UERadioCapabilityCheckRequest_protocolIEs_element;

EXTERN int asn1PE_UERadioCapabilityCheckRequest_protocolIEs_element (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs_element* pvalue);

EXTERN int asn1PD_UERadioCapabilityCheckRequest_protocolIEs_element (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs_element* pvalue);

EXTERN void asn1Print_UERadioCapabilityCheckRequest_protocolIEs_element 
   (const char* name, const UERadioCapabilityCheckRequest_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityCheckRequest_protocolIEs_element (
   const char* name, 
   UERadioCapabilityCheckRequest_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityCheckRequest_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityCheckRequest_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UERadioCapabilityCheckRequest_protocolIEs_element_UERadioCapabilityCheckRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UERadioCapabilityCheckRequest_protocolIEs_element_UERadioCapabilityCheckRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UERadioCapabilityCheckRequest_protocolIEs_element_UERadioCapabilityCheckRequestIEs_id_UERadioCapability
   (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs_element* pElem, 
   UERadioCapability *pvalue);

EXTERN int asn1Init_UERadioCapabilityCheckRequest_protocolIEs_element (
   UERadioCapabilityCheckRequest_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityCheckRequest_protocolIEs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityCheckRequest'
*/
/* List of UERadioCapabilityCheckRequest_protocolIEs_element */
typedef OSRTDList UERadioCapabilityCheckRequest_protocolIEs;

EXTERN int asn1PE_UERadioCapabilityCheckRequest_protocolIEs (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs* pvalue);

EXTERN int asn1PD_UERadioCapabilityCheckRequest_protocolIEs (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs* pvalue);

EXTERN void asn1Print_UERadioCapabilityCheckRequest_protocolIEs 
   (const char* name, const UERadioCapabilityCheckRequest_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityCheckRequest_protocolIEs (const char* name, 
   UERadioCapabilityCheckRequest_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityCheckRequest_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityCheckRequest_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UERadioCapabilityCheckRequestIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UERadioCapabilityCheckRequestIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type UERadioCapability to list */
EXTERN int asn1Append_UERadioCapabilityCheckRequestIEs_id_UERadioCapability
   (OSCTXT* pctxt, UERadioCapabilityCheckRequest_protocolIEs* plist, 
   UERadioCapability *pvalue);

/* Get IE using id key value */
EXTERN struct UERadioCapabilityCheckRequest_protocolIEs_element* 
   asn1Get_UERadioCapabilityCheckRequest_protocolIEs (ProtocolIE_ID id, 
   UERadioCapabilityCheckRequest_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UERadioCapabilityCheckRequest_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UERadioCapabilityCheckRequest_protocolIEs* plist, 
   UERadioCapabilityCheckRequest_protocolIEs* pmatches);

EXTERN int asn1Init_UERadioCapabilityCheckRequest_protocolIEs (
   UERadioCapabilityCheckRequest_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityCheckRequest                             */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE Radio Capability Check Elementary Procedure
 **************************************************************
 **************************************************************
 UE RADIO CAPABILITY CHECK REQUEST
 **************************************************************
UERadioCapabilityCheckRequest ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UERadioCapabilityCheckRequestIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UERadioCapabilityCheckRequestIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UERadioCapabilityCheckRequestIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UERadioCapabilityCheckRequest {
   UERadioCapabilityCheckRequest_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UERadioCapabilityCheckRequest;

EXTERN int asn1PE_UERadioCapabilityCheckRequest (OSCTXT* pctxt, UERadioCapabilityCheckRequest* pvalue);

EXTERN int asn1PD_UERadioCapabilityCheckRequest (OSCTXT* pctxt, UERadioCapabilityCheckRequest* pvalue);

EXTERN void asn1Print_UERadioCapabilityCheckRequest 
   (const char* name, const UERadioCapabilityCheckRequest* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityCheckRequest (const char* name, 
   UERadioCapabilityCheckRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityCheckRequest (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityCheckRequest* pvalue);

EXTERN int asn1Init_UERadioCapabilityCheckRequest (
   UERadioCapabilityCheckRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityCheckResponse_protocolIEs_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityCheckResponse'
*/
typedef struct EXTERN UERadioCapabilityCheckResponse_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UERadioCapabilityCheckResponseIEs_TVALUE t;

      /**
       * UERadioCapabilityCheckResponseIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _UERadioCapabilityCheckResponseIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _UERadioCapabilityCheckResponseIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-IMSVoiceSupportIndicator
          * criticality: reject
          * presence: mandatory
          */
         IMSVoiceSupportIndicator _UERadioCapabilityCheckResponseIEs_id_IMSVoiceSupportIndicator;
         /**
          * id: id-CriticalityDiagnostics
          * criticality: ignore
          * presence: optional
          */
         CriticalityDiagnostics *_UERadioCapabilityCheckResponseIEs_id_CriticalityDiagnostics;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UERadioCapabilityCheckResponse_protocolIEs_element;

EXTERN int asn1PE_UERadioCapabilityCheckResponse_protocolIEs_element (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs_element* pvalue);

EXTERN int asn1PD_UERadioCapabilityCheckResponse_protocolIEs_element (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs_element* pvalue);

EXTERN void asn1Print_UERadioCapabilityCheckResponse_protocolIEs_element 
   (const char* name, const UERadioCapabilityCheckResponse_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityCheckResponse_protocolIEs_element (
   const char* name, 
   UERadioCapabilityCheckResponse_protocolIEs_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityCheckResponse_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityCheckResponse_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_UERadioCapabilityCheckResponse_protocolIEs_element_UERadioCapabilityCheckResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_UERadioCapabilityCheckResponse_protocolIEs_element_UERadioCapabilityCheckResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_UERadioCapabilityCheckResponse_protocolIEs_element_UERadioCapabilityCheckResponseIEs_id_IMSVoiceSupportIndicator
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs_element* pElem, 
   IMSVoiceSupportIndicator value);

EXTERN void asn1SetTC_UERadioCapabilityCheckResponse_protocolIEs_element_UERadioCapabilityCheckResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs_element* pElem, 
   CriticalityDiagnostics *pvalue);

EXTERN int asn1Init_UERadioCapabilityCheckResponse_protocolIEs_element (
   UERadioCapabilityCheckResponse_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityCheckResponse_protocolIEs                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityCheckResponse'
*/
/* List of UERadioCapabilityCheckResponse_protocolIEs_element */
typedef OSRTDList UERadioCapabilityCheckResponse_protocolIEs;

EXTERN int asn1PE_UERadioCapabilityCheckResponse_protocolIEs (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs* pvalue);

EXTERN int asn1PD_UERadioCapabilityCheckResponse_protocolIEs (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs* pvalue);

EXTERN void asn1Print_UERadioCapabilityCheckResponse_protocolIEs 
   (const char* name, const UERadioCapabilityCheckResponse_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityCheckResponse_protocolIEs (const char* name, 
   UERadioCapabilityCheckResponse_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityCheckResponse_protocolIEs (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityCheckResponse_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_UERadioCapabilityCheckResponseIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_UERadioCapabilityCheckResponseIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type IMSVoiceSupportIndicator to list */
EXTERN int asn1Append_UERadioCapabilityCheckResponseIEs_id_IMSVoiceSupportIndicator
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs* plist, 
   IMSVoiceSupportIndicator value);

/* Append IE with value type CriticalityDiagnostics to list */
struct CriticalityDiagnostics ;
EXTERN int asn1Append_UERadioCapabilityCheckResponseIEs_id_CriticalityDiagnostics
   (OSCTXT* pctxt, UERadioCapabilityCheckResponse_protocolIEs* plist, struct 
   CriticalityDiagnostics *pvalue);

/* Get IE using id key value */
EXTERN struct UERadioCapabilityCheckResponse_protocolIEs_element* 
   asn1Get_UERadioCapabilityCheckResponse_protocolIEs (ProtocolIE_ID id, 
   UERadioCapabilityCheckResponse_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UERadioCapabilityCheckResponse_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   UERadioCapabilityCheckResponse_protocolIEs* plist, 
   UERadioCapabilityCheckResponse_protocolIEs* pmatches);

EXTERN int asn1Init_UERadioCapabilityCheckResponse_protocolIEs (
   UERadioCapabilityCheckResponse_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityCheckResponse                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 UE RADIO CAPABILITY CHECK RESPONSE
 **************************************************************
UERadioCapabilityCheckResponse ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UERadioCapabilityCheckResponseIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UERadioCapabilityCheckResponseIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UERadioCapabilityCheckResponseIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN UERadioCapabilityCheckResponse {
   UERadioCapabilityCheckResponse_protocolIEs protocolIEs;
   OSRTDList extElem1;
} UERadioCapabilityCheckResponse;

EXTERN int asn1PE_UERadioCapabilityCheckResponse (OSCTXT* pctxt, UERadioCapabilityCheckResponse* pvalue);

EXTERN int asn1PD_UERadioCapabilityCheckResponse (OSCTXT* pctxt, UERadioCapabilityCheckResponse* pvalue);

EXTERN void asn1Print_UERadioCapabilityCheckResponse 
   (const char* name, const UERadioCapabilityCheckResponse* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityCheckResponse (const char* name, 
   UERadioCapabilityCheckResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityCheckResponse (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityCheckResponse* pvalue);

EXTERN int asn1Init_UERadioCapabilityCheckResponse (
   UERadioCapabilityCheckResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage_privateIEs_element                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PrivateMessage'
*/
typedef struct EXTERN PrivateMessage_privateIEs_element {
   PrivateIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} PrivateMessage_privateIEs_element;

EXTERN int asn1PE_PrivateMessage_privateIEs_element (OSCTXT* pctxt, PrivateMessage_privateIEs_element* pvalue);

EXTERN int asn1PD_PrivateMessage_privateIEs_element (OSCTXT* pctxt, PrivateMessage_privateIEs_element* pvalue);

EXTERN void asn1Print_PrivateMessage_privateIEs_element 
   (const char* name, const PrivateMessage_privateIEs_element* pvalue);

EXTERN int asn1PrtToStr_PrivateMessage_privateIEs_element (const char* name, 
   PrivateMessage_privateIEs_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PrivateMessage_privateIEs_element (OSCTXT *pctxt, 
   const char* name, const PrivateMessage_privateIEs_element* pvalue);

EXTERN int asn1Init_PrivateMessage_privateIEs_element (
   PrivateMessage_privateIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage_privateIEs                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PrivateMessage'
*/
/* List of PrivateMessage_privateIEs_element */
typedef OSRTDList PrivateMessage_privateIEs;

EXTERN int asn1PE_PrivateMessage_privateIEs (OSCTXT* pctxt, PrivateMessage_privateIEs* pvalue);

EXTERN int asn1PD_PrivateMessage_privateIEs (OSCTXT* pctxt, PrivateMessage_privateIEs* pvalue);

EXTERN void asn1Print_PrivateMessage_privateIEs 
   (const char* name, const PrivateMessage_privateIEs* pvalue);

EXTERN int asn1PrtToStr_PrivateMessage_privateIEs (const char* name, 
   PrivateMessage_privateIEs* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PrivateMessage_privateIEs (OSCTXT *pctxt, 
   const char* name, const PrivateMessage_privateIEs* pvalue);

/* Get IE using id key value */
EXTERN struct PrivateMessage_privateIEs_element* 
   asn1Get_PrivateMessage_privateIEs (PrivateIE_ID* id, 
   PrivateMessage_privateIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PrivateMessage_privateIEs 
   (OSCTXT* pctxt, PrivateIE_ID* id, PrivateMessage_privateIEs* plist, 
   PrivateMessage_privateIEs* pmatches);

EXTERN int asn1Init_PrivateMessage_privateIEs (PrivateMessage_privateIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PrivateMessage                                            */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 PRIVATE MESSAGE ELEMENTARY PROCEDURE
 **************************************************************
 **************************************************************
 PRIVATE MESSAGE
 **************************************************************
PrivateMessage ::= SEQUENCE {
   privateIEs [0] SEQUENCE (SIZE (1..maxPrivateIEs)) OF SEQUENCE {
      id [0] EXPLICIT NGAP-PRIVATE-IES.&id ({PrivateMessageIEs}),
      criticality [1] NGAP-PRIVATE-IES.&criticality ({PrivateMessageIEs}{@id}),
      value [2] EXPLICIT NGAP-PRIVATE-IES.&Value ({PrivateMessageIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PrivateMessage {
   PrivateMessage_privateIEs privateIEs;
   OSRTDList extElem1;
} PrivateMessage;

EXTERN int asn1PE_PrivateMessage (OSCTXT* pctxt, PrivateMessage* pvalue);

EXTERN int asn1PD_PrivateMessage (OSCTXT* pctxt, PrivateMessage* pvalue);

EXTERN void asn1Print_PrivateMessage (const char* name, const PrivateMessage* pvalue);

EXTERN int asn1PrtToStr_PrivateMessage (const char* name, PrivateMessage* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PrivateMessage (OSCTXT *pctxt, 
   const char* name, const PrivateMessage* pvalue);

EXTERN int asn1Init_PrivateMessage (PrivateMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReport_protocolIEs_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReport'
*/
typedef struct EXTERN SecondaryRATDataUsageReport_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      SecondaryRATDataUsageReportIEs_TVALUE t;

      /**
       * SecondaryRATDataUsageReportIEs information objects
       */
      union {
         /**
          * id: id-AMF-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         AMF_UE_NGAP_ID _SecondaryRATDataUsageReportIEs_id_AMF_UE_NGAP_ID;
         /**
          * id: id-RAN-UE-NGAP-ID
          * criticality: ignore
          * presence: mandatory
          */
         RAN_UE_NGAP_ID _SecondaryRATDataUsageReportIEs_id_RAN_UE_NGAP_ID;
         /**
          * id: id-PDUSessionResourceSecondaryRATUsageList
          * criticality: ignore
          * presence: mandatory
          */
         PDUSessionResourceSecondaryRATUsageList *_SecondaryRATDataUsageReportIEs_id_PDUSessionResourceSecondaryRATUsageList;
         /**
          * id: id-HandoverFlag
          * criticality: ignore
          * presence: optional
          */
         HandoverFlag _SecondaryRATDataUsageReportIEs_id_HandoverFlag;
         /**
          * id: id-UserLocationInformation
          * criticality: ignore
          * presence: optional
          */
         UserLocationInformation *_SecondaryRATDataUsageReportIEs_id_UserLocationInformation;

         ASN1OpenType* extElem1;
      } u;
   } value;
} SecondaryRATDataUsageReport_protocolIEs_element;

EXTERN int asn1PE_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN int asn1PD_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN void asn1Print_SecondaryRATDataUsageReport_protocolIEs_element 
   (const char* name, const SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATDataUsageReport_protocolIEs_element (
   const char* name, SecondaryRATDataUsageReport_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATDataUsageReport_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs_element* pElem, 
   AMF_UE_NGAP_ID value);

EXTERN void asn1SetTC_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs_element* pElem, 
   RAN_UE_NGAP_ID value);

EXTERN void asn1SetTC_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_id_PDUSessionResourceSecondaryRATUsageList
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs_element* pElem, 
   PDUSessionResourceSecondaryRATUsageList *pvalue);

EXTERN void asn1SetTC_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_id_HandoverFlag
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs_element* pElem, 
   HandoverFlag value);

EXTERN void asn1SetTC_SecondaryRATDataUsageReport_protocolIEs_element_SecondaryRATDataUsageReportIEs_id_UserLocationInformation
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs_element* pElem, 
   UserLocationInformation *pvalue);

EXTERN int asn1Init_SecondaryRATDataUsageReport_protocolIEs_element (
   SecondaryRATDataUsageReport_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReport_protocolIEs                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReport'
*/
/* List of SecondaryRATDataUsageReport_protocolIEs_element */
typedef OSRTDList SecondaryRATDataUsageReport_protocolIEs;

EXTERN int asn1PE_SecondaryRATDataUsageReport_protocolIEs (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs* pvalue);

EXTERN int asn1PD_SecondaryRATDataUsageReport_protocolIEs (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs* pvalue);

EXTERN void asn1Print_SecondaryRATDataUsageReport_protocolIEs 
   (const char* name, const SecondaryRATDataUsageReport_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATDataUsageReport_protocolIEs (const char* name, 
   SecondaryRATDataUsageReport_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATDataUsageReport_protocolIEs (OSCTXT *pctxt, 
   const char* name, const SecondaryRATDataUsageReport_protocolIEs* pvalue);

/* Append IE with value type AMF_UE_NGAP_ID to list */
EXTERN int asn1Append_SecondaryRATDataUsageReportIEs_id_AMF_UE_NGAP_ID
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs* plist, 
   AMF_UE_NGAP_ID value);

/* Append IE with value type RAN_UE_NGAP_ID to list */
EXTERN int asn1Append_SecondaryRATDataUsageReportIEs_id_RAN_UE_NGAP_ID
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs* plist, 
   RAN_UE_NGAP_ID value);

/* Append IE with value type PDUSessionResourceSecondaryRATUsageList to list */
EXTERN int asn1Append_SecondaryRATDataUsageReportIEs_id_PDUSessionResourceSecondaryRATUsageList
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs* plist, 
   PDUSessionResourceSecondaryRATUsageList *pvalue);

/* Append IE with value type HandoverFlag to list */
EXTERN int asn1Append_SecondaryRATDataUsageReportIEs_id_HandoverFlag
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs* plist, 
   HandoverFlag value);

/* Append IE with value type UserLocationInformation to list */
struct UserLocationInformation ;
EXTERN int asn1Append_SecondaryRATDataUsageReportIEs_id_UserLocationInformation
   (OSCTXT* pctxt, SecondaryRATDataUsageReport_protocolIEs* plist, struct 
   UserLocationInformation *pvalue);

/* Get IE using id key value */
EXTERN struct SecondaryRATDataUsageReport_protocolIEs_element* 
   asn1Get_SecondaryRATDataUsageReport_protocolIEs (ProtocolIE_ID id, 
   SecondaryRATDataUsageReport_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SecondaryRATDataUsageReport_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   SecondaryRATDataUsageReport_protocolIEs* plist, 
   SecondaryRATDataUsageReport_protocolIEs* pmatches);

EXTERN int asn1Init_SecondaryRATDataUsageReport_protocolIEs (
   SecondaryRATDataUsageReport_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReport                               */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 DATA USAGE REPORTING ELEMENTARY PROCEDURES
 **************************************************************
 **************************************************************
 SECONDARY RAT DATA USAGE REPORT
 **************************************************************
SecondaryRATDataUsageReport ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({SecondaryRATDataUsageReportIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({SecondaryRATDataUsageReportIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({SecondaryRATDataUsageReportIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN SecondaryRATDataUsageReport {
   SecondaryRATDataUsageReport_protocolIEs protocolIEs;
   OSRTDList extElem1;
} SecondaryRATDataUsageReport;

EXTERN int asn1PE_SecondaryRATDataUsageReport (OSCTXT* pctxt, SecondaryRATDataUsageReport* pvalue);

EXTERN int asn1PD_SecondaryRATDataUsageReport (OSCTXT* pctxt, SecondaryRATDataUsageReport* pvalue);

EXTERN void asn1Print_SecondaryRATDataUsageReport 
   (const char* name, const SecondaryRATDataUsageReport* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATDataUsageReport (const char* name, 
   SecondaryRATDataUsageReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATDataUsageReport (OSCTXT *pctxt, 
   const char* name, const SecondaryRATDataUsageReport* pvalue);

EXTERN int asn1Init_SecondaryRATDataUsageReport (SecondaryRATDataUsageReport* pvalue);

#ifdef __cplusplus
}
#endif

#endif
