/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.4.1.1, Date: 02-Jun-2020.
 */
#ifndef TS24008IES_H
#define TS24008IES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtsrc/asn1type.h"

/**
 * Header file for ASN.1 module TS24008IES
 */
/**************************************************************/
/*                                                            */
/*  IMSI                                                      */
/*                                                            */
/**************************************************************/
/*
<ctype>chararray</ctype>
<isTBCDString/>
IMSI ::= IA5String (FROM ("0123456789")SIZE (14..15))
*/
typedef char TS24008IE_IMSI[16];

EXTERN int NASEnc_TS24008IE_IMSI (OSCTXT* pctxt, TS24008IE_IMSI value);

EXTERN int NASDec_TS24008IE_IMSI (OSCTXT* pctxt, TS24008IE_IMSI pvalue
   , OSSIZE len);

EXTERN int asn1PrtToStrm_TS24008IE_IMSI (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IMSI pvalue);

EXTERN const char* asn1Test_TS24008IE_IMSI (OSCTXT* pctxt, 
   char* buf, OSSIZE bufsize);

/**************************************************************/
/*                                                            */
/*  IMEI                                                      */
/*                                                            */
/**************************************************************/
/*
<ctype>chararray</ctype>
<isTBCDString/>
IMEI ::= IA5String (FROM ("0123456789")SIZE (15))
*/
typedef char TS24008IE_IMEI[16];

EXTERN int NASEnc_TS24008IE_IMEI (OSCTXT* pctxt, TS24008IE_IMEI value);

EXTERN int NASDec_TS24008IE_IMEI (OSCTXT* pctxt, TS24008IE_IMEI pvalue
   , OSSIZE len);

EXTERN int asn1PrtToStrm_TS24008IE_IMEI (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IMEI pvalue);

EXTERN const char* asn1Test_TS24008IE_IMEI (OSCTXT* pctxt, 
   char* buf, OSSIZE bufsize);

/**************************************************************/
/*                                                            */
/*  IMEISV                                                    */
/*                                                            */
/**************************************************************/
/*
<ctype>chararray</ctype>
<isTBCDString/>
IMEISV ::= IA5String (FROM ("0123456789")SIZE (16))
*/
typedef char TS24008IE_IMEISV[18];

EXTERN int NASEnc_TS24008IE_IMEISV (OSCTXT* pctxt, TS24008IE_IMEISV value);

EXTERN int NASDec_TS24008IE_IMEISV (OSCTXT* pctxt, TS24008IE_IMEISV pvalue
   , OSSIZE len);

EXTERN int asn1PrtToStrm_TS24008IE_IMEISV (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IMEISV pvalue);

EXTERN const char* asn1Test_TS24008IE_IMEISV (OSCTXT* pctxt, 
   char* buf, OSSIZE bufsize);

/**************************************************************/
/*                                                            */
/*  TBCDString                                                */
/*                                                            */
/**************************************************************/
/*
TBCDString ::= IA5String (FROM ("0123456789#*abc"))
*/
typedef const char* TS24008IE_TBCDString;

EXTERN int NASEnc_TS24008IE_TBCDString (OSCTXT* pctxt
   , TS24008IE_TBCDString value);

EXTERN int NASDec_TS24008IE_TBCDString (OSCTXT* pctxt
   , TS24008IE_TBCDString* pvalue, OSSIZE len);

EXTERN int asn1PrtToStrm_TS24008IE_TBCDString (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TBCDString pvalue);

EXTERN TS24008IE_TBCDString asn1Test_TS24008IE_TBCDString (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TBCDString3                                               */
/*                                                            */
/**************************************************************/
/*
 BCDString3 should be configured as <ctype>chararray</ctype>
TBCDString3 ::= TBCDString (SIZE (3))
*/
typedef char TS24008IE_TBCDString3[4];

EXTERN int NASEnc_TS24008IE_TBCDString3 (OSCTXT* pctxt
   , TS24008IE_TBCDString3 value);

EXTERN int NASDec_TS24008IE_TBCDString3 (OSCTXT* pctxt
   , TS24008IE_TBCDString3 pvalue, OSSIZE len);

EXTERN int asn1PrtToStrm_TS24008IE_TBCDString3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TBCDString3 pvalue);

EXTERN const char* asn1Test_TS24008IE_TBCDString3 (OSCTXT* pctxt, 
   char* buf, OSSIZE bufsize);

/**************************************************************/
/*                                                            */
/*  MCCMNCPair                                                */
/*                                                            */
/**************************************************************/
/*
 MCC/MNC pair
MCCMNCPair ::= SEQUENCE {
   mcc [0] TBCDString3,
   mnc [1] TBCDString3
}
*/
typedef struct EXTERN TS24008IE_MCCMNCPair {
   TS24008IE_TBCDString3 mcc;
   TS24008IE_TBCDString3 mnc;
} TS24008IE_MCCMNCPair;

EXTERN int NASEnc_TS24008IE_MCCMNCPair (OSCTXT* pctxt
   , TS24008IE_MCCMNCPair* pvalue);

EXTERN int NASDec_TS24008IE_MCCMNCPair (OSCTXT* pctxt
   , TS24008IE_MCCMNCPair* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MCCMNCPair (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MCCMNCPair* pvalue);

EXTERN TS24008IE_MCCMNCPair* asn1Test_TS24008IE_MCCMNCPair (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MCCMNCPair (TS24008IE_MCCMNCPair* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileIdentity_TMGI                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.1.4 - Mobile Identity 
MobileIdentity-TMGI ::= SEQUENCE {
   mbmsSessIdInd [0] BOOLEAN,
   mccMncInd [1] BOOLEAN,
   mbmsServiceID [2] OCTET STRING (SIZE (3)),
   mcc-mnc [3] MCCMNCPair,
   mbmsSessionID [4] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_MobileIdentity_TMGI {
   OSBOOL mbmsSessIdInd;
   OSBOOL mccMncInd;
   OSOCTET mbmsServiceID[3];
   TS24008IE_MCCMNCPair mcc_mnc;
   OSUINT8 mbmsSessionID;
} TS24008IE_MobileIdentity_TMGI;

EXTERN int NASEnc_TS24008IE_MobileIdentity_TMGI (OSCTXT* pctxt
   , TS24008IE_MobileIdentity_TMGI* pvalue);

EXTERN int NASDec_TS24008IE_MobileIdentity_TMGI (OSCTXT* pctxt
   , TS24008IE_MobileIdentity_TMGI* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileIdentity_TMGI (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileIdentity_TMGI* pvalue);

EXTERN TS24008IE_MobileIdentity_TMGI*
    asn1Test_TS24008IE_MobileIdentity_TMGI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MobileIdentity_TMGI (
   TS24008IE_MobileIdentity_TMGI* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileIdentity                                            */
/*                                                            */
/**************************************************************/
/*
MobileIdentity ::= CHOICE {
   imsi [0] IMSI,
   imei [1] IMEI,
   imeisv [2] IMEISV,
   tmsi [3] OCTET STRING (SIZE (4)),
   tmgi [4] MobileIdentity-TMGI,
   -- When none is used, the identity digits shall be all zeros (as per 
--    24.008. 10.5.1.4.)  The value of the none field indicates the length
--    of the MobileIdentity IE, which is required to be 1 or 3.
-- 
   none [5] INTEGER (1 | 3)
}
*/
typedef struct EXTERN TS24008IE_MobileIdentity {
   enum {
      T_TS24008IE_MobileIdentity_UNKNOWN_ = 0,
      T_TS24008IE_MobileIdentity_imsi = 1,
      T_TS24008IE_MobileIdentity_imei = 2,
      T_TS24008IE_MobileIdentity_imeisv = 3,
      T_TS24008IE_MobileIdentity_tmsi = 4,
      T_TS24008IE_MobileIdentity_tmgi = 5,
      T_TS24008IE_MobileIdentity_none = 6
   } t;
   union {
      /* t = 1 */
      TS24008IE_IMSI imsi;
      /* t = 2 */
      TS24008IE_IMEI imei;
      /* t = 3 */
      TS24008IE_IMEISV imeisv;
      /* t = 4 */
      OSOCTET tmsi[4];
      /* t = 5 */
      TS24008IE_MobileIdentity_TMGI tmgi;
      /* t = 6 */
      OSUINT8 none;
   } u;
} TS24008IE_MobileIdentity;

EXTERN int NASEnc_TS24008IE_MobileIdentity (OSCTXT* pctxt
   , TS24008IE_MobileIdentity* pvalue);

EXTERN int NASDec_TS24008IE_MobileIdentity (OSCTXT* pctxt
   , TS24008IE_MobileIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileIdentity (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileIdentity* pvalue);

EXTERN TS24008IE_MobileIdentity*
    asn1Test_TS24008IE_MobileIdentity (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MobileIdentity (TS24008IE_MobileIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  RoutingAreaIdent                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.5.15 - Routing area identification 
RoutingAreaIdent ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair,
   lac [1] INTEGER (0..65535),
   rac [2] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_RoutingAreaIdent {
   TS24008IE_MCCMNCPair mcc_mnc;
   OSUINT16 lac;
   OSUINT8 rac;
} TS24008IE_RoutingAreaIdent;

EXTERN int NASEnc_TS24008IE_RoutingAreaIdent (OSCTXT* pctxt
   , TS24008IE_RoutingAreaIdent* pvalue);

EXTERN int NASDec_TS24008IE_RoutingAreaIdent (OSCTXT* pctxt
   , TS24008IE_RoutingAreaIdent* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RoutingAreaIdent (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RoutingAreaIdent* pvalue);

EXTERN TS24008IE_RoutingAreaIdent*
    asn1Test_TS24008IE_RoutingAreaIdent (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_RoutingAreaIdent (TS24008IE_RoutingAreaIdent* pvalue);

/**************************************************************/
/*                                                            */
/*  TMGI                                                      */
/*                                                            */
/**************************************************************/
/*
 10.5.6.13 - Temporary Mobile Group Identity (TMGI) 
TMGI ::= SEQUENCE {
   mbmsServiceID [0] OCTET STRING (SIZE (3)),
   mcc-mnc [1] MCCMNCPair
}
*/
typedef struct EXTERN TS24008IE_TMGI {
   OSOCTET mbmsServiceID[3];
   TS24008IE_MCCMNCPair mcc_mnc;
} TS24008IE_TMGI;

EXTERN int NASEnc_TS24008IE_TMGI (OSCTXT* pctxt, TS24008IE_TMGI* pvalue);

EXTERN int NASDec_TS24008IE_TMGI (OSCTXT* pctxt, TS24008IE_TMGI* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_TMGI (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TMGI* pvalue);

EXTERN TS24008IE_TMGI* asn1Test_TS24008IE_TMGI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_TMGI (TS24008IE_TMGI* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileStationClassmark1                                   */
/*                                                            */
/**************************************************************/
/*
 10.5.1.5 - Mobile Station Classmark 1 
MobileStationClassmark1 ::= SEQUENCE {
   spare [0] BOOLEAN,
   revLevel [1] INTEGER (0..3), -- 0 = GSM phase 1, 
--                             1 = GSM phase 2, 
--                             2 = R99 or later 
   esInd [2] BOOLEAN,
   a5-1-alg [3] BOOLEAN,
   rfPowerCap [4] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_MobileStationClassmark1 {
   OSBOOL spare;
   OSUINT8 revLevel;
   OSBOOL esInd;
   OSBOOL a5_1_alg;
   OSUINT8 rfPowerCap;
} TS24008IE_MobileStationClassmark1;

EXTERN int NASEnc_TS24008IE_MobileStationClassmark1 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark1* pvalue);

EXTERN int NASDec_TS24008IE_MobileStationClassmark1 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark1* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileStationClassmark1 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileStationClassmark1* pvalue);

EXTERN TS24008IE_MobileStationClassmark1*
    asn1Test_TS24008IE_MobileStationClassmark1 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MobileStationClassmark2_octet4                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MobileStationClassmark2'
*/
typedef struct EXTERN TS24008IE_MobileStationClassmark2_octet4 {
   OSBOOL spare;
   OSBOOL psCapability;
   OSUINT8 ssScreeningInd;
   OSBOOL smCapability;
   OSBOOL vbsNotifRecept;
   OSBOOL vgcsNotifRecept;
   OSBOOL fcFreqCap;
} TS24008IE_MobileStationClassmark2_octet4;

EXTERN int NASEnc_TS24008IE_MobileStationClassmark2_octet4 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark2_octet4* pvalue);

EXTERN int NASDec_TS24008IE_MobileStationClassmark2_octet4 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark2_octet4* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileStationClassmark2_octet4 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileStationClassmark2_octet4* pvalue);

EXTERN TS24008IE_MobileStationClassmark2_octet4*
    asn1Test_TS24008IE_MobileStationClassmark2_octet4 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MobileStationClassmark2_octet5                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MobileStationClassmark2'
*/
typedef struct EXTERN TS24008IE_MobileStationClassmark2_octet5 {
   OSBOOL cm3;
   OSBOOL spare;
   OSBOOL lcsvaCap;
   OSBOOL ucs2Treatment;
   OSBOOL soLSA;
   OSBOOL cmsp;
   OSBOOL a5_3_alg;
   OSBOOL a5_2_alg;
} TS24008IE_MobileStationClassmark2_octet5;

EXTERN int NASEnc_TS24008IE_MobileStationClassmark2_octet5 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark2_octet5* pvalue);

EXTERN int NASDec_TS24008IE_MobileStationClassmark2_octet5 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark2_octet5* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileStationClassmark2_octet5 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileStationClassmark2_octet5* pvalue);

EXTERN TS24008IE_MobileStationClassmark2_octet5*
    asn1Test_TS24008IE_MobileStationClassmark2_octet5 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MobileStationClassmark2                                   */
/*                                                            */
/**************************************************************/
/*
 10.5.1.6 - Mobile Station Classmark 2 
MobileStationClassmark2 ::= SEQUENCE {
   -- octet 3 
   cm1 [0] MobileStationClassmark1 OPTIONAL,
   -- octet 4 
   octet4 [1] SEQUENCE {
      spare [0] BOOLEAN,
      psCapability [1] BOOLEAN,
      ssScreeningInd [2] INTEGER (0..3),
      smCapability [3] BOOLEAN,
      vbsNotifRecept [4] BOOLEAN,
      vgcsNotifRecept [5] BOOLEAN,
      fcFreqCap [6] BOOLEAN
   } OPTIONAL,
   -- octet 5 
   octet5 [2] SEQUENCE {
      cm3 [0] BOOLEAN,
      spare [1] BOOLEAN,
      lcsvaCap [2] BOOLEAN,
      ucs2Treatment [3] BOOLEAN,
      soLSA [4] BOOLEAN,
      cmsp [5] BOOLEAN,
      a5-3-alg [6] BOOLEAN,
      a5-2-alg [7] BOOLEAN
   } OPTIONAL
}
*/
typedef struct EXTERN TS24008IE_MobileStationClassmark2 {
   struct {
      unsigned cm1Present : 1;
      unsigned octet4Present : 1;
      unsigned octet5Present : 1;
   } m;
   TS24008IE_MobileStationClassmark1 cm1;
   TS24008IE_MobileStationClassmark2_octet4 octet4;
   TS24008IE_MobileStationClassmark2_octet5 octet5;
} TS24008IE_MobileStationClassmark2;

EXTERN int NASEnc_TS24008IE_MobileStationClassmark2 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark2* pvalue);

EXTERN int NASDec_TS24008IE_MobileStationClassmark2 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark2* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileStationClassmark2 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileStationClassmark2* pvalue);

EXTERN TS24008IE_MobileStationClassmark2*
    asn1Test_TS24008IE_MobileStationClassmark2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MobileStationClassmark2 (
   TS24008IE_MobileStationClassmark2* pvalue);

/**************************************************************/
/*                                                            */
/*  MBSEnum                                                   */
/*                                                            */
/**************************************************************/
/*
 This type enumerates all of the valid bit patterns expressed in the CSN
 for the multibandSupported eleemnt in MobileStationClassmark3
MBSEnum ::= ENUMERATED { mbs0(0), mbs1(1), mbs2(2), mbs4(4), mbs5(5), mbs6(6) }
*/
typedef enum {
   TS24008IE_MBSEnum_mbs0 = 0,
   TS24008IE_MBSEnum_mbs1 = 1,
   TS24008IE_MBSEnum_mbs2 = 2,
   TS24008IE_MBSEnum_mbs4 = 4,
   TS24008IE_MBSEnum_mbs5 = 5,
   TS24008IE_MBSEnum_mbs6 = 6
} TS24008IE_MBSEnum;

EXTERN int NASEnc_TS24008IE_MBSEnum (OSCTXT* pctxt, TS24008IE_MBSEnum value);

EXTERN int NASDec_TS24008IE_MBSEnum (OSCTXT* pctxt, TS24008IE_MBSEnum* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MBSEnum (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MBSEnum* pvalue);

EXTERN extern const OSEnumItem TS24008IE_MBSEnum_ENUMTAB[];
#define TS24008IE_MBSEnum_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24008IE_MBSEnum_ToString (OSINT32 value);

EXTERN int TS24008IE_MBSEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_MBSEnum* pvalue);

EXTERN int TS24008IE_MBSEnum_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24008IE_MBSEnum* pvalue);

EXTERN TS24008IE_MBSEnum* asn1Test_TS24008IE_MBSEnum (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  A5Bits                                                    */
/*                                                            */
/**************************************************************/
/*
< A5 bits > ::= 
< A5/7 : bit > < A5/6 : bit > < A5/5 : bit > < A5/4 : bit >  ;
A5Bits ::= SEQUENCE {
   a5-7 [0] BOOLEAN,
   a5-6 [1] BOOLEAN,
   a5-5 [2] BOOLEAN,
   a5-4 [3] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_A5Bits {
   OSBOOL a5_7;
   OSBOOL a5_6;
   OSBOOL a5_5;
   OSBOOL a5_4;
} TS24008IE_A5Bits;

EXTERN int NASEnc_TS24008IE_A5Bits (OSCTXT* pctxt, TS24008IE_A5Bits* pvalue);

EXTERN int NASDec_TS24008IE_A5Bits (OSCTXT* pctxt, TS24008IE_A5Bits* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_A5Bits (OSCTXT *pctxt, 
   const char* name, const TS24008IE_A5Bits* pvalue);

EXTERN TS24008IE_A5Bits* asn1Test_TS24008IE_A5Bits (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MultibandSupported                                        */
/*                                                            */
/**************************************************************/
/*
 MultibandSupported is defined as a separate type to allow a custom NAS
 encode and decode function to be defined to support the following CSN:
{	< Multiband supported : { 000 } >
< A5 bits > 
|	< Multiband supported : { 101 | 110 } > 
< A5 bits >
< Associated Radio Capability 2 : bit(4) >
< Associated Radio Capability 1 : bit(4) >
|	< Multiband supported : { 001 | 010 | 100 } > 
< A5 bits >
< spare bit >(4)
< Associated Radio Capability 1 : bit(4) > }
MultibandSupported ::= SEQUENCE {
   supported [0] MBSEnum,
   a5bits [1] A5Bits,
   assocRadioCap2 [2] INTEGER (0..15),
   assocRadioCap1 [3] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_MultibandSupported {
   TS24008IE_MBSEnum supported;
   TS24008IE_A5Bits a5bits;
   OSUINT8 assocRadioCap2;
   OSUINT8 assocRadioCap1;
} TS24008IE_MultibandSupported;

EXTERN int NASEnc_TS24008IE_MultibandSupported (OSCTXT* pctxt
   , TS24008IE_MultibandSupported* pvalue);

EXTERN int NASDec_TS24008IE_MultibandSupported (OSCTXT* pctxt
   , TS24008IE_MultibandSupported* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MultibandSupported (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MultibandSupported* pvalue);

EXTERN TS24008IE_MultibandSupported*
    asn1Test_TS24008IE_MultibandSupported (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RSupport                                                  */
/*                                                            */
/**************************************************************/
/*
<R Support>::=
< R-GSM band Associated Radio Capability : bit(3) > ;
RSupport ::= INTEGER (0..7)
*/
typedef OSUINT8 TS24008IE_RSupport;

EXTERN int NASEnc_TS24008IE_RSupport (OSCTXT* pctxt, TS24008IE_RSupport value);

EXTERN int NASDec_TS24008IE_RSupport (OSCTXT* pctxt, TS24008IE_RSupport* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_RSupport (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RSupport* pvalue);

EXTERN TS24008IE_RSupport* asn1Test_TS24008IE_RSupport (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HSCSDMultiSlotCap                                         */
/*                                                            */
/**************************************************************/
/*
< HSCSD Multi Slot Capability > ::=
< HSCSD Multi Slot Class : bit(5) >  ;
HSCSDMultiSlotCap ::= INTEGER (0..31)
*/
typedef OSUINT8 TS24008IE_HSCSDMultiSlotCap;

EXTERN int NASEnc_TS24008IE_HSCSDMultiSlotCap (OSCTXT* pctxt
   , TS24008IE_HSCSDMultiSlotCap value);

EXTERN int NASDec_TS24008IE_HSCSDMultiSlotCap (OSCTXT* pctxt
   , TS24008IE_HSCSDMultiSlotCap* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_HSCSDMultiSlotCap (OSCTXT *pctxt, 
   const char* name, const TS24008IE_HSCSDMultiSlotCap* pvalue);

EXTERN TS24008IE_HSCSDMultiSlotCap*
    asn1Test_TS24008IE_HSCSDMultiSlotCap (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MSMeasurementCap                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.1.7 - Mobile Station Classmark 3 
< MS Measurement capability > ::=
< SMS_VALUE : bit (4) >
< SM_VALUE : bit (4) > ;
MSMeasurementCap ::= SEQUENCE {
   smsValue [0] INTEGER (0..15),
   smValue [1] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_MSMeasurementCap {
   OSUINT8 smsValue;
   OSUINT8 smValue;
} TS24008IE_MSMeasurementCap;

EXTERN int NASEnc_TS24008IE_MSMeasurementCap (OSCTXT* pctxt
   , TS24008IE_MSMeasurementCap* pvalue);

EXTERN int NASDec_TS24008IE_MSMeasurementCap (OSCTXT* pctxt
   , TS24008IE_MSMeasurementCap* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MSMeasurementCap (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MSMeasurementCap* pvalue);

EXTERN TS24008IE_MSMeasurementCap*
    asn1Test_TS24008IE_MSMeasurementCap (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Type8PSKStruct                                            */
/*                                                            */
/**************************************************************/
/*
 Name has to begin with some uppercase letter.
Type8PSKStruct ::= SEQUENCE {
   modulationCap [0] BOOLEAN,
   rfPowerCap1 [1] INTEGER (0..3) OPTIONAL,
   rfPowerCap2 [2] INTEGER (0..3) OPTIONAL
}
*/
typedef struct EXTERN TS24008IE_Type8PSKStruct {
   struct {
      unsigned rfPowerCap1Present : 1;
      unsigned rfPowerCap2Present : 1;
   } m;
   OSBOOL modulationCap;
   OSUINT8 rfPowerCap1;
   OSUINT8 rfPowerCap2;
} TS24008IE_Type8PSKStruct;

EXTERN int NASEnc_TS24008IE_Type8PSKStruct (OSCTXT* pctxt
   , TS24008IE_Type8PSKStruct* pvalue);

EXTERN int NASDec_TS24008IE_Type8PSKStruct (OSCTXT* pctxt
   , TS24008IE_Type8PSKStruct* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_Type8PSKStruct (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Type8PSKStruct* pvalue);

EXTERN TS24008IE_Type8PSKStruct*
    asn1Test_TS24008IE_Type8PSKStruct (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_Type8PSKStruct (TS24008IE_Type8PSKStruct* pvalue);

/**************************************************************/
/*                                                            */
/*  GSM400Struct_bandsSupported                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GSM400Struct'
*/
typedef enum {
   TS24008IE_GSM400Struct_bandsSupported_band1 = 1,
   TS24008IE_GSM400Struct_bandsSupported_band2 = 2,
   TS24008IE_GSM400Struct_bandsSupported_band3 = 3
} TS24008IE_GSM400Struct_bandsSupported;

EXTERN int NASEnc_TS24008IE_GSM400Struct_bandsSupported (OSCTXT* pctxt
   , TS24008IE_GSM400Struct_bandsSupported value);

EXTERN int NASDec_TS24008IE_GSM400Struct_bandsSupported (OSCTXT* pctxt
   , TS24008IE_GSM400Struct_bandsSupported* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GSM400Struct_bandsSupported (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GSM400Struct_bandsSupported* pvalue);

EXTERN extern const OSEnumItem TS24008IE_GSM400Struct_bandsSupported_ENUMTAB[];
#define TS24008IE_GSM400Struct_bandsSupported_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24008IE_GSM400Struct_bandsSupported_ToString (OSINT32 value);

EXTERN int TS24008IE_GSM400Struct_bandsSupported_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_GSM400Struct_bandsSupported* pvalue);

EXTERN int TS24008IE_GSM400Struct_bandsSupported_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_GSM400Struct_bandsSupported* pvalue);

EXTERN TS24008IE_GSM400Struct_bandsSupported*
    asn1Test_TS24008IE_GSM400Struct_bandsSupported (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GSM400Struct                                              */
/*                                                            */
/**************************************************************/
/*
{       < T-GSM 400 Bands Supported : { 01 | 10 | 11 } >
< T-GSM 400 Associated Radio Capability: bit(4) > }
GSM400Struct ::= SEQUENCE {
   bandsSupported [0] ENUMERATED { band1(1), band2(2), band3(3) },
   assocRadioCap [1] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_GSM400Struct {
   TS24008IE_GSM400Struct_bandsSupported bandsSupported;
   OSUINT8 assocRadioCap;
} TS24008IE_GSM400Struct;

EXTERN int NASEnc_TS24008IE_GSM400Struct (OSCTXT* pctxt
   , TS24008IE_GSM400Struct* pvalue);

EXTERN int NASDec_TS24008IE_GSM400Struct (OSCTXT* pctxt
   , TS24008IE_GSM400Struct* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GSM400Struct (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GSM400Struct* pvalue);

EXTERN TS24008IE_GSM400Struct* asn1Test_TS24008IE_GSM400Struct (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  DTMGPRSStruct                                             */
/*                                                            */
/**************************************************************/
/*
{ 	< DTM GPRS Multi Slot Class : bit(2) >
< Single Slot DTM : bit >
{0 | 1 < DTM EGPRS Multi Slot Class : bit(2) > } } 
DTMGPRSStruct ::= SEQUENCE {
   dtmGPRSMultiSlotClass [0] INTEGER (0..3),
   singleSlotDTM [1] BOOLEAN,
   dtmEGPRSMultiSlotClass [2] INTEGER (0..3) OPTIONAL
}
*/
typedef struct EXTERN TS24008IE_DTMGPRSStruct {
   struct {
      unsigned dtmEGPRSMultiSlotClassPresent : 1;
   } m;
   OSUINT8 dtmGPRSMultiSlotClass;
   OSBOOL singleSlotDTM;
   OSUINT8 dtmEGPRSMultiSlotClass;
} TS24008IE_DTMGPRSStruct;

EXTERN int NASEnc_TS24008IE_DTMGPRSStruct (OSCTXT* pctxt
   , TS24008IE_DTMGPRSStruct* pvalue);

EXTERN int NASDec_TS24008IE_DTMGPRSStruct (OSCTXT* pctxt
   , TS24008IE_DTMGPRSStruct* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DTMGPRSStruct (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DTMGPRSStruct* pvalue);

EXTERN TS24008IE_DTMGPRSStruct*
    asn1Test_TS24008IE_DTMGPRSStruct (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_DTMGPRSStruct (TS24008IE_DTMGPRSStruct* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileStationClassmark3_extDtmGPRSStruct                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MobileStationClassmark3'
*/
typedef struct EXTERN TS24008IE_MobileStationClassmark3_extDtmGPRSStruct {
   OSUINT8 extDtmGPRSMultiSlotClass;
   OSUINT8 extDtmEGPRSMultiSlotClass;
} TS24008IE_MobileStationClassmark3_extDtmGPRSStruct;

EXTERN int NASEnc_TS24008IE_MobileStationClassmark3_extDtmGPRSStruct (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark3_extDtmGPRSStruct* pvalue);

EXTERN int NASDec_TS24008IE_MobileStationClassmark3_extDtmGPRSStruct (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark3_extDtmGPRSStruct* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileStationClassmark3_extDtmGPRSStruct (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileStationClassmark3_extDtmGPRSStruct* pvalue);

EXTERN TS24008IE_MobileStationClassmark3_extDtmGPRSStruct*
    asn1Test_TS24008IE_MobileStationClassmark3_extDtmGPRSStruct (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  GERANIuModeCap                                            */
/*                                                            */
/**************************************************************/
/*
GERANIuModeCap ::= SEQUENCE {
   --<is3GLength bitFieldSize="4" units="bits"/>
   length [0] INTEGER (0..15), -- number of bits, may be padded
   floIuCap [1] BOOLEAN,
   --<inline/>
   --<length fixed-size="0"/>
   spareBits [2] BIT STRING  (SIZE (0..14))
}
*/
typedef struct EXTERN TS24008IE_GERANIuModeCap {
   OSUINT8 length;
   OSBOOL floIuCap;
   struct {
      OSUINT8 numbits;
      OSOCTET data[2];
   } spareBits;
} TS24008IE_GERANIuModeCap;

EXTERN int NASEnc_TS24008IE_GERANIuModeCap (OSCTXT* pctxt
   , TS24008IE_GERANIuModeCap* pvalue);

EXTERN int NASDec_TS24008IE_GERANIuModeCap (OSCTXT* pctxt
   , TS24008IE_GERANIuModeCap* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GERANIuModeCap (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GERANIuModeCap* pvalue);

EXTERN TS24008IE_GERANIuModeCap*
    asn1Test_TS24008IE_GERANIuModeCap (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_GERANIuModeCap (TS24008IE_GERANIuModeCap* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileStationClassmark3_dtmGPRSStruct2                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MobileStationClassmark3'
*/
typedef struct EXTERN TS24008IE_MobileStationClassmark3_dtmGPRSStruct2 {
   struct {
      unsigned dtmEGPRSHighMultiSlotClassPresent : 1;
   } m;
   OSUINT8 dtmGPRSHighMultiSlotClass;
   OSBOOL offsetRequired;
   OSUINT8 dtmEGPRSHighMultiSlotClass;
} TS24008IE_MobileStationClassmark3_dtmGPRSStruct2;

EXTERN int NASEnc_TS24008IE_MobileStationClassmark3_dtmGPRSStruct2 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark3_dtmGPRSStruct2* pvalue);

EXTERN int NASDec_TS24008IE_MobileStationClassmark3_dtmGPRSStruct2 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark3_dtmGPRSStruct2* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileStationClassmark3_dtmGPRSStruct2 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileStationClassmark3_dtmGPRSStruct2* pvalue);

EXTERN TS24008IE_MobileStationClassmark3_dtmGPRSStruct2*
    asn1Test_TS24008IE_MobileStationClassmark3_dtmGPRSStruct2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MobileStationClassmark3_dtmGPRSStruct2 (
   TS24008IE_MobileStationClassmark3_dtmGPRSStruct2* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileStationClassmark3                                   */
/*                                                            */
/**************************************************************/
/*
<aligned/>
MobileStationClassmark3 ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..32),
   spare [1] BOOLEAN,
   multiband [2] MultibandSupported,
   --	{ 0 | 1 < R Support > }
--{ 0 | 1 < HSCSD Multi Slot Capability > }
--< UCS2 treatment: bit >
--< Extended Measurement Capability : bit >
--{ 0 | 1 < MS measurement capability > }
--{ 0 | 1 < MS Positioning Method Capability > }
--{ 0 | 1 < ECSD Multi Slot Capability > }
--{ 0 | 1 < 8-PSK Struct > }
-- 
   rSupport [3] RSupport OPTIONAL,
   hscsdMultiSlotCap [4] HSCSDMultiSlotCap OPTIONAL,
   ucs2Treatment [5] BOOLEAN,
   extMeasurementCap [6] BOOLEAN,
   msMeasurementCap [7] MSMeasurementCap OPTIONAL,
   msPositioningMethodCap [8] INTEGER (0..31) OPTIONAL,
   ecsdMultiSlotCap [9] INTEGER (0..31) OPTIONAL,
   an-8-PSKStruct [10] Type8PSKStruct OPTIONAL,
   --	{ 0 | 1 < GSM 400 Struct >
-- 
   gsm400Struct [11] GSM400Struct OPTIONAL,
   --	{ 0 | 1 <GSM 850 Associated Radio Capability : bit(4) > }
--{ 0 | 1 <GSM 1900 Associated Radio Capability : bit(4) > }
--< UMTS FDD Radio Access Technology Capability : bit >
--< UMTS 3.84 Mcps TDD Radio Access Technology Capability : bit >
--< CDMA 2000 Radio Access Technology Capability : bit >
-- 
   gsm850AssocRadioCap [12] INTEGER (0..15) OPTIONAL,
   gsm1900AssocRadioCap [13] INTEGER (0..15) OPTIONAL,
   umtsFDDRadioAccessTechCap [14] BOOLEAN,
   umts384McpsTDDRadioAccessTechCap [15] BOOLEAN,
   cdma2000RadioAccessTechCap [16] BOOLEAN,
   --	{ 0 | 1	< DTM GPRS Struct > }
-- 
   dtmGPRSStruct [17] DTMGPRSStruct OPTIONAL,
   -- Release 4 starts here
   --	{ 0 | 1 < Single Band Support > }
--{ 0 | 1 <GSM 750 Associated Radio Capability : bit(4)>}
--< UMTS 1.28 Mcps TDD Radio Access Technology Capability : bit >
--< GERAN Feature Package 1 : bit >
-- 
   singleBandSupport [18] INTEGER (0..15) OPTIONAL,
   gsm750AssocRadioCap [19] INTEGER (0..15) OPTIONAL,
   umts1-28McpsTDDRadioAccessTechCap [20] BOOLEAN,
   geranFeaturePackage1 [21] BOOLEAN,
   --	{ 0 | 1 < Extended DTM GPRS Multi Slot Class : bit(2) >
--< Extended DTM EGPRS Multi Slot Class : bit(2) > }
-- 
   extDtmGPRSStruct [22] SEQUENCE {
      extDtmGPRSMultiSlotClass [0] INTEGER (0..3),
      extDtmEGPRSMultiSlotClass [1] INTEGER (0..3)
   } OPTIONAL,
   -- Release 5 starts here
   --	{ 0 | 1 < High Multislot Capability : bit(2) > }
--{ 0 | 1 < GERAN Iu Mode Capabilities > }
--< GERAN Feature Package 2 : bit >
--< GMSK Multislot Power Profile : bit (2) >
--< 8-PSK Multislot Power Profile : bit (2) >
-- 
   highMultislotCap [23] INTEGER (0..3) OPTIONAL,
   geranIuModeCap [24] GERANIuModeCap OPTIONAL,
   geranFeaturePackage2 [25] BOOLEAN,
   gmskMultislotPowerProfile [26] INTEGER (0..3),
   multislotPowerProfile8PSK [27] INTEGER (0..3),
   -- Release 6 starts here
   --	{ 0 | 1 < GSM 400 Struct >
-- 
   tgsm400Struct [28] GSM400Struct OPTIONAL,
   -- 
--      0	The value '1' was allocated in an earlier version of the 
--              protocol and shall not be used 
-- 
   zerobit [29] BOOLEAN DEFAULT FALSE,
   --	< Downlink Advanced Receiver Performance : bit (2)>
--< DTM Enhancements Capability : bit >
-- 
   downlinkAdvancedRcvrPerf [30] INTEGER (0..3),
   dtmEnhancementsCap [31] BOOLEAN,
   --	{ 0 | 1	< DTM GPRS High Multi Slot Class : bit(3) >
--< Offset required : bit>
--{ 0 | 1 < DTM EGPRS High Multi Slot Class : bit(3) > } }
-- 
   dtmGPRSStruct2 [32] SEQUENCE {
      dtmGPRSHighMultiSlotClass [0] INTEGER (0..7),
      offsetRequired [1] BOOLEAN,
      dtmEGPRSHighMultiSlotClass [2] INTEGER (0..7) OPTIONAL
   } OPTIONAL,
   --	< Repeated ACCH Capability : bit >
-- 
   repeatedACCHCap [33] BOOLEAN,
   --        -- Release 7 starts here
--{ 0 | 1 <GSM 710 Associated Radio Capability : bit(4)>}
--{ 0 | 1 <T-GSM 810 Associated Radio Capability : bit(4)>}
--< Ciphering Mode Setting Capability : bit >
--< Additional Positioning Capabilities : bit >
-- 
   gsm710AssocRadioCap [34] INTEGER (0..15) OPTIONAL,
   tgsm810AssocRadioCap [35] INTEGER (0..15) OPTIONAL,
   cipheringModeSettingCap [36] BOOLEAN,
   additionalPositioningCap [37] BOOLEAN,
   --       	-- Release 8 starts here
--< E-UTRA FDD support : bit >
--< E-UTRA TDD support : bit >
--< E-UTRA Measurement and Reporting support : bit >
--< Priority-based reselection support : bit >
-- 
   e-UTRA-FDD-support [38] BOOLEAN,
   e-UTRA-TDD-support [39] BOOLEAN,
   e-UTRA-MeasAndReportSupport [40] BOOLEAN,
   priorityBasedReselectionSupport [41] BOOLEAN,
   ...,
   [[ 9:
      uTRA-CSG-Cells-Reporting [42] BOOLEAN,
      vAMOS-Level [43] INTEGER (0..3)
   ]],
   [[ 10:
      tighterCapability [44] INTEGER (0..3),
      selCiphOf-DL-SACCH [45] BOOLEAN
   ]],
   [[ 11:
      csToPsFromGeranToUtra [46] INTEGER (0..3),
      csToPsFromGeranToEUtra [47] INTEGER (0..3),
      geranNetShareSupport [48] BOOLEAN,
      eutraWideRsrqSupport [49] BOOLEAN
   ]],
   [[ 12:
      erBandSupport [50] BOOLEAN,
      utraMultFreqBandSupport [51] BOOLEAN,
      eutraMultFreqBandSupport [52] BOOLEAN,
      extTscSetCapSupport [53] BOOLEAN,
      extEarfcnValRange [54] BOOLEAN
   ]],
   spareBits [55] BIT STRING 
}
*/
typedef struct EXTERN TS24008IE_MobileStationClassmark3 {
   struct {
      unsigned rSupportPresent : 1;
      unsigned hscsdMultiSlotCapPresent : 1;
      unsigned msMeasurementCapPresent : 1;
      unsigned msPositioningMethodCapPresent : 1;
      unsigned ecsdMultiSlotCapPresent : 1;
      unsigned an_8_PSKStructPresent : 1;
      unsigned gsm400StructPresent : 1;
      unsigned gsm850AssocRadioCapPresent : 1;
      unsigned gsm1900AssocRadioCapPresent : 1;
      unsigned dtmGPRSStructPresent : 1;
      unsigned singleBandSupportPresent : 1;
      unsigned gsm750AssocRadioCapPresent : 1;
      unsigned extDtmGPRSStructPresent : 1;
      unsigned highMultislotCapPresent : 1;
      unsigned geranIuModeCapPresent : 1;
      unsigned tgsm400StructPresent : 1;
      unsigned dtmGPRSStruct2Present : 1;
      unsigned gsm710AssocRadioCapPresent : 1;
      unsigned tgsm810AssocRadioCapPresent : 1;
      unsigned _v9ExtPresent : 1;
      unsigned _v10ExtPresent : 1;
      unsigned _v11ExtPresent : 1;
      unsigned _v12ExtPresent : 1;
      unsigned spareBitsPresent : 1;
   } m;
   OSUINT8 length;
   OSBOOL spare;
   TS24008IE_MultibandSupported multiband;
   TS24008IE_RSupport rSupport;
   TS24008IE_HSCSDMultiSlotCap hscsdMultiSlotCap;
   OSBOOL ucs2Treatment;
   OSBOOL extMeasurementCap;
   TS24008IE_MSMeasurementCap msMeasurementCap;
   OSUINT8 msPositioningMethodCap;
   OSUINT8 ecsdMultiSlotCap;
   TS24008IE_Type8PSKStruct an_8_PSKStruct;
   TS24008IE_GSM400Struct gsm400Struct;
   OSUINT8 gsm850AssocRadioCap;
   OSUINT8 gsm1900AssocRadioCap;
   OSBOOL umtsFDDRadioAccessTechCap;
   OSBOOL umts384McpsTDDRadioAccessTechCap;
   OSBOOL cdma2000RadioAccessTechCap;
   TS24008IE_DTMGPRSStruct dtmGPRSStruct;
   OSUINT8 singleBandSupport;
   OSUINT8 gsm750AssocRadioCap;
   OSBOOL umts1_28McpsTDDRadioAccessTechCap;
   OSBOOL geranFeaturePackage1;
   TS24008IE_MobileStationClassmark3_extDtmGPRSStruct extDtmGPRSStruct;
   OSUINT8 highMultislotCap;
   TS24008IE_GERANIuModeCap geranIuModeCap;
   OSBOOL geranFeaturePackage2;
   OSUINT8 gmskMultislotPowerProfile;
   OSUINT8 multislotPowerProfile8PSK;
   TS24008IE_GSM400Struct tgsm400Struct;
   OSBOOL zerobit;
   OSUINT8 downlinkAdvancedRcvrPerf;
   OSBOOL dtmEnhancementsCap;
   TS24008IE_MobileStationClassmark3_dtmGPRSStruct2 dtmGPRSStruct2;
   OSBOOL repeatedACCHCap;
   OSUINT8 gsm710AssocRadioCap;
   OSUINT8 tgsm810AssocRadioCap;
   OSBOOL cipheringModeSettingCap;
   OSBOOL additionalPositioningCap;
   OSBOOL e_UTRA_FDD_support;
   OSBOOL e_UTRA_TDD_support;
   OSBOOL e_UTRA_MeasAndReportSupport;
   OSBOOL priorityBasedReselectionSupport;
   OSBOOL uTRA_CSG_Cells_Reporting;
   OSUINT8 vAMOS_Level;
   OSUINT8 tighterCapability;
   OSBOOL selCiphOf_DL_SACCH;
   OSUINT8 csToPsFromGeranToUtra;
   OSUINT8 csToPsFromGeranToEUtra;
   OSBOOL geranNetShareSupport;
   OSBOOL eutraWideRsrqSupport;
   OSBOOL erBandSupport;
   OSBOOL utraMultFreqBandSupport;
   OSBOOL eutraMultFreqBandSupport;
   OSBOOL extTscSetCapSupport;
   OSBOOL extEarfcnValRange;
   ASN1DynBitStr spareBits;
} TS24008IE_MobileStationClassmark3;

EXTERN int NASEnc_TS24008IE_MobileStationClassmark3 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark3* pvalue);

EXTERN int NASDec_TS24008IE_MobileStationClassmark3 (OSCTXT* pctxt
   , TS24008IE_MobileStationClassmark3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MobileStationClassmark3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MobileStationClassmark3* pvalue);

EXTERN TS24008IE_MobileStationClassmark3*
    asn1Test_TS24008IE_MobileStationClassmark3 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MobileStationClassmark3 (
   TS24008IE_MobileStationClassmark3* pvalue);

/**************************************************************/
/*                                                            */
/*  DescrGroupOrBcastCallRef                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.1.9 - Descriptive group or broadcast call reference 
DescrGroupOrBcastCallRef ::= SEQUENCE {
   --binary code is a 27 bit value
   bc [0] INTEGER (0..134217727),
   sf [1] BOOLEAN,
   af [2] BOOLEAN,
   callPriority [3] INTEGER (0..7),
   cipheringInformation [4] INTEGER (0..15),
   spare [5] INTEGER (0..15) DEFAULT 0 -- should be set to 0
}
*/
typedef struct EXTERN TS24008IE_DescrGroupOrBcastCallRef {
   OSUINT32 bc;
   OSBOOL sf;
   OSBOOL af;
   OSUINT8 callPriority;
   OSUINT8 cipheringInformation;
   OSUINT8 spare;
} TS24008IE_DescrGroupOrBcastCallRef;

EXTERN int NASEnc_TS24008IE_DescrGroupOrBcastCallRef (OSCTXT* pctxt
   , TS24008IE_DescrGroupOrBcastCallRef* pvalue);

EXTERN int NASDec_TS24008IE_DescrGroupOrBcastCallRef (OSCTXT* pctxt
   , TS24008IE_DescrGroupOrBcastCallRef* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DescrGroupOrBcastCallRef (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DescrGroupOrBcastCallRef* pvalue);

EXTERN TS24008IE_DescrGroupOrBcastCallRef*
    asn1Test_TS24008IE_DescrGroupOrBcastCallRef (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_DescrGroupOrBcastCallRef (
   TS24008IE_DescrGroupOrBcastCallRef* pvalue);

/**************************************************************/
/*                                                            */
/*  AddnUpdateParams                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.3.14 - Additional update parameters 
AddnUpdateParams ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   drvcc [1] BOOLEAN, -- added in v15.3
   cmso [2] BOOLEAN,
   cmst [3] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_AddnUpdateParams {
   OSBOOL spare;
   OSBOOL drvcc;
   OSBOOL cmso;
   OSBOOL cmst;
} TS24008IE_AddnUpdateParams;

EXTERN int NASEnc_TS24008IE_AddnUpdateParams (OSCTXT* pctxt
   , TS24008IE_AddnUpdateParams* pvalue);

EXTERN int NASDec_TS24008IE_AddnUpdateParams (OSCTXT* pctxt
   , TS24008IE_AddnUpdateParams* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AddnUpdateParams (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AddnUpdateParams* pvalue);

EXTERN TS24008IE_AddnUpdateParams*
    asn1Test_TS24008IE_AddnUpdateParams (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AddnUpdateParams (TS24008IE_AddnUpdateParams* pvalue);

/**************************************************************/
/*                                                            */
/*  CiphKeySeqNum                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.1.2 - Ciphering Key Sequence Number 
 3-bit number.  Valid values are 0 thru 6.  7 is no key available 
CiphKeySeqNum ::= SEQUENCE {
   spare [0] BOOLEAN,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_CiphKeySeqNum {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_CiphKeySeqNum;

EXTERN int NASEnc_TS24008IE_CiphKeySeqNum (OSCTXT* pctxt
   , TS24008IE_CiphKeySeqNum* pvalue);

EXTERN int NASDec_TS24008IE_CiphKeySeqNum (OSCTXT* pctxt
   , TS24008IE_CiphKeySeqNum* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CiphKeySeqNum (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CiphKeySeqNum* pvalue);

EXTERN TS24008IE_CiphKeySeqNum*
    asn1Test_TS24008IE_CiphKeySeqNum (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CellIdentityValue                                         */
/*                                                            */
/**************************************************************/
/*
 Common types
 10.5.1.1 - Cell Identity 
CellIdentityValue ::= INTEGER (0..65535)
*/
typedef OSUINT16 TS24008IE_CellIdentityValue;

EXTERN int NASEnc_TS24008IE_CellIdentityValue (OSCTXT* pctxt
   , TS24008IE_CellIdentityValue value);

EXTERN int NASDec_TS24008IE_CellIdentityValue (OSCTXT* pctxt
   , TS24008IE_CellIdentityValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CellIdentityValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CellIdentityValue* pvalue);

EXTERN TS24008IE_CellIdentityValue*
    asn1Test_TS24008IE_CellIdentityValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LocAreaIdent                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.1.3 - Location Area Identification 
LocAreaIdent ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair,
   lac [1] INTEGER (0..65535)
}
*/
typedef struct EXTERN TS24008IE_LocAreaIdent {
   TS24008IE_MCCMNCPair mcc_mnc;
   OSUINT16 lac;
} TS24008IE_LocAreaIdent;

EXTERN int NASEnc_TS24008IE_LocAreaIdent (OSCTXT* pctxt
   , TS24008IE_LocAreaIdent* pvalue);

EXTERN int NASDec_TS24008IE_LocAreaIdent (OSCTXT* pctxt
   , TS24008IE_LocAreaIdent* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LocAreaIdent (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LocAreaIdent* pvalue);

EXTERN TS24008IE_LocAreaIdent* asn1Test_TS24008IE_LocAreaIdent (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24008IE_LocAreaIdent (TS24008IE_LocAreaIdent* pvalue);

/**************************************************************/
/*                                                            */
/*  GSMString                                                 */
/*                                                            */
/**************************************************************/
/*
<isGSMString/>
GSMString ::= PrintableString
*/
typedef const char* TS24008IE_GSMString;

EXTERN int NASEnc_TS24008IE_GSMString (OSCTXT* pctxt, TS24008IE_GSMString value
   );

EXTERN int NASDec_TS24008IE_GSMString (OSCTXT* pctxt
   , TS24008IE_GSMString* pvalue, OSSIZE len, OSUINT8 unused);

EXTERN int asn1PrtToStrm_TS24008IE_GSMString (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GSMString pvalue);

EXTERN TS24008IE_GSMString asn1Test_TS24008IE_GSMString (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GroupCipherKeyNumber                                      */
/*                                                            */
/**************************************************************/
/*
 10.5.1.10 - Group Cipher Key Number 
GroupCipherKeyNumber ::= INTEGER (0..15)
*/
typedef OSUINT8 TS24008IE_GroupCipherKeyNumber;

EXTERN int NASEnc_TS24008IE_GroupCipherKeyNumber (OSCTXT* pctxt
   , TS24008IE_GroupCipherKeyNumber value);

EXTERN int NASDec_TS24008IE_GroupCipherKeyNumber (OSCTXT* pctxt
   , TS24008IE_GroupCipherKeyNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GroupCipherKeyNumber (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GroupCipherKeyNumber* pvalue);

EXTERN TS24008IE_GroupCipherKeyNumber*
    asn1Test_TS24008IE_GroupCipherKeyNumber (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CNCommonGSM_MAPNASSystemInformation                       */
/*                                                            */
/**************************************************************/
/*
 10.5.1.12 - Core Network System Information (UMTS only) 
 10.5.1.12.1 - CN Common GSM-MAP NAS system information 
CNCommonGSM-MAPNASSystemInformation ::= INTEGER (0..65535)
*/
typedef OSUINT16 TS24008IE_CNCommonGSM_MAPNASSystemInformation;

EXTERN int NASEnc_TS24008IE_CNCommonGSM_MAPNASSystemInformation (OSCTXT* pctxt
   , TS24008IE_CNCommonGSM_MAPNASSystemInformation value);

EXTERN int NASDec_TS24008IE_CNCommonGSM_MAPNASSystemInformation (OSCTXT* pctxt
   , TS24008IE_CNCommonGSM_MAPNASSystemInformation* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CNCommonGSM_MAPNASSystemInformation (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CNCommonGSM_MAPNASSystemInformation* pvalue);

EXTERN TS24008IE_CNCommonGSM_MAPNASSystemInformation*
    asn1Test_TS24008IE_CNCommonGSM_MAPNASSystemInformation (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthParamRAND                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.3.1 - Authentication parameter RAND 
AuthParamRAND ::= OCTET STRING (SIZE (16))
*/
typedef struct EXTERN TS24008IE_AuthParamRAND {
   OSOCTET data[16];
} TS24008IE_AuthParamRAND;

EXTERN int NASEnc_TS24008IE_AuthParamRAND (OSCTXT* pctxt
   , TS24008IE_AuthParamRAND* pvalue);

EXTERN int NASDec_TS24008IE_AuthParamRAND (OSCTXT* pctxt
   , TS24008IE_AuthParamRAND* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AuthParamRAND (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AuthParamRAND* pvalue);

EXTERN TS24008IE_AuthParamRAND*
    asn1Test_TS24008IE_AuthParamRAND (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthRespParam                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.3.2 - Authentication Response parameter 
AuthRespParam ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN TS24008IE_AuthRespParam {
   OSOCTET data[4];
} TS24008IE_AuthRespParam;

EXTERN int NASEnc_TS24008IE_AuthRespParam (OSCTXT* pctxt
   , TS24008IE_AuthRespParam* pvalue);

EXTERN int NASDec_TS24008IE_AuthRespParam (OSCTXT* pctxt
   , TS24008IE_AuthRespParam* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AuthRespParam (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AuthRespParam* pvalue);

EXTERN TS24008IE_AuthRespParam*
    asn1Test_TS24008IE_AuthRespParam (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuthRespParamExt                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.3.2.1 - 
 Authentication Response Parameter (extension)
 (UMTS authentication challenge only) 
AuthRespParamExt ::= OCTET STRING (SIZE (1..12))
*/
typedef struct EXTERN TS24008IE_AuthRespParamExt {
   OSUINT8 numocts;
   OSOCTET data[12];
} TS24008IE_AuthRespParamExt;

EXTERN int NASEnc_TS24008IE_AuthRespParamExt (OSCTXT* pctxt
   , TS24008IE_AuthRespParamExt* pvalue);

EXTERN int NASDec_TS24008IE_AuthRespParamExt (OSCTXT* pctxt
   , TS24008IE_AuthRespParamExt* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AuthRespParamExt (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AuthRespParamExt* pvalue);

EXTERN TS24008IE_AuthRespParamExt*
    asn1Test_TS24008IE_AuthRespParamExt (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AuthRespParamExt (TS24008IE_AuthRespParamExt* pvalue);

/**************************************************************/
/*                                                            */
/*  CMServiceType                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.3.3 - CM service type 
CMServiceType ::= ENUMERATED { mobOrigCallEstab(1), emerCallEstab(2), sms(4), suplSvcActv(8), voiceGrpCallEstab(9), voiceBcastCallEstab(10), locationSvcs(11) }
*/
typedef enum {
   TS24008IE_CMServiceType_mobOrigCallEstab = 1,
   TS24008IE_CMServiceType_emerCallEstab = 2,
   TS24008IE_CMServiceType_sms = 4,
   TS24008IE_CMServiceType_suplSvcActv = 8,
   TS24008IE_CMServiceType_voiceGrpCallEstab = 9,
   TS24008IE_CMServiceType_voiceBcastCallEstab = 10,
   TS24008IE_CMServiceType_locationSvcs = 11
} TS24008IE_CMServiceType;

EXTERN int NASEnc_TS24008IE_CMServiceType (OSCTXT* pctxt
   , TS24008IE_CMServiceType value);

EXTERN int NASDec_TS24008IE_CMServiceType (OSCTXT* pctxt
   , TS24008IE_CMServiceType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CMServiceType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CMServiceType* pvalue);

EXTERN extern const OSEnumItem TS24008IE_CMServiceType_ENUMTAB[];
#define TS24008IE_CMServiceType_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* TS24008IE_CMServiceType_ToString (OSINT32 value);

EXTERN int TS24008IE_CMServiceType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_CMServiceType* pvalue);

EXTERN int TS24008IE_CMServiceType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24008IE_CMServiceType* pvalue);

EXTERN TS24008IE_CMServiceType*
    asn1Test_TS24008IE_CMServiceType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RejectCauseValue                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.3.6 - Reject cause 
RejectCauseValue ::= ENUMERATED { imsiUnkInHLR(2), illegalMS(3), imsiUnkInVLR(4), imeiNotAcc(5), illegalME(6), plmnNotAllow(11), locNotAllow(12), roamNotAllow(13), noCellsInLoc(15), networkFail(17), macFail(20), synchFail(21), congestion(22), gsmAuthUnaccept(23), csgNotAuth(25), svcOptNotSupp(32), notSubscribed(33), outOfOrder(34), callNotIdent(38), semIncorrectMsg(95), invMandInfo(96), msgTypeNotExist(97), msgTypeNotCompat(98), ieNotExist(99), condIEErr(100), msgNotCompat(101), protocolErr(111), rejectCauseValueMAX(255) }
*/
typedef enum {
   TS24008IE_RejectCauseValue_imsiUnkInHLR = 2,
   TS24008IE_RejectCauseValue_illegalMS = 3,
   TS24008IE_RejectCauseValue_imsiUnkInVLR = 4,
   TS24008IE_RejectCauseValue_imeiNotAcc = 5,
   TS24008IE_RejectCauseValue_illegalME = 6,
   TS24008IE_RejectCauseValue_plmnNotAllow = 11,
   TS24008IE_RejectCauseValue_locNotAllow = 12,
   TS24008IE_RejectCauseValue_roamNotAllow = 13,
   TS24008IE_RejectCauseValue_noCellsInLoc = 15,
   TS24008IE_RejectCauseValue_networkFail = 17,
   TS24008IE_RejectCauseValue_macFail = 20,
   TS24008IE_RejectCauseValue_synchFail = 21,
   TS24008IE_RejectCauseValue_congestion = 22,
   TS24008IE_RejectCauseValue_gsmAuthUnaccept = 23,
   TS24008IE_RejectCauseValue_csgNotAuth = 25,
   TS24008IE_RejectCauseValue_svcOptNotSupp = 32,
   TS24008IE_RejectCauseValue_notSubscribed = 33,
   TS24008IE_RejectCauseValue_outOfOrder = 34,
   TS24008IE_RejectCauseValue_callNotIdent = 38,
   TS24008IE_RejectCauseValue_semIncorrectMsg = 95,
   TS24008IE_RejectCauseValue_invMandInfo = 96,
   TS24008IE_RejectCauseValue_msgTypeNotExist = 97,
   TS24008IE_RejectCauseValue_msgTypeNotCompat = 98,
   TS24008IE_RejectCauseValue_ieNotExist = 99,
   TS24008IE_RejectCauseValue_condIEErr = 100,
   TS24008IE_RejectCauseValue_msgNotCompat = 101,
   TS24008IE_RejectCauseValue_protocolErr = 111,
   TS24008IE_RejectCauseValue_rejectCauseValueMAX = 255
} TS24008IE_RejectCauseValue;

EXTERN int NASEnc_TS24008IE_RejectCauseValue (OSCTXT* pctxt
   , TS24008IE_RejectCauseValue value);

EXTERN int NASDec_TS24008IE_RejectCauseValue (OSCTXT* pctxt
   , TS24008IE_RejectCauseValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RejectCauseValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RejectCauseValue* pvalue);

EXTERN extern const OSEnumItem TS24008IE_RejectCauseValue_ENUMTAB[];
#define TS24008IE_RejectCauseValue_ENUMTABSIZE 28

EXTERN const OSUTF8CHAR* TS24008IE_RejectCauseValue_ToString (OSINT32 value);

EXTERN int TS24008IE_RejectCauseValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_RejectCauseValue* pvalue);

EXTERN int TS24008IE_RejectCauseValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_RejectCauseValue* pvalue);

EXTERN TS24008IE_RejectCauseValue*
    asn1Test_TS24008IE_RejectCauseValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TimeZone                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.3.7 - Follow-on Proceed: no value; IEI only 
 10.5.3.8 - Time Zone 
TimeZone ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24008IE_TimeZone;

EXTERN int NASEnc_TS24008IE_TimeZone (OSCTXT* pctxt, TS24008IE_TimeZone value);

EXTERN int NASDec_TS24008IE_TimeZone (OSCTXT* pctxt, TS24008IE_TimeZone* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_TimeZone (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TimeZone* pvalue);

EXTERN TS24008IE_TimeZone* asn1Test_TS24008IE_TimeZone (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LSAIdentifier                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.3.10 - CTS permission: no value; IEI only 
 10.5.3.11 - LSA Identifier 
LSAIdentifier ::= OCTET STRING (SIZE (0 | 3))
*/
typedef struct EXTERN TS24008IE_LSAIdentifier {
   OSUINT8 numocts;
   OSOCTET data[3];
} TS24008IE_LSAIdentifier;

EXTERN int NASEnc_TS24008IE_LSAIdentifier (OSCTXT* pctxt
   , TS24008IE_LSAIdentifier* pvalue);

EXTERN int NASDec_TS24008IE_LSAIdentifier (OSCTXT* pctxt
   , TS24008IE_LSAIdentifier* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LSAIdentifier (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LSAIdentifier* pvalue);

EXTERN TS24008IE_LSAIdentifier*
    asn1Test_TS24008IE_LSAIdentifier (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_LSAIdentifier (TS24008IE_LSAIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  LockingShiftCodesetID                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.4.1 - Extensions of codesets: informative only 
 10.5.4.2 - Locking shift procedure 
LockingShiftCodesetID ::= INTEGER (0..7)
*/
typedef OSUINT8 TS24008IE_LockingShiftCodesetID;

EXTERN int NASEnc_TS24008IE_LockingShiftCodesetID (OSCTXT* pctxt
   , TS24008IE_LockingShiftCodesetID value);

EXTERN int NASDec_TS24008IE_LockingShiftCodesetID (OSCTXT* pctxt
   , TS24008IE_LockingShiftCodesetID* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LockingShiftCodesetID (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LockingShiftCodesetID* pvalue);

EXTERN TS24008IE_LockingShiftCodesetID*
    asn1Test_TS24008IE_LockingShiftCodesetID (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NonLockingShiftCodesetID                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.4.3 - Non-locking shift procedure 
NonLockingShiftCodesetID ::= INTEGER (0..7)
*/
typedef OSUINT8 TS24008IE_NonLockingShiftCodesetID;

EXTERN int NASEnc_TS24008IE_NonLockingShiftCodesetID (OSCTXT* pctxt
   , TS24008IE_NonLockingShiftCodesetID value);

EXTERN int NASDec_TS24008IE_NonLockingShiftCodesetID (OSCTXT* pctxt
   , TS24008IE_NonLockingShiftCodesetID* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NonLockingShiftCodesetID (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NonLockingShiftCodesetID* pvalue);

EXTERN TS24008IE_NonLockingShiftCodesetID*
    asn1Test_TS24008IE_NonLockingShiftCodesetID (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InfoXferCap                                               */
/*                                                            */
/**************************************************************/
/*
InfoXferCap ::= ENUMERATED { speech(0), digital(1), audio(2), fax(3), otherITC(5), reserved(7) }
*/
typedef enum {
   TS24008IE_InfoXferCap_speech = 0,
   TS24008IE_InfoXferCap_digital = 1,
   TS24008IE_InfoXferCap_audio = 2,
   TS24008IE_InfoXferCap_fax = 3,
   TS24008IE_InfoXferCap_otherITC = 5,
   TS24008IE_InfoXferCap_reserved = 7
} TS24008IE_InfoXferCap;

EXTERN int NASEnc_TS24008IE_InfoXferCap (OSCTXT* pctxt
   , TS24008IE_InfoXferCap value);

EXTERN int NASDec_TS24008IE_InfoXferCap (OSCTXT* pctxt
   , TS24008IE_InfoXferCap* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_InfoXferCap (OSCTXT *pctxt, 
   const char* name, const TS24008IE_InfoXferCap* pvalue);

EXTERN extern const OSEnumItem TS24008IE_InfoXferCap_ENUMTAB[];
#define TS24008IE_InfoXferCap_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24008IE_InfoXferCap_ToString (OSINT32 value);

EXTERN int TS24008IE_InfoXferCap_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_InfoXferCap* pvalue);

EXTERN int TS24008IE_InfoXferCap_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24008IE_InfoXferCap* pvalue);

EXTERN TS24008IE_InfoXferCap* asn1Test_TS24008IE_InfoXferCap (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CodingStandard                                            */
/*                                                            */
/**************************************************************/
/*
 10.5.4.6 - Call state 
CodingStandard ::= ENUMERATED { q931(0), rsvdForIntl(1), national(2), stdDefForGSMPLMS(3) }
*/
typedef enum {
   TS24008IE_CodingStandard_q931 = 0,
   TS24008IE_CodingStandard_rsvdForIntl = 1,
   TS24008IE_CodingStandard_national = 2,
   TS24008IE_CodingStandard_stdDefForGSMPLMS = 3
} TS24008IE_CodingStandard;

EXTERN int NASEnc_TS24008IE_CodingStandard (OSCTXT* pctxt
   , TS24008IE_CodingStandard value);

EXTERN int NASDec_TS24008IE_CodingStandard (OSCTXT* pctxt
   , TS24008IE_CodingStandard* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CodingStandard (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CodingStandard* pvalue);

EXTERN extern const OSEnumItem TS24008IE_CodingStandard_ENUMTAB[];
#define TS24008IE_CodingStandard_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24008IE_CodingStandard_ToString (OSINT32 value);

EXTERN int TS24008IE_CodingStandard_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_CodingStandard* pvalue);

EXTERN int TS24008IE_CodingStandard_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24008IE_CodingStandard* pvalue)
      ;

EXTERN TS24008IE_CodingStandard*
    asn1Test_TS24008IE_CodingStandard (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Location                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.4.11 - Cause 
Location ::= ENUMERATED { user(0), prvNWServLclUser(1), pubNWServLclUser(2), transit(3), pubNWServRemUser(4), prvNWServRemUser(5), intlNetwork(7), netBeyondIntworkPt(10) }
*/
typedef enum {
   TS24008IE_Location_user = 0,
   TS24008IE_Location_prvNWServLclUser = 1,
   TS24008IE_Location_pubNWServLclUser = 2,
   TS24008IE_Location_transit = 3,
   TS24008IE_Location_pubNWServRemUser = 4,
   TS24008IE_Location_prvNWServRemUser = 5,
   TS24008IE_Location_intlNetwork = 7,
   TS24008IE_Location_netBeyondIntworkPt = 10
} TS24008IE_Location;

EXTERN int NASEnc_TS24008IE_Location (OSCTXT* pctxt, TS24008IE_Location value);

EXTERN int NASDec_TS24008IE_Location (OSCTXT* pctxt, TS24008IE_Location* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_Location (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Location* pvalue);

EXTERN extern const OSEnumItem TS24008IE_Location_ENUMTAB[];
#define TS24008IE_Location_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* TS24008IE_Location_ToString (OSINT32 value);

EXTERN int TS24008IE_Location_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_Location* pvalue);

EXTERN int TS24008IE_Location_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24008IE_Location* pvalue);

EXTERN TS24008IE_Location* asn1Test_TS24008IE_Location (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CongestionLevel                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.11a CLIR suppression: IEI only
 10.5.4.11b CLIR invocation: IEI only
 10.5.4.12 - Congestion level 
CongestionLevel ::= INTEGER (0..15)
*/
typedef OSUINT8 TS24008IE_CongestionLevel;

EXTERN int NASEnc_TS24008IE_CongestionLevel (OSCTXT* pctxt
   , TS24008IE_CongestionLevel value);

EXTERN int NASDec_TS24008IE_CongestionLevel (OSCTXT* pctxt
   , TS24008IE_CongestionLevel* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CongestionLevel (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CongestionLevel* pvalue);

EXTERN TS24008IE_CongestionLevel*
    asn1Test_TS24008IE_CongestionLevel (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CallingPartyBCDNumber_octet3                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CallingPartyBCDNumber'
*/
typedef struct EXTERN TS24008IE_CallingPartyBCDNumber_octet3 {
   OSUINT8 typeOfNumber;
   OSUINT8 numberingPlanID;
} TS24008IE_CallingPartyBCDNumber_octet3;

EXTERN int NASEnc_TS24008IE_CallingPartyBCDNumber_octet3 (OSCTXT* pctxt
   , TS24008IE_CallingPartyBCDNumber_octet3* pvalue);

EXTERN int NASDec_TS24008IE_CallingPartyBCDNumber_octet3 (OSCTXT* pctxt
   , TS24008IE_CallingPartyBCDNumber_octet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CallingPartyBCDNumber_octet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CallingPartyBCDNumber_octet3* pvalue);

EXTERN TS24008IE_CallingPartyBCDNumber_octet3*
    asn1Test_TS24008IE_CallingPartyBCDNumber_octet3 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CallingPartyBCDNumber_octet3a                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CallingPartyBCDNumber'
*/
typedef struct EXTERN TS24008IE_CallingPartyBCDNumber_octet3a {
   OSUINT8 presentationIndicator;
   OSUINT8 spare;
   OSUINT8 screeningIndicator;
} TS24008IE_CallingPartyBCDNumber_octet3a;

EXTERN int NASEnc_TS24008IE_CallingPartyBCDNumber_octet3a (OSCTXT* pctxt
   , TS24008IE_CallingPartyBCDNumber_octet3a* pvalue);

EXTERN int NASDec_TS24008IE_CallingPartyBCDNumber_octet3a (OSCTXT* pctxt
   , TS24008IE_CallingPartyBCDNumber_octet3a* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CallingPartyBCDNumber_octet3a (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CallingPartyBCDNumber_octet3a* pvalue);

EXTERN TS24008IE_CallingPartyBCDNumber_octet3a*
    asn1Test_TS24008IE_CallingPartyBCDNumber_octet3a (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_CallingPartyBCDNumber_octet3a (
   TS24008IE_CallingPartyBCDNumber_octet3a* pvalue);

/**************************************************************/
/*                                                            */
/*  CallingPartyBCDNumber                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.4.9 - Calling party BCD number 
CallingPartyBCDNumber ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<first3GExtElem/>
   octet3 [1] SEQUENCE {
      typeOfNumber [0] INTEGER (0..7),
      numberingPlanID [1] INTEGER (0..15)
   },
   --<last3GExtElem/>
   octet3a [2] SEQUENCE {
      presentationIndicator [0] INTEGER (0..3),
      spare [1] INTEGER (0..7) DEFAULT 0,
      screeningIndicator [2] INTEGER (0..3)
   } OPTIONAL,
   --<length fixed-size="0"/>
   number [3] TBCDString
}
*/
typedef struct EXTERN TS24008IE_CallingPartyBCDNumber {
   struct {
      unsigned octet3aPresent : 1;
   } m;
   OSUINT8 length;
   TS24008IE_CallingPartyBCDNumber_octet3 octet3;
   TS24008IE_CallingPartyBCDNumber_octet3a octet3a;
   TS24008IE_TBCDString number;
} TS24008IE_CallingPartyBCDNumber;

EXTERN int NASEnc_TS24008IE_CallingPartyBCDNumber (OSCTXT* pctxt
   , TS24008IE_CallingPartyBCDNumber* pvalue);

EXTERN int NASDec_TS24008IE_CallingPartyBCDNumber (OSCTXT* pctxt
   , TS24008IE_CallingPartyBCDNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CallingPartyBCDNumber (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CallingPartyBCDNumber* pvalue);

EXTERN TS24008IE_CallingPartyBCDNumber*
    asn1Test_TS24008IE_CallingPartyBCDNumber (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_CallingPartyBCDNumber (
   TS24008IE_CallingPartyBCDNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectedNumber                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.13 - Connected number 
ConnectedNumber ::= CallingPartyBCDNumber
*/
typedef TS24008IE_CallingPartyBCDNumber TS24008IE_ConnectedNumber;

EXTERN int NASEnc_TS24008IE_ConnectedNumber (OSCTXT* pctxt
   , TS24008IE_ConnectedNumber* pvalue);

EXTERN int NASDec_TS24008IE_ConnectedNumber (OSCTXT* pctxt
   , TS24008IE_ConnectedNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ConnectedNumber (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ConnectedNumber* pvalue);

EXTERN TS24008IE_ConnectedNumber*
    asn1Test_TS24008IE_ConnectedNumber (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ConnectedNumber (TS24008IE_ConnectedNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  PartySubaddress_octet3                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PartySubaddress'
*/
typedef struct EXTERN TS24008IE_PartySubaddress_octet3 {
   OSUINT8 typeOfSubaddr;
   OSBOOL oddEvenIndicator;
   OSUINT8 spare;
} TS24008IE_PartySubaddress_octet3;

EXTERN int NASEnc_TS24008IE_PartySubaddress_octet3 (OSCTXT* pctxt
   , TS24008IE_PartySubaddress_octet3* pvalue);

EXTERN int NASDec_TS24008IE_PartySubaddress_octet3 (OSCTXT* pctxt
   , TS24008IE_PartySubaddress_octet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PartySubaddress_octet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PartySubaddress_octet3* pvalue);

EXTERN TS24008IE_PartySubaddress_octet3*
    asn1Test_TS24008IE_PartySubaddress_octet3 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PartySubaddress_octet3 (
   TS24008IE_PartySubaddress_octet3* pvalue);

/**************************************************************/
/*                                                            */
/*  PartySubaddress                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.8 - Called party subaddress 
PartySubaddress ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet3 [1] SEQUENCE {
      typeOfSubaddr [0] INTEGER (0..7),
      oddEvenIndicator [1] BOOLEAN,
      spare [2] INTEGER (0..7) DEFAULT 0
   } OPTIONAL,
   --<length fixed-size="0"/>
   subaddrInfo [2] OCTET STRING (SIZE (0..20))
}
*/
typedef struct EXTERN TS24008IE_PartySubaddress {
   struct {
      unsigned octet3Present : 1;
   } m;
   OSUINT8 length;
   TS24008IE_PartySubaddress_octet3 octet3;
   struct {
      OSUINT8 numocts;
      OSOCTET data[20];
   } subaddrInfo;
} TS24008IE_PartySubaddress;

EXTERN int NASEnc_TS24008IE_PartySubaddress (OSCTXT* pctxt
   , TS24008IE_PartySubaddress* pvalue);

EXTERN int NASDec_TS24008IE_PartySubaddress (OSCTXT* pctxt
   , TS24008IE_PartySubaddress* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PartySubaddress (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PartySubaddress* pvalue);

EXTERN TS24008IE_PartySubaddress*
    asn1Test_TS24008IE_PartySubaddress (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PartySubaddress (TS24008IE_PartySubaddress* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectedSubaddress                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.4.14 - Connected subaddress 
ConnectedSubaddress ::= PartySubaddress
*/
typedef TS24008IE_PartySubaddress TS24008IE_ConnectedSubaddress;

EXTERN int NASEnc_TS24008IE_ConnectedSubaddress (OSCTXT* pctxt
   , TS24008IE_ConnectedSubaddress* pvalue);

EXTERN int NASDec_TS24008IE_ConnectedSubaddress (OSCTXT* pctxt
   , TS24008IE_ConnectedSubaddress* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ConnectedSubaddress (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ConnectedSubaddress* pvalue);

EXTERN TS24008IE_ConnectedSubaddress*
    asn1Test_TS24008IE_ConnectedSubaddress (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ConnectedSubaddress (
   TS24008IE_ConnectedSubaddress* pvalue);

/**************************************************************/
/*                                                            */
/*  Facility                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.4.15 - Facility 
Facility ::= OCTET STRING
*/
typedef OSDynOctStr TS24008IE_Facility;

EXTERN int NASEnc_TS24008IE_Facility (OSCTXT* pctxt, TS24008IE_Facility value);

EXTERN int NASDec_TS24008IE_Facility (OSCTXT* pctxt, TS24008IE_Facility* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_Facility (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Facility* pvalue);

EXTERN TS24008IE_Facility* asn1Test_TS24008IE_Facility (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_Facility (TS24008IE_Facility* pvalue);

/**************************************************************/
/*                                                            */
/*  LowLayerCompatibility                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.4.18 - Low layer compatibility 
LowLayerCompatibility ::= OCTET STRING (SIZE (0..16))
*/
typedef struct EXTERN TS24008IE_LowLayerCompatibility {
   OSUINT8 numocts;
   OSOCTET data[16];
} TS24008IE_LowLayerCompatibility;

EXTERN int NASEnc_TS24008IE_LowLayerCompatibility (OSCTXT* pctxt
   , TS24008IE_LowLayerCompatibility* pvalue);

EXTERN int NASDec_TS24008IE_LowLayerCompatibility (OSCTXT* pctxt
   , TS24008IE_LowLayerCompatibility* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LowLayerCompatibility (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LowLayerCompatibility* pvalue);

EXTERN TS24008IE_LowLayerCompatibility*
    asn1Test_TS24008IE_LowLayerCompatibility (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_LowLayerCompatibility (
   TS24008IE_LowLayerCompatibility* pvalue);

/**************************************************************/
/*                                                            */
/*  RedirectingPartyBCDNumber                                 */
/*                                                            */
/**************************************************************/
/*
 10.5.4.21b - Redirecting party BCD number 
RedirectingPartyBCDNumber ::= CallingPartyBCDNumber
*/
typedef TS24008IE_CallingPartyBCDNumber TS24008IE_RedirectingPartyBCDNumber;

EXTERN int NASEnc_TS24008IE_RedirectingPartyBCDNumber (OSCTXT* pctxt
   , TS24008IE_RedirectingPartyBCDNumber* pvalue);

EXTERN int NASDec_TS24008IE_RedirectingPartyBCDNumber (OSCTXT* pctxt
   , TS24008IE_RedirectingPartyBCDNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RedirectingPartyBCDNumber (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RedirectingPartyBCDNumber* pvalue);

EXTERN TS24008IE_RedirectingPartyBCDNumber*
    asn1Test_TS24008IE_RedirectingPartyBCDNumber (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_RedirectingPartyBCDNumber (
   TS24008IE_RedirectingPartyBCDNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  RedirectingPartySubaddress                                */
/*                                                            */
/**************************************************************/
/*
 10.5.4.21c - Redirecting party subaddress 
RedirectingPartySubaddress ::= ConnectedSubaddress
*/
typedef TS24008IE_ConnectedSubaddress TS24008IE_RedirectingPartySubaddress;

EXTERN int NASEnc_TS24008IE_RedirectingPartySubaddress (OSCTXT* pctxt
   , TS24008IE_RedirectingPartySubaddress* pvalue);

EXTERN int NASDec_TS24008IE_RedirectingPartySubaddress (OSCTXT* pctxt
   , TS24008IE_RedirectingPartySubaddress* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RedirectingPartySubaddress (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RedirectingPartySubaddress* pvalue);

EXTERN TS24008IE_RedirectingPartySubaddress*
    asn1Test_TS24008IE_RedirectingPartySubaddress (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_RedirectingPartySubaddress (
   TS24008IE_RedirectingPartySubaddress* pvalue);

/**************************************************************/
/*                                                            */
/*  RepeatIndicator                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.22 - Repeat indicator 
RepeatIndicator ::= INTEGER (0..15)
*/
typedef OSUINT8 TS24008IE_RepeatIndicator;

EXTERN int NASEnc_TS24008IE_RepeatIndicator (OSCTXT* pctxt
   , TS24008IE_RepeatIndicator value);

EXTERN int NASDec_TS24008IE_RepeatIndicator (OSCTXT* pctxt
   , TS24008IE_RepeatIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RepeatIndicator (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RepeatIndicator* pvalue);

EXTERN TS24008IE_RepeatIndicator*
    asn1Test_TS24008IE_RepeatIndicator (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Setup_Container                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.22a - Reverse call setup direction: IEI only 
 10.5.4.22b - SETUP Container $(CCBS)$ 
Setup-Container ::= OCTET STRING
*/
typedef OSDynOctStr TS24008IE_Setup_Container;

EXTERN int NASEnc_TS24008IE_Setup_Container (OSCTXT* pctxt
   , TS24008IE_Setup_Container value);

EXTERN int NASDec_TS24008IE_Setup_Container (OSCTXT* pctxt
   , TS24008IE_Setup_Container* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_Setup_Container (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Setup_Container* pvalue);

EXTERN TS24008IE_Setup_Container*
    asn1Test_TS24008IE_Setup_Container (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_Setup_Container (TS24008IE_Setup_Container* pvalue);

/**************************************************************/
/*                                                            */
/*  Signal                                                    */
/*                                                            */
/**************************************************************/
/*
 10.5.4.23 - Signal 
Signal ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24008IE_Signal;

EXTERN int NASEnc_TS24008IE_Signal (OSCTXT* pctxt, TS24008IE_Signal value);

EXTERN int NASDec_TS24008IE_Signal (OSCTXT* pctxt, TS24008IE_Signal* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_Signal (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Signal* pvalue);

EXTERN TS24008IE_Signal* asn1Test_TS24008IE_Signal (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SSVersionIndicator                                        */
/*                                                            */
/**************************************************************/
/*
 10.5.4.24 - SS Version Indicator 
SSVersionIndicator ::= OCTET STRING
*/
typedef OSDynOctStr TS24008IE_SSVersionIndicator;

EXTERN int NASEnc_TS24008IE_SSVersionIndicator (OSCTXT* pctxt
   , TS24008IE_SSVersionIndicator value);

EXTERN int NASDec_TS24008IE_SSVersionIndicator (OSCTXT* pctxt
   , TS24008IE_SSVersionIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_SSVersionIndicator (OSCTXT *pctxt, 
   const char* name, const TS24008IE_SSVersionIndicator* pvalue);

EXTERN TS24008IE_SSVersionIndicator*
    asn1Test_TS24008IE_SSVersionIndicator (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_SSVersionIndicator (
   TS24008IE_SSVersionIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  IdentityTypeValue_typeOfIdent                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'IdentityTypeValue'
*/
typedef enum {
   TS24008IE_IdentityTypeValue_typeOfIdent_imsi = 1,
   TS24008IE_IdentityTypeValue_typeOfIdent_imei = 2,
   TS24008IE_IdentityTypeValue_typeOfIdent_imeisv = 3,
   TS24008IE_IdentityTypeValue_typeOfIdent_tmsi = 4,
   TS24008IE_IdentityTypeValue_typeOfIdent_p_tmsi = 5
} TS24008IE_IdentityTypeValue_typeOfIdent;

EXTERN int NASEnc_TS24008IE_IdentityTypeValue_typeOfIdent (OSCTXT* pctxt
   , TS24008IE_IdentityTypeValue_typeOfIdent value);

EXTERN int NASDec_TS24008IE_IdentityTypeValue_typeOfIdent (OSCTXT* pctxt
   , TS24008IE_IdentityTypeValue_typeOfIdent* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_IdentityTypeValue_typeOfIdent (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IdentityTypeValue_typeOfIdent* pvalue);

EXTERN extern const OSEnumItem TS24008IE_IdentityTypeValue_typeOfIdent_ENUMTAB[];
#define TS24008IE_IdentityTypeValue_typeOfIdent_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24008IE_IdentityTypeValue_typeOfIdent_ToString (OSINT32 value);

EXTERN int TS24008IE_IdentityTypeValue_typeOfIdent_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_IdentityTypeValue_typeOfIdent* pvalue);

EXTERN int TS24008IE_IdentityTypeValue_typeOfIdent_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_IdentityTypeValue_typeOfIdent* pvalue);

EXTERN TS24008IE_IdentityTypeValue_typeOfIdent*
    asn1Test_TS24008IE_IdentityTypeValue_typeOfIdent (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  IdentityTypeValue                                         */
/*                                                            */
/**************************************************************/
/*
 10.5.3.4 - Identity type 
IdentityTypeValue ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   typeOfIdent [1] ENUMERATED { imsi(1), imei(2), imeisv(3), tmsi(4), p-tmsi(5) }
}
*/
typedef struct EXTERN TS24008IE_IdentityTypeValue {
   OSBOOL spare;
   TS24008IE_IdentityTypeValue_typeOfIdent typeOfIdent;
} TS24008IE_IdentityTypeValue;

EXTERN int NASEnc_TS24008IE_IdentityTypeValue (OSCTXT* pctxt
   , TS24008IE_IdentityTypeValue* pvalue);

EXTERN int NASDec_TS24008IE_IdentityTypeValue (OSCTXT* pctxt
   , TS24008IE_IdentityTypeValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_IdentityTypeValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IdentityTypeValue* pvalue);

EXTERN TS24008IE_IdentityTypeValue*
    asn1Test_TS24008IE_IdentityTypeValue (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_IdentityTypeValue (TS24008IE_IdentityTypeValue* pvalue);

/**************************************************************/
/*                                                            */
/*  IdentityType2Value                                        */
/*                                                            */
/**************************************************************/
/*
 10.5.5.9 - Identity type 2 
IdentityType2Value ::= IdentityTypeValue
*/
typedef TS24008IE_IdentityTypeValue TS24008IE_IdentityType2Value;

EXTERN int NASEnc_TS24008IE_IdentityType2Value (OSCTXT* pctxt
   , TS24008IE_IdentityType2Value* pvalue);

EXTERN int NASDec_TS24008IE_IdentityType2Value (OSCTXT* pctxt
   , TS24008IE_IdentityType2Value* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_IdentityType2Value (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IdentityType2Value* pvalue);

EXTERN TS24008IE_IdentityType2Value*
    asn1Test_TS24008IE_IdentityType2Value (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_IdentityType2Value (
   TS24008IE_IdentityType2Value* pvalue);

/**************************************************************/
/*                                                            */
/*  DLMCNonContigIntraBandRecep                               */
/*                                                            */
/**************************************************************/
/*
 < DLMC Capability struct > ::=
	{ 0 | 1	< DLMC - Non-contiguous intra-band reception : bit(2) >
 			< DLMC - Inter-band reception : bit(1) > }
	< DLMC - Maximum Bandwidth : bit(2) >
	< DLMC - Maximum Number of Downlink Timeslots : bit(6) >
	< DLMC - Maximum Number of Downlink Carriers : bit(3) > ;
DLMCNonContigIntraBandRecep ::= ENUMERATED { nonContigIntraBandRecepNotSupp(0), band-EGSM-GSM850(1), band-DCS1800-PCS1900(2), band-EGSM-GSM850-DCS1800-PCS1900(3) }
*/
typedef enum {
   TS24008IE_DLMCNonContigIntraBandRecep_nonContigIntraBandRecepNotSupp = 0,
   TS24008IE_DLMCNonContigIntraBandRecep_band_EGSM_GSM850 = 1,
   TS24008IE_DLMCNonContigIntraBandRecep_band_DCS1800_PCS1900 = 2,
   TS24008IE_DLMCNonContigIntraBandRecep_band_EGSM_GSM850_DCS1800_PCS1900 = 3
} TS24008IE_DLMCNonContigIntraBandRecep;

EXTERN int NASEnc_TS24008IE_DLMCNonContigIntraBandRecep (OSCTXT* pctxt
   , TS24008IE_DLMCNonContigIntraBandRecep value);

EXTERN int NASDec_TS24008IE_DLMCNonContigIntraBandRecep (OSCTXT* pctxt
   , TS24008IE_DLMCNonContigIntraBandRecep* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DLMCNonContigIntraBandRecep (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DLMCNonContigIntraBandRecep* pvalue);

EXTERN extern const OSEnumItem TS24008IE_DLMCNonContigIntraBandRecep_ENUMTAB[];
#define TS24008IE_DLMCNonContigIntraBandRecep_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24008IE_DLMCNonContigIntraBandRecep_ToString (OSINT32 value);

EXTERN int TS24008IE_DLMCNonContigIntraBandRecep_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_DLMCNonContigIntraBandRecep* pvalue);

EXTERN int TS24008IE_DLMCNonContigIntraBandRecep_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_DLMCNonContigIntraBandRecep* pvalue);

EXTERN TS24008IE_DLMCNonContigIntraBandRecep*
    asn1Test_TS24008IE_DLMCNonContigIntraBandRecep (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GMMCauseValue                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.5.14 - GMM cause 
GMMCauseValue ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24008IE_GMMCauseValue;

EXTERN int NASEnc_TS24008IE_GMMCauseValue (OSCTXT* pctxt
   , TS24008IE_GMMCauseValue value);

EXTERN int NASDec_TS24008IE_GMMCauseValue (OSCTXT* pctxt
   , TS24008IE_GMMCauseValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GMMCauseValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GMMCauseValue* pvalue);

EXTERN TS24008IE_GMMCauseValue*
    asn1Test_TS24008IE_GMMCauseValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AC_Reference_Number                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.5.19 - A&C reference number 
AC-Reference-Number ::= INTEGER (0..15)
*/
typedef OSUINT8 TS24008IE_AC_Reference_Number;

EXTERN int NASEnc_TS24008IE_AC_Reference_Number (OSCTXT* pctxt
   , TS24008IE_AC_Reference_Number value);

EXTERN int NASDec_TS24008IE_AC_Reference_Number (OSCTXT* pctxt
   , TS24008IE_AC_Reference_Number* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AC_Reference_Number (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AC_Reference_Number* pvalue);

EXTERN TS24008IE_AC_Reference_Number*
    asn1Test_TS24008IE_AC_Reference_Number (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  InterRATInfoContainer                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.5.24 - Inter RAT information container 
InterRATInfoContainer ::= OCTET STRING (SIZE (1..248))
*/
typedef struct EXTERN TS24008IE_InterRATInfoContainer {
   OSUINT8 numocts;
   OSOCTET data[248];
} TS24008IE_InterRATInfoContainer;

EXTERN int NASEnc_TS24008IE_InterRATInfoContainer (OSCTXT* pctxt
   , TS24008IE_InterRATInfoContainer* pvalue);

EXTERN int NASDec_TS24008IE_InterRATInfoContainer (OSCTXT* pctxt
   , TS24008IE_InterRATInfoContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_InterRATInfoContainer (OSCTXT *pctxt, 
   const char* name, const TS24008IE_InterRATInfoContainer* pvalue);

EXTERN TS24008IE_InterRATInfoContainer*
    asn1Test_TS24008IE_InterRATInfoContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_InterRATInfoContainer (
   TS24008IE_InterRATInfoContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  UENetCapability                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.5.26 - UE network capability 
UENetCapability ::= OCTET STRING (SIZE (2..5))
*/
typedef struct EXTERN TS24008IE_UENetCapability {
   OSUINT8 numocts;
   OSOCTET data[5];
} TS24008IE_UENetCapability;

EXTERN int NASEnc_TS24008IE_UENetCapability (OSCTXT* pctxt
   , TS24008IE_UENetCapability* pvalue);

EXTERN int NASDec_TS24008IE_UENetCapability (OSCTXT* pctxt
   , TS24008IE_UENetCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_UENetCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_UENetCapability* pvalue);

EXTERN TS24008IE_UENetCapability*
    asn1Test_TS24008IE_UENetCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_UENetCapability (TS24008IE_UENetCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  E_UTRANInterRATInfoContainer                              */
/*                                                            */
/**************************************************************/
/*
 10.5.5.27 - E-UTRAN inter RAT information container 
E-UTRANInterRATInfoContainer ::= OCTET STRING
                                               (SIZE(1..255))

*/
typedef OSDynOctStr TS24008IE_E_UTRANInterRATInfoContainer;

EXTERN int NASEnc_TS24008IE_E_UTRANInterRATInfoContainer (OSCTXT* pctxt
   , TS24008IE_E_UTRANInterRATInfoContainer value);

EXTERN int NASDec_TS24008IE_E_UTRANInterRATInfoContainer (OSCTXT* pctxt
   , TS24008IE_E_UTRANInterRATInfoContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_E_UTRANInterRATInfoContainer (OSCTXT *pctxt, 
   const char* name, const TS24008IE_E_UTRANInterRATInfoContainer* pvalue);

EXTERN TS24008IE_E_UTRANInterRATInfoContainer*
    asn1Test_TS24008IE_E_UTRANInterRATInfoContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_E_UTRANInterRATInfoContainer (
   TS24008IE_E_UTRANInterRATInfoContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  MsgAuthCode                                               */
/*                                                            */
/**************************************************************/
/*
 10.5.5.33 - Message authentication code 
MsgAuthCode ::= OCTET STRING
*/
typedef OSDynOctStr TS24008IE_MsgAuthCode;

EXTERN int NASEnc_TS24008IE_MsgAuthCode (OSCTXT* pctxt
   , TS24008IE_MsgAuthCode value);

EXTERN int NASDec_TS24008IE_MsgAuthCode (OSCTXT* pctxt
   , TS24008IE_MsgAuthCode* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MsgAuthCode (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MsgAuthCode* pvalue);

EXTERN TS24008IE_MsgAuthCode* asn1Test_TS24008IE_MsgAuthCode (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MsgAuthCode (TS24008IE_MsgAuthCode* pvalue);

/**************************************************************/
/*                                                            */
/*  DcnID                                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.5.35 - DCN-ID 
DcnID ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN TS24008IE_DcnID {
   OSOCTET data[2];
} TS24008IE_DcnID;

EXTERN int NASEnc_TS24008IE_DcnID (OSCTXT* pctxt, TS24008IE_DcnID* pvalue);

EXTERN int NASDec_TS24008IE_DcnID (OSCTXT* pctxt, TS24008IE_DcnID* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DcnID (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DcnID* pvalue);

EXTERN TS24008IE_DcnID* asn1Test_TS24008IE_DcnID (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AccessPointName                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.6.1 - Access point name 
<ctype>chararray</ctype>
<cDecFuncFname>TS24008IESDec_AccessPointName.c</cDecFuncFname>
<cEncFuncFname>TS24008IESEnc_AccessPointName.c</cEncFuncFname>
AccessPointName ::= IA5String (SIZE (1..100))
*/
typedef char TS24008IE_AccessPointName[101];

EXTERN int NASEnc_TS24008IE_AccessPointName (OSCTXT* pctxt
   , TS24008IE_AccessPointName value);

EXTERN int NASDec_TS24008IE_AccessPointName (OSCTXT* pctxt
   , TS24008IE_AccessPointName pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AccessPointName (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AccessPointName pvalue);

EXTERN const char* asn1Test_TS24008IE_AccessPointName (OSCTXT* pctxt, 
   char* buf, OSSIZE bufsize);

/**************************************************************/
/*                                                            */
/*  SMCauseValue                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.6.6 - SM cause 
SMCauseValue ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24008IE_SMCauseValue;

EXTERN int NASEnc_TS24008IE_SMCauseValue (OSCTXT* pctxt
   , TS24008IE_SMCauseValue value);

EXTERN int NASDec_TS24008IE_SMCauseValue (OSCTXT* pctxt
   , TS24008IE_SMCauseValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_SMCauseValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_SMCauseValue* pvalue);

EXTERN TS24008IE_SMCauseValue* asn1Test_TS24008IE_SMCauseValue (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  SMCause2Value                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.6.6A SM cause 2
SMCause2Value ::= SMCauseValue
*/
typedef TS24008IE_SMCauseValue TS24008IE_SMCause2Value;

EXTERN int NASEnc_TS24008IE_SMCause2Value (OSCTXT* pctxt
   , TS24008IE_SMCause2Value value);

EXTERN int NASDec_TS24008IE_SMCause2Value (OSCTXT* pctxt
   , TS24008IE_SMCause2Value* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_SMCause2Value (OSCTXT *pctxt, 
   const char* name, const TS24008IE_SMCause2Value* pvalue);

EXTERN TS24008IE_SMCause2Value*
    asn1Test_TS24008IE_SMCause2Value (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMS_PCO                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.6.15 - MBMS protocol configuration options 
MBMS-PCO ::= OCTET STRING
*/
typedef OSDynOctStr TS24008IE_MBMS_PCO;

EXTERN int NASEnc_TS24008IE_MBMS_PCO (OSCTXT* pctxt, TS24008IE_MBMS_PCO value);

EXTERN int NASDec_TS24008IE_MBMS_PCO (OSCTXT* pctxt, TS24008IE_MBMS_PCO* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_MBMS_PCO (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MBMS_PCO* pvalue);

EXTERN TS24008IE_MBMS_PCO* asn1Test_TS24008IE_MBMS_PCO (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MBMS_PCO (TS24008IE_MBMS_PCO* pvalue);

/**************************************************************/
/*                                                            */
/*  EnhancedNSAPIValue                                        */
/*                                                            */
/**************************************************************/
/*
 10.5.6.16 - Enhanced network service access point identifier 
EnhancedNSAPIValue ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24008IE_EnhancedNSAPIValue;

EXTERN int NASEnc_TS24008IE_EnhancedNSAPIValue (OSCTXT* pctxt
   , TS24008IE_EnhancedNSAPIValue value);

EXTERN int NASDec_TS24008IE_EnhancedNSAPIValue (OSCTXT* pctxt
   , TS24008IE_EnhancedNSAPIValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_EnhancedNSAPIValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_EnhancedNSAPIValue* pvalue);

EXTERN TS24008IE_EnhancedNSAPIValue*
    asn1Test_TS24008IE_EnhancedNSAPIValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SM_NotificationIndicator                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.6.18 - Session management notification indicator 
SM-NotificationIndicator ::= OCTET STRING (SIZE (1))
*/
typedef struct EXTERN TS24008IE_SM_NotificationIndicator {
   OSOCTET data[1];
} TS24008IE_SM_NotificationIndicator;

EXTERN int NASEnc_TS24008IE_SM_NotificationIndicator (OSCTXT* pctxt
   , TS24008IE_SM_NotificationIndicator* pvalue);

EXTERN int NASDec_TS24008IE_SM_NotificationIndicator (OSCTXT* pctxt
   , TS24008IE_SM_NotificationIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_SM_NotificationIndicator (OSCTXT *pctxt, 
   const char* name, const TS24008IE_SM_NotificationIndicator* pvalue);

EXTERN TS24008IE_SM_NotificationIndicator*
    asn1Test_TS24008IE_SM_NotificationIndicator (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ConnectivityType                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.6.19 - Connectivity type 
ConnectivityType ::= INTEGER (0..15)
*/
typedef OSUINT8 TS24008IE_ConnectivityType;

EXTERN int NASEnc_TS24008IE_ConnectivityType (OSCTXT* pctxt
   , TS24008IE_ConnectivityType value);

EXTERN int NASDec_TS24008IE_ConnectivityType (OSCTXT* pctxt
   , TS24008IE_ConnectivityType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ConnectivityType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ConnectivityType* pvalue);

EXTERN TS24008IE_ConnectivityType*
    asn1Test_TS24008IE_ConnectivityType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NBIFOMContainer                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.6.21 - NBIFOM container 
NBIFOMContainer ::= OCTET STRING
*/
typedef OSDynOctStr TS24008IE_NBIFOMContainer;

EXTERN int NASEnc_TS24008IE_NBIFOMContainer (OSCTXT* pctxt
   , TS24008IE_NBIFOMContainer value);

EXTERN int NASDec_TS24008IE_NBIFOMContainer (OSCTXT* pctxt
   , TS24008IE_NBIFOMContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NBIFOMContainer (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NBIFOMContainer* pvalue);

EXTERN TS24008IE_NBIFOMContainer*
    asn1Test_TS24008IE_NBIFOMContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_NBIFOMContainer (TS24008IE_NBIFOMContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  RadioPriorityValue                                        */
/*                                                            */
/**************************************************************/
/*
 10.5.7.2 - Radio priority 
RadioPriorityValue ::= ENUMERATED { priorityLevel1(1), priorityLevel2(2), priorityLevel3(3), priorityLevel4(4), radioPriorityValueMAX(15) }
*/
typedef enum {
   TS24008IE_RadioPriorityValue_priorityLevel1 = 1,
   TS24008IE_RadioPriorityValue_priorityLevel2 = 2,
   TS24008IE_RadioPriorityValue_priorityLevel3 = 3,
   TS24008IE_RadioPriorityValue_priorityLevel4 = 4,
   TS24008IE_RadioPriorityValue_radioPriorityValueMAX = 15
} TS24008IE_RadioPriorityValue;

EXTERN int NASEnc_TS24008IE_RadioPriorityValue (OSCTXT* pctxt
   , TS24008IE_RadioPriorityValue value);

EXTERN int NASDec_TS24008IE_RadioPriorityValue (OSCTXT* pctxt
   , TS24008IE_RadioPriorityValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RadioPriorityValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RadioPriorityValue* pvalue);

EXTERN extern const OSEnumItem TS24008IE_RadioPriorityValue_ENUMTAB[];
#define TS24008IE_RadioPriorityValue_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24008IE_RadioPriorityValue_ToString (OSINT32 value);

EXTERN int TS24008IE_RadioPriorityValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_RadioPriorityValue* pvalue);

EXTERN int TS24008IE_RadioPriorityValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_RadioPriorityValue* pvalue);

EXTERN TS24008IE_RadioPriorityValue*
    asn1Test_TS24008IE_RadioPriorityValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RadioPriorityValue2                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.7.5 - Radio priority 2 
RadioPriorityValue2 ::= RadioPriorityValue
*/
typedef TS24008IE_RadioPriorityValue TS24008IE_RadioPriorityValue2;

EXTERN int NASEnc_TS24008IE_RadioPriorityValue2 (OSCTXT* pctxt
   , TS24008IE_RadioPriorityValue2 value);

EXTERN int NASDec_TS24008IE_RadioPriorityValue2 (OSCTXT* pctxt
   , TS24008IE_RadioPriorityValue2* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RadioPriorityValue2 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RadioPriorityValue2* pvalue);

EXTERN TS24008IE_RadioPriorityValue2*
    asn1Test_TS24008IE_RadioPriorityValue2 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MBMSContextStatus                                         */
/*                                                            */
/**************************************************************/
/*
 10.5.7.6 - MBMS context status 
MBMSContextStatus ::= OCTET STRING (SIZE (0..16))
*/
typedef struct EXTERN TS24008IE_MBMSContextStatus {
   OSUINT8 numocts;
   OSOCTET data[16];
} TS24008IE_MBMSContextStatus;

EXTERN int NASEnc_TS24008IE_MBMSContextStatus (OSCTXT* pctxt
   , TS24008IE_MBMSContextStatus* pvalue);

EXTERN int NASDec_TS24008IE_MBMSContextStatus (OSCTXT* pctxt
   , TS24008IE_MBMSContextStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MBMSContextStatus (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MBMSContextStatus* pvalue);

EXTERN TS24008IE_MBMSContextStatus*
    asn1Test_TS24008IE_MBMSContextStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MBMSContextStatus (TS24008IE_MBMSContextStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationUpdatingType_lut                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationUpdatingType'
*/
typedef enum {
   TS24008IE_LocationUpdatingType_lut_normLocUpdate = 0,
   TS24008IE_LocationUpdatingType_lut_periodicUpdate = 1,
   TS24008IE_LocationUpdatingType_lut_imsiAttach = 2,
   TS24008IE_LocationUpdatingType_lut_reserved = 3
} TS24008IE_LocationUpdatingType_lut;

EXTERN int NASEnc_TS24008IE_LocationUpdatingType_lut (OSCTXT* pctxt
   , TS24008IE_LocationUpdatingType_lut value);

EXTERN int NASDec_TS24008IE_LocationUpdatingType_lut (OSCTXT* pctxt
   , TS24008IE_LocationUpdatingType_lut* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LocationUpdatingType_lut (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LocationUpdatingType_lut* pvalue);

EXTERN extern const OSEnumItem TS24008IE_LocationUpdatingType_lut_ENUMTAB[];
#define TS24008IE_LocationUpdatingType_lut_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24008IE_LocationUpdatingType_lut_ToString (OSINT32 value);

EXTERN int TS24008IE_LocationUpdatingType_lut_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_LocationUpdatingType_lut* pvalue);

EXTERN int TS24008IE_LocationUpdatingType_lut_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_LocationUpdatingType_lut* pvalue);

EXTERN TS24008IE_LocationUpdatingType_lut*
    asn1Test_TS24008IE_LocationUpdatingType_lut (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NetworkName_codingScheme                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NetworkName'
*/
typedef enum {
   TS24008IE_NetworkName_codingScheme_callBcastData = 0,
   TS24008IE_NetworkName_codingScheme_ucs2 = 1,
   TS24008IE_NetworkName_codingScheme_codingSchemeMAX = 7
} TS24008IE_NetworkName_codingScheme;

EXTERN int NASEnc_TS24008IE_NetworkName_codingScheme (OSCTXT* pctxt
   , TS24008IE_NetworkName_codingScheme value);

EXTERN int NASDec_TS24008IE_NetworkName_codingScheme (OSCTXT* pctxt
   , TS24008IE_NetworkName_codingScheme* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NetworkName_codingScheme (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NetworkName_codingScheme* pvalue);

EXTERN extern const OSEnumItem TS24008IE_NetworkName_codingScheme_ENUMTAB[];
#define TS24008IE_NetworkName_codingScheme_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24008IE_NetworkName_codingScheme_ToString (OSINT32 value);

EXTERN int TS24008IE_NetworkName_codingScheme_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_NetworkName_codingScheme* pvalue);

EXTERN int TS24008IE_NetworkName_codingScheme_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_NetworkName_codingScheme* pvalue);

EXTERN TS24008IE_NetworkName_codingScheme*
    asn1Test_TS24008IE_NetworkName_codingScheme (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DaylightSavingTime_dst                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DaylightSavingTime'
*/
typedef enum {
   TS24008IE_DaylightSavingTime_dst_dstNoAdjust = 0,
   TS24008IE_DaylightSavingTime_dst_dstPlus1 = 1,
   TS24008IE_DaylightSavingTime_dst_dstPlus2 = 2,
   TS24008IE_DaylightSavingTime_dst_dstReserved = 3
} TS24008IE_DaylightSavingTime_dst;

EXTERN int NASEnc_TS24008IE_DaylightSavingTime_dst (OSCTXT* pctxt
   , TS24008IE_DaylightSavingTime_dst value);

EXTERN int NASDec_TS24008IE_DaylightSavingTime_dst (OSCTXT* pctxt
   , TS24008IE_DaylightSavingTime_dst* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DaylightSavingTime_dst (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DaylightSavingTime_dst* pvalue);

EXTERN extern const OSEnumItem TS24008IE_DaylightSavingTime_dst_ENUMTAB[];
#define TS24008IE_DaylightSavingTime_dst_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24008IE_DaylightSavingTime_dst_ToString (OSINT32 value);

EXTERN int TS24008IE_DaylightSavingTime_dst_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_DaylightSavingTime_dst* pvalue);

EXTERN int TS24008IE_DaylightSavingTime_dst_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_DaylightSavingTime_dst* pvalue);

EXTERN TS24008IE_DaylightSavingTime_dst*
    asn1Test_TS24008IE_DaylightSavingTime_dst (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SupportedCodec_codecBitmap                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SupportedCodec'
*/
typedef struct EXTERN TS24008IE_SupportedCodec_codecBitmap {
   OSUINT8 numocts;
   OSOCTET data[2];
} TS24008IE_SupportedCodec_codecBitmap;

EXTERN int NASEnc_TS24008IE_SupportedCodec_codecBitmap (OSCTXT* pctxt
   , TS24008IE_SupportedCodec_codecBitmap* pvalue);

EXTERN int NASDec_TS24008IE_SupportedCodec_codecBitmap (OSCTXT* pctxt
   , TS24008IE_SupportedCodec_codecBitmap* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_SupportedCodec_codecBitmap (OSCTXT *pctxt, 
   const char* name, const TS24008IE_SupportedCodec_codecBitmap* pvalue);

EXTERN TS24008IE_SupportedCodec_codecBitmap*
    asn1Test_TS24008IE_SupportedCodec_codecBitmap (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_SupportedCodec_codecBitmap (
   TS24008IE_SupportedCodec_codecBitmap* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessCapability_ec_pchMonSupp                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AccessCapability'
*/
typedef enum {
   TS24008IE_AccessCapability_ec_pchMonSupp_pchSupported = 0,
   TS24008IE_AccessCapability_ec_pchMonSupp_ecPchSupported = 1,
   TS24008IE_AccessCapability_ec_pchMonSupp_pchAndEcPchSupported = 2,
   TS24008IE_AccessCapability_ec_pchMonSupp_ec_pchMonReserved = 3
} TS24008IE_AccessCapability_ec_pchMonSupp;

EXTERN int NASEnc_TS24008IE_AccessCapability_ec_pchMonSupp (OSCTXT* pctxt
   , TS24008IE_AccessCapability_ec_pchMonSupp value);

EXTERN int NASDec_TS24008IE_AccessCapability_ec_pchMonSupp (OSCTXT* pctxt
   , TS24008IE_AccessCapability_ec_pchMonSupp* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AccessCapability_ec_pchMonSupp (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AccessCapability_ec_pchMonSupp* pvalue);

EXTERN extern const OSEnumItem TS24008IE_AccessCapability_ec_pchMonSupp_ENUMTAB[];
#define TS24008IE_AccessCapability_ec_pchMonSupp_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24008IE_AccessCapability_ec_pchMonSupp_ToString (OSINT32 value);

EXTERN int TS24008IE_AccessCapability_ec_pchMonSupp_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_AccessCapability_ec_pchMonSupp* pvalue);

EXTERN int TS24008IE_AccessCapability_ec_pchMonSupp_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_AccessCapability_ec_pchMonSupp* pvalue);

EXTERN TS24008IE_AccessCapability_ec_pchMonSupp*
    asn1Test_TS24008IE_AccessCapability_ec_pchMonSupp (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DLMCCapability_maxBandwidth                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DLMCCapability'
*/
typedef enum {
   TS24008IE_DLMCCapability_maxBandwidth_bw5MHz = 0,
   TS24008IE_DLMCCapability_maxBandwidth_bw10MHz = 1,
   TS24008IE_DLMCCapability_maxBandwidth_bw15MHz = 2,
   TS24008IE_DLMCCapability_maxBandwidth_bw20MHz = 3
} TS24008IE_DLMCCapability_maxBandwidth;

EXTERN int NASEnc_TS24008IE_DLMCCapability_maxBandwidth (OSCTXT* pctxt
   , TS24008IE_DLMCCapability_maxBandwidth value);

EXTERN int NASDec_TS24008IE_DLMCCapability_maxBandwidth (OSCTXT* pctxt
   , TS24008IE_DLMCCapability_maxBandwidth* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DLMCCapability_maxBandwidth (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DLMCCapability_maxBandwidth* pvalue);

EXTERN extern const OSEnumItem TS24008IE_DLMCCapability_maxBandwidth_ENUMTAB[];
#define TS24008IE_DLMCCapability_maxBandwidth_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24008IE_DLMCCapability_maxBandwidth_ToString (OSINT32 value);

EXTERN int TS24008IE_DLMCCapability_maxBandwidth_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_DLMCCapability_maxBandwidth* pvalue);

EXTERN int TS24008IE_DLMCCapability_maxBandwidth_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_DLMCCapability_maxBandwidth* pvalue);

EXTERN TS24008IE_DLMCCapability_maxBandwidth*
    asn1Test_TS24008IE_DLMCCapability_maxBandwidth (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  VoiceDomainPref_enumValue                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'VoiceDomainPref'
*/
typedef enum {
   TS24008IE_VoiceDomainPref_enumValue_csVoiceOnly = 0,
   TS24008IE_VoiceDomainPref_enumValue_imsPsVoiceOnly = 1,
   TS24008IE_VoiceDomainPref_enumValue_csVoicePref = 2,
   TS24008IE_VoiceDomainPref_enumValue_imsPsVoicePref = 3
} TS24008IE_VoiceDomainPref_enumValue;

EXTERN int NASEnc_TS24008IE_VoiceDomainPref_enumValue (OSCTXT* pctxt
   , TS24008IE_VoiceDomainPref_enumValue value);

EXTERN int NASDec_TS24008IE_VoiceDomainPref_enumValue (OSCTXT* pctxt
   , TS24008IE_VoiceDomainPref_enumValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_VoiceDomainPref_enumValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_VoiceDomainPref_enumValue* pvalue);

EXTERN extern const OSEnumItem TS24008IE_VoiceDomainPref_enumValue_ENUMTAB[];
#define TS24008IE_VoiceDomainPref_enumValue_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24008IE_VoiceDomainPref_enumValue_ToString (OSINT32 value);

EXTERN int TS24008IE_VoiceDomainPref_enumValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_VoiceDomainPref_enumValue* pvalue);

EXTERN int TS24008IE_VoiceDomainPref_enumValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_VoiceDomainPref_enumValue* pvalue);

EXTERN TS24008IE_VoiceDomainPref_enumValue*
    asn1Test_TS24008IE_VoiceDomainPref_enumValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFTOctet1_tftOperationCode                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TFTOctet1'
*/
typedef enum {
   TS24008IE_TFTOctet1_tftOperationCode_ignoreThisIE = 0,
   TS24008IE_TFTOctet1_tftOperationCode_createTFT = 1,
   TS24008IE_TFTOctet1_tftOperationCode_deleteTFT = 2,
   TS24008IE_TFTOctet1_tftOperationCode_addPktFilters = 3,
   TS24008IE_TFTOctet1_tftOperationCode_replPktFilters = 4,
   TS24008IE_TFTOctet1_tftOperationCode_delPktFilters = 5,
   TS24008IE_TFTOctet1_tftOperationCode_noTFTOp = 6
} TS24008IE_TFTOctet1_tftOperationCode;

EXTERN int NASEnc_TS24008IE_TFTOctet1_tftOperationCode (OSCTXT* pctxt
   , TS24008IE_TFTOctet1_tftOperationCode value);

EXTERN int NASDec_TS24008IE_TFTOctet1_tftOperationCode (OSCTXT* pctxt
   , TS24008IE_TFTOctet1_tftOperationCode* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_TFTOctet1_tftOperationCode (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TFTOctet1_tftOperationCode* pvalue);

EXTERN extern const OSEnumItem TS24008IE_TFTOctet1_tftOperationCode_ENUMTAB[];
#define TS24008IE_TFTOctet1_tftOperationCode_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* TS24008IE_TFTOctet1_tftOperationCode_ToString (OSINT32 value);

EXTERN int TS24008IE_TFTOctet1_tftOperationCode_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_TFTOctet1_tftOperationCode* pvalue);

EXTERN int TS24008IE_TFTOctet1_tftOperationCode_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24008IE_TFTOctet1_tftOperationCode* pvalue);

EXTERN TS24008IE_TFTOctet1_tftOperationCode*
    asn1Test_TS24008IE_TFTOctet1_tftOperationCode (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPRSTimer3_unit                                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GPRSTimer3'
*/
typedef enum {
   TS24008IE_GPRSTimer3_unit_valIncrMult10Mins = 0,
   TS24008IE_GPRSTimer3_unit_valIncrMult1Hr = 1,
   TS24008IE_GPRSTimer3_unit_valIncrMult10hrs = 2,
   TS24008IE_GPRSTimer3_unit_valIncrMult2Secs = 3,
   TS24008IE_GPRSTimer3_unit_valIncrMult30Secs = 4,
   TS24008IE_GPRSTimer3_unit_valIncrMult1Min = 5,
   TS24008IE_GPRSTimer3_unit_valIncrMult320Hrs = 6,
   TS24008IE_GPRSTimer3_unit_timerDeact = 7
} TS24008IE_GPRSTimer3_unit;

EXTERN int NASEnc_TS24008IE_GPRSTimer3_unit (OSCTXT* pctxt
   , TS24008IE_GPRSTimer3_unit value);

EXTERN int NASDec_TS24008IE_GPRSTimer3_unit (OSCTXT* pctxt
   , TS24008IE_GPRSTimer3_unit* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GPRSTimer3_unit (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GPRSTimer3_unit* pvalue);

EXTERN extern const OSEnumItem TS24008IE_GPRSTimer3_unit_ENUMTAB[];
#define TS24008IE_GPRSTimer3_unit_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* TS24008IE_GPRSTimer3_unit_ToString (OSINT32 value);

EXTERN int TS24008IE_GPRSTimer3_unit_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24008IE_GPRSTimer3_unit* pvalue);

EXTERN int TS24008IE_GPRSTimer3_unit_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24008IE_GPRSTimer3_unit* pvalue)
      ;

EXTERN TS24008IE_GPRSTimer3_unit*
    asn1Test_TS24008IE_GPRSTimer3_unit (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDAndSAPI                                                 */
/*                                                            */
/**************************************************************/
/*
 10.5.1.10a - PD and SAPI $(CCBS)$ 
PDAndSAPI ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0, -- should be set to 0
   sapi [1] INTEGER (0..3),
   pd [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_PDAndSAPI {
   OSUINT8 spare;
   OSUINT8 sapi;
   OSUINT8 pd;
} TS24008IE_PDAndSAPI;

EXTERN int NASEnc_TS24008IE_PDAndSAPI (OSCTXT* pctxt
   , TS24008IE_PDAndSAPI* pvalue);

EXTERN int NASDec_TS24008IE_PDAndSAPI (OSCTXT* pctxt
   , TS24008IE_PDAndSAPI* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PDAndSAPI (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PDAndSAPI* pvalue);

EXTERN TS24008IE_PDAndSAPI* asn1Test_TS24008IE_PDAndSAPI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PDAndSAPI (TS24008IE_PDAndSAPI* pvalue);

/**************************************************************/
/*                                                            */
/*  PriorityLevel                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.1.11 - Priority Level 
PriorityLevel ::= SEQUENCE {
   spare [0] BOOLEAN,
   callPriority [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_PriorityLevel {
   OSBOOL spare;
   OSUINT8 callPriority;
} TS24008IE_PriorityLevel;

EXTERN int NASEnc_TS24008IE_PriorityLevel (OSCTXT* pctxt
   , TS24008IE_PriorityLevel* pvalue);

EXTERN int NASDec_TS24008IE_PriorityLevel (OSCTXT* pctxt
   , TS24008IE_PriorityLevel* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PriorityLevel (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PriorityLevel* pvalue);

EXTERN TS24008IE_PriorityLevel*
    asn1Test_TS24008IE_PriorityLevel (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CSDomainSpecificSystemInformation                         */
/*                                                            */
/**************************************************************/
/*
 10.5.1.12.2 - CS domain specific system information 
CSDomainSpecificSystemInformation ::= SEQUENCE {
   t3212 [0] INTEGER (0..255),
   spare [1] INTEGER (0..127) DEFAULT 0, -- should be set to 0
   att [2] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_CSDomainSpecificSystemInformation {
   OSUINT8 t3212;
   OSUINT8 spare;
   OSBOOL att;
} TS24008IE_CSDomainSpecificSystemInformation;

EXTERN int NASEnc_TS24008IE_CSDomainSpecificSystemInformation (OSCTXT* pctxt
   , TS24008IE_CSDomainSpecificSystemInformation* pvalue);

EXTERN int NASDec_TS24008IE_CSDomainSpecificSystemInformation (OSCTXT* pctxt
   , TS24008IE_CSDomainSpecificSystemInformation* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CSDomainSpecificSystemInformation (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CSDomainSpecificSystemInformation* pvalue);

EXTERN TS24008IE_CSDomainSpecificSystemInformation*
    asn1Test_TS24008IE_CSDomainSpecificSystemInformation (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_CSDomainSpecificSystemInformation (
   TS24008IE_CSDomainSpecificSystemInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  PSDomainSpecificSystemInformation                         */
/*                                                            */
/**************************************************************/
/*
 10.5.1.12.3 - PS domain specific system information 
PSDomainSpecificSystemInformation ::= SEQUENCE {
   rac [0] INTEGER (0..255),
   spare [1] INTEGER (0..63) DEFAULT 0, -- should be set to 0
   nmo1 [2] BOOLEAN,
   nmo [3] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_PSDomainSpecificSystemInformation {
   OSUINT8 rac;
   OSUINT8 spare;
   OSBOOL nmo1;
   OSBOOL nmo;
} TS24008IE_PSDomainSpecificSystemInformation;

EXTERN int NASEnc_TS24008IE_PSDomainSpecificSystemInformation (OSCTXT* pctxt
   , TS24008IE_PSDomainSpecificSystemInformation* pvalue);

EXTERN int NASDec_TS24008IE_PSDomainSpecificSystemInformation (OSCTXT* pctxt
   , TS24008IE_PSDomainSpecificSystemInformation* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PSDomainSpecificSystemInformation (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PSDomainSpecificSystemInformation* pvalue);

EXTERN TS24008IE_PSDomainSpecificSystemInformation*
    asn1Test_TS24008IE_PSDomainSpecificSystemInformation (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PSDomainSpecificSystemInformation (
   TS24008IE_PSDomainSpecificSystemInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNList                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.1.13 - PLMN list 
PLMNList ::= SEQUENCE (SIZE (1..15)) OF MCCMNCPair
*/
typedef struct EXTERN TS24008IE_PLMNList {
   OSUINT8 n;
   TS24008IE_MCCMNCPair elem[15];
} TS24008IE_PLMNList;

EXTERN int NASEnc_TS24008IE_PLMNList (OSCTXT* pctxt, TS24008IE_PLMNList* pvalue
   );

EXTERN int NASDec_TS24008IE_PLMNList (OSCTXT* pctxt, TS24008IE_PLMNList* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_PLMNList (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PLMNList* pvalue);

EXTERN TS24008IE_PLMNList* asn1Test_TS24008IE_PLMNList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PLMNList (TS24008IE_PLMNList* pvalue);

/**************************************************************/
/*                                                            */
/*  NASContainerForPSHO                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.1.14 - NAS container for PS HO 
NASContainerForPSHO ::= SEQUENCE {
   spare1 [0] INTEGER (0..7) DEFAULT 0, -- should be set to 0
   xid [1] BOOLEAN,
   spare2 [2] BOOLEAN DEFAULT FALSE,
   typeCiphAlgorithm [3] INTEGER (0..7),
   valueIOV-UI [4] INTEGER (0..4294967295)
}
*/
typedef struct EXTERN TS24008IE_NASContainerForPSHO {
   OSUINT8 spare1;
   OSBOOL xid;
   OSBOOL spare2;
   OSUINT8 typeCiphAlgorithm;
   OSUINT32 valueIOV_UI;
} TS24008IE_NASContainerForPSHO;

EXTERN int NASEnc_TS24008IE_NASContainerForPSHO (OSCTXT* pctxt
   , TS24008IE_NASContainerForPSHO* pvalue);

EXTERN int NASDec_TS24008IE_NASContainerForPSHO (OSCTXT* pctxt
   , TS24008IE_NASContainerForPSHO* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NASContainerForPSHO (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NASContainerForPSHO* pvalue);

EXTERN TS24008IE_NASContainerForPSHO*
    asn1Test_TS24008IE_NASContainerForPSHO (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_NASContainerForPSHO (
   TS24008IE_NASContainerForPSHO* pvalue);

/**************************************************************/
/*                                                            */
/*  MSNetFeatureSupport                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.1.15 - MS Network Feature Support 
MSNetFeatureSupport ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   extPeriodTimer [1] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_MSNetFeatureSupport {
   OSUINT8 spare;
   OSBOOL extPeriodTimer;
} TS24008IE_MSNetFeatureSupport;

EXTERN int NASEnc_TS24008IE_MSNetFeatureSupport (OSCTXT* pctxt
   , TS24008IE_MSNetFeatureSupport* pvalue);

EXTERN int NASDec_TS24008IE_MSNetFeatureSupport (OSCTXT* pctxt
   , TS24008IE_MSNetFeatureSupport* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MSNetFeatureSupport (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MSNetFeatureSupport* pvalue);

EXTERN TS24008IE_MSNetFeatureSupport*
    asn1Test_TS24008IE_MSNetFeatureSupport (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MSNetFeatureSupport (
   TS24008IE_MSNetFeatureSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthParamAUTN                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.3.1.1 - 
Authentication Parameter AUTN (UMTS and EPS authentication challenge) 
AuthParamAUTN ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 16, -- should be set to 16
   autn [1] OCTET STRING (SIZE (16))
}
*/
typedef struct EXTERN TS24008IE_AuthParamAUTN {
   OSUINT8 length;
   OSOCTET autn[16];
} TS24008IE_AuthParamAUTN;

EXTERN int NASEnc_TS24008IE_AuthParamAUTN (OSCTXT* pctxt
   , TS24008IE_AuthParamAUTN* pvalue);

EXTERN int NASDec_TS24008IE_AuthParamAUTN (OSCTXT* pctxt
   , TS24008IE_AuthParamAUTN* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AuthParamAUTN (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AuthParamAUTN* pvalue);

EXTERN TS24008IE_AuthParamAUTN*
    asn1Test_TS24008IE_AuthParamAUTN (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AuthParamAUTN (TS24008IE_AuthParamAUTN* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthFailureParam                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.3.2.2 - 
 Authentication Failure parameter (UMTS and EPS authentication challenge) 
AuthFailureParam ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 14, -- should be set to 14
   param [1] OCTET STRING (SIZE (14))
}
*/
typedef struct EXTERN TS24008IE_AuthFailureParam {
   OSUINT8 length;
   OSOCTET param[14];
} TS24008IE_AuthFailureParam;

EXTERN int NASEnc_TS24008IE_AuthFailureParam (OSCTXT* pctxt
   , TS24008IE_AuthFailureParam* pvalue);

EXTERN int NASDec_TS24008IE_AuthFailureParam (OSCTXT* pctxt
   , TS24008IE_AuthFailureParam* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AuthFailureParam (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AuthFailureParam* pvalue);

EXTERN TS24008IE_AuthFailureParam*
    asn1Test_TS24008IE_AuthFailureParam (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AuthFailureParam (TS24008IE_AuthFailureParam* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationUpdatingType                                      */
/*                                                            */
/**************************************************************/
/*
 10.5.3.5 - Location updating type 
LocationUpdatingType ::= SEQUENCE {
   for [0] BOOLEAN, -- Follow-on request pending
   spare [1] BOOLEAN DEFAULT FALSE,
   lut [2] ENUMERATED { normLocUpdate(0), periodicUpdate(1), imsiAttach(2), reserved(3) }
}
*/
typedef struct EXTERN TS24008IE_LocationUpdatingType {
   OSBOOL for_;
   OSBOOL spare;
   TS24008IE_LocationUpdatingType_lut lut;
} TS24008IE_LocationUpdatingType;

EXTERN int NASEnc_TS24008IE_LocationUpdatingType (OSCTXT* pctxt
   , TS24008IE_LocationUpdatingType* pvalue);

EXTERN int NASDec_TS24008IE_LocationUpdatingType (OSCTXT* pctxt
   , TS24008IE_LocationUpdatingType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LocationUpdatingType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LocationUpdatingType* pvalue);

EXTERN TS24008IE_LocationUpdatingType*
    asn1Test_TS24008IE_LocationUpdatingType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_LocationUpdatingType (
   TS24008IE_LocationUpdatingType* pvalue);

/**************************************************************/
/*                                                            */
/*  NetworkName                                               */
/*                                                            */
/**************************************************************/
/*
 10.5.3.5a - Network Name 
NetworkName ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   ext [1] BOOLEAN DEFAULT TRUE,
   codingScheme [2] ENUMERATED { callBcastData(0), ucs2(1), codingSchemeMAX(7) },
   addCI [3] BOOLEAN,
   numSpareBitsInLastOct [4] INTEGER (0..7),
   --<inline/>
   textString [5] EXPLICIT CHOICE {
      --<selector element="codingScheme" value="0"/>
      --<length fixed-size="0" unusedBits="@numSpareBitsInLastOct"/>
      callBcastData [0] GSMString,
      --<selector element="codingScheme" value="1"/>
      ucs2 [1] BMPString
   }
}
*/
typedef struct EXTERN TS24008IE_NetworkName {
   OSUINT8 length;
   OSBOOL ext;
   TS24008IE_NetworkName_codingScheme codingScheme;
   OSBOOL addCI;
   OSUINT8 numSpareBitsInLastOct;
   struct  {
      union {
         /* selector element = codingScheme, value = 0 */
         TS24008IE_GSMString callBcastData;
         /* selector element = codingScheme, value = 1 */
         ASN1BMPString ucs2;
      } u;
   } textString;
} TS24008IE_NetworkName;

EXTERN int NASEnc_TS24008IE_NetworkName (OSCTXT* pctxt
   , TS24008IE_NetworkName* pvalue);

EXTERN int NASDec_TS24008IE_NetworkName (OSCTXT* pctxt
   , TS24008IE_NetworkName* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NetworkName (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NetworkName* pvalue);

EXTERN TS24008IE_NetworkName* asn1Test_TS24008IE_NetworkName (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_NetworkName (TS24008IE_NetworkName* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeZoneAndTime                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.3.9 - Time Zone and Time 
TimeZoneAndTime ::= SEQUENCE {
   year [0] INTEGER (0..255),
   month [1] INTEGER (0..255),
   day [2] INTEGER (0..255),
   hour [3] INTEGER (0..255),
   minute [4] INTEGER (0..255),
   second [5] INTEGER (0..255),
   timezone [6] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_TimeZoneAndTime {
   OSUINT8 year;
   OSUINT8 month;
   OSUINT8 day;
   OSUINT8 hour;
   OSUINT8 minute;
   OSUINT8 second;
   OSUINT8 timezone;
} TS24008IE_TimeZoneAndTime;

EXTERN int NASEnc_TS24008IE_TimeZoneAndTime (OSCTXT* pctxt
   , TS24008IE_TimeZoneAndTime* pvalue);

EXTERN int NASDec_TS24008IE_TimeZoneAndTime (OSCTXT* pctxt
   , TS24008IE_TimeZoneAndTime* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_TimeZoneAndTime (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TimeZoneAndTime* pvalue);

EXTERN TS24008IE_TimeZoneAndTime*
    asn1Test_TS24008IE_TimeZoneAndTime (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DaylightSavingTime                                        */
/*                                                            */
/**************************************************************/
/*
 10.5.3.12 - Daylight Saving Time 
DaylightSavingTime ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] INTEGER (0..63) DEFAULT 0, -- should be set to 0
   dst [2] ENUMERATED { dstNoAdjust(0), dstPlus1(1), dstPlus2(2), dstReserved(3) }
}
*/
typedef struct EXTERN TS24008IE_DaylightSavingTime {
   OSUINT8 length;
   OSUINT8 spare;
   TS24008IE_DaylightSavingTime_dst dst;
} TS24008IE_DaylightSavingTime;

EXTERN int NASEnc_TS24008IE_DaylightSavingTime (OSCTXT* pctxt
   , TS24008IE_DaylightSavingTime* pvalue);

EXTERN int NASDec_TS24008IE_DaylightSavingTime (OSCTXT* pctxt
   , TS24008IE_DaylightSavingTime* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DaylightSavingTime (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DaylightSavingTime* pvalue);

EXTERN TS24008IE_DaylightSavingTime*
    asn1Test_TS24008IE_DaylightSavingTime (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_DaylightSavingTime (
   TS24008IE_DaylightSavingTime* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyNumber                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.3.13 - Emergency Number List 
 If the emergency number contains an odd number of digits, 
 bits 5 to 8 of the last octet of the respective emergency 
 number (catValueOne or catValueTwo)
 shall be filled with an end mark coded as "1111". 
EmergencyNumber ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..7) DEFAULT 0,
   catValue [2] INTEGER (0..31),
   -- digits is string of valid TBCD numbers (0-9, #, *, a, b, c)
   --<length fixed-size="0"/>
   digits [3] TBCDString
}
*/
typedef struct EXTERN TS24008IE_EmergencyNumber {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 catValue;
   TS24008IE_TBCDString digits;
} TS24008IE_EmergencyNumber;

EXTERN int NASEnc_TS24008IE_EmergencyNumber (OSCTXT* pctxt
   , TS24008IE_EmergencyNumber* pvalue);

EXTERN int NASDec_TS24008IE_EmergencyNumber (OSCTXT* pctxt
   , TS24008IE_EmergencyNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_EmergencyNumber (OSCTXT *pctxt, 
   const char* name, const TS24008IE_EmergencyNumber* pvalue);

EXTERN TS24008IE_EmergencyNumber*
    asn1Test_TS24008IE_EmergencyNumber (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_EmergencyNumber (TS24008IE_EmergencyNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyNumberList                                       */
/*                                                            */
/**************************************************************/
/*
 Configured the following to use an array
EmergencyNumberList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   numbers [1] SEQUENCE (SIZE (1..10)) OF EmergencyNumber
}
*/
typedef struct EXTERN TS24008IE_EmergencyNumberList {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24008IE_EmergencyNumber elem[10];
   } numbers;
} TS24008IE_EmergencyNumberList;

EXTERN int NASEnc_TS24008IE_EmergencyNumberList (OSCTXT* pctxt
   , TS24008IE_EmergencyNumberList* pvalue);

EXTERN int NASDec_TS24008IE_EmergencyNumberList (OSCTXT* pctxt
   , TS24008IE_EmergencyNumberList* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_EmergencyNumberList (OSCTXT *pctxt, 
   const char* name, const TS24008IE_EmergencyNumberList* pvalue);

EXTERN TS24008IE_EmergencyNumberList*
    asn1Test_TS24008IE_EmergencyNumberList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_EmergencyNumberList (
   TS24008IE_EmergencyNumberList* pvalue);

/**************************************************************/
/*                                                            */
/*  MMTimer                                                   */
/*                                                            */
/**************************************************************/
/*
 10.5.3.16 - MM Timer 
MMTimer ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   value [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_MMTimer {
   OSUINT8 length;
   OSUINT8 value;
} TS24008IE_MMTimer;

EXTERN int NASEnc_TS24008IE_MMTimer (OSCTXT* pctxt, TS24008IE_MMTimer* pvalue);

EXTERN int NASDec_TS24008IE_MMTimer (OSCTXT* pctxt, TS24008IE_MMTimer* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MMTimer (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MMTimer* pvalue);

EXTERN TS24008IE_MMTimer* asn1Test_TS24008IE_MMTimer (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AuxiliaryStates                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.4 - Auxiliary states 
AuxiliaryStates ::= SEQUENCE {
   ext [0] BOOLEAN DEFAULT TRUE,
   spare [1] INTEGER (0..7) DEFAULT 0,
   holdAuxState [2] INTEGER (0..3),
   multiPartyAuxState [3] INTEGER (0..3)
}
*/
typedef struct EXTERN TS24008IE_AuxiliaryStates {
   OSBOOL ext;
   OSUINT8 spare;
   OSUINT8 holdAuxState;
   OSUINT8 multiPartyAuxState;
} TS24008IE_AuxiliaryStates;

EXTERN int NASEnc_TS24008IE_AuxiliaryStates (OSCTXT* pctxt
   , TS24008IE_AuxiliaryStates* pvalue);

EXTERN int NASDec_TS24008IE_AuxiliaryStates (OSCTXT* pctxt
   , TS24008IE_AuxiliaryStates* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AuxiliaryStates (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AuxiliaryStates* pvalue);

EXTERN TS24008IE_AuxiliaryStates*
    asn1Test_TS24008IE_AuxiliaryStates (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AuxiliaryStates (TS24008IE_AuxiliaryStates* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet3                                           */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet3 ::= SEQUENCE {
   radioChannelRequirement [0] INTEGER (0..3), -- 2 bits; always 1 
   nonstandardCoding [1] BOOLEAN, -- 0 - GSM 
   packetXferMode [2] BOOLEAN, -- 0 - circuit mode 
   infoXferCap [3] InfoXferCap -- 3 bits 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet3 {
   OSUINT8 radioChannelRequirement;
   OSBOOL nonstandardCoding;
   OSBOOL packetXferMode;
   TS24008IE_InfoXferCap infoXferCap;
} TS24008IE_BearerCapOctet3;

EXTERN int NASEnc_TS24008IE_BearerCapOctet3 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet3 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet3* pvalue);

EXTERN TS24008IE_BearerCapOctet3*
    asn1Test_TS24008IE_BearerCapOctet3 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet4                                           */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet4 ::= SEQUENCE {
   compression [0] BOOLEAN,
   structure [1] INTEGER (0..3),
   fullDuplexMode [2] BOOLEAN,
   configuration [3] BOOLEAN,
   nirr [4] BOOLEAN,
   establishment [5] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet4 {
   OSBOOL compression;
   OSUINT8 structure;
   OSBOOL fullDuplexMode;
   OSBOOL configuration;
   OSBOOL nirr;
   OSBOOL establishment;
} TS24008IE_BearerCapOctet4;

EXTERN int NASEnc_TS24008IE_BearerCapOctet4 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet4* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet4 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet4* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet4 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet4* pvalue);

EXTERN TS24008IE_BearerCapOctet4*
    asn1Test_TS24008IE_BearerCapOctet4 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet5                                           */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet5 ::= SEQUENCE {
   accessIdentity [0] INTEGER (0..3), -- 2 bits; always 0 
   rateAdaption [1] INTEGER (0..3), -- 2 bits 
   signallingAccessProtocol [2] INTEGER (0..7) -- 3 bits; always 1 - I.440/450 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet5 {
   OSUINT8 accessIdentity;
   OSUINT8 rateAdaption;
   OSUINT8 signallingAccessProtocol;
} TS24008IE_BearerCapOctet5;

EXTERN int NASEnc_TS24008IE_BearerCapOctet5 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet5* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet5 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet5* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet5 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet5* pvalue);

EXTERN TS24008IE_BearerCapOctet5*
    asn1Test_TS24008IE_BearerCapOctet5 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet5a                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet5a ::= SEQUENCE {
   -- 2 bits; always 0 - restricted digital information 
   otherITC [0] INTEGER (0..3),
   otherRateAdaption [1] INTEGER (0..3), -- 2 bits 
   spare [2] INTEGER (0..7) DEFAULT 0
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet5a {
   OSUINT8 otherITC;
   OSUINT8 otherRateAdaption;
   OSUINT8 spare;
} TS24008IE_BearerCapOctet5a;

EXTERN int NASEnc_TS24008IE_BearerCapOctet5a (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet5a* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet5a (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet5a* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet5a (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet5a* pvalue);

EXTERN TS24008IE_BearerCapOctet5a*
    asn1Test_TS24008IE_BearerCapOctet5a (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BearerCapOctet5a (TS24008IE_BearerCapOctet5a* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6                                           */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6 ::= SEQUENCE {
   layer1Identity [0] INTEGER (0..3), -- 2 bits; always 1 - octet identifier 
   userInfoLayer1Protocol [1] INTEGER (0..15), -- 4 bits; always 0 - default 
   asynchronous [2] BOOLEAN -- 0 - synchronous 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6 {
   OSUINT8 layer1Identity;
   OSUINT8 userInfoLayer1Protocol;
   OSBOOL asynchronous;
} TS24008IE_BearerCapOctet6;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6* pvalue);

EXTERN TS24008IE_BearerCapOctet6*
    asn1Test_TS24008IE_BearerCapOctet6 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6a                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6a ::= SEQUENCE {
   twoStopBits [0] BOOLEAN, -- 0 - one stop bit 
   negotiation [1] BOOLEAN, -- always 0 
   data8bits [2] BOOLEAN, -- 0 - 7 bits 
   userRate [3] INTEGER (0..15) -- 4 bits 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6a {
   OSBOOL twoStopBits;
   OSBOOL negotiation;
   OSBOOL data8bits;
   OSUINT8 userRate;
} TS24008IE_BearerCapOctet6a;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6a (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6a* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6a (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6a* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6a (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6a* pvalue);

EXTERN TS24008IE_BearerCapOctet6a*
    asn1Test_TS24008IE_BearerCapOctet6a (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6b                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6b ::= SEQUENCE {
   intermediateRate [0] INTEGER (0..3), -- 2 bits 
   nicOnTX [1] BOOLEAN,
   nicOnRX [2] BOOLEAN,
   parity [3] INTEGER (0..7) -- 3 bits 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6b {
   OSUINT8 intermediateRate;
   OSBOOL nicOnTX;
   OSBOOL nicOnRX;
   OSUINT8 parity;
} TS24008IE_BearerCapOctet6b;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6b (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6b* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6b (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6b* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6b (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6b* pvalue);

EXTERN TS24008IE_BearerCapOctet6b*
    asn1Test_TS24008IE_BearerCapOctet6b (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6c                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6c ::= SEQUENCE {
   connectionElement [0] INTEGER (0..3), -- 2 bits 
   modemType [1] INTEGER (0..31) -- 5 bits 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6c {
   OSUINT8 connectionElement;
   OSUINT8 modemType;
} TS24008IE_BearerCapOctet6c;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6c (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6c* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6c (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6c* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6c (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6c* pvalue);

EXTERN TS24008IE_BearerCapOctet6c*
    asn1Test_TS24008IE_BearerCapOctet6c (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6d                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6d ::= SEQUENCE {
   otherModemType [0] INTEGER (0..3), -- 2 bits 
   fixedNetworkUserRate [1] INTEGER (0..31) -- 5 bits 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6d {
   OSUINT8 otherModemType;
   OSUINT8 fixedNetworkUserRate;
} TS24008IE_BearerCapOctet6d;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6d (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6d* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6d (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6d* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6d (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6d* pvalue);

EXTERN TS24008IE_BearerCapOctet6d*
    asn1Test_TS24008IE_BearerCapOctet6d (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6e                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6e ::= SEQUENCE {
   acceptableChannelCodings [0] INTEGER (0..15), -- 4 bits; always 0 
   maximumNumberOfTrafficChannels [1] INTEGER (0..7) -- 3 bits; always 0 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6e {
   OSUINT8 acceptableChannelCodings;
   OSUINT8 maximumNumberOfTrafficChannels;
} TS24008IE_BearerCapOctet6e;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6e (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6e* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6e (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6e* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6e (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6e* pvalue);

EXTERN TS24008IE_BearerCapOctet6e*
    asn1Test_TS24008IE_BearerCapOctet6e (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6f                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6f ::= SEQUENCE {
   uimi [0] INTEGER (0..7), -- 3 bits 
   wantedAirInterfaceUserRate [1] INTEGER (0..15) -- 4 bits; always 0 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6f {
   OSUINT8 uimi;
   OSUINT8 wantedAirInterfaceUserRate;
} TS24008IE_BearerCapOctet6f;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6f (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6f* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6f (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6f* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6f (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6f* pvalue);

EXTERN TS24008IE_BearerCapOctet6f*
    asn1Test_TS24008IE_BearerCapOctet6f (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet6g                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet6g ::= SEQUENCE {
   acceptableChannelCodingsExtended [0] INTEGER (0..7), -- 3 bits; always 0 
   asymmetryIndication [1] INTEGER (0..3), -- 2 bits; always 0 
   spare [2] INTEGER (0..3) DEFAULT 0
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet6g {
   OSUINT8 acceptableChannelCodingsExtended;
   OSUINT8 asymmetryIndication;
   OSUINT8 spare;
} TS24008IE_BearerCapOctet6g;

EXTERN int NASEnc_TS24008IE_BearerCapOctet6g (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6g* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet6g (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet6g* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet6g (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet6g* pvalue);

EXTERN TS24008IE_BearerCapOctet6g*
    asn1Test_TS24008IE_BearerCapOctet6g (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BearerCapOctet6g (TS24008IE_BearerCapOctet6g* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet7                                           */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet7 ::= SEQUENCE {
   layer2Identity [0] INTEGER (0..3), -- 2 bits; always 2 - octet identifier 
   userInformationLayer2Protocol [1] INTEGER (0..31) -- 5 bits 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet7 {
   OSUINT8 layer2Identity;
   OSUINT8 userInformationLayer2Protocol;
} TS24008IE_BearerCapOctet7;

EXTERN int NASEnc_TS24008IE_BearerCapOctet7 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet7* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet7 (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet7* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet7 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet7* pvalue);

EXTERN TS24008IE_BearerCapOctet7*
    asn1Test_TS24008IE_BearerCapOctet7 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  BackupBearerCapability                                    */
/*                                                            */
/**************************************************************/
/*
 10.5.4.4a - Backup bearer capability 
BackupBearerCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet3 [1] BearerCapOctet3,
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet4 [2] BearerCapOctet4 OPTIONAL,
   --<first3GExtElem/>
   octet5 [3] BearerCapOctet5 OPTIONAL,
   --<last3GExtElem/>   
   octet5a [4] BearerCapOctet5a OPTIONAL,
   --<first3GExtElem/>
   octet6 [5] BearerCapOctet6 OPTIONAL,
   octet6a [6] BearerCapOctet6a OPTIONAL,
   octet6b [7] BearerCapOctet6b OPTIONAL,
   octet6c [8] BearerCapOctet6c OPTIONAL,
   octet6d [9] BearerCapOctet6d OPTIONAL,
   octet6e [10] BearerCapOctet6e OPTIONAL,
   octet6f [11] BearerCapOctet6f OPTIONAL,
   --<last3GExtElem/>
   octet6g [12] BearerCapOctet6g OPTIONAL,
   --<first3GExtElem/>
   --<last3GExtElem/>   
   octet7 [13] BearerCapOctet7 OPTIONAL
}
*/
typedef struct EXTERN TS24008IE_BackupBearerCapability {
   struct {
      unsigned octet4Present : 1;
      unsigned octet5Present : 1;
      unsigned octet5aPresent : 1;
      unsigned octet6Present : 1;
      unsigned octet6aPresent : 1;
      unsigned octet6bPresent : 1;
      unsigned octet6cPresent : 1;
      unsigned octet6dPresent : 1;
      unsigned octet6ePresent : 1;
      unsigned octet6fPresent : 1;
      unsigned octet6gPresent : 1;
      unsigned octet7Present : 1;
   } m;
   OSUINT8 length;
   TS24008IE_BearerCapOctet3 octet3;
   TS24008IE_BearerCapOctet4 octet4;
   TS24008IE_BearerCapOctet5 octet5;
   TS24008IE_BearerCapOctet5a octet5a;
   TS24008IE_BearerCapOctet6 octet6;
   TS24008IE_BearerCapOctet6a octet6a;
   TS24008IE_BearerCapOctet6b octet6b;
   TS24008IE_BearerCapOctet6c octet6c;
   TS24008IE_BearerCapOctet6d octet6d;
   TS24008IE_BearerCapOctet6e octet6e;
   TS24008IE_BearerCapOctet6f octet6f;
   TS24008IE_BearerCapOctet6g octet6g;
   TS24008IE_BearerCapOctet7 octet7;
} TS24008IE_BackupBearerCapability;

EXTERN int NASEnc_TS24008IE_BackupBearerCapability (OSCTXT* pctxt
   , TS24008IE_BackupBearerCapability* pvalue);

EXTERN int NASDec_TS24008IE_BackupBearerCapability (OSCTXT* pctxt
   , TS24008IE_BackupBearerCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BackupBearerCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BackupBearerCapability* pvalue);

EXTERN TS24008IE_BackupBearerCapability*
    asn1Test_TS24008IE_BackupBearerCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BackupBearerCapability (
   TS24008IE_BackupBearerCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet3b                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet3b ::= SEQUENCE {
   coding [0] BOOLEAN,
   spare [1] INTEGER (0..3) DEFAULT 0,
   speechVersion [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet3b {
   OSBOOL coding;
   OSUINT8 spare;
   OSUINT8 speechVersion;
} TS24008IE_BearerCapOctet3b;

EXTERN int NASEnc_TS24008IE_BearerCapOctet3b (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3b* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet3b (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3b* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet3b (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet3b* pvalue);

EXTERN TS24008IE_BearerCapOctet3b*
    asn1Test_TS24008IE_BearerCapOctet3b (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BearerCapOctet3b (TS24008IE_BearerCapOctet3b* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet5b                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet5b ::= SEQUENCE {
   rateAdaptionHeader [0] BOOLEAN,
   multipleFrameEstablishment [1] BOOLEAN,
   protocolSensitiveMode [2] BOOLEAN,
   fullProtocolNegotiation [3] BOOLEAN,
   assignorOnly [4] BOOLEAN,
   uiNegotiation [5] BOOLEAN,
   spare [6] BOOLEAN DEFAULT FALSE
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet5b {
   OSBOOL rateAdaptionHeader;
   OSBOOL multipleFrameEstablishment;
   OSBOOL protocolSensitiveMode;
   OSBOOL fullProtocolNegotiation;
   OSBOOL assignorOnly;
   OSBOOL uiNegotiation;
   OSBOOL spare;
} TS24008IE_BearerCapOctet5b;

EXTERN int NASEnc_TS24008IE_BearerCapOctet5b (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet5b* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet5b (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet5b* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet5b (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet5b* pvalue);

EXTERN TS24008IE_BearerCapOctet5b*
    asn1Test_TS24008IE_BearerCapOctet5b (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BearerCapOctet5b (TS24008IE_BearerCapOctet5b* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet3bList                                      */
/*                                                            */
/**************************************************************/
/*
<is3GExtList pre-eol="1"/>
BearerCapOctet3bList ::= SEQUENCE OF BearerCapOctet3b
*/
typedef struct EXTERN TS24008IE_BearerCapOctet3bList {
   OSSIZE n;
   TS24008IE_BearerCapOctet3b *elem;
} TS24008IE_BearerCapOctet3bList;

EXTERN int NASEnc_TS24008IE_BearerCapOctet3bList (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3bList* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet3bList (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3bList* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet3bList (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet3bList* pvalue);

EXTERN TS24008IE_BearerCapOctet3bList*
    asn1Test_TS24008IE_BearerCapOctet3bList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BearerCapOctet3bList (
   TS24008IE_BearerCapOctet3bList* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapOctet3a                                          */
/*                                                            */
/**************************************************************/
/*
BearerCapOctet3a ::= SEQUENCE {
   coding [0] BOOLEAN,
   ctm [1] BOOLEAN,
   spare [2] BOOLEAN DEFAULT FALSE,
   speechVersion [3] INTEGER (0..15) -- 4 bits 
}
*/
typedef struct EXTERN TS24008IE_BearerCapOctet3a {
   OSBOOL coding;
   OSBOOL ctm;
   OSBOOL spare;
   OSUINT8 speechVersion;
} TS24008IE_BearerCapOctet3a;

EXTERN int NASEnc_TS24008IE_BearerCapOctet3a (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3a* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapOctet3a (OSCTXT* pctxt
   , TS24008IE_BearerCapOctet3a* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapOctet3a (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapOctet3a* pvalue);

EXTERN TS24008IE_BearerCapOctet3a*
    asn1Test_TS24008IE_BearerCapOctet3a (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BearerCapOctet3a (TS24008IE_BearerCapOctet3a* pvalue);

/**************************************************************/
/*                                                            */
/*  BearerCapability                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.4.5 - Bearer capability 
BearerCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<first3GExtElem/>
   octet3 [1] BearerCapOctet3,
   octet3a [2] BearerCapOctet3a OPTIONAL,
   --<last3GExtElem/>
   octet3b [3] BearerCapOctet3bList,
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet4 [4] BearerCapOctet4 OPTIONAL,
   --<first3GExtElem/>
   octet5 [5] BearerCapOctet5 OPTIONAL,
   octet5a [6] BearerCapOctet5a OPTIONAL,
   --<last3GExtElem/>
   octet5b [7] BearerCapOctet5b OPTIONAL,
   --<first3GExtElem/>
   octet6 [8] BearerCapOctet6 OPTIONAL,
   octet6a [9] BearerCapOctet6a OPTIONAL,
   octet6b [10] BearerCapOctet6b OPTIONAL,
   octet6c [11] BearerCapOctet6c OPTIONAL,
   octet6d [12] BearerCapOctet6d OPTIONAL,
   octet6e [13] BearerCapOctet6e OPTIONAL,
   octet6f [14] BearerCapOctet6f OPTIONAL,
   --<last3GExtElem/>
   octet6g [15] BearerCapOctet6g OPTIONAL,
   --<first3GExtElem/>
   --<last3GExtElem/>   
   octet7 [16] BearerCapOctet7 OPTIONAL
}
*/
typedef struct EXTERN TS24008IE_BearerCapability {
   struct {
      unsigned octet3aPresent : 1;
      unsigned octet4Present : 1;
      unsigned octet5Present : 1;
      unsigned octet5aPresent : 1;
      unsigned octet5bPresent : 1;
      unsigned octet6Present : 1;
      unsigned octet6aPresent : 1;
      unsigned octet6bPresent : 1;
      unsigned octet6cPresent : 1;
      unsigned octet6dPresent : 1;
      unsigned octet6ePresent : 1;
      unsigned octet6fPresent : 1;
      unsigned octet6gPresent : 1;
      unsigned octet7Present : 1;
   } m;
   OSUINT8 length;
   TS24008IE_BearerCapOctet3 octet3;
   TS24008IE_BearerCapOctet3a octet3a;
   TS24008IE_BearerCapOctet3bList octet3b;
   TS24008IE_BearerCapOctet4 octet4;
   TS24008IE_BearerCapOctet5 octet5;
   TS24008IE_BearerCapOctet5a octet5a;
   TS24008IE_BearerCapOctet5b octet5b;
   TS24008IE_BearerCapOctet6 octet6;
   TS24008IE_BearerCapOctet6a octet6a;
   TS24008IE_BearerCapOctet6b octet6b;
   TS24008IE_BearerCapOctet6c octet6c;
   TS24008IE_BearerCapOctet6d octet6d;
   TS24008IE_BearerCapOctet6e octet6e;
   TS24008IE_BearerCapOctet6f octet6f;
   TS24008IE_BearerCapOctet6g octet6g;
   TS24008IE_BearerCapOctet7 octet7;
} TS24008IE_BearerCapability;

EXTERN int NASEnc_TS24008IE_BearerCapability (OSCTXT* pctxt
   , TS24008IE_BearerCapability* pvalue);

EXTERN int NASDec_TS24008IE_BearerCapability (OSCTXT* pctxt
   , TS24008IE_BearerCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_BearerCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_BearerCapability* pvalue);

EXTERN TS24008IE_BearerCapability*
    asn1Test_TS24008IE_BearerCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_BearerCapability (TS24008IE_BearerCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  CallControlCapabilities                                   */
/*                                                            */
/**************************************************************/
/*
 10.5.4.5a - Call Control Capabilities 
CallControlCapabilities ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 2,
   maxNumSupportedBearers [1] INTEGER (0..15),
   mcat [2] BOOLEAN,
   enicm [3] BOOLEAN,
   pcp [4] BOOLEAN,
   dtmf [5] BOOLEAN,
   spare [6] INTEGER (0..15) DEFAULT 0,
   maxNumSpeechBearers [7] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_CallControlCapabilities {
   OSUINT8 length;
   OSUINT8 maxNumSupportedBearers;
   OSBOOL mcat;
   OSBOOL enicm;
   OSBOOL pcp;
   OSBOOL dtmf;
   OSUINT8 spare;
   OSUINT8 maxNumSpeechBearers;
} TS24008IE_CallControlCapabilities;

EXTERN int NASEnc_TS24008IE_CallControlCapabilities (OSCTXT* pctxt
   , TS24008IE_CallControlCapabilities* pvalue);

EXTERN int NASDec_TS24008IE_CallControlCapabilities (OSCTXT* pctxt
   , TS24008IE_CallControlCapabilities* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CallControlCapabilities (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CallControlCapabilities* pvalue);

EXTERN TS24008IE_CallControlCapabilities*
    asn1Test_TS24008IE_CallControlCapabilities (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_CallControlCapabilities (
   TS24008IE_CallControlCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  CallState                                                 */
/*                                                            */
/**************************************************************/
/*
CallState ::= SEQUENCE {
   codingStandard [0] CodingStandard,
   callStateValue [1] INTEGER (0..63)
}
*/
typedef struct EXTERN TS24008IE_CallState {
   TS24008IE_CodingStandard codingStandard;
   OSUINT8 callStateValue;
} TS24008IE_CallState;

EXTERN int NASEnc_TS24008IE_CallState (OSCTXT* pctxt
   , TS24008IE_CallState* pvalue);

EXTERN int NASDec_TS24008IE_CallState (OSCTXT* pctxt
   , TS24008IE_CallState* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CallState (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CallState* pvalue);

EXTERN TS24008IE_CallState* asn1Test_TS24008IE_CallState (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CalledPartyBCDNumber_octet3                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CalledPartyBCDNumber'
*/
typedef struct EXTERN TS24008IE_CalledPartyBCDNumber_octet3 {
   OSUINT8 typeOfNumber;
   OSUINT8 numberingPlanID;
} TS24008IE_CalledPartyBCDNumber_octet3;

EXTERN int NASEnc_TS24008IE_CalledPartyBCDNumber_octet3 (OSCTXT* pctxt
   , TS24008IE_CalledPartyBCDNumber_octet3* pvalue);

EXTERN int NASDec_TS24008IE_CalledPartyBCDNumber_octet3 (OSCTXT* pctxt
   , TS24008IE_CalledPartyBCDNumber_octet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CalledPartyBCDNumber_octet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CalledPartyBCDNumber_octet3* pvalue);

EXTERN TS24008IE_CalledPartyBCDNumber_octet3*
    asn1Test_TS24008IE_CalledPartyBCDNumber_octet3 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CalledPartyBCDNumber                                      */
/*                                                            */
/**************************************************************/
/*
 10.5.4.7 - Called party BCD number 
CalledPartyBCDNumber ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet3 [1] SEQUENCE {
      typeOfNumber [0] INTEGER (0..7),
      numberingPlanID [1] INTEGER (0..15)
   },
   --<length fixed-size="0"/>
   number [2] TBCDString
}
*/
typedef struct EXTERN TS24008IE_CalledPartyBCDNumber {
   OSUINT8 length;
   TS24008IE_CalledPartyBCDNumber_octet3 octet3;
   TS24008IE_TBCDString number;
} TS24008IE_CalledPartyBCDNumber;

EXTERN int NASEnc_TS24008IE_CalledPartyBCDNumber (OSCTXT* pctxt
   , TS24008IE_CalledPartyBCDNumber* pvalue);

EXTERN int NASDec_TS24008IE_CalledPartyBCDNumber (OSCTXT* pctxt
   , TS24008IE_CalledPartyBCDNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CalledPartyBCDNumber (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CalledPartyBCDNumber* pvalue);

EXTERN TS24008IE_CalledPartyBCDNumber*
    asn1Test_TS24008IE_CalledPartyBCDNumber (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_CalledPartyBCDNumber (
   TS24008IE_CalledPartyBCDNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  Cause_octet3                                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Cause'
*/
typedef struct EXTERN TS24008IE_Cause_octet3 {
   TS24008IE_CodingStandard codingStandard;
   OSBOOL spare;
   TS24008IE_Location location;
} TS24008IE_Cause_octet3;

EXTERN int NASEnc_TS24008IE_Cause_octet3 (OSCTXT* pctxt
   , TS24008IE_Cause_octet3* pvalue);

EXTERN int NASDec_TS24008IE_Cause_octet3 (OSCTXT* pctxt
   , TS24008IE_Cause_octet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_Cause_octet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Cause_octet3* pvalue);

EXTERN TS24008IE_Cause_octet3* asn1Test_TS24008IE_Cause_octet3 (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24008IE_Cause_octet3 (TS24008IE_Cause_octet3* pvalue);

/**************************************************************/
/*                                                            */
/*  Cause                                                     */
/*                                                            */
/**************************************************************/
/*
 Custom encode/decode function is used to handle condition of recommendation
Cause ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<first3GExtElem/>
   octet3 [1] SEQUENCE {
      codingStandard [0] CodingStandard,
      spare [1] BOOLEAN DEFAULT FALSE,
      location [2] Location
   },
   --<last3GExtElem/>
   recommendation [2] INTEGER (0..127) OPTIONAL,
   --<first3GExtElem/>
   --<last3GExtElem/>
   causeValue [3] INTEGER (0..127),
   --<inline/>
   --<length fixed-size="0"/>
   diagnostics [4] OCTET STRING (SIZE (0..32))
}
*/
typedef struct EXTERN TS24008IE_Cause {
   struct {
      unsigned recommendationPresent : 1;
   } m;
   OSUINT8 length;
   TS24008IE_Cause_octet3 octet3;
   OSUINT8 recommendation;
   OSUINT8 causeValue;
   struct {
      OSUINT8 numocts;
      OSOCTET data[32];
   } diagnostics;
} TS24008IE_Cause;

EXTERN int NASEnc_TS24008IE_Cause (OSCTXT* pctxt, TS24008IE_Cause* pvalue);

EXTERN int NASDec_TS24008IE_Cause (OSCTXT* pctxt, TS24008IE_Cause* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_Cause (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Cause* pvalue);

EXTERN TS24008IE_Cause* asn1Test_TS24008IE_Cause (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_Cause (TS24008IE_Cause* pvalue);

/**************************************************************/
/*                                                            */
/*  HighLayerCompatibility_octet3                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HighLayerCompatibility'
*/
typedef struct EXTERN TS24008IE_HighLayerCompatibility_octet3 {
   TS24008IE_CodingStandard codingStandard;
   OSUINT8 interpretation;
   OSUINT8 presentMethOfProtoProf;
} TS24008IE_HighLayerCompatibility_octet3;

EXTERN int NASEnc_TS24008IE_HighLayerCompatibility_octet3 (OSCTXT* pctxt
   , TS24008IE_HighLayerCompatibility_octet3* pvalue);

EXTERN int NASDec_TS24008IE_HighLayerCompatibility_octet3 (OSCTXT* pctxt
   , TS24008IE_HighLayerCompatibility_octet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_HighLayerCompatibility_octet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_HighLayerCompatibility_octet3* pvalue);

EXTERN TS24008IE_HighLayerCompatibility_octet3*
    asn1Test_TS24008IE_HighLayerCompatibility_octet3 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HighLayerCompatibility                                    */
/*                                                            */
/**************************************************************/
/*
 10.5.4.16 - High layer compatibility 
HighLayerCompatibility ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<first3GExtElem/>
   --<last3GExtElem/>
   --<noPresentBit/>
   octet3 [1] SEQUENCE {
      codingStandard [0] CodingStandard,
      interpretation [1] INTEGER (0..7),
      presentMethOfProtoProf [2] INTEGER (0..3)
   } OPTIONAL,
   --<first3GExtElem/>
   --<noPresentBit/>
   highLayerCharacteristicsID [2] INTEGER (0..127) OPTIONAL,
   --<last3GExtElem/>
   extHighLayerCharacteristicsID [3] INTEGER (0..127) OPTIONAL
}
*/
typedef struct EXTERN TS24008IE_HighLayerCompatibility {
   struct {
      unsigned octet3Present : 1;
      unsigned highLayerCharacteristicsIDPresent : 1;
      unsigned extHighLayerCharacteristicsIDPresent : 1;
   } m;
   OSUINT8 length;
   TS24008IE_HighLayerCompatibility_octet3 octet3;
   OSUINT8 highLayerCharacteristicsID;
   OSUINT8 extHighLayerCharacteristicsID;
} TS24008IE_HighLayerCompatibility;

EXTERN int NASEnc_TS24008IE_HighLayerCompatibility (OSCTXT* pctxt
   , TS24008IE_HighLayerCompatibility* pvalue);

EXTERN int NASDec_TS24008IE_HighLayerCompatibility (OSCTXT* pctxt
   , TS24008IE_HighLayerCompatibility* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_HighLayerCompatibility (OSCTXT *pctxt, 
   const char* name, const TS24008IE_HighLayerCompatibility* pvalue);

EXTERN TS24008IE_HighLayerCompatibility*
    asn1Test_TS24008IE_HighLayerCompatibility (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_HighLayerCompatibility (
   TS24008IE_HighLayerCompatibility* pvalue);

/**************************************************************/
/*                                                            */
/*  KeypadFacilityInfo                                        */
/*                                                            */
/**************************************************************/
/*
 10.5.4.17 - Keypad facility 
KeypadFacilityInfo ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..127)
}
*/
typedef struct EXTERN TS24008IE_KeypadFacilityInfo {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_KeypadFacilityInfo;

EXTERN int NASEnc_TS24008IE_KeypadFacilityInfo (OSCTXT* pctxt
   , TS24008IE_KeypadFacilityInfo* pvalue);

EXTERN int NASDec_TS24008IE_KeypadFacilityInfo (OSCTXT* pctxt
   , TS24008IE_KeypadFacilityInfo* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_KeypadFacilityInfo (OSCTXT *pctxt, 
   const char* name, const TS24008IE_KeypadFacilityInfo* pvalue);

EXTERN TS24008IE_KeypadFacilityInfo*
    asn1Test_TS24008IE_KeypadFacilityInfo (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_KeypadFacilityInfo (
   TS24008IE_KeypadFacilityInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationIndicator                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.4.19 - More data: IEI only 
 10.5.4.20 - Notification indicator 
NotificationIndicator ::= SEQUENCE {
   ext [0] BOOLEAN DEFAULT TRUE,
   value [1] INTEGER (0..127)
}
*/
typedef struct EXTERN TS24008IE_NotificationIndicator {
   OSBOOL ext;
   OSUINT8 value;
} TS24008IE_NotificationIndicator;

EXTERN int NASEnc_TS24008IE_NotificationIndicator (OSCTXT* pctxt
   , TS24008IE_NotificationIndicator* pvalue);

EXTERN int NASDec_TS24008IE_NotificationIndicator (OSCTXT* pctxt
   , TS24008IE_NotificationIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NotificationIndicator (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NotificationIndicator* pvalue);

EXTERN TS24008IE_NotificationIndicator*
    asn1Test_TS24008IE_NotificationIndicator (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_NotificationIndicator (
   TS24008IE_NotificationIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  ProgressIndicator_octet3                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProgressIndicator'
*/
typedef struct EXTERN TS24008IE_ProgressIndicator_octet3 {
   TS24008IE_CodingStandard codingStandard;
   OSBOOL spare;
   OSUINT8 location;
} TS24008IE_ProgressIndicator_octet3;

EXTERN int NASEnc_TS24008IE_ProgressIndicator_octet3 (OSCTXT* pctxt
   , TS24008IE_ProgressIndicator_octet3* pvalue);

EXTERN int NASDec_TS24008IE_ProgressIndicator_octet3 (OSCTXT* pctxt
   , TS24008IE_ProgressIndicator_octet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ProgressIndicator_octet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ProgressIndicator_octet3* pvalue);

EXTERN TS24008IE_ProgressIndicator_octet3*
    asn1Test_TS24008IE_ProgressIndicator_octet3 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ProgressIndicator_octet3 (
   TS24008IE_ProgressIndicator_octet3* pvalue);

/**************************************************************/
/*                                                            */
/*  ProgressIndicator                                         */
/*                                                            */
/**************************************************************/
/*
 10.5.4.21 - Progress indicator 
ProgressIndicator ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 2,
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet3 [1] SEQUENCE {
      codingStandard [0] CodingStandard,
      spare [1] BOOLEAN DEFAULT FALSE,
      location [2] INTEGER (0..15)
   },
   --<first3GExtElem/>
   --<last3GExtElem/>
   description [2] INTEGER (0..127)
}
*/
typedef struct EXTERN TS24008IE_ProgressIndicator {
   OSUINT8 length;
   TS24008IE_ProgressIndicator_octet3 octet3;
   OSUINT8 description;
} TS24008IE_ProgressIndicator;

EXTERN int NASEnc_TS24008IE_ProgressIndicator (OSCTXT* pctxt
   , TS24008IE_ProgressIndicator* pvalue);

EXTERN int NASDec_TS24008IE_ProgressIndicator (OSCTXT* pctxt
   , TS24008IE_ProgressIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ProgressIndicator (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ProgressIndicator* pvalue);

EXTERN TS24008IE_ProgressIndicator*
    asn1Test_TS24008IE_ProgressIndicator (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ProgressIndicator (TS24008IE_ProgressIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  RecallType                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.4.21a Recall type $(CCBS)$
RecallType ::= SEQUENCE {
   spare [0] INTEGER (0..31) DEFAULT 0,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_RecallType {
   OSUINT8 spare;
   OSUINT8 value;
} TS24008IE_RecallType;

EXTERN int NASEnc_TS24008IE_RecallType (OSCTXT* pctxt
   , TS24008IE_RecallType* pvalue);

EXTERN int NASDec_TS24008IE_RecallType (OSCTXT* pctxt
   , TS24008IE_RecallType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RecallType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RecallType* pvalue);

EXTERN TS24008IE_RecallType* asn1Test_TS24008IE_RecallType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_RecallType (TS24008IE_RecallType* pvalue);

/**************************************************************/
/*                                                            */
/*  UserUser                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.4.25 - User-user 
UserUser ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..129),
   uupd [1] INTEGER (0..255), -- User-user protocol discriminator 
   uuInfo [2] OCTET STRING -- User-user info 
}
*/
typedef struct EXTERN TS24008IE_UserUser {
   OSUINT8 length;
   OSUINT8 uupd;
   OSDynOctStr uuInfo;
} TS24008IE_UserUser;

EXTERN int NASEnc_TS24008IE_UserUser (OSCTXT* pctxt, TS24008IE_UserUser* pvalue
   );

EXTERN int NASDec_TS24008IE_UserUser (OSCTXT* pctxt, TS24008IE_UserUser* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_UserUser (OSCTXT *pctxt, 
   const char* name, const TS24008IE_UserUser* pvalue);

EXTERN TS24008IE_UserUser* asn1Test_TS24008IE_UserUser (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_UserUser (TS24008IE_UserUser* pvalue);

/**************************************************************/
/*                                                            */
/*  AlertingPattern                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.26 - Alerting Pattern $(NIA)$ 
AlertingPattern ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] INTEGER (0..15) DEFAULT 0,
   value [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_AlertingPattern {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 value;
} TS24008IE_AlertingPattern;

EXTERN int NASEnc_TS24008IE_AlertingPattern (OSCTXT* pctxt
   , TS24008IE_AlertingPattern* pvalue);

EXTERN int NASDec_TS24008IE_AlertingPattern (OSCTXT* pctxt
   , TS24008IE_AlertingPattern* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AlertingPattern (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AlertingPattern* pvalue);

EXTERN TS24008IE_AlertingPattern*
    asn1Test_TS24008IE_AlertingPattern (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AlertingPattern (TS24008IE_AlertingPattern* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedActions                                            */
/*                                                            */
/**************************************************************/
/*
 10.5.4.27 - Allowed actions $(CCBS)$ 
AllowedActions ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   ccbs-activation [1] BOOLEAN,
   spare [2] INTEGER (0..127) DEFAULT 0
}
*/
typedef struct EXTERN TS24008IE_AllowedActions {
   OSUINT8 length;
   OSBOOL ccbs_activation;
   OSUINT8 spare;
} TS24008IE_AllowedActions;

EXTERN int NASEnc_TS24008IE_AllowedActions (OSCTXT* pctxt
   , TS24008IE_AllowedActions* pvalue);

EXTERN int NASDec_TS24008IE_AllowedActions (OSCTXT* pctxt
   , TS24008IE_AllowedActions* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AllowedActions (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AllowedActions* pvalue);

EXTERN TS24008IE_AllowedActions*
    asn1Test_TS24008IE_AllowedActions (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AllowedActions (TS24008IE_AllowedActions* pvalue);

/**************************************************************/
/*                                                            */
/*  StreamIdentifierValue                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.4.28 - Stream Identifier 
StreamIdentifierValue ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   value [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_StreamIdentifierValue {
   OSUINT8 length;
   OSUINT8 value;
} TS24008IE_StreamIdentifierValue;

EXTERN int NASEnc_TS24008IE_StreamIdentifierValue (OSCTXT* pctxt
   , TS24008IE_StreamIdentifierValue* pvalue);

EXTERN int NASDec_TS24008IE_StreamIdentifierValue (OSCTXT* pctxt
   , TS24008IE_StreamIdentifierValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_StreamIdentifierValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_StreamIdentifierValue* pvalue);

EXTERN TS24008IE_StreamIdentifierValue*
    asn1Test_TS24008IE_StreamIdentifierValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NetCallCtrlCaps                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.4.29 - Network Call Control Capabilities 
NetCallCtrlCaps ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] INTEGER (0..127) DEFAULT 0,
   mcs [2] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_NetCallCtrlCaps {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL mcs;
} TS24008IE_NetCallCtrlCaps;

EXTERN int NASEnc_TS24008IE_NetCallCtrlCaps (OSCTXT* pctxt
   , TS24008IE_NetCallCtrlCaps* pvalue);

EXTERN int NASDec_TS24008IE_NetCallCtrlCaps (OSCTXT* pctxt
   , TS24008IE_NetCallCtrlCaps* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NetCallCtrlCaps (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NetCallCtrlCaps* pvalue);

EXTERN TS24008IE_NetCallCtrlCaps*
    asn1Test_TS24008IE_NetCallCtrlCaps (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_NetCallCtrlCaps (TS24008IE_NetCallCtrlCaps* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseOfNoCLI                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.4.30 - Cause of No CLI 
CauseOfNoCLI ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   value [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_CauseOfNoCLI {
   OSUINT8 length;
   OSUINT8 value;
} TS24008IE_CauseOfNoCLI;

EXTERN int NASEnc_TS24008IE_CauseOfNoCLI (OSCTXT* pctxt
   , TS24008IE_CauseOfNoCLI* pvalue);

EXTERN int NASDec_TS24008IE_CauseOfNoCLI (OSCTXT* pctxt
   , TS24008IE_CauseOfNoCLI* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CauseOfNoCLI (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CauseOfNoCLI* pvalue);

EXTERN TS24008IE_CauseOfNoCLI* asn1Test_TS24008IE_CauseOfNoCLI (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  SupportedCodec                                            */
/*                                                            */
/**************************************************************/
/*
 10.5.4.32 - Supported codec list 
SupportedCodec ::= SEQUENCE {
   sysID [0] INTEGER (0..255),
   codecBitmap [1] OCTET STRING (SIZE (1..2))
}
*/
typedef struct EXTERN TS24008IE_SupportedCodec {
   OSUINT8 sysID;
   TS24008IE_SupportedCodec_codecBitmap codecBitmap;
} TS24008IE_SupportedCodec;

EXTERN int NASEnc_TS24008IE_SupportedCodec (OSCTXT* pctxt
   , TS24008IE_SupportedCodec* pvalue);

EXTERN int NASDec_TS24008IE_SupportedCodec (OSCTXT* pctxt
   , TS24008IE_SupportedCodec* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_SupportedCodec (OSCTXT *pctxt, 
   const char* name, const TS24008IE_SupportedCodec* pvalue);

EXTERN TS24008IE_SupportedCodec*
    asn1Test_TS24008IE_SupportedCodec (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_SupportedCodec (TS24008IE_SupportedCodec* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedCodecList                                        */
/*                                                            */
/**************************************************************/
/*
SupportedCodecList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (3..253),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   codecs [1] SEQUENCE (SIZE (1..83)) OF SupportedCodec
}
*/
typedef struct EXTERN TS24008IE_SupportedCodecList {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24008IE_SupportedCodec elem[83];
   } codecs;
} TS24008IE_SupportedCodecList;

EXTERN int NASEnc_TS24008IE_SupportedCodecList (OSCTXT* pctxt
   , TS24008IE_SupportedCodecList* pvalue);

EXTERN int NASDec_TS24008IE_SupportedCodecList (OSCTXT* pctxt
   , TS24008IE_SupportedCodecList* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_SupportedCodecList (OSCTXT *pctxt, 
   const char* name, const TS24008IE_SupportedCodecList* pvalue);

EXTERN TS24008IE_SupportedCodecList*
    asn1Test_TS24008IE_SupportedCodecList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_SupportedCodecList (
   TS24008IE_SupportedCodecList* pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceCategoryValue                                      */
/*                                                            */
/**************************************************************/
/*
 10.5.4.33 Service category 
ServiceCategoryValue ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..127)
}
*/
typedef struct EXTERN TS24008IE_ServiceCategoryValue {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_ServiceCategoryValue;

EXTERN int NASEnc_TS24008IE_ServiceCategoryValue (OSCTXT* pctxt
   , TS24008IE_ServiceCategoryValue* pvalue);

EXTERN int NASDec_TS24008IE_ServiceCategoryValue (OSCTXT* pctxt
   , TS24008IE_ServiceCategoryValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ServiceCategoryValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ServiceCategoryValue* pvalue);

EXTERN TS24008IE_ServiceCategoryValue*
    asn1Test_TS24008IE_ServiceCategoryValue (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ServiceCategoryValue (
   TS24008IE_ServiceCategoryValue* pvalue);

/**************************************************************/
/*                                                            */
/*  AddnUpdateType                                            */
/*                                                            */
/**************************************************************/
/*
 10.5.4.34 - Redial: IEI only 
 10.5.4.35 - Network-initiated Service Upgrade indicator: IEI only 
 10.5.5.0 - Additional update type 
AddnUpdateType ::= SEQUENCE {
   spare [0] INTEGER (0..7),
   autv [1] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_AddnUpdateType {
   OSUINT8 spare;
   OSBOOL autv;
} TS24008IE_AddnUpdateType;

EXTERN int NASEnc_TS24008IE_AddnUpdateType (OSCTXT* pctxt
   , TS24008IE_AddnUpdateType* pvalue);

EXTERN int NASDec_TS24008IE_AddnUpdateType (OSCTXT* pctxt
   , TS24008IE_AddnUpdateType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AddnUpdateType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AddnUpdateType* pvalue);

EXTERN TS24008IE_AddnUpdateType*
    asn1Test_TS24008IE_AddnUpdateType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AttachResult                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.5.1 - Attach result 
AttachResult ::= SEQUENCE {
   fop [0] BOOLEAN,
   resultOfAttach [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_AttachResult {
   OSBOOL fop;
   OSUINT8 resultOfAttach;
} TS24008IE_AttachResult;

EXTERN int NASEnc_TS24008IE_AttachResult (OSCTXT* pctxt
   , TS24008IE_AttachResult* pvalue);

EXTERN int NASDec_TS24008IE_AttachResult (OSCTXT* pctxt
   , TS24008IE_AttachResult* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AttachResult (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AttachResult* pvalue);

EXTERN TS24008IE_AttachResult* asn1Test_TS24008IE_AttachResult (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  AttachType                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.5.2 - Attach type 
AttachType ::= SEQUENCE {
   for [0] BOOLEAN,
   typeOfAttach [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_AttachType {
   OSBOOL for_;
   OSUINT8 typeOfAttach;
} TS24008IE_AttachType;

EXTERN int NASEnc_TS24008IE_AttachType (OSCTXT* pctxt
   , TS24008IE_AttachType* pvalue);

EXTERN int NASDec_TS24008IE_AttachType (OSCTXT* pctxt
   , TS24008IE_AttachType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AttachType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AttachType* pvalue);

EXTERN TS24008IE_AttachType* asn1Test_TS24008IE_AttachType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CipheringAlgorithmType                                    */
/*                                                            */
/**************************************************************/
/*
 10.5.5.3 - Ciphering algorithm 
CipheringAlgorithmType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_CipheringAlgorithmType {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_CipheringAlgorithmType;

EXTERN int NASEnc_TS24008IE_CipheringAlgorithmType (OSCTXT* pctxt
   , TS24008IE_CipheringAlgorithmType* pvalue);

EXTERN int NASDec_TS24008IE_CipheringAlgorithmType (OSCTXT* pctxt
   , TS24008IE_CipheringAlgorithmType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_CipheringAlgorithmType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_CipheringAlgorithmType* pvalue);

EXTERN TS24008IE_CipheringAlgorithmType*
    asn1Test_TS24008IE_CipheringAlgorithmType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_CipheringAlgorithmType (
   TS24008IE_CipheringAlgorithmType* pvalue);

/**************************************************************/
/*                                                            */
/*  IntegrityAlgorithmType                                    */
/*                                                            */
/**************************************************************/
/*
 10.5.5.3a - Integrity algorithm 
IntegrityAlgorithmType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_IntegrityAlgorithmType {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_IntegrityAlgorithmType;

EXTERN int NASEnc_TS24008IE_IntegrityAlgorithmType (OSCTXT* pctxt
   , TS24008IE_IntegrityAlgorithmType* pvalue);

EXTERN int NASDec_TS24008IE_IntegrityAlgorithmType (OSCTXT* pctxt
   , TS24008IE_IntegrityAlgorithmType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_IntegrityAlgorithmType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IntegrityAlgorithmType* pvalue);

EXTERN TS24008IE_IntegrityAlgorithmType*
    asn1Test_TS24008IE_IntegrityAlgorithmType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_IntegrityAlgorithmType (
   TS24008IE_IntegrityAlgorithmType* pvalue);

/**************************************************************/
/*                                                            */
/*  TMSIStatus                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.5.4 - TMSI status 
TMSIStatus ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   flag [1] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_TMSIStatus {
   OSUINT8 spare;
   OSBOOL flag;
} TS24008IE_TMSIStatus;

EXTERN int NASEnc_TS24008IE_TMSIStatus (OSCTXT* pctxt
   , TS24008IE_TMSIStatus* pvalue);

EXTERN int NASDec_TS24008IE_TMSIStatus (OSCTXT* pctxt
   , TS24008IE_TMSIStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_TMSIStatus (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TMSIStatus* pvalue);

EXTERN TS24008IE_TMSIStatus* asn1Test_TS24008IE_TMSIStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_TMSIStatus (TS24008IE_TMSIStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  DetachType                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.5.5 - Detach type 
DetachType ::= SEQUENCE {
   powerOff [0] BOOLEAN,
   detachTypeValue [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_DetachType {
   OSBOOL powerOff;
   OSUINT8 detachTypeValue;
} TS24008IE_DetachType;

EXTERN int NASEnc_TS24008IE_DetachType (OSCTXT* pctxt
   , TS24008IE_DetachType* pvalue);

EXTERN int NASDec_TS24008IE_DetachType (OSCTXT* pctxt
   , TS24008IE_DetachType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DetachType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DetachType* pvalue);

EXTERN TS24008IE_DetachType* asn1Test_TS24008IE_DetachType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DRXParameter                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.5.6 - DRX parameter 
DRXParameter ::= SEQUENCE {
   splitPGCycleCode [0] INTEGER (0..255),
   lenCoefAndValue [1] INTEGER (0..15),
   splitOnCCCH [2] BOOLEAN,
   nonDRXTimer [3] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_DRXParameter {
   OSUINT8 splitPGCycleCode;
   OSUINT8 lenCoefAndValue;
   OSBOOL splitOnCCCH;
   OSUINT8 nonDRXTimer;
} TS24008IE_DRXParameter;

EXTERN int NASEnc_TS24008IE_DRXParameter (OSCTXT* pctxt
   , TS24008IE_DRXParameter* pvalue);

EXTERN int NASDec_TS24008IE_DRXParameter (OSCTXT* pctxt
   , TS24008IE_DRXParameter* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DRXParameter (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DRXParameter* pvalue);

EXTERN TS24008IE_DRXParameter* asn1Test_TS24008IE_DRXParameter (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  ForceToStandbyValue                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.5.7 - Force to standby 
ForceToStandbyValue ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_ForceToStandbyValue {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_ForceToStandbyValue;

EXTERN int NASEnc_TS24008IE_ForceToStandbyValue (OSCTXT* pctxt
   , TS24008IE_ForceToStandbyValue* pvalue);

EXTERN int NASDec_TS24008IE_ForceToStandbyValue (OSCTXT* pctxt
   , TS24008IE_ForceToStandbyValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ForceToStandbyValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ForceToStandbyValue* pvalue);

EXTERN TS24008IE_ForceToStandbyValue*
    asn1Test_TS24008IE_ForceToStandbyValue (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ForceToStandbyValue (
   TS24008IE_ForceToStandbyValue* pvalue);

/**************************************************************/
/*                                                            */
/*  P_TMSISignature                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.5.8 - P-TMSI signature 
P-TMSISignature ::= SEQUENCE {
   value [0] OCTET STRING (SIZE (3))
}
*/
typedef struct EXTERN TS24008IE_P_TMSISignature {
   OSOCTET value[3];
} TS24008IE_P_TMSISignature;

EXTERN int NASEnc_TS24008IE_P_TMSISignature (OSCTXT* pctxt
   , TS24008IE_P_TMSISignature* pvalue);

EXTERN int NASDec_TS24008IE_P_TMSISignature (OSCTXT* pctxt
   , TS24008IE_P_TMSISignature* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_P_TMSISignature (OSCTXT *pctxt, 
   const char* name, const TS24008IE_P_TMSISignature* pvalue);

EXTERN TS24008IE_P_TMSISignature*
    asn1Test_TS24008IE_P_TMSISignature (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  P_TMSISignature2                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.5.8a - P-TMSI signature 2 
P-TMSISignature2 ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (3) DEFAULT 3,
   value [1] OCTET STRING (SIZE (3))
}
*/
typedef struct EXTERN TS24008IE_P_TMSISignature2 {
   OSUINT8 length;
   OSOCTET value[3];
} TS24008IE_P_TMSISignature2;

EXTERN int NASEnc_TS24008IE_P_TMSISignature2 (OSCTXT* pctxt
   , TS24008IE_P_TMSISignature2* pvalue);

EXTERN int NASDec_TS24008IE_P_TMSISignature2 (OSCTXT* pctxt
   , TS24008IE_P_TMSISignature2* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_P_TMSISignature2 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_P_TMSISignature2* pvalue);

EXTERN TS24008IE_P_TMSISignature2*
    asn1Test_TS24008IE_P_TMSISignature2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_P_TMSISignature2 (TS24008IE_P_TMSISignature2* pvalue);

/**************************************************************/
/*                                                            */
/*  IMEISVRequest                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.5.10 - IMEISV request 
IMEISVRequest ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_IMEISVRequest {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_IMEISVRequest;

EXTERN int NASEnc_TS24008IE_IMEISVRequest (OSCTXT* pctxt
   , TS24008IE_IMEISVRequest* pvalue);

EXTERN int NASDec_TS24008IE_IMEISVRequest (OSCTXT* pctxt
   , TS24008IE_IMEISVRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_IMEISVRequest (OSCTXT *pctxt, 
   const char* name, const TS24008IE_IMEISVRequest* pvalue);

EXTERN TS24008IE_IMEISVRequest*
    asn1Test_TS24008IE_IMEISVRequest (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_IMEISVRequest (TS24008IE_IMEISVRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  ReceiveNPDUNumber                                         */
/*                                                            */
/**************************************************************/
/*
 10.5.5.11 - Receive N-PDU Numbers list 
ReceiveNPDUNumber ::= SEQUENCE {
   nsapi [0] INTEGER (1..15),
   numberValue [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_ReceiveNPDUNumber {
   OSUINT8 nsapi;
   OSUINT8 numberValue;
} TS24008IE_ReceiveNPDUNumber;

EXTERN int NASEnc_TS24008IE_ReceiveNPDUNumber (OSCTXT* pctxt
   , TS24008IE_ReceiveNPDUNumber* pvalue);

EXTERN int NASDec_TS24008IE_ReceiveNPDUNumber (OSCTXT* pctxt
   , TS24008IE_ReceiveNPDUNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ReceiveNPDUNumber (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ReceiveNPDUNumber* pvalue);

EXTERN TS24008IE_ReceiveNPDUNumber*
    asn1Test_TS24008IE_ReceiveNPDUNumber (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReceiveNPDUNumberList                                     */
/*                                                            */
/**************************************************************/
/*
<aligned/>
ReceiveNPDUNumberList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2..255),
   --<is3GVarLenList lengthElem="length"/>
   --<cDecSrcFname>TS24008IESDec_ReceiveNPDUNumber.c</cDecSrcFname>
   receiveNPDUNumber [1] SEQUENCE (SIZE (1..MAX)) OF ReceiveNPDUNumber
}
*/
typedef struct EXTERN TS24008IE_ReceiveNPDUNumberList {
   OSUINT8 length;
   struct  {
      OSSIZE n;
      TS24008IE_ReceiveNPDUNumber *elem;
   } receiveNPDUNumber;
} TS24008IE_ReceiveNPDUNumberList;

EXTERN int NASEnc_TS24008IE_ReceiveNPDUNumberList (OSCTXT* pctxt
   , TS24008IE_ReceiveNPDUNumberList* pvalue);

EXTERN int NASDec_TS24008IE_ReceiveNPDUNumberList (OSCTXT* pctxt
   , TS24008IE_ReceiveNPDUNumberList* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ReceiveNPDUNumberList (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ReceiveNPDUNumberList* pvalue);

EXTERN TS24008IE_ReceiveNPDUNumberList*
    asn1Test_TS24008IE_ReceiveNPDUNumberList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ReceiveNPDUNumberList (
   TS24008IE_ReceiveNPDUNumberList* pvalue);

/**************************************************************/
/*                                                            */
/*  MSNetworkCapability                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.5.12 - MS network capability 
<aligned/>
MSNetworkCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..8),
   --<noPresentBit/>
   --<inline/>
   octet1 [1] SEQUENCE {
      gea1 [0] BOOLEAN,
      smCapDeicatedChan [1] BOOLEAN,
      smCapGPRSChan [2] BOOLEAN,
      ucs2Support [3] BOOLEAN,
      ssScreeningInd [4] INTEGER (0..3),
      soLSACap [5] BOOLEAN,
      revisionLevelInd [6] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet2 [2] SEQUENCE {
      pfcFeatureMode [0] BOOLEAN,
      extendedGEA [1] INTEGER (0..63),
      lcsVACap [2] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet3 [3] SEQUENCE {
      psInterRATHOToUTRANIuModeCap [0] BOOLEAN,
      psInterRATHOToEUTRANS1ModeCap [1] BOOLEAN,
      emmCombinedProcCap [2] BOOLEAN,
      isrSupport [3] BOOLEAN,
      srvccToGERAN-UTRANCap [4] BOOLEAN,
      epcCap [5] BOOLEAN,
      -- added in release 9
      nfCapability [6] BOOLEAN,
      -- added in release 11
      geranNetShareCap [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet4 [4] SEQUENCE {
      userPlaneIntegProtSupp [0] BOOLEAN,
      gia-4 [1] BOOLEAN,
      gia-5 [2] BOOLEAN,
      gia-6 [3] BOOLEAN,
      gia-7 [4] BOOLEAN,
      epcoIeIndicator [5] BOOLEAN,
      restrictUseEnhancedCovCap [6] BOOLEAN,
      dualConnEutraNRCap [7] BOOLEAN
   } OPTIONAL,
   -- spare bits used to pad out length > 4
   spareBits [5] BIT STRING 
}
*/
typedef struct EXTERN TS24008IE_MSNetworkCapability {
   struct {
      unsigned octet1Present : 1;
      unsigned octet2Present : 1;
      unsigned octet3Present : 1;
      unsigned octet4Present : 1;
   } m;
   OSUINT8 length;
   struct  {
      OSBOOL gea1;
      OSBOOL smCapDeicatedChan;
      OSBOOL smCapGPRSChan;
      OSBOOL ucs2Support;
      OSUINT8 ssScreeningInd;
      OSBOOL soLSACap;
      OSBOOL revisionLevelInd;
   } octet1;
   struct  {
      OSBOOL pfcFeatureMode;
      OSUINT8 extendedGEA;
      OSBOOL lcsVACap;
   } octet2;
   struct  {
      OSBOOL psInterRATHOToUTRANIuModeCap;
      OSBOOL psInterRATHOToEUTRANS1ModeCap;
      OSBOOL emmCombinedProcCap;
      OSBOOL isrSupport;
      OSBOOL srvccToGERAN_UTRANCap;
      OSBOOL epcCap;
      OSBOOL nfCapability;
      OSBOOL geranNetShareCap;
   } octet3;
   struct  {
      OSBOOL userPlaneIntegProtSupp;
      OSBOOL gia_4;
      OSBOOL gia_5;
      OSBOOL gia_6;
      OSBOOL gia_7;
      OSBOOL epcoIeIndicator;
      OSBOOL restrictUseEnhancedCovCap;
      OSBOOL dualConnEutraNRCap;
   } octet4;
   ASN1DynBitStr spareBits;
} TS24008IE_MSNetworkCapability;

EXTERN int NASEnc_TS24008IE_MSNetworkCapability (OSCTXT* pctxt
   , TS24008IE_MSNetworkCapability* pvalue);

EXTERN int NASDec_TS24008IE_MSNetworkCapability (OSCTXT* pctxt
   , TS24008IE_MSNetworkCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MSNetworkCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MSNetworkCapability* pvalue);

EXTERN TS24008IE_MSNetworkCapability*
    asn1Test_TS24008IE_MSNetworkCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MSNetworkCapability (
   TS24008IE_MSNetworkCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  MultislotCapability_gprsMSC                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MultislotCapability'
*/
typedef struct EXTERN TS24008IE_MultislotCapability_gprsMSC {
   OSUINT8 gprsMultiSlotClass;
   OSBOOL extGPRSDynAllocCap;
} TS24008IE_MultislotCapability_gprsMSC;

EXTERN int NASEnc_TS24008IE_MultislotCapability_gprsMSC (OSCTXT* pctxt
   , TS24008IE_MultislotCapability_gprsMSC* pvalue);

EXTERN int NASDec_TS24008IE_MultislotCapability_gprsMSC (OSCTXT* pctxt
   , TS24008IE_MultislotCapability_gprsMSC* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MultislotCapability_gprsMSC (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MultislotCapability_gprsMSC* pvalue);

EXTERN TS24008IE_MultislotCapability_gprsMSC*
    asn1Test_TS24008IE_MultislotCapability_gprsMSC (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MultislotCapability_egprsMSC                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MultislotCapability'
*/
typedef struct EXTERN TS24008IE_MultislotCapability_egprsMSC {
   OSUINT8 egprsMultiSlotClass;
   OSBOOL extEGPRSDynAllocCap;
} TS24008IE_MultislotCapability_egprsMSC;

EXTERN int NASEnc_TS24008IE_MultislotCapability_egprsMSC (OSCTXT* pctxt
   , TS24008IE_MultislotCapability_egprsMSC* pvalue);

EXTERN int NASDec_TS24008IE_MultislotCapability_egprsMSC (OSCTXT* pctxt
   , TS24008IE_MultislotCapability_egprsMSC* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MultislotCapability_egprsMSC (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MultislotCapability_egprsMSC* pvalue);

EXTERN TS24008IE_MultislotCapability_egprsMSC*
    asn1Test_TS24008IE_MultislotCapability_egprsMSC (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MultislotCapability                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.5.12a - MS Radio Access capability 
 GMSK Multislot Power Profile (2 bit field)
 8-PSK Multislot Power Profile (2 bit field)
 For detailed definitions, see the Mobile Station Classmark 3 IE.
MultislotCapability ::= SEQUENCE {
   hscsdMultiSlotClass [0] INTEGER (0..31) OPTIONAL,
   gprsMSC [1] SEQUENCE {
      gprsMultiSlotClass [0] INTEGER (0..31),
      extGPRSDynAllocCap [1] BOOLEAN
   } OPTIONAL,
   value-SMS-SM [2] MSMeasurementCap OPTIONAL,
   ecsdMultiSlotClass [3] INTEGER (0..31) OPTIONAL,
   egprsMSC [4] SEQUENCE {
      egprsMultiSlotClass [0] INTEGER (0..31),
      extEGPRSDynAllocCap [1] BOOLEAN
   } OPTIONAL,
   --	{ 0 | 1	< DTM GPRS Struct > }
-- 
   dtmGPRSStruct [5] DTMGPRSStruct OPTIONAL
}
*/
typedef struct EXTERN TS24008IE_MultislotCapability {
   struct {
      unsigned hscsdMultiSlotClassPresent : 1;
      unsigned gprsMSCPresent : 1;
      unsigned value_SMS_SMPresent : 1;
      unsigned ecsdMultiSlotClassPresent : 1;
      unsigned egprsMSCPresent : 1;
      unsigned dtmGPRSStructPresent : 1;
   } m;
   OSUINT8 hscsdMultiSlotClass;
   TS24008IE_MultislotCapability_gprsMSC gprsMSC;
   TS24008IE_MSMeasurementCap value_SMS_SM;
   OSUINT8 ecsdMultiSlotClass;
   TS24008IE_MultislotCapability_egprsMSC egprsMSC;
   TS24008IE_DTMGPRSStruct dtmGPRSStruct;
} TS24008IE_MultislotCapability;

EXTERN int NASEnc_TS24008IE_MultislotCapability (OSCTXT* pctxt
   , TS24008IE_MultislotCapability* pvalue);

EXTERN int NASDec_TS24008IE_MultislotCapability (OSCTXT* pctxt
   , TS24008IE_MultislotCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MultislotCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MultislotCapability* pvalue);

EXTERN TS24008IE_MultislotCapability*
    asn1Test_TS24008IE_MultislotCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MultislotCapability (
   TS24008IE_MultislotCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  EnhanFlexTimeSlotAssnStruct                               */
/*                                                            */
/**************************************************************/
/*
< Enhanced Flexible Timeslot Assignment struct > ::=
{ 0 | 1 	< Alternative EFTA Multislot Class : bit(4) > 
	< EFTA Multislot Capability Reduction for 
                        Downlink Dual Carrier: bit (3) > };
EnhanFlexTimeSlotAssnStruct ::= SEQUENCE {
   alt-EFTA-MultislotClass [0] INTEGER (0..15),
   eFTA-Multislot-Cap-Reduct [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_EnhanFlexTimeSlotAssnStruct {
   OSUINT8 alt_EFTA_MultislotClass;
   OSUINT8 eFTA_Multislot_Cap_Reduct;
} TS24008IE_EnhanFlexTimeSlotAssnStruct;

EXTERN int NASEnc_TS24008IE_EnhanFlexTimeSlotAssnStruct (OSCTXT* pctxt
   , TS24008IE_EnhanFlexTimeSlotAssnStruct* pvalue);

EXTERN int NASDec_TS24008IE_EnhanFlexTimeSlotAssnStruct (OSCTXT* pctxt
   , TS24008IE_EnhanFlexTimeSlotAssnStruct* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_EnhanFlexTimeSlotAssnStruct (OSCTXT *pctxt, 
   const char* name, const TS24008IE_EnhanFlexTimeSlotAssnStruct* pvalue);

EXTERN TS24008IE_EnhanFlexTimeSlotAssnStruct*
    asn1Test_TS24008IE_EnhanFlexTimeSlotAssnStruct (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AddAccessTechStruct                                       */
/*                                                            */
/**************************************************************/
/*
< Additional access technologies struct > ::=
< Access Technology Type : bit (4) >
< GMSK Power Class : bit (3) >
< 8PSK Power Class : bit (2) > ;
AddAccessTechStruct ::= SEQUENCE {
   accessTechType [0] INTEGER (0..15),
   powerClass-GMSK [1] INTEGER (0..7),
   powerClass-8PSK [2] INTEGER (0..3)
}
*/
typedef struct EXTERN TS24008IE_AddAccessTechStruct {
   OSUINT8 accessTechType;
   OSUINT8 powerClass_GMSK;
   OSUINT8 powerClass_8PSK;
} TS24008IE_AddAccessTechStruct;

EXTERN int NASEnc_TS24008IE_AddAccessTechStruct (OSCTXT* pctxt
   , TS24008IE_AddAccessTechStruct* pvalue);

EXTERN int NASDec_TS24008IE_AddAccessTechStruct (OSCTXT* pctxt
   , TS24008IE_AddAccessTechStruct* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AddAccessTechStruct (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AddAccessTechStruct* pvalue);

EXTERN TS24008IE_AddAccessTechStruct*
    asn1Test_TS24008IE_AddAccessTechStruct (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AddAccessTechStructList                                   */
/*                                                            */
/**************************************************************/
/*
<is3GExtList post-eol="0"/>
AddAccessTechStructList ::= SEQUENCE OF AddAccessTechStruct
*/
typedef struct EXTERN TS24008IE_AddAccessTechStructList {
   OSSIZE n;
   TS24008IE_AddAccessTechStruct *elem;
} TS24008IE_AddAccessTechStructList;

EXTERN int NASEnc_TS24008IE_AddAccessTechStructList (OSCTXT* pctxt
   , TS24008IE_AddAccessTechStructList* pvalue);

EXTERN int NASDec_TS24008IE_AddAccessTechStructList (OSCTXT* pctxt
   , TS24008IE_AddAccessTechStructList* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AddAccessTechStructList (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AddAccessTechStructList* pvalue);

EXTERN TS24008IE_AddAccessTechStructList*
    asn1Test_TS24008IE_AddAccessTechStructList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AddAccessTechStructList (
   TS24008IE_AddAccessTechStructList* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalAccessTech                                      */
/*                                                            */
/**************************************************************/
/*
AdditionalAccessTech ::= SEQUENCE {
   --<is3GLength bitFieldSize="7" units="bits"/>
   length [0] INTEGER (0..127),
   content [1] AddAccessTechStructList,
   spareBits [2] BIT STRING 
}
*/
typedef struct EXTERN TS24008IE_AdditionalAccessTech {
   OSUINT8 length;
   TS24008IE_AddAccessTechStructList content;
   ASN1DynBitStr spareBits;
} TS24008IE_AdditionalAccessTech;

EXTERN int NASEnc_TS24008IE_AdditionalAccessTech (OSCTXT* pctxt
   , TS24008IE_AdditionalAccessTech* pvalue);

EXTERN int NASDec_TS24008IE_AdditionalAccessTech (OSCTXT* pctxt
   , TS24008IE_AdditionalAccessTech* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AdditionalAccessTech (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AdditionalAccessTech* pvalue);

EXTERN TS24008IE_AdditionalAccessTech*
    asn1Test_TS24008IE_AdditionalAccessTech (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AdditionalAccessTech (
   TS24008IE_AdditionalAccessTech* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessCapability_extGPRSMSC                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AccessCapability'
*/
typedef struct EXTERN TS24008IE_AccessCapability_extGPRSMSC {
   OSUINT8 extDtmGPRSMultiSlotClass;
   OSUINT8 extDtmEGPRSMultiSlotClass;
} TS24008IE_AccessCapability_extGPRSMSC;

EXTERN int NASEnc_TS24008IE_AccessCapability_extGPRSMSC (OSCTXT* pctxt
   , TS24008IE_AccessCapability_extGPRSMSC* pvalue);

EXTERN int NASDec_TS24008IE_AccessCapability_extGPRSMSC (OSCTXT* pctxt
   , TS24008IE_AccessCapability_extGPRSMSC* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AccessCapability_extGPRSMSC (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AccessCapability_extGPRSMSC* pvalue);

EXTERN TS24008IE_AccessCapability_extGPRSMSC*
    asn1Test_TS24008IE_AccessCapability_extGPRSMSC (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AccessCapability_dtmGPRSHighMSC                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AccessCapability'
*/
typedef struct EXTERN TS24008IE_AccessCapability_dtmGPRSHighMSC {
   struct {
      unsigned dtmEGPRSHighMultiSlotClassPresent : 1;
   } m;
   OSUINT8 dtmGPRSHighMultiSlotClass;
   OSUINT8 dtmEGPRSHighMultiSlotClass;
} TS24008IE_AccessCapability_dtmGPRSHighMSC;

EXTERN int NASEnc_TS24008IE_AccessCapability_dtmGPRSHighMSC (OSCTXT* pctxt
   , TS24008IE_AccessCapability_dtmGPRSHighMSC* pvalue);

EXTERN int NASDec_TS24008IE_AccessCapability_dtmGPRSHighMSC (OSCTXT* pctxt
   , TS24008IE_AccessCapability_dtmGPRSHighMSC* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AccessCapability_dtmGPRSHighMSC (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AccessCapability_dtmGPRSHighMSC* pvalue);

EXTERN TS24008IE_AccessCapability_dtmGPRSHighMSC*
    asn1Test_TS24008IE_AccessCapability_dtmGPRSHighMSC (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AccessCapability_dtmGPRSHighMSC (
   TS24008IE_AccessCapability_dtmGPRSHighMSC* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessCapability_downlinkDualCarrierCap                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AccessCapability'
*/
typedef struct EXTERN TS24008IE_AccessCapability_downlinkDualCarrierCap {
   OSUINT8 mscReductForDownlinkDualCarrier;
   OSBOOL downlinkDualCarrierForDtmCap;
} TS24008IE_AccessCapability_downlinkDualCarrierCap;

EXTERN int NASEnc_TS24008IE_AccessCapability_downlinkDualCarrierCap (OSCTXT* pctxt
   , TS24008IE_AccessCapability_downlinkDualCarrierCap* pvalue);

EXTERN int NASDec_TS24008IE_AccessCapability_downlinkDualCarrierCap (OSCTXT* pctxt
   , TS24008IE_AccessCapability_downlinkDualCarrierCap* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AccessCapability_downlinkDualCarrierCap (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AccessCapability_downlinkDualCarrierCap* pvalue);

EXTERN TS24008IE_AccessCapability_downlinkDualCarrierCap*
    asn1Test_TS24008IE_AccessCapability_downlinkDualCarrierCap (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  DLMCCapability                                            */
/*                                                            */
/**************************************************************/
/*
DLMCCapability ::= SEQUENCE {
   --<inline/>
   dlmc [0] SEQUENCE {
      nonContigIntraBandRecep [0] DLMCNonContigIntraBandRecep,
      interBandRecep [1] BOOLEAN
   } OPTIONAL,
   maxBandwidth [1] ENUMERATED { bw5MHz(0), bw10MHz(1), bw15MHz(2), bw20MHz(3) },
   maxNumDLTimeSlots [2] INTEGER (0..63),
   maxNumDLCarriers [3] INTEGER (0..7) -- (n + 1) * 2
}
*/
typedef struct EXTERN TS24008IE_DLMCCapability {
   struct {
      unsigned dlmcPresent : 1;
   } m;
   struct  {
      TS24008IE_DLMCNonContigIntraBandRecep nonContigIntraBandRecep;
      OSBOOL interBandRecep;
   } dlmc;
   TS24008IE_DLMCCapability_maxBandwidth maxBandwidth;
   OSUINT8 maxNumDLTimeSlots;
   OSUINT8 maxNumDLCarriers;
} TS24008IE_DLMCCapability;

EXTERN int NASEnc_TS24008IE_DLMCCapability (OSCTXT* pctxt
   , TS24008IE_DLMCCapability* pvalue);

EXTERN int NASDec_TS24008IE_DLMCCapability (OSCTXT* pctxt
   , TS24008IE_DLMCCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DLMCCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DLMCCapability* pvalue);

EXTERN TS24008IE_DLMCCapability*
    asn1Test_TS24008IE_DLMCCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_DLMCCapability (TS24008IE_DLMCCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessCapability                                          */
/*                                                            */
/**************************************************************/
/*
< Access capabilities struct > ::=
< Length : bit (7) > -- length in bits of Content and spare bits
<Access capabilities : <Content>> 
<spare bits>** ; -- expands to the indicated length
	  -- may be used for future enhancements
AccessCapability ::= SEQUENCE {
   --<is3GLength bitFieldSize="7" units="bits"/>
   length [0] INTEGER (0..127),
   -- Content
   rfPowerCap [1] INTEGER (0..7),
   --<inline/>
   a5Bits [2] SEQUENCE {
      a5-1 [0] BOOLEAN,
      a5-2 [1] BOOLEAN,
      a5-3 [2] BOOLEAN,
      a5-4 [3] BOOLEAN,
      a5-5 [4] BOOLEAN,
      a5-6 [5] BOOLEAN,
      a5-7 [6] BOOLEAN
   } OPTIONAL,
   esInd [3] BOOLEAN,
   ps [4] BOOLEAN,
   vgcs [5] BOOLEAN,
   vbs [6] BOOLEAN,
   multislotCap [7] MultislotCapability OPTIONAL,
   powerCap8PSK [8] INTEGER (0..3) OPTIONAL,
   compactIMC [9] BOOLEAN,
   revisionLevelInd [10] BOOLEAN,
   umts-FDD-RATechCap [11] BOOLEAN,
   umts-384-Mcps-TDD-RA-TechCap [12] BOOLEAN,
   cdma-2000-RA-TechCap [13] BOOLEAN,
   ...,
   [[ 4:
      umts-128-Mcps-TDD-RA-TechCap [14] BOOLEAN,
      geranFeaturePackage1 [15] BOOLEAN,
      extGPRSMSC [16] SEQUENCE {
         extDtmGPRSMultiSlotClass [0] INTEGER (0..3),
         extDtmEGPRSMultiSlotClass [1] INTEGER (0..3)
      } OPTIONAL,
      moduleBasedMSCSupp [17] BOOLEAN
   ]],
   [[ 5:
      highMultislotCap [18] INTEGER (0..3) OPTIONAL,
      geranIuModeCap [19] GERANIuModeCap OPTIONAL,
      multislotPowerProfile-GMSK [20] INTEGER (0..3),
      multislotPowerProfile-8PSK [21] INTEGER (0..3)
   ]],
   [[ 6:
      multipleTBFCap [22] BOOLEAN,
      downlinkAdvRecPerf [23] INTEGER (0..3),
      extendedRMCMSCap [24] BOOLEAN,
      dtmEnhancementsCap [25] BOOLEAN,
      dtmGPRSHighMSC [26] SEQUENCE {
         dtmGPRSHighMultiSlotClass [0] INTEGER (0..7),
         dtmEGPRSHighMultiSlotClass [1] INTEGER (0..7) OPTIONAL
      } OPTIONAL,
      psHandoverCap [27] BOOLEAN
   ]],
   [[ 7:
      dtmHandoverCap [28] BOOLEAN,
      downlinkDualCarrierCap [29] SEQUENCE {
         mscReductForDownlinkDualCarrier [0] INTEGER (0..3),
         downlinkDualCarrierForDtmCap [1] BOOLEAN
      } OPTIONAL,
      flexibleTimeslotAssign [30] BOOLEAN,
      gan-PS-HandoverCap [31] BOOLEAN,
      rlcNonPersistentMode [32] BOOLEAN,
      reducedLatencyCap [33] BOOLEAN,
      uplinkEGPRS2 [34] INTEGER (0..3),
      downlinkEGPRS2 [35] INTEGER (0..3)
   ]],
   [[ 8:
      e-UTRA-FDD-Supp [36] BOOLEAN,
      e-UTRA-TDD-Supp [37] BOOLEAN,
      gERANToEUTRATransferMode [38] INTEGER (0..3),
      priBasedReselectionSupp [39] BOOLEAN
   ]],
   [[ 9:
      enhanFlexTimeSlotAssn [40] EnhanFlexTimeSlotAssnStruct OPTIONAL,
      upLayerPDUStartCapRLCUMInd [41] BOOLEAN,
      emstCapability [42] BOOLEAN,
      mttiCapability [43] BOOLEAN,
      utraCSGCellsReporting [44] BOOLEAN,
      e-utraCSGCellsReporting [45] BOOLEAN
   ]],
   [[ 10:
      dtrCapability [46] BOOLEAN,
      emsrCapability [47] BOOLEAN,
      fast-DL-Freq-Sw-Cap [48] BOOLEAN,
      tighterCapability [49] BOOLEAN
   ]],
   [[ 11:
      fanrCapability [50] BOOLEAN,
      ipaCapability [51] BOOLEAN,
      geranNetShareSupp [52] BOOLEAN,
      eUTRA-WB-RSRQ-MeasSupp [53] BOOLEAN
   ]],
   [[ 12:
      uTRA-MultFreqBandIndSupp [54] BOOLEAN,
      e-UTRA-MultFreqBandIndSupp [55] BOOLEAN,
      dlmcCap [56] DLMCCapability OPTIONAL,
      extTSCSetCapSupp [57] BOOLEAN,
      extEARFCNValRange [58] BOOLEAN
   ]],
   [[ 13:
      ec-pchMonSupp [59] ENUMERATED { pchSupported(0), ecPchSupported(1), pchAndEcPchSupported(2), ec-pchMonReserved(3) }
   ]],
   [[ 14:
      msSyncAccuracy [60] INTEGER (0..15) OPTIONAL,
      ecULCoverageEnhanceSupp [61] BOOLEAN
   ]],
   [[ 15:
      mtaAccessSecuritySupp [62] BOOLEAN,
      ecPagingIndChanMonitorSupp [63] BOOLEAN
   ]],
   spareBits [64] BIT STRING 
}
*/
typedef struct EXTERN TS24008IE_AccessCapability {
   struct {
      unsigned a5BitsPresent : 1;
      unsigned multislotCapPresent : 1;
      unsigned powerCap8PSKPresent : 1;
      unsigned _v4ExtPresent : 1;
      unsigned extGPRSMSCPresent : 1;
      unsigned _v5ExtPresent : 1;
      unsigned highMultislotCapPresent : 1;
      unsigned geranIuModeCapPresent : 1;
      unsigned _v6ExtPresent : 1;
      unsigned dtmGPRSHighMSCPresent : 1;
      unsigned _v7ExtPresent : 1;
      unsigned downlinkDualCarrierCapPresent : 1;
      unsigned _v8ExtPresent : 1;
      unsigned _v9ExtPresent : 1;
      unsigned enhanFlexTimeSlotAssnPresent : 1;
      unsigned _v10ExtPresent : 1;
      unsigned _v11ExtPresent : 1;
      unsigned _v12ExtPresent : 1;
      unsigned dlmcCapPresent : 1;
      unsigned _v13ExtPresent : 1;
      unsigned _v14ExtPresent : 1;
      unsigned msSyncAccuracyPresent : 1;
      unsigned _v15ExtPresent : 1;
      unsigned spareBitsPresent : 1;
   } m;
   OSUINT8 length;
   OSUINT8 rfPowerCap;
   struct  {
      OSBOOL a5_1;
      OSBOOL a5_2;
      OSBOOL a5_3;
      OSBOOL a5_4;
      OSBOOL a5_5;
      OSBOOL a5_6;
      OSBOOL a5_7;
   } a5Bits;
   OSBOOL esInd;
   OSBOOL ps;
   OSBOOL vgcs;
   OSBOOL vbs;
   TS24008IE_MultislotCapability multislotCap;
   OSUINT8 powerCap8PSK;
   OSBOOL compactIMC;
   OSBOOL revisionLevelInd;
   OSBOOL umts_FDD_RATechCap;
   OSBOOL umts_384_Mcps_TDD_RA_TechCap;
   OSBOOL cdma_2000_RA_TechCap;
   OSBOOL umts_128_Mcps_TDD_RA_TechCap;
   OSBOOL geranFeaturePackage1;
   TS24008IE_AccessCapability_extGPRSMSC extGPRSMSC;
   OSBOOL moduleBasedMSCSupp;
   OSUINT8 highMultislotCap;
   TS24008IE_GERANIuModeCap geranIuModeCap;
   OSUINT8 multislotPowerProfile_GMSK;
   OSUINT8 multislotPowerProfile_8PSK;
   OSBOOL multipleTBFCap;
   OSUINT8 downlinkAdvRecPerf;
   OSBOOL extendedRMCMSCap;
   OSBOOL dtmEnhancementsCap;
   TS24008IE_AccessCapability_dtmGPRSHighMSC dtmGPRSHighMSC;
   OSBOOL psHandoverCap;
   OSBOOL dtmHandoverCap;
   TS24008IE_AccessCapability_downlinkDualCarrierCap downlinkDualCarrierCap;
   OSBOOL flexibleTimeslotAssign;
   OSBOOL gan_PS_HandoverCap;
   OSBOOL rlcNonPersistentMode;
   OSBOOL reducedLatencyCap;
   OSUINT8 uplinkEGPRS2;
   OSUINT8 downlinkEGPRS2;
   OSBOOL e_UTRA_FDD_Supp;
   OSBOOL e_UTRA_TDD_Supp;
   OSUINT8 gERANToEUTRATransferMode;
   OSBOOL priBasedReselectionSupp;
   TS24008IE_EnhanFlexTimeSlotAssnStruct enhanFlexTimeSlotAssn;
   OSBOOL upLayerPDUStartCapRLCUMInd;
   OSBOOL emstCapability;
   OSBOOL mttiCapability;
   OSBOOL utraCSGCellsReporting;
   OSBOOL e_utraCSGCellsReporting;
   OSBOOL dtrCapability;
   OSBOOL emsrCapability;
   OSBOOL fast_DL_Freq_Sw_Cap;
   OSBOOL tighterCapability;
   OSBOOL fanrCapability;
   OSBOOL ipaCapability;
   OSBOOL geranNetShareSupp;
   OSBOOL eUTRA_WB_RSRQ_MeasSupp;
   OSBOOL uTRA_MultFreqBandIndSupp;
   OSBOOL e_UTRA_MultFreqBandIndSupp;
   TS24008IE_DLMCCapability dlmcCap;
   OSBOOL extTSCSetCapSupp;
   OSBOOL extEARFCNValRange;
   TS24008IE_AccessCapability_ec_pchMonSupp ec_pchMonSupp;
   OSUINT8 msSyncAccuracy;
   OSBOOL ecULCoverageEnhanceSupp;
   OSBOOL mtaAccessSecuritySupp;
   OSBOOL ecPagingIndChanMonitorSupp;
   ASN1DynBitStr spareBits;
} TS24008IE_AccessCapability;

EXTERN int NASEnc_TS24008IE_AccessCapability (OSCTXT* pctxt
   , TS24008IE_AccessCapability* pvalue);

EXTERN int NASDec_TS24008IE_AccessCapability (OSCTXT* pctxt
   , TS24008IE_AccessCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AccessCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AccessCapability* pvalue);

EXTERN TS24008IE_AccessCapability*
    asn1Test_TS24008IE_AccessCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AccessCapability (TS24008IE_AccessCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  MSRACapValuePartStruct                                    */
/*                                                            */
/**************************************************************/
/*
MSRACapValuePartStruct ::= SEQUENCE {
   accessTechType [0] INTEGER (0..15),
   --<inline/>
   accessCapOrTech [1] EXPLICIT CHOICE {
      accessCapability [0] AccessCapability,
      --<selector element="accessTechType" value="15"/>
      additionalAccessTech [1] AdditionalAccessTech
   }
}
*/
typedef struct EXTERN TS24008IE_MSRACapValuePartStruct {
   OSUINT8 accessTechType;
   struct  {
      union {
         /* default case */
         TS24008IE_AccessCapability accessCapability;
         /* selector element = accessTechType, value = 15 */
         TS24008IE_AdditionalAccessTech additionalAccessTech;
      } u;
   } accessCapOrTech;
} TS24008IE_MSRACapValuePartStruct;

EXTERN int NASEnc_TS24008IE_MSRACapValuePartStruct (OSCTXT* pctxt
   , TS24008IE_MSRACapValuePartStruct* pvalue);

EXTERN int NASDec_TS24008IE_MSRACapValuePartStruct (OSCTXT* pctxt
   , TS24008IE_MSRACapValuePartStruct* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MSRACapValuePartStruct (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MSRACapValuePartStruct* pvalue);

EXTERN TS24008IE_MSRACapValuePartStruct*
    asn1Test_TS24008IE_MSRACapValuePartStruct (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MSRACapValuePartStruct (
   TS24008IE_MSRACapValuePartStruct* pvalue);

/**************************************************************/
/*                                                            */
/*  MSRadioAccessCapability                                   */
/*                                                            */
/**************************************************************/
/*
<aligned/>
MSRadioAccessCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..50),
   firstRec [1] MSRACapValuePartStruct,
   --<inline/>
   --<is3GExtList post-eol="0"/>
   additionalRecs [2] SEQUENCE OF MSRACapValuePartStruct
}
*/
typedef struct EXTERN TS24008IE_MSRadioAccessCapability {
   OSUINT8 length;
   TS24008IE_MSRACapValuePartStruct firstRec;
   struct  {
      OSSIZE n;
      TS24008IE_MSRACapValuePartStruct *elem;
   } additionalRecs;
} TS24008IE_MSRadioAccessCapability;

EXTERN int NASEnc_TS24008IE_MSRadioAccessCapability (OSCTXT* pctxt
   , TS24008IE_MSRadioAccessCapability* pvalue);

EXTERN int NASDec_TS24008IE_MSRadioAccessCapability (OSCTXT* pctxt
   , TS24008IE_MSRadioAccessCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MSRadioAccessCapability (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MSRadioAccessCapability* pvalue);

EXTERN TS24008IE_MSRadioAccessCapability*
    asn1Test_TS24008IE_MSRadioAccessCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_MSRadioAccessCapability (
   TS24008IE_MSRadioAccessCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  RoutingAreaIdent2                                         */
/*                                                            */
/**************************************************************/
/*
 10.5.5.15a Routing area identification 2
RoutingAreaIdent2 ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (6),
   value [1] RoutingAreaIdent
}
*/
typedef struct EXTERN TS24008IE_RoutingAreaIdent2 {
   OSUINT8 length;
   TS24008IE_RoutingAreaIdent value;
} TS24008IE_RoutingAreaIdent2;

EXTERN int NASEnc_TS24008IE_RoutingAreaIdent2 (OSCTXT* pctxt
   , TS24008IE_RoutingAreaIdent2* pvalue);

EXTERN int NASDec_TS24008IE_RoutingAreaIdent2 (OSCTXT* pctxt
   , TS24008IE_RoutingAreaIdent2* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RoutingAreaIdent2 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RoutingAreaIdent2* pvalue);

EXTERN TS24008IE_RoutingAreaIdent2*
    asn1Test_TS24008IE_RoutingAreaIdent2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_RoutingAreaIdent2 (TS24008IE_RoutingAreaIdent2* pvalue);

/**************************************************************/
/*                                                            */
/*  UpdateResult                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.5.17 - Update result 
UpdateResult ::= SEQUENCE {
   fop [0] BOOLEAN,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_UpdateResult {
   OSBOOL fop;
   OSUINT8 value;
} TS24008IE_UpdateResult;

EXTERN int NASEnc_TS24008IE_UpdateResult (OSCTXT* pctxt
   , TS24008IE_UpdateResult* pvalue);

EXTERN int NASDec_TS24008IE_UpdateResult (OSCTXT* pctxt
   , TS24008IE_UpdateResult* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_UpdateResult (OSCTXT *pctxt, 
   const char* name, const TS24008IE_UpdateResult* pvalue);

EXTERN TS24008IE_UpdateResult* asn1Test_TS24008IE_UpdateResult (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  UpdateType                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.5.18 - Update type 
UpdateType ::= SEQUENCE {
   for [0] BOOLEAN,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_UpdateType {
   OSBOOL for_;
   OSUINT8 value;
} TS24008IE_UpdateType;

EXTERN int NASEnc_TS24008IE_UpdateType (OSCTXT* pctxt
   , TS24008IE_UpdateType* pvalue);

EXTERN int NASDec_TS24008IE_UpdateType (OSCTXT* pctxt
   , TS24008IE_UpdateType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_UpdateType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_UpdateType* pvalue);

EXTERN TS24008IE_UpdateType* asn1Test_TS24008IE_UpdateType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ServiceType                                               */
/*                                                            */
/**************************************************************/
/*
 10.5.5.20 - Service type 
ServiceType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_ServiceType {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_ServiceType;

EXTERN int NASEnc_TS24008IE_ServiceType (OSCTXT* pctxt
   , TS24008IE_ServiceType* pvalue);

EXTERN int NASDec_TS24008IE_ServiceType (OSCTXT* pctxt
   , TS24008IE_ServiceType* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ServiceType (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ServiceType* pvalue);

EXTERN TS24008IE_ServiceType* asn1Test_TS24008IE_ServiceType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ServiceType (TS24008IE_ServiceType* pvalue);

/**************************************************************/
/*                                                            */
/*  PS_LCSCapbility                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.5.21 - Cell Notification: IEI only 
 10.5.5.22 - PS LCS Capability 
PS-LCSCapbility ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2),
   mta-E [1] BOOLEAN,
   mta-R [2] BOOLEAN,
   apc [3] BOOLEAN,
   otd-A [4] BOOLEAN,
   otd-B [5] BOOLEAN,
   gps-A [6] BOOLEAN,
   gps-B [7] BOOLEAN,
   gps-C [8] BOOLEAN,
   spare [9] INTEGER (0..63) DEFAULT 0,
   motd [10] BOOLEAN,
   mta-A [11] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_PS_LCSCapbility {
   OSUINT8 length;
   OSBOOL mta_E;
   OSBOOL mta_R;
   OSBOOL apc;
   OSBOOL otd_A;
   OSBOOL otd_B;
   OSBOOL gps_A;
   OSBOOL gps_B;
   OSBOOL gps_C;
   OSUINT8 spare;
   OSBOOL motd;
   OSBOOL mta_A;
} TS24008IE_PS_LCSCapbility;

EXTERN int NASEnc_TS24008IE_PS_LCSCapbility (OSCTXT* pctxt
   , TS24008IE_PS_LCSCapbility* pvalue);

EXTERN int NASDec_TS24008IE_PS_LCSCapbility (OSCTXT* pctxt
   , TS24008IE_PS_LCSCapbility* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PS_LCSCapbility (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PS_LCSCapbility* pvalue);

EXTERN TS24008IE_PS_LCSCapbility*
    asn1Test_TS24008IE_PS_LCSCapbility (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PS_LCSCapbility (TS24008IE_PS_LCSCapbility* pvalue);

/**************************************************************/
/*                                                            */
/*  NetFeatureSupp                                            */
/*                                                            */
/**************************************************************/
/*
 10.5.5.23 - Network feature support 
NetFeatureSupp ::= SEQUENCE {
   lcs-molr [0] BOOLEAN,
   mbms [1] BOOLEAN,
   imsVoPS [2] BOOLEAN,
   emcBS [3] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_NetFeatureSupp {
   OSBOOL lcs_molr;
   OSBOOL mbms;
   OSBOOL imsVoPS;
   OSBOOL emcBS;
} TS24008IE_NetFeatureSupp;

EXTERN int NASEnc_TS24008IE_NetFeatureSupp (OSCTXT* pctxt
   , TS24008IE_NetFeatureSupp* pvalue);

EXTERN int NASDec_TS24008IE_NetFeatureSupp (OSCTXT* pctxt
   , TS24008IE_NetFeatureSupp* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NetFeatureSupp (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NetFeatureSupp* pvalue);

EXTERN TS24008IE_NetFeatureSupp*
    asn1Test_TS24008IE_NetFeatureSupp (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AddnNetFeatureSupport                                     */
/*                                                            */
/**************************************************************/
/*
 10.5.5.23A - Additional network feature support 
AddnNetFeatureSupport ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] INTEGER (0..31) DEFAULT 0,
   epco [2] BOOLEAN, -- added in/before v15.3
   restrictEC [3] BOOLEAN, -- added in/before v15.3
   gprs-sms [4] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_AddnNetFeatureSupport {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL epco;
   OSBOOL restrictEC;
   OSBOOL gprs_sms;
} TS24008IE_AddnNetFeatureSupport;

EXTERN int NASEnc_TS24008IE_AddnNetFeatureSupport (OSCTXT* pctxt
   , TS24008IE_AddnNetFeatureSupport* pvalue);

EXTERN int NASDec_TS24008IE_AddnNetFeatureSupport (OSCTXT* pctxt
   , TS24008IE_AddnNetFeatureSupport* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_AddnNetFeatureSupport (OSCTXT *pctxt, 
   const char* name, const TS24008IE_AddnNetFeatureSupport* pvalue);

EXTERN TS24008IE_AddnNetFeatureSupport*
    asn1Test_TS24008IE_AddnNetFeatureSupport (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_AddnNetFeatureSupport (
   TS24008IE_AddnNetFeatureSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestedMSInfo                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.5.25 - Requested MS information 
RequestedMSInfo ::= SEQUENCE {
   i-RAT [0] BOOLEAN,
   i-RAT2 [1] BOOLEAN,
   spare [2] INTEGER (0..3) DEFAULT 0
}
*/
typedef struct EXTERN TS24008IE_RequestedMSInfo {
   OSBOOL i_RAT;
   OSBOOL i_RAT2;
   OSUINT8 spare;
} TS24008IE_RequestedMSInfo;

EXTERN int NASEnc_TS24008IE_RequestedMSInfo (OSCTXT* pctxt
   , TS24008IE_RequestedMSInfo* pvalue);

EXTERN int NASDec_TS24008IE_RequestedMSInfo (OSCTXT* pctxt
   , TS24008IE_RequestedMSInfo* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RequestedMSInfo (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RequestedMSInfo* pvalue);

EXTERN TS24008IE_RequestedMSInfo*
    asn1Test_TS24008IE_RequestedMSInfo (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_RequestedMSInfo (TS24008IE_RequestedMSInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  VoiceDomainPref                                           */
/*                                                            */
/**************************************************************/
/*
 10.5.5.28 - Voice domain preference and UE's usage setting 
VoiceDomainPref ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] INTEGER (0..31) DEFAULT 0,
   usUsageSetting [2] BOOLEAN, -- TRUE = voice, FALSE = data
   enumValue [3] ENUMERATED { csVoiceOnly(0), imsPsVoiceOnly(1), csVoicePref(2), imsPsVoicePref(3) }
}
*/
typedef struct EXTERN TS24008IE_VoiceDomainPref {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL usUsageSetting;
   TS24008IE_VoiceDomainPref_enumValue enumValue;
} TS24008IE_VoiceDomainPref;

EXTERN int NASEnc_TS24008IE_VoiceDomainPref (OSCTXT* pctxt
   , TS24008IE_VoiceDomainPref* pvalue);

EXTERN int NASDec_TS24008IE_VoiceDomainPref (OSCTXT* pctxt
   , TS24008IE_VoiceDomainPref* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_VoiceDomainPref (OSCTXT *pctxt, 
   const char* name, const TS24008IE_VoiceDomainPref* pvalue);

EXTERN TS24008IE_VoiceDomainPref*
    asn1Test_TS24008IE_VoiceDomainPref (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_VoiceDomainPref (TS24008IE_VoiceDomainPref* pvalue);

/**************************************************************/
/*                                                            */
/*  P_TMSI_Type                                               */
/*                                                            */
/**************************************************************/
/*
 10.5.5.29 - P-TMSI type 
P-TMSI-Type ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   p-tmsi-type [1] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_P_TMSI_Type {
   OSUINT8 spare;
   OSBOOL p_tmsi_type;
} TS24008IE_P_TMSI_Type;

EXTERN int NASEnc_TS24008IE_P_TMSI_Type (OSCTXT* pctxt
   , TS24008IE_P_TMSI_Type* pvalue);

EXTERN int NASDec_TS24008IE_P_TMSI_Type (OSCTXT* pctxt
   , TS24008IE_P_TMSI_Type* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_P_TMSI_Type (OSCTXT *pctxt, 
   const char* name, const TS24008IE_P_TMSI_Type* pvalue);

EXTERN TS24008IE_P_TMSI_Type* asn1Test_TS24008IE_P_TMSI_Type (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_P_TMSI_Type (TS24008IE_P_TMSI_Type* pvalue);

/**************************************************************/
/*                                                            */
/*  LocAreaIdent2                                             */
/*                                                            */
/**************************************************************/
/*
 10.5.5.30 - Location Area Identification 2 
LocAreaIdent2 ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (5),
   value [1] LocAreaIdent
}
*/
typedef struct EXTERN TS24008IE_LocAreaIdent2 {
   OSUINT8 length;
   TS24008IE_LocAreaIdent value;
} TS24008IE_LocAreaIdent2;

EXTERN int NASEnc_TS24008IE_LocAreaIdent2 (OSCTXT* pctxt
   , TS24008IE_LocAreaIdent2* pvalue);

EXTERN int NASDec_TS24008IE_LocAreaIdent2 (OSCTXT* pctxt
   , TS24008IE_LocAreaIdent2* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LocAreaIdent2 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LocAreaIdent2* pvalue);

EXTERN TS24008IE_LocAreaIdent2*
    asn1Test_TS24008IE_LocAreaIdent2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_LocAreaIdent2 (TS24008IE_LocAreaIdent2* pvalue);

/**************************************************************/
/*                                                            */
/*  NetResourceIdentContainer                                 */
/*                                                            */
/**************************************************************/
/*
 10.5.5.31 - Network Resource Indentifier Container 
NetResourceIdentContainer ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2),
   nriContValue [1] INTEGER (0..1023),
   spare [2] INTEGER (0..63) DEFAULT 0
}
*/
typedef struct EXTERN TS24008IE_NetResourceIdentContainer {
   OSUINT8 length;
   OSUINT16 nriContValue;
   OSUINT8 spare;
} TS24008IE_NetResourceIdentContainer;

EXTERN int NASEnc_TS24008IE_NetResourceIdentContainer (OSCTXT* pctxt
   , TS24008IE_NetResourceIdentContainer* pvalue);

EXTERN int NASDec_TS24008IE_NetResourceIdentContainer (OSCTXT* pctxt
   , TS24008IE_NetResourceIdentContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NetResourceIdentContainer (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NetResourceIdentContainer* pvalue);

EXTERN TS24008IE_NetResourceIdentContainer*
    asn1Test_TS24008IE_NetResourceIdentContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_NetResourceIdentContainer (
   TS24008IE_NetResourceIdentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtDRXParams                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.5.32 - Extended DRX parameters 
ExtDRXParams ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   pagingTimeWindow [1] INTEGER (0..16),
   eDRXValue [2] INTEGER (0..16)
}
*/
typedef struct EXTERN TS24008IE_ExtDRXParams {
   OSUINT8 length;
   OSUINT8 pagingTimeWindow;
   OSUINT8 eDRXValue;
} TS24008IE_ExtDRXParams;

EXTERN int NASEnc_TS24008IE_ExtDRXParams (OSCTXT* pctxt
   , TS24008IE_ExtDRXParams* pvalue);

EXTERN int NASDec_TS24008IE_ExtDRXParams (OSCTXT* pctxt
   , TS24008IE_ExtDRXParams* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ExtDRXParams (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ExtDRXParams* pvalue);

EXTERN TS24008IE_ExtDRXParams* asn1Test_TS24008IE_ExtDRXParams (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  UserPlaneIntegInd                                         */
/*                                                            */
/**************************************************************/
/*
 10.5.5.34 - User plane integrity indicator 
UserPlaneIntegInd ::= SEQUENCE {
   spare4 [0] BOOLEAN DEFAULT FALSE,
   spare3 [1] BOOLEAN DEFAULT FALSE,
   spare2 [2] BOOLEAN DEFAULT FALSE,
   integInd [3] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_UserPlaneIntegInd {
   OSBOOL spare4;
   OSBOOL spare3;
   OSBOOL spare2;
   OSBOOL integInd;
} TS24008IE_UserPlaneIntegInd;

EXTERN int NASEnc_TS24008IE_UserPlaneIntegInd (OSCTXT* pctxt
   , TS24008IE_UserPlaneIntegInd* pvalue);

EXTERN int NASDec_TS24008IE_UserPlaneIntegInd (OSCTXT* pctxt
   , TS24008IE_UserPlaneIntegInd* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_UserPlaneIntegInd (OSCTXT *pctxt, 
   const char* name, const TS24008IE_UserPlaneIntegInd* pvalue);

EXTERN TS24008IE_UserPlaneIntegInd*
    asn1Test_TS24008IE_UserPlaneIntegInd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_UserPlaneIntegInd (TS24008IE_UserPlaneIntegInd* pvalue);

/**************************************************************/
/*                                                            */
/*  PlmnCnID                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.5.36 - PLMN identity of the CN operator 
PlmnCnID ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair
}
*/
typedef struct EXTERN TS24008IE_PlmnCnID {
   TS24008IE_MCCMNCPair mcc_mnc;
} TS24008IE_PlmnCnID;

EXTERN int NASEnc_TS24008IE_PlmnCnID (OSCTXT* pctxt, TS24008IE_PlmnCnID* pvalue
   );

EXTERN int NASDec_TS24008IE_PlmnCnID (OSCTXT* pctxt, TS24008IE_PlmnCnID* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_PlmnCnID (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PlmnCnID* pvalue);

EXTERN TS24008IE_PlmnCnID* asn1Test_TS24008IE_PlmnCnID (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PlmnCnID (TS24008IE_PlmnCnID* pvalue);

/**************************************************************/
/*                                                            */
/*  Non3GPPNetPolicies                                        */
/*                                                            */
/**************************************************************/
/*
 10.5.5.37 - Non-3GPP NW provided policies 
Non3GPPNetPolicies ::= SEQUENCE {
   spare4 [0] BOOLEAN DEFAULT FALSE,
   spare3 [1] BOOLEAN DEFAULT FALSE,
   spare2 [2] BOOLEAN DEFAULT FALSE,
   emergencyNum [3] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_Non3GPPNetPolicies {
   OSBOOL spare4;
   OSBOOL spare3;
   OSBOOL spare2;
   OSBOOL emergencyNum;
} TS24008IE_Non3GPPNetPolicies;

EXTERN int NASEnc_TS24008IE_Non3GPPNetPolicies (OSCTXT* pctxt
   , TS24008IE_Non3GPPNetPolicies* pvalue);

EXTERN int NASDec_TS24008IE_Non3GPPNetPolicies (OSCTXT* pctxt
   , TS24008IE_Non3GPPNetPolicies* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_Non3GPPNetPolicies (OSCTXT *pctxt, 
   const char* name, const TS24008IE_Non3GPPNetPolicies* pvalue);

EXTERN TS24008IE_Non3GPPNetPolicies*
    asn1Test_TS24008IE_Non3GPPNetPolicies (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_Non3GPPNetPolicies (
   TS24008IE_Non3GPPNetPolicies* pvalue);

/**************************************************************/
/*                                                            */
/*  NSAPIValue                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.6.2 - Network service access point identifier 
NSAPIValue ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   value [1] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_NSAPIValue {
   OSUINT8 spare;
   OSUINT8 value;
} TS24008IE_NSAPIValue;

EXTERN int NASEnc_TS24008IE_NSAPIValue (OSCTXT* pctxt
   , TS24008IE_NSAPIValue* pvalue);

EXTERN int NASDec_TS24008IE_NSAPIValue (OSCTXT* pctxt
   , TS24008IE_NSAPIValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_NSAPIValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_NSAPIValue* pvalue);

EXTERN TS24008IE_NSAPIValue* asn1Test_TS24008IE_NSAPIValue (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_NSAPIValue (TS24008IE_NSAPIValue* pvalue);

/**************************************************************/
/*                                                            */
/*  PCOUnit                                                   */
/*                                                            */
/**************************************************************/
/*
 10.5.6.3 - Protocol configuration options 
 PCOUnit is used to describe both Protocol and Container fields 
PCOUnit ::= SEQUENCE {
   protocolID [0] INTEGER (0..65535),
   contents [1] OCTET STRING
}
*/
typedef struct EXTERN TS24008IE_PCOUnit {
   OSUINT16 protocolID;
   OSDynOctStr contents;
} TS24008IE_PCOUnit;

EXTERN int NASEnc_TS24008IE_PCOUnit (OSCTXT* pctxt, TS24008IE_PCOUnit* pvalue);

EXTERN int NASDec_TS24008IE_PCOUnit (OSCTXT* pctxt, TS24008IE_PCOUnit* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PCOUnit (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PCOUnit* pvalue);

EXTERN TS24008IE_PCOUnit* asn1Test_TS24008IE_PCOUnit (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PCOUnit (TS24008IE_PCOUnit* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtocolConfigOptions_octet3                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProtocolConfigOptions'
*/
typedef struct EXTERN TS24008IE_ProtocolConfigOptions_octet3 {
   OSUINT8 spare;
   OSUINT8 configProtocol;
} TS24008IE_ProtocolConfigOptions_octet3;

EXTERN int NASEnc_TS24008IE_ProtocolConfigOptions_octet3 (OSCTXT* pctxt
   , TS24008IE_ProtocolConfigOptions_octet3* pvalue);

EXTERN int NASDec_TS24008IE_ProtocolConfigOptions_octet3 (OSCTXT* pctxt
   , TS24008IE_ProtocolConfigOptions_octet3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ProtocolConfigOptions_octet3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ProtocolConfigOptions_octet3* pvalue);

EXTERN TS24008IE_ProtocolConfigOptions_octet3*
    asn1Test_TS24008IE_ProtocolConfigOptions_octet3 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ProtocolConfigOptions_octet3 (
   TS24008IE_ProtocolConfigOptions_octet3* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtocolConfigOptions                                     */
/*                                                            */
/**************************************************************/
/*
   The contents member of struct below may contain one or more
 PCOUnit structures.  These are used to represent both Protocol ID 
 and Container ID structures.
ProtocolConfigOptions ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..253),
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet3 [1] SEQUENCE {
      spare [0] INTEGER (0..15) DEFAULT 0,
      configProtocol [1] INTEGER (0..7)
   },
   --<is3GVarLenList lengthElem="length"/>
   pcoUnits [2] SEQUENCE OF PCOUnit
}
*/
typedef struct EXTERN TS24008IE_ProtocolConfigOptions {
   OSUINT8 length;
   TS24008IE_ProtocolConfigOptions_octet3 octet3;
   struct  {
      OSSIZE n;
      TS24008IE_PCOUnit *elem;
   } pcoUnits;
} TS24008IE_ProtocolConfigOptions;

EXTERN int NASEnc_TS24008IE_ProtocolConfigOptions (OSCTXT* pctxt
   , TS24008IE_ProtocolConfigOptions* pvalue);

EXTERN int NASDec_TS24008IE_ProtocolConfigOptions (OSCTXT* pctxt
   , TS24008IE_ProtocolConfigOptions* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ProtocolConfigOptions (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ProtocolConfigOptions* pvalue);

EXTERN TS24008IE_ProtocolConfigOptions*
    asn1Test_TS24008IE_ProtocolConfigOptions (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ProtocolConfigOptions (
   TS24008IE_ProtocolConfigOptions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtProtoConfigOptions_octet4                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExtProtoConfigOptions'
*/
typedef struct EXTERN TS24008IE_ExtProtoConfigOptions_octet4 {
   OSUINT8 spare;
   OSUINT8 configProtocol;
} TS24008IE_ExtProtoConfigOptions_octet4;

EXTERN int NASEnc_TS24008IE_ExtProtoConfigOptions_octet4 (OSCTXT* pctxt
   , TS24008IE_ExtProtoConfigOptions_octet4* pvalue);

EXTERN int NASDec_TS24008IE_ExtProtoConfigOptions_octet4 (OSCTXT* pctxt
   , TS24008IE_ExtProtoConfigOptions_octet4* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ExtProtoConfigOptions_octet4 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ExtProtoConfigOptions_octet4* pvalue);

EXTERN TS24008IE_ExtProtoConfigOptions_octet4*
    asn1Test_TS24008IE_ExtProtoConfigOptions_octet4 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ExtProtoConfigOptions_octet4 (
   TS24008IE_ExtProtoConfigOptions_octet4* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtProtoConfigOptions                                     */
/*                                                            */
/**************************************************************/
/*
ExtProtoConfigOptions ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65532),
   --<first3GExtElem/>
   --<last3GExtElem/>
   octet4 [1] SEQUENCE {
      spare [0] INTEGER (0..15) DEFAULT 0,
      configProtocol [1] INTEGER (0..7)
   },
   --<is3GVarLenList lengthElem="length"/>
   pcoUnits [2] SEQUENCE OF PCOUnit
}
*/
typedef struct EXTERN TS24008IE_ExtProtoConfigOptions {
   OSUINT16 length;
   TS24008IE_ExtProtoConfigOptions_octet4 octet4;
   struct  {
      OSSIZE n;
      TS24008IE_PCOUnit *elem;
   } pcoUnits;
} TS24008IE_ExtProtoConfigOptions;

EXTERN int NASEnc_TS24008IE_ExtProtoConfigOptions (OSCTXT* pctxt
   , TS24008IE_ExtProtoConfigOptions* pvalue);

EXTERN int NASDec_TS24008IE_ExtProtoConfigOptions (OSCTXT* pctxt
   , TS24008IE_ExtProtoConfigOptions* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ExtProtoConfigOptions (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ExtProtoConfigOptions* pvalue);

EXTERN TS24008IE_ExtProtoConfigOptions*
    asn1Test_TS24008IE_ExtProtoConfigOptions (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_ExtProtoConfigOptions (
   TS24008IE_ExtProtoConfigOptions* pvalue);

/**************************************************************/
/*                                                            */
/*  PacketDataProtoAddr                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.6.4 - Packet data protocol address 
   PDP type organization field
 All other values are reserved.
   PDP type number field
 All other values are reserved.
PacketDataProtoAddr ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2..22),
   spare [1] INTEGER (0..15) DEFAULT 0, -- should be set to 0
   pdpTypeOrg [2] INTEGER (0..15), -- PDP type organization 
   pdpTypeNum [3] INTEGER (0..255), -- PDP type number 
   --<inline/>
   --<length fixed-size="0"/>
   addressInfo [4] OCTET STRING (SIZE (0..20)) -- Address information 
}
*/
typedef struct EXTERN TS24008IE_PacketDataProtoAddr {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 pdpTypeOrg;
   OSUINT8 pdpTypeNum;
   struct {
      OSUINT8 numocts;
      OSOCTET data[20];
   } addressInfo;
} TS24008IE_PacketDataProtoAddr;

EXTERN int NASEnc_TS24008IE_PacketDataProtoAddr (OSCTXT* pctxt
   , TS24008IE_PacketDataProtoAddr* pvalue);

EXTERN int NASDec_TS24008IE_PacketDataProtoAddr (OSCTXT* pctxt
   , TS24008IE_PacketDataProtoAddr* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PacketDataProtoAddr (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PacketDataProtoAddr* pvalue);

EXTERN TS24008IE_PacketDataProtoAddr*
    asn1Test_TS24008IE_PacketDataProtoAddr (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PacketDataProtoAddr (
   TS24008IE_PacketDataProtoAddr* pvalue);

/**************************************************************/
/*                                                            */
/*  QualityOfService                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.6.5 - Quality of service 
QualityOfService ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (4..255),
   spare1 [1] INTEGER (0..3) DEFAULT 0,
   delayClass [2] INTEGER (0..7),
   reliabilityClass [3] INTEGER (0..7),
   peakThroughput [4] INTEGER (0..15),
   spare2 [5] INTEGER (0..1) DEFAULT 0,
   precedenceClass [6] INTEGER (0..7),
   spare3 [7] INTEGER (0..7) DEFAULT 0,
   meanThroughput [8] INTEGER (0..31),
   trafficClass [9] INTEGER (0..7),
   deliveryOrder [10] INTEGER (0..3),
   deliveryErroneousSDU [11] INTEGER (0..7),
   maxSDUSize [12] INTEGER (0..255),
   maxUplinkBR [13] INTEGER (0..255), -- BR = Bit rate 
   maxDownlinkBR [14] INTEGER (0..255),
   residualBER [15] INTEGER (0..15), -- BER = Bit error rate 
   sduErrorRatio [16] INTEGER (0..15),
   transferDelay [17] INTEGER (0..63),
   trafficHandlingPrio [18] INTEGER (0..3),
   guaranteedUplinkBR [19] INTEGER (0..255),
   guaranteedDownlinkBR [20] INTEGER (0..255),
   spare4 [21] INTEGER (0..7) DEFAULT 0,
   signallingIndication [22] BOOLEAN,
   sourceStatsDescriptor [23] INTEGER (0..15),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   extBitRate [24] SEQUENCE (SIZE (0..8)) OF INTEGER (0..255)
   -- Extension bit rate values, up to 8 can be specified as follows:
   --   0 : max downlink bitrate
   --   1 : guaranteed downlink bitrate
   --   2 : max uplink bitrate
   --   3 : guaranteed uplink bitrate
   --   4 : max downlink bitrate (extension 2)
   --   5 : guaranteed downlink bitrate (extension 2)
   --   6 : max uplink bitrate (extension 2)
   --   7 : guaranteed uplink bitrate (extension 2)
}
*/
typedef struct EXTERN TS24008IE_QualityOfService {
   OSUINT8 length;
   OSUINT8 spare1;
   OSUINT8 delayClass;
   OSUINT8 reliabilityClass;
   OSUINT8 peakThroughput;
   OSUINT8 spare2;
   OSUINT8 precedenceClass;
   OSUINT8 spare3;
   OSUINT8 meanThroughput;
   OSUINT8 trafficClass;
   OSUINT8 deliveryOrder;
   OSUINT8 deliveryErroneousSDU;
   OSUINT8 maxSDUSize;
   OSUINT8 maxUplinkBR;
   OSUINT8 maxDownlinkBR;
   OSUINT8 residualBER;
   OSUINT8 sduErrorRatio;
   OSUINT8 transferDelay;
   OSUINT8 trafficHandlingPrio;
   OSUINT8 guaranteedUplinkBR;
   OSUINT8 guaranteedDownlinkBR;
   OSUINT8 spare4;
   OSBOOL signallingIndication;
   OSUINT8 sourceStatsDescriptor;
   struct  {
      OSUINT8 n;
      OSUINT8 elem[8];
   } extBitRate;
} TS24008IE_QualityOfService;

EXTERN int NASEnc_TS24008IE_QualityOfService (OSCTXT* pctxt
   , TS24008IE_QualityOfService* pvalue);

EXTERN int NASDec_TS24008IE_QualityOfService (OSCTXT* pctxt
   , TS24008IE_QualityOfService* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_QualityOfService (OSCTXT *pctxt, 
   const char* name, const TS24008IE_QualityOfService* pvalue);

EXTERN TS24008IE_QualityOfService*
    asn1Test_TS24008IE_QualityOfService (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_QualityOfService (TS24008IE_QualityOfService* pvalue);

/**************************************************************/
/*                                                            */
/*  ReattemptInd                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.6.5A - Re-attempt indicator 
ReattemptInd ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare8 [1] BOOLEAN,
   spare7 [2] BOOLEAN,
   spare6 [3] BOOLEAN,
   spare5 [4] BOOLEAN,
   spare4 [5] BOOLEAN,
   spare3 [6] BOOLEAN,
   eplmNCValue [7] BOOLEAN,
   ratcValue [8] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_ReattemptInd {
   OSUINT8 length;
   OSBOOL spare8;
   OSBOOL spare7;
   OSBOOL spare6;
   OSBOOL spare5;
   OSBOOL spare4;
   OSBOOL spare3;
   OSBOOL eplmNCValue;
   OSBOOL ratcValue;
} TS24008IE_ReattemptInd;

EXTERN int NASEnc_TS24008IE_ReattemptInd (OSCTXT* pctxt
   , TS24008IE_ReattemptInd* pvalue);

EXTERN int NASDec_TS24008IE_ReattemptInd (OSCTXT* pctxt
   , TS24008IE_ReattemptInd* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ReattemptInd (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ReattemptInd* pvalue);

EXTERN TS24008IE_ReattemptInd* asn1Test_TS24008IE_ReattemptInd (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  ExtQualityOfService                                       */
/*                                                            */
/**************************************************************/
/*
 10.5.6.5B - Extended quality of service 
ExtQualityOfService ::= SEQUENCE {
   maxBRUnit [0] INTEGER (0..255), -- BR = Bit rate 
   maxUplinkBR [1] INTEGER (0..65535),
   maxDownlinkBR [2] INTEGER (0..65535),
   guaranteedBRUnit [3] INTEGER (0..255),
   guaranteedUplinkBR [4] INTEGER (0..65535),
   guaranteedDownlinkBR [5] INTEGER (0..65535)
}
*/
typedef struct EXTERN TS24008IE_ExtQualityOfService {
   OSUINT8 maxBRUnit;
   OSUINT16 maxUplinkBR;
   OSUINT16 maxDownlinkBR;
   OSUINT8 guaranteedBRUnit;
   OSUINT16 guaranteedUplinkBR;
   OSUINT16 guaranteedDownlinkBR;
} TS24008IE_ExtQualityOfService;

EXTERN int NASEnc_TS24008IE_ExtQualityOfService (OSCTXT* pctxt
   , TS24008IE_ExtQualityOfService* pvalue);

EXTERN int NASDec_TS24008IE_ExtQualityOfService (OSCTXT* pctxt
   , TS24008IE_ExtQualityOfService* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_ExtQualityOfService (OSCTXT *pctxt, 
   const char* name, const TS24008IE_ExtQualityOfService* pvalue);

EXTERN TS24008IE_ExtQualityOfService*
    asn1Test_TS24008IE_ExtQualityOfService (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LinkedTI                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.6.7 - Linked TI 
<cDecFuncFname>TS24008IESDec_LinkedTI.c</cDecFuncFname>
<cEncFuncFname>TS24008IESEnc_LinkedTI.c</cEncFuncFname>
LinkedTI ::= SEQUENCE {
   flag [0] BOOLEAN,
   value [1] INTEGER (0..7),
   spare [2] INTEGER (0..15) DEFAULT 0
}
*/
typedef struct EXTERN TS24008IE_LinkedTI {
   OSBOOL flag;
   OSUINT8 value;
   OSUINT8 spare;
} TS24008IE_LinkedTI;

EXTERN int NASEnc_TS24008IE_LinkedTI (OSCTXT* pctxt, TS24008IE_LinkedTI* pvalue
   );

EXTERN int NASDec_TS24008IE_LinkedTI (OSCTXT* pctxt, TS24008IE_LinkedTI* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_LinkedTI (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LinkedTI* pvalue);

EXTERN TS24008IE_LinkedTI* asn1Test_TS24008IE_LinkedTI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_LinkedTI (TS24008IE_LinkedTI* pvalue);

/**************************************************************/
/*                                                            */
/*  LLCSAPIValue                                              */
/*                                                            */
/**************************************************************/
/*
 10.5.6.9 - LLC service access point identifier 
LLCSAPIValue ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   value [1] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_LLCSAPIValue {
   OSUINT8 spare;
   OSUINT8 value;
} TS24008IE_LLCSAPIValue;

EXTERN int NASEnc_TS24008IE_LLCSAPIValue (OSCTXT* pctxt
   , TS24008IE_LLCSAPIValue* pvalue);

EXTERN int NASDec_TS24008IE_LLCSAPIValue (OSCTXT* pctxt
   , TS24008IE_LLCSAPIValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_LLCSAPIValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_LLCSAPIValue* pvalue);

EXTERN TS24008IE_LLCSAPIValue* asn1Test_TS24008IE_LLCSAPIValue (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24008IE_LLCSAPIValue (TS24008IE_LLCSAPIValue* pvalue);

/**************************************************************/
/*                                                            */
/*  TDIValue                                                  */
/*                                                            */
/**************************************************************/
/*
 10.5.6.10 - Tear down indicator 
TDIValue ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   tdiFlag [1] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_TDIValue {
   OSUINT8 spare;
   OSBOOL tdiFlag;
} TS24008IE_TDIValue;

EXTERN int NASEnc_TS24008IE_TDIValue (OSCTXT* pctxt, TS24008IE_TDIValue* pvalue
   );

EXTERN int NASDec_TS24008IE_TDIValue (OSCTXT* pctxt, TS24008IE_TDIValue* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_TDIValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TDIValue* pvalue);

EXTERN TS24008IE_TDIValue* asn1Test_TS24008IE_TDIValue (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_TDIValue (TS24008IE_TDIValue* pvalue);

/**************************************************************/
/*                                                            */
/*  PacketFlowIdentValue                                      */
/*                                                            */
/**************************************************************/
/*
 10.5.6.11 - Packet Flow Identifier 
PacketFlowIdentValue ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] BOOLEAN DEFAULT FALSE,
   value [2] INTEGER (0..127)
}
*/
typedef struct EXTERN TS24008IE_PacketFlowIdentValue {
   OSUINT8 length;
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_PacketFlowIdentValue;

EXTERN int NASEnc_TS24008IE_PacketFlowIdentValue (OSCTXT* pctxt
   , TS24008IE_PacketFlowIdentValue* pvalue);

EXTERN int NASDec_TS24008IE_PacketFlowIdentValue (OSCTXT* pctxt
   , TS24008IE_PacketFlowIdentValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PacketFlowIdentValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PacketFlowIdentValue* pvalue);

EXTERN TS24008IE_PacketFlowIdentValue*
    asn1Test_TS24008IE_PacketFlowIdentValue (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PacketFlowIdentValue (
   TS24008IE_PacketFlowIdentValue* pvalue);

/**************************************************************/
/*                                                            */
/*  TFTOctet1                                                 */
/*                                                            */
/**************************************************************/
/*
 10.5.6.12 - Traffic Flow Template 
TFTOctet1 ::= SEQUENCE {
   tftOperationCode [0] ENUMERATED { ignoreThisIE(0), createTFT(1), deleteTFT(2), addPktFilters(3), replPktFilters(4), delPktFilters(5), noTFTOp(6) },
   eBit [1] BOOLEAN,
   numPacketFilters [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24008IE_TFTOctet1 {
   TS24008IE_TFTOctet1_tftOperationCode tftOperationCode;
   OSBOOL eBit;
   OSUINT8 numPacketFilters;
} TS24008IE_TFTOctet1;

EXTERN int NASEnc_TS24008IE_TFTOctet1 (OSCTXT* pctxt
   , TS24008IE_TFTOctet1* pvalue);

EXTERN int NASDec_TS24008IE_TFTOctet1 (OSCTXT* pctxt
   , TS24008IE_TFTOctet1* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_TFTOctet1 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TFTOctet1* pvalue);

EXTERN TS24008IE_TFTOctet1* asn1Test_TS24008IE_TFTOctet1 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TFTPacketFilterItem                                       */
/*                                                            */
/**************************************************************/
/*
TFTPacketFilterItem ::= SEQUENCE {
                                   -- pf = packet filter 
   spare [0] INTEGER (0..3),
   pfDirection [1] INTEGER (0..3),
   pfIdentifier [2] INTEGER (0..15),
   pfEvaluationPrecedence [3] INTEGER (0..255),
   contents [4] OCTET STRING
}
*/
typedef struct EXTERN TS24008IE_TFTPacketFilterItem {
   OSUINT8 spare;
   OSUINT8 pfDirection;
   OSUINT8 pfIdentifier;
   OSUINT8 pfEvaluationPrecedence;
   OSDynOctStr contents;
} TS24008IE_TFTPacketFilterItem;

EXTERN int NASEnc_TS24008IE_TFTPacketFilterItem (OSCTXT* pctxt
   , TS24008IE_TFTPacketFilterItem* pvalue);

EXTERN int NASDec_TS24008IE_TFTPacketFilterItem (OSCTXT* pctxt
   , TS24008IE_TFTPacketFilterItem* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_TFTPacketFilterItem (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TFTPacketFilterItem* pvalue);

EXTERN TS24008IE_TFTPacketFilterItem*
    asn1Test_TS24008IE_TFTPacketFilterItem (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_TFTPacketFilterItem (
   TS24008IE_TFTPacketFilterItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TFTParam                                                  */
/*                                                            */
/**************************************************************/
/*
TFTParam ::= SEQUENCE {
   paramIdentifier [0] INTEGER (0..255),
   contents [1] OCTET STRING
}
*/
typedef struct EXTERN TS24008IE_TFTParam {
   OSUINT8 paramIdentifier;
   OSDynOctStr contents;
} TS24008IE_TFTParam;

EXTERN int NASEnc_TS24008IE_TFTParam (OSCTXT* pctxt, TS24008IE_TFTParam* pvalue
   );

EXTERN int NASDec_TS24008IE_TFTParam (OSCTXT* pctxt, TS24008IE_TFTParam* pvalue
   );

EXTERN int asn1PrtToStrm_TS24008IE_TFTParam (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TFTParam* pvalue);

EXTERN TS24008IE_TFTParam* asn1Test_TS24008IE_TFTParam (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_TFTParam (TS24008IE_TFTParam* pvalue);

/**************************************************************/
/*                                                            */
/*  TFT                                                       */
/*                                                            */
/**************************************************************/
/*
   The contents member of the struct below may consist of a packet filter
 list followed by a parameter list.
 The format of the packet filter list depends on the tftOperationCode
 field.  If the operation is "delete packet filters" (0x05), then the
 packet filter list will just be a seqence of packet filter identifiers
 (one octet each).
 If, however, the operation is "create new TFT" (0x01), "add packet filters
 to existing TFT" (0x03), or "replace packet filters in existing TFT"
 (0x04), then the packet filter list will be one or more of the
 TFTPacketFilterItem structs.
 The parameter list consists of one or more of the TFTParam
 structures.
TFT ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   octet1 [1] TFTOctet1,
   -- choice alternatives below are based on tftOperationCode value
   -- if operation is delete, identifiers alternative is selected
   -- if operation is create, add, or replace, filter item list is used
   --<inline/>
   packetFilterList [2] EXPLICIT CHOICE {
      --<selector element="octet1.tftOperationCode" value="5"/>
      identifiers [0] OCTET STRING, -- each identifer is one octet in length
      filterItems [1] SEQUENCE OF TFTPacketFilterItem
   },
   --<inline/>
   paramList [3] SEQUENCE OF TFTParam
}
*/
typedef struct EXTERN TS24008IE_TFT {
   OSUINT8 length;
   TS24008IE_TFTOctet1 octet1;
   struct  {
      union {
         /* selector element = octet1.tftOperationCode, value = 5 */
         OSDynOctStr identifiers;
         /* default case */
         struct EXTERN  {
            OSSIZE n;
            TS24008IE_TFTPacketFilterItem *elem;
         } filterItems;
      } u;
   } packetFilterList;
   struct  {
      OSSIZE n;
      TS24008IE_TFTParam *elem;
   } paramList;
} TS24008IE_TFT;

EXTERN int NASEnc_TS24008IE_TFT (OSCTXT* pctxt, TS24008IE_TFT* pvalue);

EXTERN int NASDec_TS24008IE_TFT (OSCTXT* pctxt, TS24008IE_TFT* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_TFT (OSCTXT *pctxt, 
   const char* name, const TS24008IE_TFT* pvalue);

EXTERN TS24008IE_TFT* asn1Test_TS24008IE_TFT (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_TFT (TS24008IE_TFT* pvalue);

/**************************************************************/
/*                                                            */
/*  MBMSBearerCaps                                            */
/*                                                            */
/**************************************************************/
/*
 10.5.6.14 - MBMS bearer capabilities 
MBMSBearerCaps ::= SEQUENCE {
   maxDownlinkBR [0] INTEGER (0..255), -- BR = bit rate 
   maxDownlinkBRExt [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_MBMSBearerCaps {
   OSUINT8 maxDownlinkBR;
   OSUINT8 maxDownlinkBRExt;
} TS24008IE_MBMSBearerCaps;

EXTERN int NASEnc_TS24008IE_MBMSBearerCaps (OSCTXT* pctxt
   , TS24008IE_MBMSBearerCaps* pvalue);

EXTERN int NASDec_TS24008IE_MBMSBearerCaps (OSCTXT* pctxt
   , TS24008IE_MBMSBearerCaps* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_MBMSBearerCaps (OSCTXT *pctxt, 
   const char* name, const TS24008IE_MBMSBearerCaps* pvalue);

EXTERN TS24008IE_MBMSBearerCaps*
    asn1Test_TS24008IE_MBMSBearerCaps (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RequestTypeValue                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.6.17 - Request type 
RequestTypeValue ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24008IE_RequestTypeValue {
   OSBOOL spare;
   OSUINT8 value;
} TS24008IE_RequestTypeValue;

EXTERN int NASEnc_TS24008IE_RequestTypeValue (OSCTXT* pctxt
   , TS24008IE_RequestTypeValue* pvalue);

EXTERN int NASDec_TS24008IE_RequestTypeValue (OSCTXT* pctxt
   , TS24008IE_RequestTypeValue* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_RequestTypeValue (OSCTXT *pctxt, 
   const char* name, const TS24008IE_RequestTypeValue* pvalue);

EXTERN TS24008IE_RequestTypeValue*
    asn1Test_TS24008IE_RequestTypeValue (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_RequestTypeValue (TS24008IE_RequestTypeValue* pvalue);

/**************************************************************/
/*                                                            */
/*  WLANOffloadAccept                                         */
/*                                                            */
/**************************************************************/
/*
 10.5.6.20 - WLAN offload acceptability 
WLANOffloadAccept ::= SEQUENCE {
   spare1 [0] BOOLEAN,
   spare2 [1] BOOLEAN,
   uTranOffloadAcceptValue [2] BOOLEAN,
   e-UTranOffloadAcceptValue [3] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_WLANOffloadAccept {
   OSBOOL spare1;
   OSBOOL spare2;
   OSBOOL uTranOffloadAcceptValue;
   OSBOOL e_UTranOffloadAcceptValue;
} TS24008IE_WLANOffloadAccept;

EXTERN int NASEnc_TS24008IE_WLANOffloadAccept (OSCTXT* pctxt
   , TS24008IE_WLANOffloadAccept* pvalue);

EXTERN int NASDec_TS24008IE_WLANOffloadAccept (OSCTXT* pctxt
   , TS24008IE_WLANOffloadAccept* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_WLANOffloadAccept (OSCTXT *pctxt, 
   const char* name, const TS24008IE_WLANOffloadAccept* pvalue);

EXTERN TS24008IE_WLANOffloadAccept*
    asn1Test_TS24008IE_WLANOffloadAccept (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDPContextStatus                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.7.1 - PDP context status 
PDPContextStatus ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 2,
   value [1] OCTET STRING (SIZE (2))
}
*/
typedef struct EXTERN TS24008IE_PDPContextStatus {
   OSUINT8 length;
   OSOCTET value[2];
} TS24008IE_PDPContextStatus;

EXTERN int NASEnc_TS24008IE_PDPContextStatus (OSCTXT* pctxt
   , TS24008IE_PDPContextStatus* pvalue);

EXTERN int NASDec_TS24008IE_PDPContextStatus (OSCTXT* pctxt
   , TS24008IE_PDPContextStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_PDPContextStatus (OSCTXT *pctxt, 
   const char* name, const TS24008IE_PDPContextStatus* pvalue);

EXTERN TS24008IE_PDPContextStatus*
    asn1Test_TS24008IE_PDPContextStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_PDPContextStatus (TS24008IE_PDPContextStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  GPRSTimer                                                 */
/*                                                            */
/**************************************************************/
/*
 10.5.7.3 - GPRS Timer 
GPRSTimer ::= SEQUENCE {
   unit [0] INTEGER (0..7),
   timerValue [1] INTEGER (0..31)
}
*/
typedef struct EXTERN TS24008IE_GPRSTimer {
   OSUINT8 unit;
   OSUINT8 timerValue;
} TS24008IE_GPRSTimer;

EXTERN int NASEnc_TS24008IE_GPRSTimer (OSCTXT* pctxt
   , TS24008IE_GPRSTimer* pvalue);

EXTERN int NASDec_TS24008IE_GPRSTimer (OSCTXT* pctxt
   , TS24008IE_GPRSTimer* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GPRSTimer (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GPRSTimer* pvalue);

EXTERN TS24008IE_GPRSTimer* asn1Test_TS24008IE_GPRSTimer (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPRSTimer2                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.7.4 - GPRS Timer 2 
GPRSTimer2 ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   value [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24008IE_GPRSTimer2 {
   OSUINT8 length;
   OSUINT8 value;
} TS24008IE_GPRSTimer2;

EXTERN int NASEnc_TS24008IE_GPRSTimer2 (OSCTXT* pctxt
   , TS24008IE_GPRSTimer2* pvalue);

EXTERN int NASDec_TS24008IE_GPRSTimer2 (OSCTXT* pctxt
   , TS24008IE_GPRSTimer2* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GPRSTimer2 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GPRSTimer2* pvalue);

EXTERN TS24008IE_GPRSTimer2* asn1Test_TS24008IE_GPRSTimer2 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GPRSTimer3                                                */
/*                                                            */
/**************************************************************/
/*
 10.5.7.4a - GPRS Timer 3 
GPRSTimer3 ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   unit [1] ENUMERATED { valIncrMult10Mins(0), valIncrMult1Hr(1), valIncrMult10hrs(2), valIncrMult2Secs(3), valIncrMult30Secs(4), valIncrMult1Min(5), valIncrMult320Hrs(6), timerDeact(7) },
   timerValue [2] INTEGER (0..31)
}
*/
typedef struct EXTERN TS24008IE_GPRSTimer3 {
   OSUINT8 length;
   TS24008IE_GPRSTimer3_unit unit;
   OSUINT8 timerValue;
} TS24008IE_GPRSTimer3;

EXTERN int NASEnc_TS24008IE_GPRSTimer3 (OSCTXT* pctxt
   , TS24008IE_GPRSTimer3* pvalue);

EXTERN int NASDec_TS24008IE_GPRSTimer3 (OSCTXT* pctxt
   , TS24008IE_GPRSTimer3* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_GPRSTimer3 (OSCTXT *pctxt, 
   const char* name, const TS24008IE_GPRSTimer3* pvalue);

EXTERN TS24008IE_GPRSTimer3* asn1Test_TS24008IE_GPRSTimer3 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UplinkDataStatus                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.7.7 - Uplink data status 
UplinkDataStatus ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2) DEFAULT 2,
   value [1] OCTET STRING (SIZE (2))
}
*/
typedef struct EXTERN TS24008IE_UplinkDataStatus {
   OSUINT8 length;
   OSOCTET value[2];
} TS24008IE_UplinkDataStatus;

EXTERN int NASEnc_TS24008IE_UplinkDataStatus (OSCTXT* pctxt
   , TS24008IE_UplinkDataStatus* pvalue);

EXTERN int NASDec_TS24008IE_UplinkDataStatus (OSCTXT* pctxt
   , TS24008IE_UplinkDataStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_UplinkDataStatus (OSCTXT *pctxt, 
   const char* name, const TS24008IE_UplinkDataStatus* pvalue);

EXTERN TS24008IE_UplinkDataStatus*
    asn1Test_TS24008IE_UplinkDataStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_UplinkDataStatus (TS24008IE_UplinkDataStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  DeviceProperties                                          */
/*                                                            */
/**************************************************************/
/*
 10.5.7.8 - Device properties 
DeviceProperties ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   lowPriority [1] BOOLEAN
}
*/
typedef struct EXTERN TS24008IE_DeviceProperties {
   OSUINT8 spare;
   OSBOOL lowPriority;
} TS24008IE_DeviceProperties;

EXTERN int NASEnc_TS24008IE_DeviceProperties (OSCTXT* pctxt
   , TS24008IE_DeviceProperties* pvalue);

EXTERN int NASDec_TS24008IE_DeviceProperties (OSCTXT* pctxt
   , TS24008IE_DeviceProperties* pvalue);

EXTERN int asn1PrtToStrm_TS24008IE_DeviceProperties (OSCTXT *pctxt, 
   const char* name, const TS24008IE_DeviceProperties* pvalue);

EXTERN TS24008IE_DeviceProperties*
    asn1Test_TS24008IE_DeviceProperties (OSCTXT* pctxt);

EXTERN int asn1Init_TS24008IE_DeviceProperties (TS24008IE_DeviceProperties* pvalue);

/* Value definitions */

#define ASN1V_unassignedCause 1
#define ASN1V_noRouteToDest 3
#define ASN1V_chanUnaccept 6
#define ASN1V_operDetBarring 8
#define ASN1V_callComplElsewhere 13
#define ASN1V_normCallClear 16
#define ASN1V_userBusy 17
#define ASN1V_noUserRespond 18
#define ASN1V_noAnswer 19
#define ASN1V_callRejected 21
#define ASN1V_numberChanged 22
#define ASN1V_callRejDestFeat 24
#define ASN1V_preemption 25
#define ASN1V_nonSelUserClr 26
#define ASN1V_destOutOfOrder 27
#define ASN1V_invNumberFmt 28
#define ASN1V_facilityReject 29
#define ASN1V_respToStatEnq 30
#define ASN1V_normalUnspec 31
#define ASN1V_noCircChanAvail 34
#define ASN1V_netOutOfOrder 38
#define ASN1V_tempFailure 41
#define ASN1V_swEquipCongest 42
#define ASN1V_accInfoDiscard 43
#define ASN1V_reqCircChanNotAvail 44
#define ASN1V_resourceUnavail 47
#define ASN1V_qosUnavail 49
#define ASN1V_reqFacNotSub 50
#define ASN1V_inCallsBarred 55
#define ASN1V_bearCapNotAuth 57
#define ASN1V_bearCapNotAvail 58
#define ASN1V_svcOptNotAvail 63
#define ASN1V_bearSvcNotImpl 65
#define ASN1V_acmEqOrGtMax 68
#define ASN1V_reqFacNotImpl 69
#define ASN1V_restDigInfoBearCap 70
#define ASN1V_svcOptNotImpl 79
#define ASN1V_invTransId 81
#define ASN1V_userNotMemOfCUG 87
#define ASN1V_incompatDest 88
#define ASN1V_invTransNetSel 91
#define ASN1V_semBadMsg 95
#define ASN1V_invMandInfo 96
#define ASN1V_noMsgType 97
#define ASN1V_incompatMsgType 98
#define ASN1V_noInfoElem 99
#define ASN1V_condIEErr 100
#define ASN1V_incompatMsg 101
#define ASN1V_recOnTimerExp 102
#define ASN1V_protocolErr 111
#define ASN1V_interworkErr 127

#ifdef __cplusplus
}
#endif

#endif
