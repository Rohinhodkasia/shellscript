/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.4.2.3, Date: 10-Sep-2020.
 */
#ifndef NGAP_PDU_DESCRIPTIONS_H
#define NGAP_PDU_DESCRIPTIONS_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtpersrc/asn1per.h"

#include "NGAP-CommonDataTypes.h"
#include "NGAP-PDU-Contents.h"

/**
 * Header file for ASN.1 module NGAP-PDU-Descriptions
 */
typedef enum {
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_UNDEF_,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_aMFConfigurationUpdate,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_handoverCancel,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_handoverPreparation,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_handoverResourceAllocation,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_initialContextSetup,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_nGReset,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_nGSetup,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pathSwitchRequest,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pDUSessionResourceModify,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pDUSessionResourceModifyIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pDUSessionResourceRelease,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pDUSessionResourceSetup,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pWSCancel,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_rANConfigurationUpdate,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uEContextModification,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uEContextRelease,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uERadioCapabilityCheck,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_writeReplaceWarning,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_aMFStatusIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_cellTrafficTrace,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_deactivateTrace,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_downlinkNASTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_downlinkNonUEAssociatedNRPPaTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_downlinkRANConfigurationTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_downlinkRANStatusTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_downlinkUEAssociatedNRPPaTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_errorIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_handoverNotification,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_initialUEMessage,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_locationReport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_locationReportingControl,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_locationReportingFailureIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_nASNonDeliveryIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_overloadStart,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_overloadStop,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_paging,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pDUSessionResourceNotify,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_privateMessage,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pWSFailureIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_pWSRestartIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_rerouteNASRequest,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_rRCInactiveTransitionReport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_secondaryRATDataUsageReport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_traceFailureIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_traceStart,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uEContextReleaseRequest,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uERadioCapabilityInfoIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uETNLABindingRelease,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uplinkNASTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uplinkNonUEAssociatedNRPPaTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uplinkRANConfigurationTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uplinkRANStatusTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_uplinkUEAssociatedNRPPaTransport
} NGAP_ELEMENTARY_PROCEDURES_TVALUE;

typedef enum {
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_UNDEF_,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_aMFConfigurationUpdate,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_handoverCancel,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_handoverPreparation,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_handoverResourceAllocation,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_initialContextSetup,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_nGReset,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_nGSetup,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_pathSwitchRequest,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_pDUSessionResourceModify,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_pDUSessionResourceModifyIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_pDUSessionResourceRelease,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_pDUSessionResourceSetup,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_pWSCancel,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_rANConfigurationUpdate,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_uEContextModification,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_uEContextRelease,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_uERadioCapabilityCheck,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_1_writeReplaceWarning
} NGAP_ELEMENTARY_PROCEDURES_CLASS_1_TVALUE;

typedef enum {
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_UNDEF_,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_aMFStatusIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_cellTrafficTrace,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_deactivateTrace,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_downlinkNASTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_downlinkNonUEAssociatedNRPPaTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_downlinkRANConfigurationTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_downlinkRANStatusTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_downlinkUEAssociatedNRPPaTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_errorIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_handoverNotification,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_initialUEMessage,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_locationReport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_locationReportingControl,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_locationReportingFailureIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_nASNonDeliveryIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_overloadStart,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_overloadStop,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_paging,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_pDUSessionResourceNotify,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_privateMessage,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_pWSFailureIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_pWSRestartIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_rerouteNASRequest,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_rRCInactiveTransitionReport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_secondaryRATDataUsageReport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_traceFailureIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_traceStart,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uEContextReleaseRequest,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uERadioCapabilityInfoIndication,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uETNLABindingRelease,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uplinkNASTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uplinkNonUEAssociatedNRPPaTransport,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uplinkRANConfigurationTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uplinkRANStatusTransfer,
   T_NGAP_PDU_Descriptions_NGAP_ELEMENTARY_PROCEDURES_CLASS_2_uplinkUEAssociatedNRPPaTransport
} NGAP_ELEMENTARY_PROCEDURES_CLASS_2_TVALUE;

/**************************************************************/
/*                                                            */
/*  InitiatingMessage                                         */
/*                                                            */
/**************************************************************/
/*
InitiatingMessage ::= SEQUENCE {
   procedureCode [0] NGAP-ELEMENTARY-PROCEDURE.&procedureCode ({NGAP-ELEMENTARY-PROCEDURES}),
   criticality [1] NGAP-ELEMENTARY-PROCEDURE.&criticality ({NGAP-ELEMENTARY-PROCEDURES}{@procedureCode}),
   value [2] EXPLICIT NGAP-ELEMENTARY-PROCEDURE.&InitiatingMessage ({NGAP-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN InitiatingMessage {
   ProcedureCode procedureCode;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGAP_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * NGAP-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-AMFConfigurationUpdate
          * criticality: reject
          */
         AMFConfigurationUpdate *aMFConfigurationUpdate;
         /**
          * procedureCode: id-HandoverCancel
          * criticality: reject
          */
         HandoverCancel *handoverCancel;
         /**
          * procedureCode: id-HandoverPreparation
          * criticality: reject
          */
         HandoverRequired *handoverPreparation;
         /**
          * procedureCode: id-HandoverResourceAllocation
          * criticality: reject
          */
         HandoverRequest *handoverResourceAllocation;
         /**
          * procedureCode: id-InitialContextSetup
          * criticality: reject
          */
         InitialContextSetupRequest *initialContextSetup;
         /**
          * procedureCode: id-NGReset
          * criticality: reject
          */
         NGReset *nGReset;
         /**
          * procedureCode: id-NGSetup
          * criticality: reject
          */
         NGSetupRequest *nGSetup;
         /**
          * procedureCode: id-PathSwitchRequest
          * criticality: reject
          */
         PathSwitchRequest *pathSwitchRequest;
         /**
          * procedureCode: id-PDUSessionResourceModify
          * criticality: reject
          */
         PDUSessionResourceModifyRequest *pDUSessionResourceModify;
         /**
          * procedureCode: id-PDUSessionResourceModifyIndication
          * criticality: reject
          */
         PDUSessionResourceModifyIndication *pDUSessionResourceModifyIndication;
         /**
          * procedureCode: id-PDUSessionResourceRelease
          * criticality: reject
          */
         PDUSessionResourceReleaseCommand *pDUSessionResourceRelease;
         /**
          * procedureCode: id-PDUSessionResourceSetup
          * criticality: reject
          */
         PDUSessionResourceSetupRequest *pDUSessionResourceSetup;
         /**
          * procedureCode: id-PWSCancel
          * criticality: reject
          */
         PWSCancelRequest *pWSCancel;
         /**
          * procedureCode: id-RANConfigurationUpdate
          * criticality: reject
          */
         RANConfigurationUpdate *rANConfigurationUpdate;
         /**
          * procedureCode: id-UEContextModification
          * criticality: reject
          */
         UEContextModificationRequest *uEContextModification;
         /**
          * procedureCode: id-UEContextRelease
          * criticality: reject
          */
         UEContextReleaseCommand *uEContextRelease;
         /**
          * procedureCode: id-UERadioCapabilityCheck
          * criticality: reject
          */
         UERadioCapabilityCheckRequest *uERadioCapabilityCheck;
         /**
          * procedureCode: id-WriteReplaceWarning
          * criticality: reject
          */
         WriteReplaceWarningRequest *writeReplaceWarning;
         /**
          * procedureCode: id-AMFStatusIndication
          * criticality: ignore
          */
         AMFStatusIndication *aMFStatusIndication;
         /**
          * procedureCode: id-CellTrafficTrace
          * criticality: ignore
          */
         CellTrafficTrace *cellTrafficTrace;
         /**
          * procedureCode: id-DeactivateTrace
          * criticality: ignore
          */
         DeactivateTrace *deactivateTrace;
         /**
          * procedureCode: id-DownlinkNASTransport
          * criticality: ignore
          */
         DownlinkNASTransport *downlinkNASTransport;
         /**
          * procedureCode: id-DownlinkNonUEAssociatedNRPPaTransport
          * criticality: ignore
          */
         DownlinkNonUEAssociatedNRPPaTransport *downlinkNonUEAssociatedNRPPaTransport;
         /**
          * procedureCode: id-DownlinkRANConfigurationTransfer
          * criticality: ignore
          */
         DownlinkRANConfigurationTransfer *downlinkRANConfigurationTransfer;
         /**
          * procedureCode: id-DownlinkRANStatusTransfer
          * criticality: ignore
          */
         DownlinkRANStatusTransfer *downlinkRANStatusTransfer;
         /**
          * procedureCode: id-DownlinkUEAssociatedNRPPaTransport
          * criticality: ignore
          */
         DownlinkUEAssociatedNRPPaTransport *downlinkUEAssociatedNRPPaTransport;
         /**
          * procedureCode: id-ErrorIndication
          * criticality: ignore
          */
         ErrorIndication *errorIndication;
         /**
          * procedureCode: id-HandoverNotification
          * criticality: ignore
          */
         HandoverNotify *handoverNotification;
         /**
          * procedureCode: id-InitialUEMessage
          * criticality: ignore
          */
         InitialUEMessage *initialUEMessage;
         /**
          * procedureCode: id-LocationReport
          * criticality: ignore
          */
         LocationReport *locationReport;
         /**
          * procedureCode: id-LocationReportingControl
          * criticality: ignore
          */
         LocationReportingControl *locationReportingControl;
         /**
          * procedureCode: id-LocationReportingFailureIndication
          * criticality: ignore
          */
         LocationReportingFailureIndication *locationReportingFailureIndication;
         /**
          * procedureCode: id-NASNonDeliveryIndication
          * criticality: ignore
          */
         NASNonDeliveryIndication *nASNonDeliveryIndication;
         /**
          * procedureCode: id-OverloadStart
          * criticality: ignore
          */
         OverloadStart *overloadStart;
         /**
          * procedureCode: id-OverloadStop
          * criticality: reject
          */
         OverloadStop *overloadStop;
         /**
          * procedureCode: id-Paging
          * criticality: ignore
          */
         Paging *paging;
         /**
          * procedureCode: id-PDUSessionResourceNotify
          * criticality: ignore
          */
         PDUSessionResourceNotify *pDUSessionResourceNotify;
         /**
          * procedureCode: id-PrivateMessage
          * criticality: ignore
          */
         PrivateMessage *privateMessage;
         /**
          * procedureCode: id-PWSFailureIndication
          * criticality: ignore
          */
         PWSFailureIndication *pWSFailureIndication;
         /**
          * procedureCode: id-PWSRestartIndication
          * criticality: ignore
          */
         PWSRestartIndication *pWSRestartIndication;
         /**
          * procedureCode: id-RerouteNASRequest
          * criticality: reject
          */
         RerouteNASRequest *rerouteNASRequest;
         /**
          * procedureCode: id-RRCInactiveTransitionReport
          * criticality: ignore
          */
         RRCInactiveTransitionReport *rRCInactiveTransitionReport;
         /**
          * procedureCode: id-SecondaryRATDataUsageReport
          * criticality: ignore
          */
         SecondaryRATDataUsageReport *secondaryRATDataUsageReport;
         /**
          * procedureCode: id-TraceFailureIndication
          * criticality: ignore
          */
         TraceFailureIndication *traceFailureIndication;
         /**
          * procedureCode: id-TraceStart
          * criticality: ignore
          */
         TraceStart *traceStart;
         /**
          * procedureCode: id-UEContextReleaseRequest
          * criticality: ignore
          */
         UEContextReleaseRequest *uEContextReleaseRequest;
         /**
          * procedureCode: id-UERadioCapabilityInfoIndication
          * criticality: ignore
          */
         UERadioCapabilityInfoIndication *uERadioCapabilityInfoIndication;
         /**
          * procedureCode: id-UETNLABindingRelease
          * criticality: ignore
          */
         UETNLABindingReleaseRequest *uETNLABindingRelease;
         /**
          * procedureCode: id-UplinkNASTransport
          * criticality: ignore
          */
         UplinkNASTransport *uplinkNASTransport;
         /**
          * procedureCode: id-UplinkNonUEAssociatedNRPPaTransport
          * criticality: ignore
          */
         UplinkNonUEAssociatedNRPPaTransport *uplinkNonUEAssociatedNRPPaTransport;
         /**
          * procedureCode: id-UplinkRANConfigurationTransfer
          * criticality: ignore
          */
         UplinkRANConfigurationTransfer *uplinkRANConfigurationTransfer;
         /**
          * procedureCode: id-UplinkRANStatusTransfer
          * criticality: ignore
          */
         UplinkRANStatusTransfer *uplinkRANStatusTransfer;
         /**
          * procedureCode: id-UplinkUEAssociatedNRPPaTransport
          * criticality: ignore
          */
         UplinkUEAssociatedNRPPaTransport *uplinkUEAssociatedNRPPaTransport;

         ASN1OpenType* extElem1;
      } u;
   } value;
} InitiatingMessage;

EXTERN int asn1PE_InitiatingMessage (OSCTXT* pctxt, InitiatingMessage* pvalue);

EXTERN int asn1PD_InitiatingMessage (OSCTXT* pctxt, InitiatingMessage* pvalue);

EXTERN void asn1Print_InitiatingMessage 
   (const char* name, const InitiatingMessage* pvalue);

EXTERN int asn1PrtToStr_InitiatingMessage (const char* name, 
   InitiatingMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InitiatingMessage (OSCTXT *pctxt, 
   const char* name, const InitiatingMessage* pvalue);

EXTERN void asn1SetTC_InitiatingMessage_aMFConfigurationUpdate
   (OSCTXT* pctxt, InitiatingMessage* pElem, AMFConfigurationUpdate *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverCancel
   (OSCTXT* pctxt, InitiatingMessage* pElem, HandoverCancel *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverPreparation
   (OSCTXT* pctxt, InitiatingMessage* pElem, HandoverRequired *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverResourceAllocation
   (OSCTXT* pctxt, InitiatingMessage* pElem, HandoverRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_initialContextSetup
   (OSCTXT* pctxt, InitiatingMessage* pElem, InitialContextSetupRequest *pvalue
   );

EXTERN void asn1SetTC_InitiatingMessage_nGReset
   (OSCTXT* pctxt, InitiatingMessage* pElem, NGReset *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_nGSetup
   (OSCTXT* pctxt, InitiatingMessage* pElem, NGSetupRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pathSwitchRequest
   (OSCTXT* pctxt, InitiatingMessage* pElem, PathSwitchRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pDUSessionResourceModify
   (OSCTXT* pctxt, InitiatingMessage* pElem, PDUSessionResourceModifyRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pDUSessionResourceModifyIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   PDUSessionResourceModifyIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pDUSessionResourceRelease
   (OSCTXT* pctxt, InitiatingMessage* pElem, PDUSessionResourceReleaseCommand 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pDUSessionResourceSetup
   (OSCTXT* pctxt, InitiatingMessage* pElem, PDUSessionResourceSetupRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pWSCancel
   (OSCTXT* pctxt, InitiatingMessage* pElem, PWSCancelRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_rANConfigurationUpdate
   (OSCTXT* pctxt, InitiatingMessage* pElem, RANConfigurationUpdate *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextModification
   (OSCTXT* pctxt, InitiatingMessage* pElem, UEContextModificationRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextRelease
   (OSCTXT* pctxt, InitiatingMessage* pElem, UEContextReleaseCommand *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uERadioCapabilityCheck
   (OSCTXT* pctxt, InitiatingMessage* pElem, UERadioCapabilityCheckRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_writeReplaceWarning
   (OSCTXT* pctxt, InitiatingMessage* pElem, WriteReplaceWarningRequest *pvalue
   );

EXTERN void asn1SetTC_InitiatingMessage_aMFStatusIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, AMFStatusIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_cellTrafficTrace
   (OSCTXT* pctxt, InitiatingMessage* pElem, CellTrafficTrace *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_deactivateTrace
   (OSCTXT* pctxt, InitiatingMessage* pElem, DeactivateTrace *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkNASTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, DownlinkNASTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkNonUEAssociatedNRPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   DownlinkNonUEAssociatedNRPPaTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkRANConfigurationTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, DownlinkRANConfigurationTransfer 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_downlinkRANStatusTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, DownlinkRANStatusTransfer *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_downlinkUEAssociatedNRPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   DownlinkUEAssociatedNRPPaTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_errorIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, ErrorIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_handoverNotification
   (OSCTXT* pctxt, InitiatingMessage* pElem, HandoverNotify *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_initialUEMessage
   (OSCTXT* pctxt, InitiatingMessage* pElem, InitialUEMessage *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_locationReport
   (OSCTXT* pctxt, InitiatingMessage* pElem, LocationReport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_locationReportingControl
   (OSCTXT* pctxt, InitiatingMessage* pElem, LocationReportingControl *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_locationReportingFailureIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   LocationReportingFailureIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_nASNonDeliveryIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, NASNonDeliveryIndication *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_overloadStart
   (OSCTXT* pctxt, InitiatingMessage* pElem, OverloadStart *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_overloadStop
   (OSCTXT* pctxt, InitiatingMessage* pElem, OverloadStop *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_paging
   (OSCTXT* pctxt, InitiatingMessage* pElem, Paging *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pDUSessionResourceNotify
   (OSCTXT* pctxt, InitiatingMessage* pElem, PDUSessionResourceNotify *pvalue)
   ;

EXTERN void asn1SetTC_InitiatingMessage_privateMessage
   (OSCTXT* pctxt, InitiatingMessage* pElem, PrivateMessage *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pWSFailureIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, PWSFailureIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_pWSRestartIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, PWSRestartIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_rerouteNASRequest
   (OSCTXT* pctxt, InitiatingMessage* pElem, RerouteNASRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_rRCInactiveTransitionReport
   (OSCTXT* pctxt, InitiatingMessage* pElem, RRCInactiveTransitionReport 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_secondaryRATDataUsageReport
   (OSCTXT* pctxt, InitiatingMessage* pElem, SecondaryRATDataUsageReport 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_traceFailureIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, TraceFailureIndication *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_traceStart
   (OSCTXT* pctxt, InitiatingMessage* pElem, TraceStart *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uEContextReleaseRequest
   (OSCTXT* pctxt, InitiatingMessage* pElem, UEContextReleaseRequest *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uERadioCapabilityInfoIndication
   (OSCTXT* pctxt, InitiatingMessage* pElem, UERadioCapabilityInfoIndication 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uETNLABindingRelease
   (OSCTXT* pctxt, InitiatingMessage* pElem, UETNLABindingReleaseRequest 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkNASTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, UplinkNASTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkNonUEAssociatedNRPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, 
   UplinkNonUEAssociatedNRPPaTransport *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkRANConfigurationTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, UplinkRANConfigurationTransfer 
   *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkRANStatusTransfer
   (OSCTXT* pctxt, InitiatingMessage* pElem, UplinkRANStatusTransfer *pvalue);

EXTERN void asn1SetTC_InitiatingMessage_uplinkUEAssociatedNRPPaTransport
   (OSCTXT* pctxt, InitiatingMessage* pElem, UplinkUEAssociatedNRPPaTransport 
   *pvalue);

EXTERN int asn1Init_InitiatingMessage (InitiatingMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  SuccessfulOutcome                                         */
/*                                                            */
/**************************************************************/
/*
SuccessfulOutcome ::= SEQUENCE {
   procedureCode [0] NGAP-ELEMENTARY-PROCEDURE.&procedureCode ({NGAP-ELEMENTARY-PROCEDURES}),
   criticality [1] NGAP-ELEMENTARY-PROCEDURE.&criticality ({NGAP-ELEMENTARY-PROCEDURES}{@procedureCode}),
   value [2] EXPLICIT NGAP-ELEMENTARY-PROCEDURE.&SuccessfulOutcome ({NGAP-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN SuccessfulOutcome {
   ProcedureCode procedureCode;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGAP_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * NGAP-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-AMFConfigurationUpdate
          * criticality: reject
          */
         AMFConfigurationUpdateAcknowledge *aMFConfigurationUpdate;
         /**
          * procedureCode: id-HandoverCancel
          * criticality: reject
          */
         HandoverCancelAcknowledge *handoverCancel;
         /**
          * procedureCode: id-HandoverPreparation
          * criticality: reject
          */
         HandoverCommand *handoverPreparation;
         /**
          * procedureCode: id-HandoverResourceAllocation
          * criticality: reject
          */
         HandoverRequestAcknowledge *handoverResourceAllocation;
         /**
          * procedureCode: id-InitialContextSetup
          * criticality: reject
          */
         InitialContextSetupResponse *initialContextSetup;
         /**
          * procedureCode: id-NGReset
          * criticality: reject
          */
         NGResetAcknowledge *nGReset;
         /**
          * procedureCode: id-NGSetup
          * criticality: reject
          */
         NGSetupResponse *nGSetup;
         /**
          * procedureCode: id-PathSwitchRequest
          * criticality: reject
          */
         PathSwitchRequestAcknowledge *pathSwitchRequest;
         /**
          * procedureCode: id-PDUSessionResourceModify
          * criticality: reject
          */
         PDUSessionResourceModifyResponse *pDUSessionResourceModify;
         /**
          * procedureCode: id-PDUSessionResourceModifyIndication
          * criticality: reject
          */
         PDUSessionResourceModifyConfirm *pDUSessionResourceModifyIndication;
         /**
          * procedureCode: id-PDUSessionResourceRelease
          * criticality: reject
          */
         PDUSessionResourceReleaseResponse *pDUSessionResourceRelease;
         /**
          * procedureCode: id-PDUSessionResourceSetup
          * criticality: reject
          */
         PDUSessionResourceSetupResponse *pDUSessionResourceSetup;
         /**
          * procedureCode: id-PWSCancel
          * criticality: reject
          */
         PWSCancelResponse *pWSCancel;
         /**
          * procedureCode: id-RANConfigurationUpdate
          * criticality: reject
          */
         RANConfigurationUpdateAcknowledge *rANConfigurationUpdate;
         /**
          * procedureCode: id-UEContextModification
          * criticality: reject
          */
         UEContextModificationResponse *uEContextModification;
         /**
          * procedureCode: id-UEContextRelease
          * criticality: reject
          */
         UEContextReleaseComplete *uEContextRelease;
         /**
          * procedureCode: id-UERadioCapabilityCheck
          * criticality: reject
          */
         UERadioCapabilityCheckResponse *uERadioCapabilityCheck;
         /**
          * procedureCode: id-WriteReplaceWarning
          * criticality: reject
          */
         WriteReplaceWarningResponse *writeReplaceWarning;

         ASN1OpenType* extElem1;
      } u;
   } value;
} SuccessfulOutcome;

EXTERN int asn1PE_SuccessfulOutcome (OSCTXT* pctxt, SuccessfulOutcome* pvalue);

EXTERN int asn1PD_SuccessfulOutcome (OSCTXT* pctxt, SuccessfulOutcome* pvalue);

EXTERN void asn1Print_SuccessfulOutcome 
   (const char* name, const SuccessfulOutcome* pvalue);

EXTERN int asn1PrtToStr_SuccessfulOutcome (const char* name, 
   SuccessfulOutcome* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SuccessfulOutcome (OSCTXT *pctxt, 
   const char* name, const SuccessfulOutcome* pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_aMFConfigurationUpdate
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, AMFConfigurationUpdateAcknowledge 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_handoverCancel
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, HandoverCancelAcknowledge *pvalue)
   ;

EXTERN void asn1SetTC_SuccessfulOutcome_handoverPreparation
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, HandoverCommand *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_handoverResourceAllocation
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, HandoverRequestAcknowledge *pvalue
   );

EXTERN void asn1SetTC_SuccessfulOutcome_initialContextSetup
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, InitialContextSetupResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_nGReset
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, NGResetAcknowledge *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_nGSetup
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, NGSetupResponse *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_pathSwitchRequest
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, PathSwitchRequestAcknowledge 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_pDUSessionResourceModify
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, PDUSessionResourceModifyResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_pDUSessionResourceModifyIndication
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, PDUSessionResourceModifyConfirm 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_pDUSessionResourceRelease
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, PDUSessionResourceReleaseResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_pDUSessionResourceSetup
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, PDUSessionResourceSetupResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_pWSCancel
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, PWSCancelResponse *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_rANConfigurationUpdate
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, RANConfigurationUpdateAcknowledge 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uEContextModification
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, UEContextModificationResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_uEContextRelease
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, UEContextReleaseComplete *pvalue)
   ;

EXTERN void asn1SetTC_SuccessfulOutcome_uERadioCapabilityCheck
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, UERadioCapabilityCheckResponse 
   *pvalue);

EXTERN void asn1SetTC_SuccessfulOutcome_writeReplaceWarning
   (OSCTXT* pctxt, SuccessfulOutcome* pElem, WriteReplaceWarningResponse 
   *pvalue);

EXTERN int asn1Init_SuccessfulOutcome (SuccessfulOutcome* pvalue);

/**************************************************************/
/*                                                            */
/*  UnsuccessfulOutcome                                       */
/*                                                            */
/**************************************************************/
/*
UnsuccessfulOutcome ::= SEQUENCE {
   procedureCode [0] NGAP-ELEMENTARY-PROCEDURE.&procedureCode ({NGAP-ELEMENTARY-PROCEDURES}),
   criticality [1] NGAP-ELEMENTARY-PROCEDURE.&criticality ({NGAP-ELEMENTARY-PROCEDURES}{@procedureCode}),
   value [2] EXPLICIT NGAP-ELEMENTARY-PROCEDURE.&UnsuccessfulOutcome ({NGAP-ELEMENTARY-PROCEDURES}{@procedureCode})
}
*/
typedef struct EXTERN UnsuccessfulOutcome {
   ProcedureCode procedureCode;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      NGAP_ELEMENTARY_PROCEDURES_TVALUE t;

      /**
       * NGAP-ELEMENTARY-PROCEDURES information objects
       */
      union {
         /**
          * procedureCode: id-AMFConfigurationUpdate
          * criticality: reject
          */
         AMFConfigurationUpdateFailure *aMFConfigurationUpdate;
         /**
          * procedureCode: id-HandoverPreparation
          * criticality: reject
          */
         HandoverPreparationFailure *handoverPreparation;
         /**
          * procedureCode: id-HandoverResourceAllocation
          * criticality: reject
          */
         HandoverFailure *handoverResourceAllocation;
         /**
          * procedureCode: id-InitialContextSetup
          * criticality: reject
          */
         InitialContextSetupFailure *initialContextSetup;
         /**
          * procedureCode: id-NGSetup
          * criticality: reject
          */
         NGSetupFailure *nGSetup;
         /**
          * procedureCode: id-PathSwitchRequest
          * criticality: reject
          */
         PathSwitchRequestFailure *pathSwitchRequest;
         /**
          * procedureCode: id-RANConfigurationUpdate
          * criticality: reject
          */
         RANConfigurationUpdateFailure *rANConfigurationUpdate;
         /**
          * procedureCode: id-UEContextModification
          * criticality: reject
          */
         UEContextModificationFailure *uEContextModification;

         ASN1OpenType* extElem1;
      } u;
   } value;
} UnsuccessfulOutcome;

EXTERN int asn1PE_UnsuccessfulOutcome (OSCTXT* pctxt, UnsuccessfulOutcome* pvalue);

EXTERN int asn1PD_UnsuccessfulOutcome (OSCTXT* pctxt, UnsuccessfulOutcome* pvalue);

EXTERN void asn1Print_UnsuccessfulOutcome 
   (const char* name, const UnsuccessfulOutcome* pvalue);

EXTERN int asn1PrtToStr_UnsuccessfulOutcome (const char* name, 
   UnsuccessfulOutcome* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UnsuccessfulOutcome (OSCTXT *pctxt, 
   const char* name, const UnsuccessfulOutcome* pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_aMFConfigurationUpdate
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, AMFConfigurationUpdateFailure 
   *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_handoverPreparation
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, HandoverPreparationFailure 
   *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_handoverResourceAllocation
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, HandoverFailure *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_initialContextSetup
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, InitialContextSetupFailure 
   *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_nGSetup
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, NGSetupFailure *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_pathSwitchRequest
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, PathSwitchRequestFailure *pvalue
   );

EXTERN void asn1SetTC_UnsuccessfulOutcome_rANConfigurationUpdate
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, RANConfigurationUpdateFailure 
   *pvalue);

EXTERN void asn1SetTC_UnsuccessfulOutcome_uEContextModification
   (OSCTXT* pctxt, UnsuccessfulOutcome* pElem, UEContextModificationFailure 
   *pvalue);

EXTERN int asn1Init_UnsuccessfulOutcome (UnsuccessfulOutcome* pvalue);

/**************************************************************/
/*                                                            */
/*  NGAP_PDU                                                  */
/*                                                            */
/**************************************************************/
/*
 **************************************************************
 Interface PDU Definition
 **************************************************************
NGAP-PDU ::= CHOICE {
   initiatingMessage [0] InitiatingMessage,
   successfulOutcome [1] SuccessfulOutcome,
   unsuccessfulOutcome [2] UnsuccessfulOutcome,
   ...
}
*/
/* Choice tag constants */

#define T_NGAP_PDU_initiatingMessage    1
#define T_NGAP_PDU_successfulOutcome    2
#define T_NGAP_PDU_unsuccessfulOutcome  3
#define T_NGAP_PDU_extElem1             4

typedef struct EXTERN NGAP_PDU {
   OSINT32 t;
   union {
      /* t = 1 */
      InitiatingMessage *initiatingMessage;
      /* t = 2 */
      SuccessfulOutcome *successfulOutcome;
      /* t = 3 */
      UnsuccessfulOutcome *unsuccessfulOutcome;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} NGAP_PDU;

EXTERN int asn1PE_NGAP_PDU (OSCTXT* pctxt, NGAP_PDU* pvalue);

EXTERN int asn1PD_NGAP_PDU (OSCTXT* pctxt, NGAP_PDU* pvalue);

EXTERN void asn1Print_NGAP_PDU (const char* name, const NGAP_PDU* pvalue);

EXTERN int asn1PrtToStr_NGAP_PDU (const char* name, NGAP_PDU* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGAP_PDU (OSCTXT *pctxt, 
   const char* name, const NGAP_PDU* pvalue);

EXTERN int asn1Init_NGAP_PDU (NGAP_PDU* pvalue);

#ifdef __cplusplus
}
#endif

#endif
