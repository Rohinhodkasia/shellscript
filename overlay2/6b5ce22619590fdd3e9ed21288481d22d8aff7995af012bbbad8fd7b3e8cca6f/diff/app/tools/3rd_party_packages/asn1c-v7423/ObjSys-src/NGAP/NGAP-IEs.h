/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.4.2.3, Date: 10-Sep-2020.
 */
#ifndef NGAP_IES_H
#define NGAP_IES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtpersrc/asn1per.h"

#include "NGAP-CommonDataTypes.h"
#include "NGAP-Containers.h"

/**
 * Header file for ASN.1 module NGAP-IEs
 */
typedef enum {
   T_NGAP_IEs_AdditionalDLUPTNLInformationForHOItem_ExtIEs_UNDEF_
} AdditionalDLUPTNLInformationForHOItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AllocationAndRetentionPriority_ExtIEs_UNDEF_
} AllocationAndRetentionPriority_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AllowedNSSAI_Item_ExtIEs_UNDEF_
} AllowedNSSAI_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AMFPagingTarget_ExtIEs_UNDEF_
} AMFPagingTarget_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AMF_TNLAssociationSetupItem_ExtIEs_UNDEF_
} AMF_TNLAssociationSetupItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AMF_TNLAssociationToAddItem_ExtIEs_UNDEF_
} AMF_TNLAssociationToAddItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AMF_TNLAssociationToRemoveItem_ExtIEs_UNDEF_,
   T_NGAP_IEs_AMF_TNLAssociationToRemoveItem_ExtIEs_id_TNLAssociationTransportLayerAddressNGRAN
} AMF_TNLAssociationToRemoveItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AMF_TNLAssociationToUpdateItem_ExtIEs_UNDEF_
} AMF_TNLAssociationToUpdateItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AreaOfInterest_ExtIEs_UNDEF_
} AreaOfInterest_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AreaOfInterestCellItem_ExtIEs_UNDEF_
} AreaOfInterestCellItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AreaOfInterestItem_ExtIEs_UNDEF_
} AreaOfInterestItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AreaOfInterestRANNodeItem_ExtIEs_UNDEF_
} AreaOfInterestRANNodeItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AreaOfInterestTAIItem_ExtIEs_UNDEF_
} AreaOfInterestTAIItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AssistanceDataForPaging_ExtIEs_UNDEF_
} AssistanceDataForPaging_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AssistanceDataForRecommendedCells_ExtIEs_UNDEF_
} AssistanceDataForRecommendedCells_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_AssociatedQosFlowItem_ExtIEs_UNDEF_
} AssociatedQosFlowItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_BroadcastCancelledAreaList_ExtIEs_UNDEF_
} BroadcastCancelledAreaList_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_BroadcastCompletedAreaList_ExtIEs_UNDEF_
} BroadcastCompletedAreaList_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_BroadcastPLMNItem_ExtIEs_UNDEF_
} BroadcastPLMNItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CancelledCellsInEAI_EUTRA_Item_ExtIEs_UNDEF_
} CancelledCellsInEAI_EUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CancelledCellsInEAI_NR_Item_ExtIEs_UNDEF_
} CancelledCellsInEAI_NR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CancelledCellsInTAI_EUTRA_Item_ExtIEs_UNDEF_
} CancelledCellsInTAI_EUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CancelledCellsInTAI_NR_Item_ExtIEs_UNDEF_
} CancelledCellsInTAI_NR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_Cause_ExtIEs_UNDEF_
} Cause_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CellIDBroadcastEUTRA_Item_ExtIEs_UNDEF_
} CellIDBroadcastEUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CellIDBroadcastNR_Item_ExtIEs_UNDEF_
} CellIDBroadcastNR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CellIDCancelledEUTRA_Item_ExtIEs_UNDEF_
} CellIDCancelledEUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CellIDCancelledNR_Item_ExtIEs_UNDEF_
} CellIDCancelledNR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CellIDListForRestart_ExtIEs_UNDEF_
} CellIDListForRestart_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CellType_ExtIEs_UNDEF_
} CellType_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CNAssistedRANTuning_ExtIEs_UNDEF_
} CNAssistedRANTuning_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CNTypeRestrictionsForEquivalentItem_ExtIEs_UNDEF_
} CNTypeRestrictionsForEquivalentItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CompletedCellsInEAI_EUTRA_Item_ExtIEs_UNDEF_
} CompletedCellsInEAI_EUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CompletedCellsInEAI_NR_Item_ExtIEs_UNDEF_
} CompletedCellsInEAI_NR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CompletedCellsInTAI_EUTRA_Item_ExtIEs_UNDEF_
} CompletedCellsInTAI_EUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CompletedCellsInTAI_NR_Item_ExtIEs_UNDEF_
} CompletedCellsInTAI_NR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CoreNetworkAssistanceInformationForInactive_ExtIEs_UNDEF_
} CoreNetworkAssistanceInformationForInactive_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_COUNTValueForPDCP_SN12_ExtIEs_UNDEF_
} COUNTValueForPDCP_SN12_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_COUNTValueForPDCP_SN18_ExtIEs_UNDEF_
} COUNTValueForPDCP_SN18_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CPTransportLayerInformation_ExtIEs_UNDEF_,
   T_NGAP_IEs_CPTransportLayerInformation_ExtIEs_id_EndpointIPAddressAndPort
} CPTransportLayerInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CriticalityDiagnostics_ExtIEs_UNDEF_
} CriticalityDiagnostics_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_CriticalityDiagnostics_IE_Item_ExtIEs_UNDEF_
} CriticalityDiagnostics_IE_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DataForwardingResponseDRBItem_ExtIEs_UNDEF_
} DataForwardingResponseDRBItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBsSubjectToStatusTransferItem_ExtIEs_UNDEF_,
   T_NGAP_IEs_DRBsSubjectToStatusTransferItem_ExtIEs_id_OldAssociatedQosFlowList_ULendmarkerexpected
} DRBsSubjectToStatusTransferItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBStatusDL_ExtIEs_UNDEF_
} DRBStatusDL_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBStatusDL12_ExtIEs_UNDEF_
} DRBStatusDL12_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBStatusDL18_ExtIEs_UNDEF_
} DRBStatusDL18_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBStatusUL_ExtIEs_UNDEF_
} DRBStatusUL_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBStatusUL12_ExtIEs_UNDEF_
} DRBStatusUL12_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBStatusUL18_ExtIEs_UNDEF_
} DRBStatusUL18_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_DRBsToQosFlowsMappingItem_ExtIEs_UNDEF_
} DRBsToQosFlowsMappingItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_Dynamic5QIDescriptor_ExtIEs_UNDEF_
} Dynamic5QIDescriptor_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs_UNDEF_
} EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EmergencyAreaIDBroadcastNR_Item_ExtIEs_UNDEF_
} EmergencyAreaIDBroadcastNR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs_UNDEF_
} EmergencyAreaIDCancelledEUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EmergencyAreaIDCancelledNR_Item_ExtIEs_UNDEF_
} EmergencyAreaIDCancelledNR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EmergencyFallbackIndicator_ExtIEs_UNDEF_
} EmergencyFallbackIndicator_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EndpointIPAddressAndPort_ExtIEs_UNDEF_
} EndpointIPAddressAndPort_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EPS_TAI_ExtIEs_UNDEF_
} EPS_TAI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_E_RABInformationItem_ExtIEs_UNDEF_
} E_RABInformationItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_EUTRA_CGI_ExtIEs_UNDEF_
} EUTRA_CGI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_ExpectedUEActivityBehaviour_ExtIEs_UNDEF_
} ExpectedUEActivityBehaviour_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_ExpectedUEBehaviour_ExtIEs_UNDEF_
} ExpectedUEBehaviour_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_ExpectedUEMovingTrajectoryItem_ExtIEs_UNDEF_
} ExpectedUEMovingTrajectoryItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_FiveG_S_TMSI_ExtIEs_UNDEF_
} FiveG_S_TMSI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_ForbiddenAreaInformation_Item_ExtIEs_UNDEF_
} ForbiddenAreaInformation_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GBR_QosInformation_ExtIEs_UNDEF_
} GBR_QosInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GlobalGNB_ID_ExtIEs_UNDEF_
} GlobalGNB_ID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GlobalN3IWF_ID_ExtIEs_UNDEF_
} GlobalN3IWF_ID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GlobalNgENB_ID_ExtIEs_UNDEF_
} GlobalNgENB_ID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GlobalRANNodeID_ExtIEs_UNDEF_
} GlobalRANNodeID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GNB_ID_ExtIEs_UNDEF_
} GNB_ID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GTPTunnel_ExtIEs_UNDEF_
} GTPTunnel_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_GUAMI_ExtIEs_UNDEF_
} GUAMI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_HandoverCommandTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_HandoverCommandTransfer_ExtIEs_id_AdditionalDLForwardingUPTNLInformation,
   T_NGAP_IEs_HandoverCommandTransfer_ExtIEs_id_ULForwardingUP_TNLInformation,
   T_NGAP_IEs_HandoverCommandTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation
} HandoverCommandTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_HandoverPreparationUnsuccessfulTransfer_ExtIEs_UNDEF_
} HandoverPreparationUnsuccessfulTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_HandoverRequestAcknowledgeTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalDLUPTNLInformationForHOList,
   T_NGAP_IEs_HandoverRequestAcknowledgeTransfer_ExtIEs_id_ULForwardingUP_TNLInformation,
   T_NGAP_IEs_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation
} HandoverRequestAcknowledgeTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_HandoverRequiredTransfer_ExtIEs_UNDEF_
} HandoverRequiredTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs_UNDEF_
} HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs_UNDEF_
} InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_LastVisitedCellInformation_ExtIEs_UNDEF_
} LastVisitedCellInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_LastVisitedCellItem_ExtIEs_UNDEF_
} LastVisitedCellItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_LastVisitedNGRANCellInformation_ExtIEs_UNDEF_
} LastVisitedNGRANCellInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_LocationReportingRequestType_ExtIEs_UNDEF_,
   T_NGAP_IEs_LocationReportingRequestType_ExtIEs_id_LocationReportingAdditionalInfo
} LocationReportingRequestType_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_MobilityRestrictionList_ExtIEs_UNDEF_,
   T_NGAP_IEs_MobilityRestrictionList_ExtIEs_id_LastEUTRAN_PLMNIdentity,
   T_NGAP_IEs_MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForServing,
   T_NGAP_IEs_MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForEquivalent
} MobilityRestrictionList_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_N3IWF_ID_ExtIEs_UNDEF_
} N3IWF_ID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_NgENB_ID_ExtIEs_UNDEF_
} NgENB_ID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_NGRAN_CGI_ExtIEs_UNDEF_
} NGRAN_CGI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_NGRAN_TNLAssociationToRemoveItem_ExtIEs_UNDEF_
} NGRAN_TNLAssociationToRemoveItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_NonDynamic5QIDescriptor_ExtIEs_UNDEF_
} NonDynamic5QIDescriptor_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_NR_CGI_ExtIEs_UNDEF_
} NR_CGI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_OverloadResponse_ExtIEs_UNDEF_
} OverloadResponse_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_OverloadStartNSSAIItem_ExtIEs_UNDEF_
} OverloadStartNSSAIItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PacketErrorRate_ExtIEs_UNDEF_
} PacketErrorRate_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PagingAttemptInformation_ExtIEs_UNDEF_
} PagingAttemptInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PathSwitchRequestAcknowledgeTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_PathSwitchRequestAcknowledgeTransfer_ExtIEs_id_AdditionalNGU_UP_TNLInformation
} PathSwitchRequestAcknowledgeTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PathSwitchRequestSetupFailedTransfer_ExtIEs_UNDEF_
} PathSwitchRequestSetupFailedTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PathSwitchRequestTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_PathSwitchRequestTransfer_ExtIEs_id_AdditionalDLQosFlowPerTNLInformation
} PathSwitchRequestTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PathSwitchRequestUnsuccessfulTransfer_ExtIEs_UNDEF_
} PathSwitchRequestUnsuccessfulTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionAggregateMaximumBitRate_ExtIEs_UNDEF_
} PDUSessionAggregateMaximumBitRate_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceAdmittedItem_ExtIEs_UNDEF_
} PDUSessionResourceAdmittedItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs_UNDEF_
} PDUSessionResourceFailedToModifyItemModCfm_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceFailedToModifyItemModRes_ExtIEs_UNDEF_
} PDUSessionResourceFailedToModifyItemModRes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs_UNDEF_
} PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs_UNDEF_
} PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs_UNDEF_
} PDUSessionResourceFailedToSetupItemHOAck_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs_UNDEF_
} PDUSessionResourceFailedToSetupItemPSReq_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceFailedToSetupItemSURes_ExtIEs_UNDEF_
} PDUSessionResourceFailedToSetupItemSURes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceHandoverItem_ExtIEs_UNDEF_
} PDUSessionResourceHandoverItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceInformationItem_ExtIEs_UNDEF_
} PDUSessionResourceInformationItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceItemCxtRelCpl_ExtIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer
} PDUSessionResourceItemCxtRelCpl_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceItemCxtRelReq_ExtIEs_UNDEF_
} PDUSessionResourceItemCxtRelReq_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceItemHORqd_ExtIEs_UNDEF_
} PDUSessionResourceItemHORqd_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyConfirmTransfer_ExtIEs_UNDEF_
} PDUSessionResourceModifyConfirmTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs_UNDEF_
} PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate,
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_id_UL_NGU_UP_TNLModifyList,
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_id_NetworkInstance,
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowAddOrModifyRequestList,
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowToReleaseList,
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation,
   T_NGAP_IEs_PDUSessionResourceModifyRequestTransferIEs_id_CommonNetworkInstance
} PDUSessionResourceModifyRequestTransferIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyResponseTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceModifyResponseTransfer_ExtIEs_id_AdditionalNGU_UP_TNLInformation
} PDUSessionResourceModifyResponseTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyIndicationTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecondaryRATUsageInformation,
   T_NGAP_IEs_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecurityResult
} PDUSessionResourceModifyIndicationTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyItemModCfm_ExtIEs_UNDEF_
} PDUSessionResourceModifyItemModCfm_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyItemModInd_ExtIEs_UNDEF_
} PDUSessionResourceModifyItemModInd_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyItemModReq_ExtIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceModifyItemModReq_ExtIEs_id_S_NSSAI
} PDUSessionResourceModifyItemModReq_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyItemModRes_ExtIEs_UNDEF_
} PDUSessionResourceModifyItemModRes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs_UNDEF_
} PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceNotifyItem_ExtIEs_UNDEF_
} PDUSessionResourceNotifyItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceNotifyReleasedTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceNotifyReleasedTransfer_ExtIEs_id_SecondaryRATUsageInformation
} PDUSessionResourceNotifyReleasedTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceNotifyTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceNotifyTransfer_ExtIEs_id_SecondaryRATUsageInformation
} PDUSessionResourceNotifyTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceReleaseCommandTransfer_ExtIEs_UNDEF_
} PDUSessionResourceReleaseCommandTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceReleasedItemNot_ExtIEs_UNDEF_
} PDUSessionResourceReleasedItemNot_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceReleasedItemPSAck_ExtIEs_UNDEF_
} PDUSessionResourceReleasedItemPSAck_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceReleasedItemPSFail_ExtIEs_UNDEF_
} PDUSessionResourceReleasedItemPSFail_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceReleasedItemRelRes_ExtIEs_UNDEF_
} PDUSessionResourceReleasedItemRelRes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceReleaseResponseTransfer_ExtIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceReleaseResponseTransfer_ExtIEs_id_SecondaryRATUsageInformation
} PDUSessionResourceReleaseResponseTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSecondaryRATUsageItem_ExtIEs_UNDEF_
} PDUSessionResourceSecondaryRATUsageItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupItemCxtReq_ExtIEs_UNDEF_
} PDUSessionResourceSetupItemCxtReq_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupItemCxtRes_ExtIEs_UNDEF_
} PDUSessionResourceSetupItemCxtRes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupItemHOReq_ExtIEs_UNDEF_
} PDUSessionResourceSetupItemHOReq_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupItemSUReq_ExtIEs_UNDEF_
} PDUSessionResourceSetupItemSUReq_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupItemSURes_ExtIEs_UNDEF_
} PDUSessionResourceSetupItemSURes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_UNDEF_,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_UL_NGU_UP_TNLInformation,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_DataForwardingNotPossible,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionType,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_SecurityIndication,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_NetworkInstance,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_QosFlowSetupRequestList,
   T_NGAP_IEs_PDUSessionResourceSetupRequestTransferIEs_id_CommonNetworkInstance
} PDUSessionResourceSetupRequestTransferIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupResponseTransfer_ExtIEs_UNDEF_
} PDUSessionResourceSetupResponseTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs_UNDEF_
} PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceSwitchedItem_ExtIEs_UNDEF_
} PDUSessionResourceSwitchedItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceToBeSwitchedDLItem_ExtIEs_UNDEF_
} PDUSessionResourceToBeSwitchedDLItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceToReleaseItemHOCmd_ExtIEs_UNDEF_
} PDUSessionResourceToReleaseItemHOCmd_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionResourceToReleaseItemRelCmd_ExtIEs_UNDEF_
} PDUSessionResourceToReleaseItemRelCmd_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PDUSessionUsageReport_ExtIEs_UNDEF_
} PDUSessionUsageReport_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PLMNSupportItem_ExtIEs_UNDEF_
} PLMNSupportItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_PWSFailedCellIDList_ExtIEs_UNDEF_
} PWSFailedCellIDList_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosCharacteristics_ExtIEs_UNDEF_
} QosCharacteristics_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowAcceptedItem_ExtIEs_UNDEF_
} QosFlowAcceptedItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowAddOrModifyRequestItem_ExtIEs_UNDEF_
} QosFlowAddOrModifyRequestItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowAddOrModifyResponseItem_ExtIEs_UNDEF_
} QosFlowAddOrModifyResponseItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowInformationItem_ExtIEs_UNDEF_,
   T_NGAP_IEs_QosFlowInformationItem_ExtIEs_id_ULForwarding
} QosFlowInformationItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowLevelQosParameters_ExtIEs_UNDEF_
} QosFlowLevelQosParameters_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowWithCauseItem_ExtIEs_UNDEF_
} QosFlowWithCauseItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowModifyConfirmItem_ExtIEs_UNDEF_
} QosFlowModifyConfirmItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowNotifyItem_ExtIEs_UNDEF_
} QosFlowNotifyItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowPerTNLInformation_ExtIEs_UNDEF_
} QosFlowPerTNLInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowPerTNLInformationItem_ExtIEs_UNDEF_
} QosFlowPerTNLInformationItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowSetupRequestItem_ExtIEs_UNDEF_
} QosFlowSetupRequestItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowItemWithDataForwarding_ExtIEs_UNDEF_
} QosFlowItemWithDataForwarding_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowSetupResponseItemSURes_ExtIEs_UNDEF_
} QosFlowSetupResponseItemSURes_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QosFlowToBeForwardedItem_ExtIEs_UNDEF_
} QosFlowToBeForwardedItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_QoSFlowsUsageReport_Item_ExtIEs_UNDEF_
} QoSFlowsUsageReport_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_RANStatusTransfer_TransparentContainer_ExtIEs_UNDEF_
} RANStatusTransfer_TransparentContainer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_RATRestrictions_Item_ExtIEs_UNDEF_
} RATRestrictions_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_RecommendedCellsForPaging_ExtIEs_UNDEF_
} RecommendedCellsForPaging_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_RecommendedCellItem_ExtIEs_UNDEF_
} RecommendedCellItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_RecommendedRANNodesForPaging_ExtIEs_UNDEF_
} RecommendedRANNodesForPaging_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_RecommendedRANNodeItem_ExtIEs_UNDEF_
} RecommendedRANNodeItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_ResetType_ExtIEs_UNDEF_
} ResetType_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SecondaryRATUsageInformation_ExtIEs_UNDEF_
} SecondaryRATUsageInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SecondaryRATDataUsageReportTransfer_ExtIEs_UNDEF_
} SecondaryRATDataUsageReportTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SecurityContext_ExtIEs_UNDEF_
} SecurityContext_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SecurityIndication_ExtIEs_UNDEF_,
   T_NGAP_IEs_SecurityIndication_ExtIEs_id_MaximumIntegrityProtectedDataRate_DL
} SecurityIndication_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SecurityResult_ExtIEs_UNDEF_
} SecurityResult_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_ServedGUAMIItem_ExtIEs_UNDEF_
} ServedGUAMIItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_ServiceAreaInformation_Item_ExtIEs_UNDEF_
} ServiceAreaInformation_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SliceOverloadItem_ExtIEs_UNDEF_
} SliceOverloadItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SliceSupportItem_ExtIEs_UNDEF_
} SliceSupportItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_S_NSSAI_ExtIEs_UNDEF_
} S_NSSAI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SONConfigurationTransfer_ExtIEs_UNDEF_
} SONConfigurationTransfer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SONInformation_ExtIEs_UNDEF_
} SONInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SONInformationReply_ExtIEs_UNDEF_
} SONInformationReply_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs_UNDEF_
} SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SourceRANNodeID_ExtIEs_UNDEF_
} SourceRANNodeID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SourceToTarget_AMFInformationReroute_ExtIEs_UNDEF_
} SourceToTarget_AMFInformationReroute_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_SupportedTAItem_ExtIEs_UNDEF_
} SupportedTAItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TAI_ExtIEs_UNDEF_
} TAI_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TAIBroadcastEUTRA_Item_ExtIEs_UNDEF_
} TAIBroadcastEUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TAIBroadcastNR_Item_ExtIEs_UNDEF_
} TAIBroadcastNR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TAICancelledEUTRA_Item_ExtIEs_UNDEF_
} TAICancelledEUTRA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TAICancelledNR_Item_ExtIEs_UNDEF_
} TAICancelledNR_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TAIListForInactiveItem_ExtIEs_UNDEF_
} TAIListForInactiveItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TAIListForPagingItem_ExtIEs_UNDEF_
} TAIListForPagingItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TargeteNB_ID_ExtIEs_UNDEF_
} TargeteNB_ID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TargetID_ExtIEs_UNDEF_
} TargetID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs_UNDEF_
} TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TargetRANNodeID_ExtIEs_UNDEF_
} TargetRANNodeID_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TNLAssociationItem_ExtIEs_UNDEF_
} TNLAssociationItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_TraceActivation_ExtIEs_UNDEF_
} TraceActivation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UEAggregateMaximumBitRate_ExtIEs_UNDEF_
} UEAggregateMaximumBitRate_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UE_associatedLogicalNG_connectionItem_ExtIEs_UNDEF_
} UE_associatedLogicalNG_connectionItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UEIdentityIndexValue_ExtIEs_UNDEF_
} UEIdentityIndexValue_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UE_NGAP_IDs_ExtIEs_UNDEF_
} UE_NGAP_IDs_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UE_NGAP_ID_pair_ExtIEs_UNDEF_
} UE_NGAP_ID_pair_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UEPagingIdentity_ExtIEs_UNDEF_
} UEPagingIdentity_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UEPresenceInAreaOfInterestItem_ExtIEs_UNDEF_
} UEPresenceInAreaOfInterestItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UERadioCapabilityForPaging_ExtIEs_UNDEF_
} UERadioCapabilityForPaging_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UESecurityCapabilities_ExtIEs_UNDEF_
} UESecurityCapabilities_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UL_NGU_UP_TNLModifyItem_ExtIEs_UNDEF_
} UL_NGU_UP_TNLModifyItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UnavailableGUAMIItem_ExtIEs_UNDEF_
} UnavailableGUAMIItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UPTransportLayerInformation_ExtIEs_UNDEF_
} UPTransportLayerInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UPTransportLayerInformationItem_ExtIEs_UNDEF_
} UPTransportLayerInformationItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UPTransportLayerInformationPairItem_ExtIEs_UNDEF_
} UPTransportLayerInformationPairItem_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UserLocationInformation_ExtIEs_UNDEF_
} UserLocationInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UserLocationInformationEUTRA_ExtIEs_UNDEF_,
   T_NGAP_IEs_UserLocationInformationEUTRA_ExtIEs_id_PSCellInformation
} UserLocationInformationEUTRA_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UserLocationInformationN3IWF_ExtIEs_UNDEF_
} UserLocationInformationN3IWF_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UserLocationInformationNR_ExtIEs_UNDEF_,
   T_NGAP_IEs_UserLocationInformationNR_ExtIEs_id_PSCellInformation
} UserLocationInformationNR_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_UserPlaneSecurityInformation_ExtIEs_UNDEF_
} UserPlaneSecurityInformation_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_VolumeTimedReport_Item_ExtIEs_UNDEF_
} VolumeTimedReport_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_WarningAreaList_ExtIEs_UNDEF_
} WarningAreaList_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_XnExtTLA_Item_ExtIEs_UNDEF_,
   T_NGAP_IEs_XnExtTLA_Item_ExtIEs_id_SCTP_TLAs
} XnExtTLA_Item_ExtIEs_TVALUE;

typedef enum {
   T_NGAP_IEs_XnTNLConfigurationInfo_ExtIEs_UNDEF_
} XnTNLConfigurationInfo_ExtIEs_TVALUE;

/**************************************************************/
/*                                                            */
/*  AdditionalQosFlowInformation                              */
/*                                                            */
/**************************************************************/
/*
AdditionalQosFlowInformation ::= ENUMERATED { more-likely(0), ... }
*/
typedef enum {
   more_likely = 0
} AdditionalQosFlowInformation_Root;

typedef OSUINT32 AdditionalQosFlowInformation;

EXTERN int asn1PE_AdditionalQosFlowInformation (OSCTXT* pctxt, AdditionalQosFlowInformation value);

EXTERN int asn1PD_AdditionalQosFlowInformation (OSCTXT* pctxt, AdditionalQosFlowInformation* pvalue);

EXTERN void asn1Print_AdditionalQosFlowInformation 
   (const char* name, const AdditionalQosFlowInformation* pvalue);

EXTERN int asn1PrtToStr_AdditionalQosFlowInformation (const char* name, 
   AdditionalQosFlowInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AdditionalQosFlowInformation (OSCTXT *pctxt, 
   const char* name, const AdditionalQosFlowInformation* pvalue);

EXTERN extern const OSEnumItem AdditionalQosFlowInformation_ENUMTAB[];
#define AdditionalQosFlowInformation_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* AdditionalQosFlowInformation_ToString (OSINT32 value);

EXTERN int AdditionalQosFlowInformation_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, AdditionalQosFlowInformation* pvalue);

EXTERN int AdditionalQosFlowInformation_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      AdditionalQosFlowInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFName                                                   */
/*                                                            */
/**************************************************************/
/*
AMFName ::= PrintableString (SIZE (1..150, ...))
*/
typedef const char* AMFName;

EXTERN int asn1PE_AMFName (OSCTXT* pctxt, AMFName value);

EXTERN int asn1PD_AMFName (OSCTXT* pctxt, AMFName* pvalue);

EXTERN void asn1Print_AMFName (const char* name, const AMFName pvalue);

EXTERN int asn1PrtToStr_AMFName (const char* name, AMFName pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFName (OSCTXT *pctxt, 
   const char* name, const AMFName pvalue);

/**************************************************************/
/*                                                            */
/*  AMFPointer                                                */
/*                                                            */
/**************************************************************/
/*
AMFPointer ::= BIT STRING  (SIZE (6))
*/
typedef ASN1BitStr32 AMFPointer;

EXTERN int asn1PE_AMFPointer (OSCTXT* pctxt, AMFPointer value);

EXTERN int asn1PD_AMFPointer (OSCTXT* pctxt, AMFPointer* pvalue);

EXTERN void asn1Print_AMFPointer (const char* name, const AMFPointer* pvalue);

EXTERN int asn1PrtToStr_AMFPointer (const char* name, AMFPointer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFPointer (OSCTXT *pctxt, 
   const char* name, const AMFPointer* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFRegionID                                               */
/*                                                            */
/**************************************************************/
/*
AMFRegionID ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 AMFRegionID;

EXTERN int asn1PE_AMFRegionID (OSCTXT* pctxt, AMFRegionID value);

EXTERN int asn1PD_AMFRegionID (OSCTXT* pctxt, AMFRegionID* pvalue);

EXTERN void asn1Print_AMFRegionID (const char* name, const AMFRegionID* pvalue);

EXTERN int asn1PrtToStr_AMFRegionID (const char* name, AMFRegionID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFRegionID (OSCTXT *pctxt, 
   const char* name, const AMFRegionID* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFSetID                                                  */
/*                                                            */
/**************************************************************/
/*
AMFSetID ::= BIT STRING  (SIZE (10))
*/
typedef ASN1BitStr32 AMFSetID;

EXTERN int asn1PE_AMFSetID (OSCTXT* pctxt, AMFSetID value);

EXTERN int asn1PD_AMFSetID (OSCTXT* pctxt, AMFSetID* pvalue);

EXTERN void asn1Print_AMFSetID (const char* name, const AMFSetID* pvalue);

EXTERN int asn1PrtToStr_AMFSetID (const char* name, AMFSetID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFSetID (OSCTXT *pctxt, 
   const char* name, const AMFSetID* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_UE_NGAP_ID                                            */
/*                                                            */
/**************************************************************/
/*
AMF-UE-NGAP-ID ::= INTEGER (0..1099511627775)
*/
typedef OSUINT64 AMF_UE_NGAP_ID;

EXTERN int asn1PE_AMF_UE_NGAP_ID (OSCTXT* pctxt, AMF_UE_NGAP_ID value);

EXTERN int asn1PD_AMF_UE_NGAP_ID (OSCTXT* pctxt, AMF_UE_NGAP_ID* pvalue);

EXTERN void asn1Print_AMF_UE_NGAP_ID (const char* name, const AMF_UE_NGAP_ID* pvalue);

EXTERN int asn1PrtToStr_AMF_UE_NGAP_ID (const char* name, AMF_UE_NGAP_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_UE_NGAP_ID (OSCTXT *pctxt, 
   const char* name, const AMF_UE_NGAP_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  AveragingWindow                                           */
/*                                                            */
/**************************************************************/
/*
AveragingWindow ::= INTEGER (0..4095, ...)
*/
typedef OSUINT32 AveragingWindow;

EXTERN int asn1PE_AveragingWindow (OSCTXT* pctxt, AveragingWindow value);

EXTERN int asn1PD_AveragingWindow (OSCTXT* pctxt, AveragingWindow* pvalue);

EXTERN void asn1Print_AveragingWindow 
   (const char* name, const AveragingWindow* pvalue);

EXTERN int asn1PrtToStr_AveragingWindow (const char* name, AveragingWindow* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AveragingWindow (OSCTXT *pctxt, 
   const char* name, const AveragingWindow* pvalue);

/**************************************************************/
/*                                                            */
/*  BitRate                                                   */
/*                                                            */
/**************************************************************/
/*
 B
BitRate ::= INTEGER (0..4000000000000, ...)
*/
typedef OSUINT64 BitRate;

EXTERN int asn1PE_BitRate (OSCTXT* pctxt, BitRate value);

EXTERN int asn1PD_BitRate (OSCTXT* pctxt, BitRate* pvalue);

EXTERN void asn1Print_BitRate (const char* name, const BitRate* pvalue);

EXTERN int asn1PrtToStr_BitRate (const char* name, BitRate* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BitRate (OSCTXT *pctxt, 
   const char* name, const BitRate* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelAllWarningMessages                                  */
/*                                                            */
/**************************************************************/
/*
 C
CancelAllWarningMessages ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   true_ = 0
} CancelAllWarningMessages_Root;

typedef OSUINT32 CancelAllWarningMessages;

EXTERN int asn1PE_CancelAllWarningMessages (OSCTXT* pctxt, CancelAllWarningMessages value);

EXTERN int asn1PD_CancelAllWarningMessages (OSCTXT* pctxt, CancelAllWarningMessages* pvalue);

EXTERN void asn1Print_CancelAllWarningMessages 
   (const char* name, const CancelAllWarningMessages* pvalue);

EXTERN int asn1PrtToStr_CancelAllWarningMessages (const char* name, 
   CancelAllWarningMessages* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelAllWarningMessages (OSCTXT *pctxt, 
   const char* name, const CancelAllWarningMessages* pvalue);

EXTERN extern const OSEnumItem CancelAllWarningMessages_ENUMTAB[];
#define CancelAllWarningMessages_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* CancelAllWarningMessages_ToString (OSINT32 value);

EXTERN int CancelAllWarningMessages_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CancelAllWarningMessages* pvalue);

EXTERN int CancelAllWarningMessages_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CancelAllWarningMessages* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  CauseMisc                                                 */
/*                                                            */
/**************************************************************/
/*
CauseMisc ::= ENUMERATED { control-processing-overload(0), not-enough-user-plane-processing-resources(1), hardware-failure(2), om-intervention(3), unknown-PLMN(4), unspecified(5), ... }
*/
typedef enum {
   control_processing_overload = 0,
   not_enough_user_plane_processing_resources = 1,
   hardware_failure = 2,
   om_intervention = 3,
   unknown_PLMN = 4,
   unspecified = 5
} CauseMisc_Root;

typedef OSUINT32 CauseMisc;

EXTERN int asn1PE_CauseMisc (OSCTXT* pctxt, CauseMisc value);

EXTERN int asn1PD_CauseMisc (OSCTXT* pctxt, CauseMisc* pvalue);

EXTERN void asn1Print_CauseMisc (const char* name, const CauseMisc* pvalue);

EXTERN int asn1PrtToStr_CauseMisc (const char* name, CauseMisc* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CauseMisc (OSCTXT *pctxt, 
   const char* name, const CauseMisc* pvalue);

EXTERN extern const OSEnumItem CauseMisc_ENUMTAB[];
#define CauseMisc_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* CauseMisc_ToString (OSINT32 value);

EXTERN int CauseMisc_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CauseMisc* pvalue);

EXTERN int CauseMisc_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CauseMisc* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseNas                                                  */
/*                                                            */
/**************************************************************/
/*
CauseNas ::= ENUMERATED { normal-release(0), authentication-failure(1), deregister(2), unspecified(3), ... }
*/
typedef enum {
   normal_release = 0,
   authentication_failure = 1,
   deregister = 2,
   unspecified_1 = 3
} CauseNas_Root;

typedef OSUINT32 CauseNas;

EXTERN int asn1PE_CauseNas (OSCTXT* pctxt, CauseNas value);

EXTERN int asn1PD_CauseNas (OSCTXT* pctxt, CauseNas* pvalue);

EXTERN void asn1Print_CauseNas (const char* name, const CauseNas* pvalue);

EXTERN int asn1PrtToStr_CauseNas (const char* name, CauseNas* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CauseNas (OSCTXT *pctxt, 
   const char* name, const CauseNas* pvalue);

EXTERN extern const OSEnumItem CauseNas_ENUMTAB[];
#define CauseNas_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* CauseNas_ToString (OSINT32 value);

EXTERN int CauseNas_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CauseNas* pvalue);

EXTERN int CauseNas_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CauseNas* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseProtocol                                             */
/*                                                            */
/**************************************************************/
/*
CauseProtocol ::= ENUMERATED { transfer-syntax-error(0), abstract-syntax-error-reject(1), abstract-syntax-error-ignore-and-notify(2), message-not-compatible-with-receiver-state(3), semantic-error(4), abstract-syntax-error-falsely-constructed-message(5), unspecified(6), ... }
*/
typedef enum {
   transfer_syntax_error = 0,
   abstract_syntax_error_reject = 1,
   abstract_syntax_error_ignore_and_notify = 2,
   message_not_compatible_with_receiver_state = 3,
   semantic_error = 4,
   abstract_syntax_error_falsely_constructed_message = 5,
   unspecified_2 = 6
} CauseProtocol_Root;

typedef OSUINT32 CauseProtocol;

EXTERN int asn1PE_CauseProtocol (OSCTXT* pctxt, CauseProtocol value);

EXTERN int asn1PD_CauseProtocol (OSCTXT* pctxt, CauseProtocol* pvalue);

EXTERN void asn1Print_CauseProtocol (const char* name, const CauseProtocol* pvalue);

EXTERN int asn1PrtToStr_CauseProtocol (const char* name, CauseProtocol* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CauseProtocol (OSCTXT *pctxt, 
   const char* name, const CauseProtocol* pvalue);

EXTERN extern const OSEnumItem CauseProtocol_ENUMTAB[];
#define CauseProtocol_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* CauseProtocol_ToString (OSINT32 value);

EXTERN int CauseProtocol_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CauseProtocol* pvalue);

EXTERN int CauseProtocol_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CauseProtocol* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseRadioNetwork                                         */
/*                                                            */
/**************************************************************/
/*
CauseRadioNetwork ::= ENUMERATED { unspecified(0), txnrelocoverall-expiry(1), successful-handover(2), release-due-to-ngran-generated-reason(3), release-due-to-5gc-generated-reason(4), handover-cancelled(5), partial-handover(6), ho-failure-in-target-5GC-ngran-node-or-target-system(7), ho-target-not-allowed(8), tngrelocoverall-expiry(9), tngrelocprep-expiry(10), cell-not-available(11), unknown-targetID(12), no-radio-resources-available-in-target-cell(13), unknown-local-UE-NGAP-ID(14), inconsistent-remote-UE-NGAP-ID(15), handover-desirable-for-radio-reason(16), time-critical-handover(17), resource-optimisation-handover(18), reduce-load-in-serving-cell(19), user-inactivity(20), radio-connection-with-ue-lost(21), radio-resources-not-available(22), invalid-qos-combination(23), failure-in-radio-interface-procedure(24), interaction-with-other-procedure(25), unknown-PDU-session-ID(26), unkown-qos-flow-ID(27), multiple-PDU-session-ID-instances(28), multiple-qos-flow-ID-instances(29), encryption-and-or-integrity-protection-algorithms-not-supported(30), ng-intra-system-handover-triggered(31), ng-inter-system-handover-triggered(32), xn-handover-triggered(33), not-supported-5QI-value(34), ue-context-transfer(35), ims-voice-eps-fallback-or-rat-fallback-triggered(36), up-integrity-protection-not-possible(37), up-confidentiality-protection-not-possible(38), slice-not-supported(39), ue-in-rrc-inactive-state-not-reachable(40), redirection(41), resources-not-available-for-the-slice(42), ue-max-integrity-protected-data-rate-reason(43), release-due-to-cn-detected-mobility(44), ..., n26-interface-not-available(45), release-due-to-pre-emption(46), multiple-location-reporting-reference-ID-instances(47) }
*/
typedef enum {
   unspecified_3 = 0,
   txnrelocoverall_expiry = 1,
   successful_handover = 2,
   release_due_to_ngran_generated_reason = 3,
   release_due_to_5gc_generated_reason = 4,
   handover_cancelled = 5,
   partial_handover = 6,
   ho_failure_in_target_5GC_ngran_node_or_target_system = 7,
   ho_target_not_allowed = 8,
   tngrelocoverall_expiry = 9,
   tngrelocprep_expiry = 10,
   cell_not_available = 11,
   unknown_targetID = 12,
   no_radio_resources_available_in_target_cell = 13,
   unknown_local_UE_NGAP_ID = 14,
   inconsistent_remote_UE_NGAP_ID = 15,
   handover_desirable_for_radio_reason = 16,
   time_critical_handover = 17,
   resource_optimisation_handover = 18,
   reduce_load_in_serving_cell = 19,
   user_inactivity = 20,
   radio_connection_with_ue_lost = 21,
   radio_resources_not_available = 22,
   invalid_qos_combination = 23,
   failure_in_radio_interface_procedure = 24,
   interaction_with_other_procedure = 25,
   unknown_PDU_session_ID = 26,
   unkown_qos_flow_ID = 27,
   multiple_PDU_session_ID_instances = 28,
   multiple_qos_flow_ID_instances = 29,
   encryption_and_or_integrity_protection_algorithms_not_supported = 30,
   ng_intra_system_handover_triggered = 31,
   ng_inter_system_handover_triggered = 32,
   xn_handover_triggered = 33,
   not_supported_5QI_value = 34,
   ue_context_transfer = 35,
   ims_voice_eps_fallback_or_rat_fallback_triggered = 36,
   up_integrity_protection_not_possible = 37,
   up_confidentiality_protection_not_possible = 38,
   slice_not_supported = 39,
   ue_in_rrc_inactive_state_not_reachable = 40,
   redirection = 41,
   resources_not_available_for_the_slice = 42,
   ue_max_integrity_protected_data_rate_reason = 43,
   release_due_to_cn_detected_mobility = 44
} CauseRadioNetwork_Root;

typedef enum {
   n26_interface_not_available = 45,
   release_due_to_pre_emption = 46,
   multiple_location_reporting_reference_ID_instances = 47
} CauseRadioNetwork_Ext;

typedef OSUINT32 CauseRadioNetwork;

EXTERN int asn1PE_CauseRadioNetwork (OSCTXT* pctxt, CauseRadioNetwork value);

EXTERN int asn1PD_CauseRadioNetwork (OSCTXT* pctxt, CauseRadioNetwork* pvalue);

EXTERN void asn1Print_CauseRadioNetwork 
   (const char* name, const CauseRadioNetwork* pvalue);

EXTERN int asn1PrtToStr_CauseRadioNetwork (const char* name, 
   CauseRadioNetwork* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CauseRadioNetwork (OSCTXT *pctxt, 
   const char* name, const CauseRadioNetwork* pvalue);

EXTERN extern const OSEnumItem CauseRadioNetwork_ENUMTAB[];
#define CauseRadioNetwork_ENUMTABSIZE 48

EXTERN const OSUTF8CHAR* CauseRadioNetwork_ToString (OSINT32 value);

EXTERN int CauseRadioNetwork_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CauseRadioNetwork* pvalue);

EXTERN int CauseRadioNetwork_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CauseRadioNetwork* pvalue);

/**************************************************************/
/*                                                            */
/*  CauseTransport                                            */
/*                                                            */
/**************************************************************/
/*
CauseTransport ::= ENUMERATED { transport-resource-unavailable(0), unspecified(1), ... }
*/
typedef enum {
   transport_resource_unavailable = 0,
   unspecified_4 = 1
} CauseTransport_Root;

typedef OSUINT32 CauseTransport;

EXTERN int asn1PE_CauseTransport (OSCTXT* pctxt, CauseTransport value);

EXTERN int asn1PD_CauseTransport (OSCTXT* pctxt, CauseTransport* pvalue);

EXTERN void asn1Print_CauseTransport (const char* name, const CauseTransport* pvalue);

EXTERN int asn1PrtToStr_CauseTransport (const char* name, CauseTransport* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CauseTransport (OSCTXT *pctxt, 
   const char* name, const CauseTransport* pvalue);

EXTERN extern const OSEnumItem CauseTransport_ENUMTAB[];
#define CauseTransport_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* CauseTransport_ToString (OSINT32 value);

EXTERN int CauseTransport_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CauseTransport* pvalue);

EXTERN int CauseTransport_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CauseTransport* pvalue);

/**************************************************************/
/*                                                            */
/*  CellSize                                                  */
/*                                                            */
/**************************************************************/
/*
CellSize ::= ENUMERATED { verysmall(0), small(1), medium(2), large(3), ... }
*/
typedef enum {
   verysmall = 0,
   small_ = 1,
   medium = 2,
   large_ = 3
} CellSize_Root;

typedef OSUINT32 CellSize;

EXTERN int asn1PE_CellSize (OSCTXT* pctxt, CellSize value);

EXTERN int asn1PD_CellSize (OSCTXT* pctxt, CellSize* pvalue);

EXTERN void asn1Print_CellSize (const char* name, const CellSize* pvalue);

EXTERN int asn1PrtToStr_CellSize (const char* name, CellSize* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellSize (OSCTXT *pctxt, 
   const char* name, const CellSize* pvalue);

EXTERN extern const OSEnumItem CellSize_ENUMTAB[];
#define CellSize_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* CellSize_ToString (OSINT32 value);

EXTERN int CellSize_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CellSize* pvalue);

EXTERN int CellSize_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CellSize* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictionsForServing                              */
/*                                                            */
/**************************************************************/
/*
CNTypeRestrictionsForServing ::= ENUMERATED { epc-forbidden(0), ... }
*/
typedef enum {
   epc_forbidden_1 = 0
} CNTypeRestrictionsForServing_Root;

typedef OSUINT32 CNTypeRestrictionsForServing;

EXTERN int asn1PE_CNTypeRestrictionsForServing (OSCTXT* pctxt, CNTypeRestrictionsForServing value);

EXTERN int asn1PD_CNTypeRestrictionsForServing (OSCTXT* pctxt, CNTypeRestrictionsForServing* pvalue);

EXTERN void asn1Print_CNTypeRestrictionsForServing 
   (const char* name, const CNTypeRestrictionsForServing* pvalue);

EXTERN int asn1PrtToStr_CNTypeRestrictionsForServing (const char* name, 
   CNTypeRestrictionsForServing* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNTypeRestrictionsForServing (OSCTXT *pctxt, 
   const char* name, const CNTypeRestrictionsForServing* pvalue);

EXTERN extern const OSEnumItem CNTypeRestrictionsForServing_ENUMTAB[];
#define CNTypeRestrictionsForServing_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* CNTypeRestrictionsForServing_ToString (OSINT32 value);

EXTERN int CNTypeRestrictionsForServing_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CNTypeRestrictionsForServing* pvalue);

EXTERN int CNTypeRestrictionsForServing_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      CNTypeRestrictionsForServing* pvalue);

/**************************************************************/
/*                                                            */
/*  CommonNetworkInstance                                     */
/*                                                            */
/**************************************************************/
/*
CommonNetworkInstance ::= OCTET STRING
*/
typedef OSDynOctStr CommonNetworkInstance;

EXTERN int asn1PE_CommonNetworkInstance (OSCTXT* pctxt, CommonNetworkInstance value);

EXTERN int asn1PD_CommonNetworkInstance (OSCTXT* pctxt, CommonNetworkInstance* pvalue);

EXTERN void asn1Print_CommonNetworkInstance 
   (const char* name, const CommonNetworkInstance* pvalue);

EXTERN int asn1PrtToStr_CommonNetworkInstance (const char* name, 
   CommonNetworkInstance* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CommonNetworkInstance (OSCTXT *pctxt, 
   const char* name, const CommonNetworkInstance* pvalue);

EXTERN int asn1Init_CommonNetworkInstance (CommonNetworkInstance* pvalue);

/**************************************************************/
/*                                                            */
/*  ConcurrentWarningMessageInd                               */
/*                                                            */
/**************************************************************/
/*
ConcurrentWarningMessageInd ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   true__1 = 0
} ConcurrentWarningMessageInd_Root;

typedef OSUINT32 ConcurrentWarningMessageInd;

EXTERN int asn1PE_ConcurrentWarningMessageInd (OSCTXT* pctxt, ConcurrentWarningMessageInd value);

EXTERN int asn1PD_ConcurrentWarningMessageInd (OSCTXT* pctxt, ConcurrentWarningMessageInd* pvalue);

EXTERN void asn1Print_ConcurrentWarningMessageInd 
   (const char* name, const ConcurrentWarningMessageInd* pvalue);

EXTERN int asn1PrtToStr_ConcurrentWarningMessageInd (const char* name, 
   ConcurrentWarningMessageInd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ConcurrentWarningMessageInd (OSCTXT *pctxt, 
   const char* name, const ConcurrentWarningMessageInd* pvalue);

EXTERN extern const OSEnumItem ConcurrentWarningMessageInd_ENUMTAB[];
#define ConcurrentWarningMessageInd_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ConcurrentWarningMessageInd_ToString (OSINT32 value);

EXTERN int ConcurrentWarningMessageInd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ConcurrentWarningMessageInd* pvalue);

EXTERN int ConcurrentWarningMessageInd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ConcurrentWarningMessageInd* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfidentialityProtectionIndication                       */
/*                                                            */
/**************************************************************/
/*
ConfidentialityProtectionIndication ::= ENUMERATED { required(0), preferred(1), not-needed(2), ... }
*/
typedef enum {
   required = 0,
   preferred = 1,
   not_needed = 2
} ConfidentialityProtectionIndication_Root;

typedef OSUINT32 ConfidentialityProtectionIndication;

EXTERN int asn1PE_ConfidentialityProtectionIndication (OSCTXT* pctxt, ConfidentialityProtectionIndication value);

EXTERN int asn1PD_ConfidentialityProtectionIndication (OSCTXT* pctxt, ConfidentialityProtectionIndication* pvalue);

EXTERN void asn1Print_ConfidentialityProtectionIndication 
   (const char* name, const ConfidentialityProtectionIndication* pvalue);

EXTERN int asn1PrtToStr_ConfidentialityProtectionIndication (const char* name, 
   ConfidentialityProtectionIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ConfidentialityProtectionIndication (OSCTXT *pctxt, 
   const char* name, const ConfidentialityProtectionIndication* pvalue);

EXTERN extern const OSEnumItem ConfidentialityProtectionIndication_ENUMTAB[];
#define ConfidentialityProtectionIndication_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* ConfidentialityProtectionIndication_ToString (OSINT32 value);

EXTERN int ConfidentialityProtectionIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ConfidentialityProtectionIndication* pvalue);

EXTERN int ConfidentialityProtectionIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ConfidentialityProtectionIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfidentialityProtectionResult                           */
/*                                                            */
/**************************************************************/
/*
ConfidentialityProtectionResult ::= ENUMERATED { performed(0), not-performed(1), ... }
*/
typedef enum {
   performed = 0,
   not_performed = 1
} ConfidentialityProtectionResult_Root;

typedef OSUINT32 ConfidentialityProtectionResult;

EXTERN int asn1PE_ConfidentialityProtectionResult (OSCTXT* pctxt, ConfidentialityProtectionResult value);

EXTERN int asn1PD_ConfidentialityProtectionResult (OSCTXT* pctxt, ConfidentialityProtectionResult* pvalue);

EXTERN void asn1Print_ConfidentialityProtectionResult 
   (const char* name, const ConfidentialityProtectionResult* pvalue);

EXTERN int asn1PrtToStr_ConfidentialityProtectionResult (const char* name, 
   ConfidentialityProtectionResult* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ConfidentialityProtectionResult (OSCTXT *pctxt, 
   const char* name, const ConfidentialityProtectionResult* pvalue);

EXTERN extern const OSEnumItem ConfidentialityProtectionResult_ENUMTAB[];
#define ConfidentialityProtectionResult_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* ConfidentialityProtectionResult_ToString (OSINT32 value);

EXTERN int ConfidentialityProtectionResult_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ConfidentialityProtectionResult* pvalue);

EXTERN int ConfidentialityProtectionResult_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      ConfidentialityProtectionResult* pvalue);

/**************************************************************/
/*                                                            */
/*  DataCodingScheme                                          */
/*                                                            */
/**************************************************************/
/*
 D
DataCodingScheme ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 DataCodingScheme;

EXTERN int asn1PE_DataCodingScheme (OSCTXT* pctxt, DataCodingScheme value);

EXTERN int asn1PD_DataCodingScheme (OSCTXT* pctxt, DataCodingScheme* pvalue);

EXTERN void asn1Print_DataCodingScheme 
   (const char* name, const DataCodingScheme* pvalue);

EXTERN int asn1PrtToStr_DataCodingScheme (const char* name, DataCodingScheme* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DataCodingScheme (OSCTXT *pctxt, 
   const char* name, const DataCodingScheme* pvalue);

/**************************************************************/
/*                                                            */
/*  DataForwardingAccepted                                    */
/*                                                            */
/**************************************************************/
/*
DataForwardingAccepted ::= ENUMERATED { data-forwarding-accepted(0), ... }
*/
typedef enum {
   data_forwarding_accepted = 0
} DataForwardingAccepted_Root;

typedef OSUINT32 DataForwardingAccepted;

EXTERN int asn1PE_DataForwardingAccepted (OSCTXT* pctxt, DataForwardingAccepted value);

EXTERN int asn1PD_DataForwardingAccepted (OSCTXT* pctxt, DataForwardingAccepted* pvalue);

EXTERN void asn1Print_DataForwardingAccepted 
   (const char* name, const DataForwardingAccepted* pvalue);

EXTERN int asn1PrtToStr_DataForwardingAccepted (const char* name, 
   DataForwardingAccepted* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DataForwardingAccepted (OSCTXT *pctxt, 
   const char* name, const DataForwardingAccepted* pvalue);

EXTERN extern const OSEnumItem DataForwardingAccepted_ENUMTAB[];
#define DataForwardingAccepted_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* DataForwardingAccepted_ToString (OSINT32 value);

EXTERN int DataForwardingAccepted_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DataForwardingAccepted* pvalue);

EXTERN int DataForwardingAccepted_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, DataForwardingAccepted* pvalue);

/**************************************************************/
/*                                                            */
/*  DataForwardingNotPossible                                 */
/*                                                            */
/**************************************************************/
/*
DataForwardingNotPossible ::= ENUMERATED { data-forwarding-not-possible(0), ... }
*/
typedef enum {
   data_forwarding_not_possible = 0
} DataForwardingNotPossible_Root;

typedef OSUINT32 DataForwardingNotPossible;

EXTERN int asn1PE_DataForwardingNotPossible (OSCTXT* pctxt, DataForwardingNotPossible value);

EXTERN int asn1PD_DataForwardingNotPossible (OSCTXT* pctxt, DataForwardingNotPossible* pvalue);

EXTERN void asn1Print_DataForwardingNotPossible 
   (const char* name, const DataForwardingNotPossible* pvalue);

EXTERN int asn1PrtToStr_DataForwardingNotPossible (const char* name, 
   DataForwardingNotPossible* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DataForwardingNotPossible (OSCTXT *pctxt, 
   const char* name, const DataForwardingNotPossible* pvalue);

EXTERN extern const OSEnumItem DataForwardingNotPossible_ENUMTAB[];
#define DataForwardingNotPossible_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* DataForwardingNotPossible_ToString (OSINT32 value);

EXTERN int DataForwardingNotPossible_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DataForwardingNotPossible* pvalue);

EXTERN int DataForwardingNotPossible_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, DataForwardingNotPossible* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  DelayCritical                                             */
/*                                                            */
/**************************************************************/
/*
DelayCritical ::= ENUMERATED { delay-critical(0), non-delay-critical(1), ... }
*/
typedef enum {
   delay_critical = 0,
   non_delay_critical = 1
} DelayCritical_Root;

typedef OSUINT32 DelayCritical;

EXTERN int asn1PE_DelayCritical (OSCTXT* pctxt, DelayCritical value);

EXTERN int asn1PD_DelayCritical (OSCTXT* pctxt, DelayCritical* pvalue);

EXTERN void asn1Print_DelayCritical (const char* name, const DelayCritical* pvalue);

EXTERN int asn1PrtToStr_DelayCritical (const char* name, DelayCritical* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DelayCritical (OSCTXT *pctxt, 
   const char* name, const DelayCritical* pvalue);

EXTERN extern const OSEnumItem DelayCritical_ENUMTAB[];
#define DelayCritical_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* DelayCritical_ToString (OSINT32 value);

EXTERN int DelayCritical_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DelayCritical* pvalue);

EXTERN int DelayCritical_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, DelayCritical* pvalue);

/**************************************************************/
/*                                                            */
/*  DLForwarding                                              */
/*                                                            */
/**************************************************************/
/*
DLForwarding ::= ENUMERATED { dl-forwarding-proposed(0), ... }
*/
typedef enum {
   dl_forwarding_proposed = 0
} DLForwarding_Root;

typedef OSUINT32 DLForwarding;

EXTERN int asn1PE_DLForwarding (OSCTXT* pctxt, DLForwarding value);

EXTERN int asn1PD_DLForwarding (OSCTXT* pctxt, DLForwarding* pvalue);

EXTERN void asn1Print_DLForwarding (const char* name, const DLForwarding* pvalue);

EXTERN int asn1PrtToStr_DLForwarding (const char* name, DLForwarding* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DLForwarding (OSCTXT *pctxt, 
   const char* name, const DLForwarding* pvalue);

EXTERN extern const OSEnumItem DLForwarding_ENUMTAB[];
#define DLForwarding_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* DLForwarding_ToString (OSINT32 value);

EXTERN int DLForwarding_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DLForwarding* pvalue);

EXTERN int DLForwarding_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, DLForwarding* pvalue);

/**************************************************************/
/*                                                            */
/*  DL_NGU_TNLInformationReused                               */
/*                                                            */
/**************************************************************/
/*
DL-NGU-TNLInformationReused ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   true__2 = 0
} DL_NGU_TNLInformationReused_Root;

typedef OSUINT32 DL_NGU_TNLInformationReused;

EXTERN int asn1PE_DL_NGU_TNLInformationReused (OSCTXT* pctxt, DL_NGU_TNLInformationReused value);

EXTERN int asn1PD_DL_NGU_TNLInformationReused (OSCTXT* pctxt, DL_NGU_TNLInformationReused* pvalue);

EXTERN void asn1Print_DL_NGU_TNLInformationReused 
   (const char* name, const DL_NGU_TNLInformationReused* pvalue);

EXTERN int asn1PrtToStr_DL_NGU_TNLInformationReused (const char* name, 
   DL_NGU_TNLInformationReused* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DL_NGU_TNLInformationReused (OSCTXT *pctxt, 
   const char* name, const DL_NGU_TNLInformationReused* pvalue);

EXTERN extern const OSEnumItem DL_NGU_TNLInformationReused_ENUMTAB[];
#define DL_NGU_TNLInformationReused_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* DL_NGU_TNLInformationReused_ToString (OSINT32 value);

EXTERN int DL_NGU_TNLInformationReused_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DL_NGU_TNLInformationReused* pvalue);

EXTERN int DL_NGU_TNLInformationReused_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      DL_NGU_TNLInformationReused* pvalue);

/**************************************************************/
/*                                                            */
/*  DirectForwardingPathAvailability                          */
/*                                                            */
/**************************************************************/
/*
DirectForwardingPathAvailability ::= ENUMERATED { direct-path-available(0), ... }
*/
typedef enum {
   direct_path_available = 0
} DirectForwardingPathAvailability_Root;

typedef OSUINT32 DirectForwardingPathAvailability;

EXTERN int asn1PE_DirectForwardingPathAvailability (OSCTXT* pctxt, DirectForwardingPathAvailability value);

EXTERN int asn1PD_DirectForwardingPathAvailability (OSCTXT* pctxt, DirectForwardingPathAvailability* pvalue);

EXTERN void asn1Print_DirectForwardingPathAvailability 
   (const char* name, const DirectForwardingPathAvailability* pvalue);

EXTERN int asn1PrtToStr_DirectForwardingPathAvailability (const char* name, 
   DirectForwardingPathAvailability* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DirectForwardingPathAvailability (OSCTXT *pctxt, 
   const char* name, const DirectForwardingPathAvailability* pvalue);

EXTERN extern const OSEnumItem DirectForwardingPathAvailability_ENUMTAB[];
#define DirectForwardingPathAvailability_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* DirectForwardingPathAvailability_ToString (OSINT32 value);

EXTERN int DirectForwardingPathAvailability_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DirectForwardingPathAvailability* pvalue);

EXTERN int DirectForwardingPathAvailability_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      DirectForwardingPathAvailability* pvalue);

/**************************************************************/
/*                                                            */
/*  DRB_ID                                                    */
/*                                                            */
/**************************************************************/
/*
DRB-ID ::= INTEGER (1..32, ...)
*/
typedef OSUINT32 DRB_ID;

EXTERN int asn1PE_DRB_ID (OSCTXT* pctxt, DRB_ID value);

EXTERN int asn1PD_DRB_ID (OSCTXT* pctxt, DRB_ID* pvalue);

EXTERN void asn1Print_DRB_ID (const char* name, const DRB_ID* pvalue);

EXTERN int asn1PrtToStr_DRB_ID (const char* name, DRB_ID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRB_ID (OSCTXT *pctxt, 
   const char* name, const DRB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaID                                           */
/*                                                            */
/**************************************************************/
/*
 E
EmergencyAreaID ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN EmergencyAreaID {
   OSOCTET data[3];
} EmergencyAreaID;

EXTERN int asn1PE_EmergencyAreaID (OSCTXT* pctxt, EmergencyAreaID* pvalue);

EXTERN int asn1PD_EmergencyAreaID (OSCTXT* pctxt, EmergencyAreaID* pvalue);

EXTERN void asn1Print_EmergencyAreaID 
   (const char* name, const EmergencyAreaID* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaID (const char* name, EmergencyAreaID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaID (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaID* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyFallbackRequestIndicator                         */
/*                                                            */
/**************************************************************/
/*
EmergencyFallbackRequestIndicator ::= ENUMERATED { emergency-fallback-requested(0), ... }
*/
typedef enum {
   emergency_fallback_requested = 0
} EmergencyFallbackRequestIndicator_Root;

typedef OSUINT32 EmergencyFallbackRequestIndicator;

EXTERN int asn1PE_EmergencyFallbackRequestIndicator (OSCTXT* pctxt, EmergencyFallbackRequestIndicator value);

EXTERN int asn1PD_EmergencyFallbackRequestIndicator (OSCTXT* pctxt, EmergencyFallbackRequestIndicator* pvalue);

EXTERN void asn1Print_EmergencyFallbackRequestIndicator 
   (const char* name, const EmergencyFallbackRequestIndicator* pvalue);

EXTERN int asn1PrtToStr_EmergencyFallbackRequestIndicator (const char* name, 
   EmergencyFallbackRequestIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyFallbackRequestIndicator (OSCTXT *pctxt, 
   const char* name, const EmergencyFallbackRequestIndicator* pvalue);

EXTERN extern const OSEnumItem EmergencyFallbackRequestIndicator_ENUMTAB[];
#define EmergencyFallbackRequestIndicator_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* EmergencyFallbackRequestIndicator_ToString (OSINT32 value);

EXTERN int EmergencyFallbackRequestIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, EmergencyFallbackRequestIndicator* pvalue);

EXTERN int EmergencyFallbackRequestIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      EmergencyFallbackRequestIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyServiceTargetCN                                  */
/*                                                            */
/**************************************************************/
/*
EmergencyServiceTargetCN ::= ENUMERATED { fiveGC(0), epc(1), ... }
*/
typedef enum {
   fiveGC = 0,
   epc = 1
} EmergencyServiceTargetCN_Root;

typedef OSUINT32 EmergencyServiceTargetCN;

EXTERN int asn1PE_EmergencyServiceTargetCN (OSCTXT* pctxt, EmergencyServiceTargetCN value);

EXTERN int asn1PD_EmergencyServiceTargetCN (OSCTXT* pctxt, EmergencyServiceTargetCN* pvalue);

EXTERN void asn1Print_EmergencyServiceTargetCN 
   (const char* name, const EmergencyServiceTargetCN* pvalue);

EXTERN int asn1PrtToStr_EmergencyServiceTargetCN (const char* name, 
   EmergencyServiceTargetCN* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyServiceTargetCN (OSCTXT *pctxt, 
   const char* name, const EmergencyServiceTargetCN* pvalue);

EXTERN extern const OSEnumItem EmergencyServiceTargetCN_ENUMTAB[];
#define EmergencyServiceTargetCN_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* EmergencyServiceTargetCN_ToString (OSINT32 value);

EXTERN int EmergencyServiceTargetCN_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, EmergencyServiceTargetCN* pvalue);

EXTERN int EmergencyServiceTargetCN_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, EmergencyServiceTargetCN* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  EN_DCSONConfigurationTransfer                             */
/*                                                            */
/**************************************************************/
/*
EN-DCSONConfigurationTransfer ::= OCTET STRING
*/
typedef OSDynOctStr EN_DCSONConfigurationTransfer;

EXTERN int asn1PE_EN_DCSONConfigurationTransfer (OSCTXT* pctxt, EN_DCSONConfigurationTransfer value);

EXTERN int asn1PD_EN_DCSONConfigurationTransfer (OSCTXT* pctxt, EN_DCSONConfigurationTransfer* pvalue);

EXTERN void asn1Print_EN_DCSONConfigurationTransfer 
   (const char* name, const EN_DCSONConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_EN_DCSONConfigurationTransfer (const char* name, 
   EN_DCSONConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EN_DCSONConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const EN_DCSONConfigurationTransfer* pvalue);

EXTERN int asn1Init_EN_DCSONConfigurationTransfer (
   EN_DCSONConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  EPS_TAC                                                   */
/*                                                            */
/**************************************************************/
/*
EPS-TAC ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN EPS_TAC {
   OSOCTET data[2];
} EPS_TAC;

EXTERN int asn1PE_EPS_TAC (OSCTXT* pctxt, EPS_TAC* pvalue);

EXTERN int asn1PD_EPS_TAC (OSCTXT* pctxt, EPS_TAC* pvalue);

EXTERN void asn1Print_EPS_TAC (const char* name, const EPS_TAC* pvalue);

EXTERN int asn1PrtToStr_EPS_TAC (const char* name, EPS_TAC* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EPS_TAC (OSCTXT *pctxt, 
   const char* name, const EPS_TAC* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RAB_ID                                                  */
/*                                                            */
/**************************************************************/
/*
E-RAB-ID ::= INTEGER (0..15, ...)
*/
typedef OSUINT32 E_RAB_ID;

EXTERN int asn1PE_E_RAB_ID (OSCTXT* pctxt, E_RAB_ID value);

EXTERN int asn1PD_E_RAB_ID (OSCTXT* pctxt, E_RAB_ID* pvalue);

EXTERN void asn1Print_E_RAB_ID (const char* name, const E_RAB_ID* pvalue);

EXTERN int asn1PrtToStr_E_RAB_ID (const char* name, E_RAB_ID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_E_RAB_ID (OSCTXT *pctxt, 
   const char* name, const E_RAB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRACellIdentity                                         */
/*                                                            */
/**************************************************************/
/*
EUTRACellIdentity ::= BIT STRING  (SIZE (28))
*/
typedef ASN1BitStr32 EUTRACellIdentity;

EXTERN int asn1PE_EUTRACellIdentity (OSCTXT* pctxt, EUTRACellIdentity value);

EXTERN int asn1PD_EUTRACellIdentity (OSCTXT* pctxt, EUTRACellIdentity* pvalue);

EXTERN void asn1Print_EUTRACellIdentity 
   (const char* name, const EUTRACellIdentity* pvalue);

EXTERN int asn1PrtToStr_EUTRACellIdentity (const char* name, 
   EUTRACellIdentity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRACellIdentity (OSCTXT *pctxt, 
   const char* name, const EUTRACellIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRAencryptionAlgorithms                                 */
/*                                                            */
/**************************************************************/
/*
EUTRAencryptionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr EUTRAencryptionAlgorithms;

EXTERN int asn1PE_EUTRAencryptionAlgorithms (OSCTXT* pctxt, EUTRAencryptionAlgorithms value);

EXTERN int asn1PD_EUTRAencryptionAlgorithms (OSCTXT* pctxt, EUTRAencryptionAlgorithms* pvalue);

EXTERN void asn1Print_EUTRAencryptionAlgorithms 
   (const char* name, const EUTRAencryptionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_EUTRAencryptionAlgorithms (const char* name, 
   EUTRAencryptionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRAencryptionAlgorithms (OSCTXT *pctxt, 
   const char* name, const EUTRAencryptionAlgorithms* pvalue);

EXTERN int asn1Init_EUTRAencryptionAlgorithms (EUTRAencryptionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRAintegrityProtectionAlgorithms                        */
/*                                                            */
/**************************************************************/
/*
EUTRAintegrityProtectionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr EUTRAintegrityProtectionAlgorithms;

EXTERN int asn1PE_EUTRAintegrityProtectionAlgorithms (OSCTXT* pctxt, EUTRAintegrityProtectionAlgorithms value);

EXTERN int asn1PD_EUTRAintegrityProtectionAlgorithms (OSCTXT* pctxt, EUTRAintegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Print_EUTRAintegrityProtectionAlgorithms 
   (const char* name, const EUTRAintegrityProtectionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_EUTRAintegrityProtectionAlgorithms (const char* name, 
   EUTRAintegrityProtectionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRAintegrityProtectionAlgorithms (OSCTXT *pctxt, 
   const char* name, const EUTRAintegrityProtectionAlgorithms* pvalue);

EXTERN int asn1Init_EUTRAintegrityProtectionAlgorithms (
   EUTRAintegrityProtectionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  EventType                                                 */
/*                                                            */
/**************************************************************/
/*
EventType ::= ENUMERATED { direct(0), change-of-serve-cell(1), ue-presence-in-area-of-interest(2), stop-change-of-serve-cell(3), stop-ue-presence-in-area-of-interest(4), cancel-location-reporting-for-the-ue(5), ... }
*/
typedef enum {
   direct = 0,
   change_of_serve_cell = 1,
   ue_presence_in_area_of_interest = 2,
   stop_change_of_serve_cell = 3,
   stop_ue_presence_in_area_of_interest = 4,
   cancel_location_reporting_for_the_ue = 5
} EventType_Root;

typedef OSUINT32 EventType;

EXTERN int asn1PE_EventType (OSCTXT* pctxt, EventType value);

EXTERN int asn1PD_EventType (OSCTXT* pctxt, EventType* pvalue);

EXTERN void asn1Print_EventType (const char* name, const EventType* pvalue);

EXTERN int asn1PrtToStr_EventType (const char* name, EventType* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EventType (OSCTXT *pctxt, 
   const char* name, const EventType* pvalue);

EXTERN extern const OSEnumItem EventType_ENUMTAB[];
#define EventType_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* EventType_ToString (OSINT32 value);

EXTERN int EventType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, EventType* pvalue);

EXTERN int EventType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, EventType* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedActivityPeriod                                    */
/*                                                            */
/**************************************************************/
/*
ExpectedActivityPeriod ::= INTEGER (1..30 | 40 | 50 | 60 | 80 | 100 | 120 | 150 | 180 | 181, ...)
*/
typedef OSUINT32 ExpectedActivityPeriod;

EXTERN int asn1PE_ExpectedActivityPeriod (OSCTXT* pctxt, ExpectedActivityPeriod value);

EXTERN int asn1PD_ExpectedActivityPeriod (OSCTXT* pctxt, ExpectedActivityPeriod* pvalue);

EXTERN void asn1Print_ExpectedActivityPeriod 
   (const char* name, const ExpectedActivityPeriod* pvalue);

EXTERN int asn1PrtToStr_ExpectedActivityPeriod (const char* name, 
   ExpectedActivityPeriod* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedActivityPeriod (OSCTXT *pctxt, 
   const char* name, const ExpectedActivityPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedHOInterval                                        */
/*                                                            */
/**************************************************************/
/*
ExpectedHOInterval ::= ENUMERATED { sec15(0), sec30(1), sec60(2), sec90(3), sec120(4), sec180(5), long-time(6), ... }
*/
typedef enum {
   sec15 = 0,
   sec30 = 1,
   sec60 = 2,
   sec90 = 3,
   sec120 = 4,
   sec180 = 5,
   long_time = 6
} ExpectedHOInterval_Root;

typedef OSUINT32 ExpectedHOInterval;

EXTERN int asn1PE_ExpectedHOInterval (OSCTXT* pctxt, ExpectedHOInterval value);

EXTERN int asn1PD_ExpectedHOInterval (OSCTXT* pctxt, ExpectedHOInterval* pvalue);

EXTERN void asn1Print_ExpectedHOInterval 
   (const char* name, const ExpectedHOInterval* pvalue);

EXTERN int asn1PrtToStr_ExpectedHOInterval (const char* name, 
   ExpectedHOInterval* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedHOInterval (OSCTXT *pctxt, 
   const char* name, const ExpectedHOInterval* pvalue);

EXTERN extern const OSEnumItem ExpectedHOInterval_ENUMTAB[];
#define ExpectedHOInterval_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* ExpectedHOInterval_ToString (OSINT32 value);

EXTERN int ExpectedHOInterval_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ExpectedHOInterval* pvalue);

EXTERN int ExpectedHOInterval_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ExpectedHOInterval* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedIdlePeriod                                        */
/*                                                            */
/**************************************************************/
/*
ExpectedIdlePeriod ::= INTEGER (1..30 | 40 | 50 | 60 | 80 | 100 | 120 | 150 | 180 | 181, ...)
*/
typedef OSUINT32 ExpectedIdlePeriod;

EXTERN int asn1PE_ExpectedIdlePeriod (OSCTXT* pctxt, ExpectedIdlePeriod value);

EXTERN int asn1PD_ExpectedIdlePeriod (OSCTXT* pctxt, ExpectedIdlePeriod* pvalue);

EXTERN void asn1Print_ExpectedIdlePeriod 
   (const char* name, const ExpectedIdlePeriod* pvalue);

EXTERN int asn1PrtToStr_ExpectedIdlePeriod (const char* name, 
   ExpectedIdlePeriod* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedIdlePeriod (OSCTXT *pctxt, 
   const char* name, const ExpectedIdlePeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEMobility                                        */
/*                                                            */
/**************************************************************/
/*
ExpectedUEMobility ::= ENUMERATED { stationary(0), mobile(1), ... }
*/
typedef enum {
   stationary = 0,
   mobile = 1
} ExpectedUEMobility_Root;

typedef OSUINT32 ExpectedUEMobility;

EXTERN int asn1PE_ExpectedUEMobility (OSCTXT* pctxt, ExpectedUEMobility value);

EXTERN int asn1PD_ExpectedUEMobility (OSCTXT* pctxt, ExpectedUEMobility* pvalue);

EXTERN void asn1Print_ExpectedUEMobility 
   (const char* name, const ExpectedUEMobility* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEMobility (const char* name, 
   ExpectedUEMobility* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEMobility (OSCTXT *pctxt, 
   const char* name, const ExpectedUEMobility* pvalue);

EXTERN extern const OSEnumItem ExpectedUEMobility_ENUMTAB[];
#define ExpectedUEMobility_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* ExpectedUEMobility_ToString (OSINT32 value);

EXTERN int ExpectedUEMobility_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ExpectedUEMobility* pvalue);

EXTERN int ExpectedUEMobility_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ExpectedUEMobility* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveG_TMSI                                                */
/*                                                            */
/**************************************************************/
/*
FiveG-TMSI ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN FiveG_TMSI {
   OSOCTET data[4];
} FiveG_TMSI;

EXTERN int asn1PE_FiveG_TMSI (OSCTXT* pctxt, FiveG_TMSI* pvalue);

EXTERN int asn1PD_FiveG_TMSI (OSCTXT* pctxt, FiveG_TMSI* pvalue);

EXTERN void asn1Print_FiveG_TMSI (const char* name, const FiveG_TMSI* pvalue);

EXTERN int asn1PrtToStr_FiveG_TMSI (const char* name, FiveG_TMSI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_FiveG_TMSI (OSCTXT *pctxt, 
   const char* name, const FiveG_TMSI* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveQI                                                    */
/*                                                            */
/**************************************************************/
/*
FiveQI ::= INTEGER (0..255, ...)
*/
typedef OSUINT32 FiveQI;

EXTERN int asn1PE_FiveQI (OSCTXT* pctxt, FiveQI value);

EXTERN int asn1PD_FiveQI (OSCTXT* pctxt, FiveQI* pvalue);

EXTERN void asn1Print_FiveQI (const char* name, const FiveQI* pvalue);

EXTERN int asn1PrtToStr_FiveQI (const char* name, FiveQI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_FiveQI (OSCTXT *pctxt, 
   const char* name, const FiveQI* pvalue);

/**************************************************************/
/*                                                            */
/*  GTP_TEID                                                  */
/*                                                            */
/**************************************************************/
/*
GTP-TEID ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN GTP_TEID {
   OSOCTET data[4];
} GTP_TEID;

EXTERN int asn1PE_GTP_TEID (OSCTXT* pctxt, GTP_TEID* pvalue);

EXTERN int asn1PD_GTP_TEID (OSCTXT* pctxt, GTP_TEID* pvalue);

EXTERN void asn1Print_GTP_TEID (const char* name, const GTP_TEID* pvalue);

EXTERN int asn1PrtToStr_GTP_TEID (const char* name, GTP_TEID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GTP_TEID (OSCTXT *pctxt, 
   const char* name, const GTP_TEID* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverFlag                                              */
/*                                                            */
/**************************************************************/
/*
HandoverFlag ::= ENUMERATED { handover-preparation(0), ... }
*/
typedef enum {
   handover_preparation = 0
} HandoverFlag_Root;

typedef OSUINT32 HandoverFlag;

EXTERN int asn1PE_HandoverFlag (OSCTXT* pctxt, HandoverFlag value);

EXTERN int asn1PD_HandoverFlag (OSCTXT* pctxt, HandoverFlag* pvalue);

EXTERN void asn1Print_HandoverFlag (const char* name, const HandoverFlag* pvalue);

EXTERN int asn1PrtToStr_HandoverFlag (const char* name, HandoverFlag* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverFlag (OSCTXT *pctxt, 
   const char* name, const HandoverFlag* pvalue);

EXTERN extern const OSEnumItem HandoverFlag_ENUMTAB[];
#define HandoverFlag_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* HandoverFlag_ToString (OSINT32 value);

EXTERN int HandoverFlag_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, HandoverFlag* pvalue);

EXTERN int HandoverFlag_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, HandoverFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverType                                              */
/*                                                            */
/**************************************************************/
/*
HandoverType ::= ENUMERATED { intra5gs(0), fivegs-to-eps(1), eps-to-5gs(2), ... }
*/
typedef enum {
   intra5gs = 0,
   fivegs_to_eps = 1,
   eps_to_5gs = 2
} HandoverType_Root;

typedef OSUINT32 HandoverType;

EXTERN int asn1PE_HandoverType (OSCTXT* pctxt, HandoverType value);

EXTERN int asn1PD_HandoverType (OSCTXT* pctxt, HandoverType* pvalue);

EXTERN void asn1Print_HandoverType (const char* name, const HandoverType* pvalue);

EXTERN int asn1PrtToStr_HandoverType (const char* name, HandoverType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverType (OSCTXT *pctxt, 
   const char* name, const HandoverType* pvalue);

EXTERN extern const OSEnumItem HandoverType_ENUMTAB[];
#define HandoverType_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* HandoverType_ToString (OSINT32 value);

EXTERN int HandoverType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, HandoverType* pvalue);

EXTERN int HandoverType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, HandoverType* pvalue);

/**************************************************************/
/*                                                            */
/*  IMSVoiceSupportIndicator                                  */
/*                                                            */
/**************************************************************/
/*
 I
IMSVoiceSupportIndicator ::= ENUMERATED { supported(0), not-supported(1), ... }
*/
typedef enum {
   supported = 0,
   not_supported = 1
} IMSVoiceSupportIndicator_Root;

typedef OSUINT32 IMSVoiceSupportIndicator;

EXTERN int asn1PE_IMSVoiceSupportIndicator (OSCTXT* pctxt, IMSVoiceSupportIndicator value);

EXTERN int asn1PD_IMSVoiceSupportIndicator (OSCTXT* pctxt, IMSVoiceSupportIndicator* pvalue);

EXTERN void asn1Print_IMSVoiceSupportIndicator 
   (const char* name, const IMSVoiceSupportIndicator* pvalue);

EXTERN int asn1PrtToStr_IMSVoiceSupportIndicator (const char* name, 
   IMSVoiceSupportIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_IMSVoiceSupportIndicator (OSCTXT *pctxt, 
   const char* name, const IMSVoiceSupportIndicator* pvalue);

EXTERN extern const OSEnumItem IMSVoiceSupportIndicator_ENUMTAB[];
#define IMSVoiceSupportIndicator_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* IMSVoiceSupportIndicator_ToString (OSINT32 value);

EXTERN int IMSVoiceSupportIndicator_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, IMSVoiceSupportIndicator* pvalue);

EXTERN int IMSVoiceSupportIndicator_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, IMSVoiceSupportIndicator* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  IndexToRFSP                                               */
/*                                                            */
/**************************************************************/
/*
IndexToRFSP ::= INTEGER (1..256, ...)
*/
typedef OSUINT32 IndexToRFSP;

EXTERN int asn1PE_IndexToRFSP (OSCTXT* pctxt, IndexToRFSP value);

EXTERN int asn1PD_IndexToRFSP (OSCTXT* pctxt, IndexToRFSP* pvalue);

EXTERN void asn1Print_IndexToRFSP (const char* name, const IndexToRFSP* pvalue);

EXTERN int asn1PrtToStr_IndexToRFSP (const char* name, IndexToRFSP* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_IndexToRFSP (OSCTXT *pctxt, 
   const char* name, const IndexToRFSP* pvalue);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionIndication                             */
/*                                                            */
/**************************************************************/
/*
IntegrityProtectionIndication ::= ENUMERATED { required(0), preferred(1), not-needed(2), ... }
*/
typedef enum {
   required_1 = 0,
   preferred_1 = 1,
   not_needed_1 = 2
} IntegrityProtectionIndication_Root;

typedef OSUINT32 IntegrityProtectionIndication;

EXTERN int asn1PE_IntegrityProtectionIndication (OSCTXT* pctxt, IntegrityProtectionIndication value);

EXTERN int asn1PD_IntegrityProtectionIndication (OSCTXT* pctxt, IntegrityProtectionIndication* pvalue);

EXTERN void asn1Print_IntegrityProtectionIndication 
   (const char* name, const IntegrityProtectionIndication* pvalue);

EXTERN int asn1PrtToStr_IntegrityProtectionIndication (const char* name, 
   IntegrityProtectionIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_IntegrityProtectionIndication (OSCTXT *pctxt, 
   const char* name, const IntegrityProtectionIndication* pvalue);

EXTERN extern const OSEnumItem IntegrityProtectionIndication_ENUMTAB[];
#define IntegrityProtectionIndication_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* IntegrityProtectionIndication_ToString (OSINT32 value);

EXTERN int IntegrityProtectionIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, IntegrityProtectionIndication* pvalue);

EXTERN int IntegrityProtectionIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      IntegrityProtectionIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  IntegrityProtectionResult                                 */
/*                                                            */
/**************************************************************/
/*
IntegrityProtectionResult ::= ENUMERATED { performed(0), not-performed(1), ... }
*/
typedef enum {
   performed_1 = 0,
   not_performed_1 = 1
} IntegrityProtectionResult_Root;

typedef OSUINT32 IntegrityProtectionResult;

EXTERN int asn1PE_IntegrityProtectionResult (OSCTXT* pctxt, IntegrityProtectionResult value);

EXTERN int asn1PD_IntegrityProtectionResult (OSCTXT* pctxt, IntegrityProtectionResult* pvalue);

EXTERN void asn1Print_IntegrityProtectionResult 
   (const char* name, const IntegrityProtectionResult* pvalue);

EXTERN int asn1PrtToStr_IntegrityProtectionResult (const char* name, 
   IntegrityProtectionResult* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_IntegrityProtectionResult (OSCTXT *pctxt, 
   const char* name, const IntegrityProtectionResult* pvalue);

EXTERN extern const OSEnumItem IntegrityProtectionResult_ENUMTAB[];
#define IntegrityProtectionResult_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* IntegrityProtectionResult_ToString (OSINT32 value);

EXTERN int IntegrityProtectionResult_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, IntegrityProtectionResult* pvalue);

EXTERN int IntegrityProtectionResult_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, IntegrityProtectionResult* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  IntendedNumberOfPagingAttempts                            */
/*                                                            */
/**************************************************************/
/*
IntendedNumberOfPagingAttempts ::= INTEGER (1..16, ...)
*/
typedef OSUINT32 IntendedNumberOfPagingAttempts;

EXTERN int asn1PE_IntendedNumberOfPagingAttempts (OSCTXT* pctxt, IntendedNumberOfPagingAttempts value);

EXTERN int asn1PD_IntendedNumberOfPagingAttempts (OSCTXT* pctxt, IntendedNumberOfPagingAttempts* pvalue);

EXTERN void asn1Print_IntendedNumberOfPagingAttempts 
   (const char* name, const IntendedNumberOfPagingAttempts* pvalue);

EXTERN int asn1PrtToStr_IntendedNumberOfPagingAttempts (const char* name, 
   IntendedNumberOfPagingAttempts* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_IntendedNumberOfPagingAttempts (OSCTXT *pctxt, 
   const char* name, const IntendedNumberOfPagingAttempts* pvalue);

/**************************************************************/
/*                                                            */
/*  InterfacesToTrace                                         */
/*                                                            */
/**************************************************************/
/*
InterfacesToTrace ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 InterfacesToTrace;

EXTERN int asn1PE_InterfacesToTrace (OSCTXT* pctxt, InterfacesToTrace value);

EXTERN int asn1PD_InterfacesToTrace (OSCTXT* pctxt, InterfacesToTrace* pvalue);

EXTERN void asn1Print_InterfacesToTrace 
   (const char* name, const InterfacesToTrace* pvalue);

EXTERN int asn1PrtToStr_InterfacesToTrace (const char* name, 
   InterfacesToTrace* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InterfacesToTrace (OSCTXT *pctxt, 
   const char* name, const InterfacesToTrace* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedEUTRANCellInformation                          */
/*                                                            */
/**************************************************************/
/*
LastVisitedEUTRANCellInformation ::= OCTET STRING
*/
typedef OSDynOctStr LastVisitedEUTRANCellInformation;

EXTERN int asn1PE_LastVisitedEUTRANCellInformation (OSCTXT* pctxt, LastVisitedEUTRANCellInformation value);

EXTERN int asn1PD_LastVisitedEUTRANCellInformation (OSCTXT* pctxt, LastVisitedEUTRANCellInformation* pvalue);

EXTERN void asn1Print_LastVisitedEUTRANCellInformation 
   (const char* name, const LastVisitedEUTRANCellInformation* pvalue);

EXTERN int asn1PrtToStr_LastVisitedEUTRANCellInformation (const char* name, 
   LastVisitedEUTRANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedEUTRANCellInformation (OSCTXT *pctxt, 
   const char* name, const LastVisitedEUTRANCellInformation* pvalue);

EXTERN int asn1Init_LastVisitedEUTRANCellInformation (
   LastVisitedEUTRANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedGERANCellInformation                           */
/*                                                            */
/**************************************************************/
/*
LastVisitedGERANCellInformation ::= OCTET STRING
*/
typedef OSDynOctStr LastVisitedGERANCellInformation;

EXTERN int asn1PE_LastVisitedGERANCellInformation (OSCTXT* pctxt, LastVisitedGERANCellInformation value);

EXTERN int asn1PD_LastVisitedGERANCellInformation (OSCTXT* pctxt, LastVisitedGERANCellInformation* pvalue);

EXTERN void asn1Print_LastVisitedGERANCellInformation 
   (const char* name, const LastVisitedGERANCellInformation* pvalue);

EXTERN int asn1PrtToStr_LastVisitedGERANCellInformation (const char* name, 
   LastVisitedGERANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedGERANCellInformation (OSCTXT *pctxt, 
   const char* name, const LastVisitedGERANCellInformation* pvalue);

EXTERN int asn1Init_LastVisitedGERANCellInformation (
   LastVisitedGERANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedUTRANCellInformation                           */
/*                                                            */
/**************************************************************/
/*
LastVisitedUTRANCellInformation ::= OCTET STRING
*/
typedef OSDynOctStr LastVisitedUTRANCellInformation;

EXTERN int asn1PE_LastVisitedUTRANCellInformation (OSCTXT* pctxt, LastVisitedUTRANCellInformation value);

EXTERN int asn1PD_LastVisitedUTRANCellInformation (OSCTXT* pctxt, LastVisitedUTRANCellInformation* pvalue);

EXTERN void asn1Print_LastVisitedUTRANCellInformation 
   (const char* name, const LastVisitedUTRANCellInformation* pvalue);

EXTERN int asn1PrtToStr_LastVisitedUTRANCellInformation (const char* name, 
   LastVisitedUTRANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedUTRANCellInformation (OSCTXT *pctxt, 
   const char* name, const LastVisitedUTRANCellInformation* pvalue);

EXTERN int asn1Init_LastVisitedUTRANCellInformation (
   LastVisitedUTRANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingAdditionalInfo                           */
/*                                                            */
/**************************************************************/
/*
LocationReportingAdditionalInfo ::= ENUMERATED { includePSCell(0), ... }
*/
typedef enum {
   includePSCell = 0
} LocationReportingAdditionalInfo_Root;

typedef OSUINT32 LocationReportingAdditionalInfo;

EXTERN int asn1PE_LocationReportingAdditionalInfo (OSCTXT* pctxt, LocationReportingAdditionalInfo value);

EXTERN int asn1PD_LocationReportingAdditionalInfo (OSCTXT* pctxt, LocationReportingAdditionalInfo* pvalue);

EXTERN void asn1Print_LocationReportingAdditionalInfo 
   (const char* name, const LocationReportingAdditionalInfo* pvalue);

EXTERN int asn1PrtToStr_LocationReportingAdditionalInfo (const char* name, 
   LocationReportingAdditionalInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingAdditionalInfo (OSCTXT *pctxt, 
   const char* name, const LocationReportingAdditionalInfo* pvalue);

EXTERN extern const OSEnumItem LocationReportingAdditionalInfo_ENUMTAB[];
#define LocationReportingAdditionalInfo_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* LocationReportingAdditionalInfo_ToString (OSINT32 value);

EXTERN int LocationReportingAdditionalInfo_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, LocationReportingAdditionalInfo* pvalue);

EXTERN int LocationReportingAdditionalInfo_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      LocationReportingAdditionalInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingReferenceID                              */
/*                                                            */
/**************************************************************/
/*
LocationReportingReferenceID ::= INTEGER (1..64, ...)
*/
typedef OSUINT32 LocationReportingReferenceID;

EXTERN int asn1PE_LocationReportingReferenceID (OSCTXT* pctxt, LocationReportingReferenceID value);

EXTERN int asn1PD_LocationReportingReferenceID (OSCTXT* pctxt, LocationReportingReferenceID* pvalue);

EXTERN void asn1Print_LocationReportingReferenceID 
   (const char* name, const LocationReportingReferenceID* pvalue);

EXTERN int asn1PrtToStr_LocationReportingReferenceID (const char* name, 
   LocationReportingReferenceID* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingReferenceID (OSCTXT *pctxt, 
   const char* name, const LocationReportingReferenceID* pvalue);

/**************************************************************/
/*                                                            */
/*  MaskedIMEISV                                              */
/*                                                            */
/**************************************************************/
/*
 M
MaskedIMEISV ::= BIT STRING  (SIZE (64))
*/
typedef struct MaskedIMEISV {
   OSOCTET data[8];
} MaskedIMEISV;

EXTERN int asn1PE_MaskedIMEISV (OSCTXT* pctxt, MaskedIMEISV* pvalue);

EXTERN int asn1PD_MaskedIMEISV (OSCTXT* pctxt, MaskedIMEISV* pvalue);

EXTERN void asn1Print_MaskedIMEISV (const char* name, const MaskedIMEISV* pvalue);

EXTERN int asn1PrtToStr_MaskedIMEISV (const char* name, MaskedIMEISV* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MaskedIMEISV (OSCTXT *pctxt, 
   const char* name, const MaskedIMEISV* pvalue);

/**************************************************************/
/*                                                            */
/*  MaximumDataBurstVolume                                    */
/*                                                            */
/**************************************************************/
/*
MaximumDataBurstVolume ::= INTEGER (0..4095, ...)
*/
typedef OSUINT32 MaximumDataBurstVolume;

EXTERN int asn1PE_MaximumDataBurstVolume (OSCTXT* pctxt, MaximumDataBurstVolume value);

EXTERN int asn1PD_MaximumDataBurstVolume (OSCTXT* pctxt, MaximumDataBurstVolume* pvalue);

EXTERN void asn1Print_MaximumDataBurstVolume 
   (const char* name, const MaximumDataBurstVolume* pvalue);

EXTERN int asn1PrtToStr_MaximumDataBurstVolume (const char* name, 
   MaximumDataBurstVolume* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MaximumDataBurstVolume (OSCTXT *pctxt, 
   const char* name, const MaximumDataBurstVolume* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageIdentifier                                         */
/*                                                            */
/**************************************************************/
/*
MessageIdentifier ::= BIT STRING  (SIZE (16))
*/
typedef ASN1BitStr32 MessageIdentifier;

EXTERN int asn1PE_MessageIdentifier (OSCTXT* pctxt, MessageIdentifier value);

EXTERN int asn1PD_MessageIdentifier (OSCTXT* pctxt, MessageIdentifier* pvalue);

EXTERN void asn1Print_MessageIdentifier 
   (const char* name, const MessageIdentifier* pvalue);

EXTERN int asn1PrtToStr_MessageIdentifier (const char* name, 
   MessageIdentifier* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MessageIdentifier (OSCTXT *pctxt, 
   const char* name, const MessageIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  MaximumIntegrityProtectedDataRate                         */
/*                                                            */
/**************************************************************/
/*
MaximumIntegrityProtectedDataRate ::= ENUMERATED { bitrate64kbs(0), maximum-UE-rate(1), ... }
*/
typedef enum {
   bitrate64kbs = 0,
   maximum_UE_rate = 1
} MaximumIntegrityProtectedDataRate_Root;

typedef OSUINT32 MaximumIntegrityProtectedDataRate;

EXTERN int asn1PE_MaximumIntegrityProtectedDataRate (OSCTXT* pctxt, MaximumIntegrityProtectedDataRate value);

EXTERN int asn1PD_MaximumIntegrityProtectedDataRate (OSCTXT* pctxt, MaximumIntegrityProtectedDataRate* pvalue);

EXTERN void asn1Print_MaximumIntegrityProtectedDataRate 
   (const char* name, const MaximumIntegrityProtectedDataRate* pvalue);

EXTERN int asn1PrtToStr_MaximumIntegrityProtectedDataRate (const char* name, 
   MaximumIntegrityProtectedDataRate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MaximumIntegrityProtectedDataRate (OSCTXT *pctxt, 
   const char* name, const MaximumIntegrityProtectedDataRate* pvalue);

EXTERN extern const OSEnumItem MaximumIntegrityProtectedDataRate_ENUMTAB[];
#define MaximumIntegrityProtectedDataRate_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* MaximumIntegrityProtectedDataRate_ToString (OSINT32 value);

EXTERN int MaximumIntegrityProtectedDataRate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, MaximumIntegrityProtectedDataRate* pvalue);

EXTERN int MaximumIntegrityProtectedDataRate_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      MaximumIntegrityProtectedDataRate* pvalue);

/**************************************************************/
/*                                                            */
/*  MICOModeIndication                                        */
/*                                                            */
/**************************************************************/
/*
MICOModeIndication ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   true__3 = 0
} MICOModeIndication_Root;

typedef OSUINT32 MICOModeIndication;

EXTERN int asn1PE_MICOModeIndication (OSCTXT* pctxt, MICOModeIndication value);

EXTERN int asn1PD_MICOModeIndication (OSCTXT* pctxt, MICOModeIndication* pvalue);

EXTERN void asn1Print_MICOModeIndication 
   (const char* name, const MICOModeIndication* pvalue);

EXTERN int asn1PrtToStr_MICOModeIndication (const char* name, 
   MICOModeIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MICOModeIndication (OSCTXT *pctxt, 
   const char* name, const MICOModeIndication* pvalue);

EXTERN extern const OSEnumItem MICOModeIndication_ENUMTAB[];
#define MICOModeIndication_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* MICOModeIndication_ToString (OSINT32 value);

EXTERN int MICOModeIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, MICOModeIndication* pvalue);

EXTERN int MICOModeIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, MICOModeIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  NAS_PDU                                                   */
/*                                                            */
/**************************************************************/
/*
NAS-PDU ::= OCTET STRING
*/
typedef OSDynOctStr NAS_PDU;

EXTERN int asn1PE_NAS_PDU (OSCTXT* pctxt, NAS_PDU value);

EXTERN int asn1PD_NAS_PDU (OSCTXT* pctxt, NAS_PDU* pvalue);

EXTERN void asn1Print_NAS_PDU (const char* name, const NAS_PDU* pvalue);

EXTERN int asn1PrtToStr_NAS_PDU (const char* name, NAS_PDU* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NAS_PDU (OSCTXT *pctxt, 
   const char* name, const NAS_PDU* pvalue);

EXTERN int asn1Init_NAS_PDU (NAS_PDU* pvalue);

/**************************************************************/
/*                                                            */
/*  NASSecurityParametersFromNGRAN                            */
/*                                                            */
/**************************************************************/
/*
NASSecurityParametersFromNGRAN ::= OCTET STRING
*/
typedef OSDynOctStr NASSecurityParametersFromNGRAN;

EXTERN int asn1PE_NASSecurityParametersFromNGRAN (OSCTXT* pctxt, NASSecurityParametersFromNGRAN value);

EXTERN int asn1PD_NASSecurityParametersFromNGRAN (OSCTXT* pctxt, NASSecurityParametersFromNGRAN* pvalue);

EXTERN void asn1Print_NASSecurityParametersFromNGRAN 
   (const char* name, const NASSecurityParametersFromNGRAN* pvalue);

EXTERN int asn1PrtToStr_NASSecurityParametersFromNGRAN (const char* name, 
   NASSecurityParametersFromNGRAN* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NASSecurityParametersFromNGRAN (OSCTXT *pctxt, 
   const char* name, const NASSecurityParametersFromNGRAN* pvalue);

EXTERN int asn1Init_NASSecurityParametersFromNGRAN (
   NASSecurityParametersFromNGRAN* pvalue);

/**************************************************************/
/*                                                            */
/*  NetworkInstance                                           */
/*                                                            */
/**************************************************************/
/*
NetworkInstance ::= INTEGER (1..256, ...)
*/
typedef OSUINT32 NetworkInstance;

EXTERN int asn1PE_NetworkInstance (OSCTXT* pctxt, NetworkInstance value);

EXTERN int asn1PD_NetworkInstance (OSCTXT* pctxt, NetworkInstance* pvalue);

EXTERN void asn1Print_NetworkInstance 
   (const char* name, const NetworkInstance* pvalue);

EXTERN int asn1PrtToStr_NetworkInstance (const char* name, NetworkInstance* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NetworkInstance (OSCTXT *pctxt, 
   const char* name, const NetworkInstance* pvalue);

/**************************************************************/
/*                                                            */
/*  NewSecurityContextInd                                     */
/*                                                            */
/**************************************************************/
/*
NewSecurityContextInd ::= ENUMERATED { true(0), ... }
*/
typedef enum {
   true__4 = 0
} NewSecurityContextInd_Root;

typedef OSUINT32 NewSecurityContextInd;

EXTERN int asn1PE_NewSecurityContextInd (OSCTXT* pctxt, NewSecurityContextInd value);

EXTERN int asn1PD_NewSecurityContextInd (OSCTXT* pctxt, NewSecurityContextInd* pvalue);

EXTERN void asn1Print_NewSecurityContextInd 
   (const char* name, const NewSecurityContextInd* pvalue);

EXTERN int asn1PrtToStr_NewSecurityContextInd (const char* name, 
   NewSecurityContextInd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NewSecurityContextInd (OSCTXT *pctxt, 
   const char* name, const NewSecurityContextInd* pvalue);

EXTERN extern const OSEnumItem NewSecurityContextInd_ENUMTAB[];
#define NewSecurityContextInd_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* NewSecurityContextInd_ToString (OSINT32 value);

EXTERN int NewSecurityContextInd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, NewSecurityContextInd* pvalue);

EXTERN int NewSecurityContextInd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, NewSecurityContextInd* pvalue);

/**************************************************************/
/*                                                            */
/*  NextHopChainingCount                                      */
/*                                                            */
/**************************************************************/
/*
NextHopChainingCount ::= INTEGER (0..7)
*/
typedef OSUINT8 NextHopChainingCount;

EXTERN int asn1PE_NextHopChainingCount (OSCTXT* pctxt, NextHopChainingCount value);

EXTERN int asn1PD_NextHopChainingCount (OSCTXT* pctxt, NextHopChainingCount* pvalue);

EXTERN void asn1Print_NextHopChainingCount 
   (const char* name, const NextHopChainingCount* pvalue);

EXTERN int asn1PrtToStr_NextHopChainingCount (const char* name, 
   NextHopChainingCount* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NextHopChainingCount (OSCTXT *pctxt, 
   const char* name, const NextHopChainingCount* pvalue);

/**************************************************************/
/*                                                            */
/*  NextPagingAreaScope                                       */
/*                                                            */
/**************************************************************/
/*
NextPagingAreaScope ::= ENUMERATED { same(0), changed(1), ... }
*/
typedef enum {
   same = 0,
   changed = 1
} NextPagingAreaScope_Root;

typedef OSUINT32 NextPagingAreaScope;

EXTERN int asn1PE_NextPagingAreaScope (OSCTXT* pctxt, NextPagingAreaScope value);

EXTERN int asn1PD_NextPagingAreaScope (OSCTXT* pctxt, NextPagingAreaScope* pvalue);

EXTERN void asn1Print_NextPagingAreaScope 
   (const char* name, const NextPagingAreaScope* pvalue);

EXTERN int asn1PrtToStr_NextPagingAreaScope (const char* name, 
   NextPagingAreaScope* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NextPagingAreaScope (OSCTXT *pctxt, 
   const char* name, const NextPagingAreaScope* pvalue);

EXTERN extern const OSEnumItem NextPagingAreaScope_ENUMTAB[];
#define NextPagingAreaScope_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* NextPagingAreaScope_ToString (OSINT32 value);

EXTERN int NextPagingAreaScope_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, NextPagingAreaScope* pvalue);

EXTERN int NextPagingAreaScope_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, NextPagingAreaScope* pvalue);

/**************************************************************/
/*                                                            */
/*  NGRANTraceID                                              */
/*                                                            */
/**************************************************************/
/*
NGRANTraceID ::= OCTET STRING (SIZE (8))
*/
typedef struct EXTERN NGRANTraceID {
   OSOCTET data[8];
} NGRANTraceID;

EXTERN int asn1PE_NGRANTraceID (OSCTXT* pctxt, NGRANTraceID* pvalue);

EXTERN int asn1PD_NGRANTraceID (OSCTXT* pctxt, NGRANTraceID* pvalue);

EXTERN void asn1Print_NGRANTraceID (const char* name, const NGRANTraceID* pvalue);

EXTERN int asn1PrtToStr_NGRANTraceID (const char* name, NGRANTraceID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGRANTraceID (OSCTXT *pctxt, 
   const char* name, const NGRANTraceID* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationCause                                         */
/*                                                            */
/**************************************************************/
/*
NotificationCause ::= ENUMERATED { fulfilled(0), not-fulfilled(1), ... }
*/
typedef enum {
   fulfilled = 0,
   not_fulfilled = 1
} NotificationCause_Root;

typedef OSUINT32 NotificationCause;

EXTERN int asn1PE_NotificationCause (OSCTXT* pctxt, NotificationCause value);

EXTERN int asn1PD_NotificationCause (OSCTXT* pctxt, NotificationCause* pvalue);

EXTERN void asn1Print_NotificationCause 
   (const char* name, const NotificationCause* pvalue);

EXTERN int asn1PrtToStr_NotificationCause (const char* name, 
   NotificationCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NotificationCause (OSCTXT *pctxt, 
   const char* name, const NotificationCause* pvalue);

EXTERN extern const OSEnumItem NotificationCause_ENUMTAB[];
#define NotificationCause_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* NotificationCause_ToString (OSINT32 value);

EXTERN int NotificationCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, NotificationCause* pvalue);

EXTERN int NotificationCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, NotificationCause* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationControl                                       */
/*                                                            */
/**************************************************************/
/*
NotificationControl ::= ENUMERATED { notification-requested(0), ... }
*/
typedef enum {
   notification_requested = 0
} NotificationControl_Root;

typedef OSUINT32 NotificationControl;

EXTERN int asn1PE_NotificationControl (OSCTXT* pctxt, NotificationControl value);

EXTERN int asn1PD_NotificationControl (OSCTXT* pctxt, NotificationControl* pvalue);

EXTERN void asn1Print_NotificationControl 
   (const char* name, const NotificationControl* pvalue);

EXTERN int asn1PrtToStr_NotificationControl (const char* name, 
   NotificationControl* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NotificationControl (OSCTXT *pctxt, 
   const char* name, const NotificationControl* pvalue);

EXTERN extern const OSEnumItem NotificationControl_ENUMTAB[];
#define NotificationControl_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* NotificationControl_ToString (OSINT32 value);

EXTERN int NotificationControl_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, NotificationControl* pvalue);

EXTERN int NotificationControl_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, NotificationControl* pvalue);

/**************************************************************/
/*                                                            */
/*  NRCellIdentity                                            */
/*                                                            */
/**************************************************************/
/*
NRCellIdentity ::= BIT STRING  (SIZE (36))
*/
typedef struct NRCellIdentity {
   OSOCTET data[5];
} NRCellIdentity;

EXTERN int asn1PE_NRCellIdentity (OSCTXT* pctxt, NRCellIdentity* pvalue);

EXTERN int asn1PD_NRCellIdentity (OSCTXT* pctxt, NRCellIdentity* pvalue);

EXTERN void asn1Print_NRCellIdentity (const char* name, const NRCellIdentity* pvalue);

EXTERN int asn1PrtToStr_NRCellIdentity (const char* name, NRCellIdentity* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NRCellIdentity (OSCTXT *pctxt, 
   const char* name, const NRCellIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  NRencryptionAlgorithms                                    */
/*                                                            */
/**************************************************************/
/*
NRencryptionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr NRencryptionAlgorithms;

EXTERN int asn1PE_NRencryptionAlgorithms (OSCTXT* pctxt, NRencryptionAlgorithms value);

EXTERN int asn1PD_NRencryptionAlgorithms (OSCTXT* pctxt, NRencryptionAlgorithms* pvalue);

EXTERN void asn1Print_NRencryptionAlgorithms 
   (const char* name, const NRencryptionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_NRencryptionAlgorithms (const char* name, 
   NRencryptionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NRencryptionAlgorithms (OSCTXT *pctxt, 
   const char* name, const NRencryptionAlgorithms* pvalue);

EXTERN int asn1Init_NRencryptionAlgorithms (NRencryptionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  NRintegrityProtectionAlgorithms                           */
/*                                                            */
/**************************************************************/
/*
NRintegrityProtectionAlgorithms ::= BIT STRING  (SIZE (16, ...))
*/
typedef ASN1DynBitStr NRintegrityProtectionAlgorithms;

EXTERN int asn1PE_NRintegrityProtectionAlgorithms (OSCTXT* pctxt, NRintegrityProtectionAlgorithms value);

EXTERN int asn1PD_NRintegrityProtectionAlgorithms (OSCTXT* pctxt, NRintegrityProtectionAlgorithms* pvalue);

EXTERN void asn1Print_NRintegrityProtectionAlgorithms 
   (const char* name, const NRintegrityProtectionAlgorithms* pvalue);

EXTERN int asn1PrtToStr_NRintegrityProtectionAlgorithms (const char* name, 
   NRintegrityProtectionAlgorithms* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NRintegrityProtectionAlgorithms (OSCTXT *pctxt, 
   const char* name, const NRintegrityProtectionAlgorithms* pvalue);

EXTERN int asn1Init_NRintegrityProtectionAlgorithms (
   NRintegrityProtectionAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  NRPPa_PDU                                                 */
/*                                                            */
/**************************************************************/
/*
NRPPa-PDU ::= OCTET STRING
*/
typedef OSDynOctStr NRPPa_PDU;

EXTERN int asn1PE_NRPPa_PDU (OSCTXT* pctxt, NRPPa_PDU value);

EXTERN int asn1PD_NRPPa_PDU (OSCTXT* pctxt, NRPPa_PDU* pvalue);

EXTERN void asn1Print_NRPPa_PDU (const char* name, const NRPPa_PDU* pvalue);

EXTERN int asn1PrtToStr_NRPPa_PDU (const char* name, NRPPa_PDU* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NRPPa_PDU (OSCTXT *pctxt, 
   const char* name, const NRPPa_PDU* pvalue);

EXTERN int asn1Init_NRPPa_PDU (NRPPa_PDU* pvalue);

/**************************************************************/
/*                                                            */
/*  NumberOfBroadcasts                                        */
/*                                                            */
/**************************************************************/
/*
NumberOfBroadcasts ::= INTEGER (0..65535)
*/
typedef OSUINT16 NumberOfBroadcasts;

EXTERN int asn1PE_NumberOfBroadcasts (OSCTXT* pctxt, NumberOfBroadcasts value);

EXTERN int asn1PD_NumberOfBroadcasts (OSCTXT* pctxt, NumberOfBroadcasts* pvalue);

EXTERN void asn1Print_NumberOfBroadcasts 
   (const char* name, const NumberOfBroadcasts* pvalue);

EXTERN int asn1PrtToStr_NumberOfBroadcasts (const char* name, 
   NumberOfBroadcasts* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NumberOfBroadcasts (OSCTXT *pctxt, 
   const char* name, const NumberOfBroadcasts* pvalue);

/**************************************************************/
/*                                                            */
/*  NumberOfBroadcastsRequested                               */
/*                                                            */
/**************************************************************/
/*
NumberOfBroadcastsRequested ::= INTEGER (0..65535)
*/
typedef OSUINT16 NumberOfBroadcastsRequested;

EXTERN int asn1PE_NumberOfBroadcastsRequested (OSCTXT* pctxt, NumberOfBroadcastsRequested value);

EXTERN int asn1PD_NumberOfBroadcastsRequested (OSCTXT* pctxt, NumberOfBroadcastsRequested* pvalue);

EXTERN void asn1Print_NumberOfBroadcastsRequested 
   (const char* name, const NumberOfBroadcastsRequested* pvalue);

EXTERN int asn1PrtToStr_NumberOfBroadcastsRequested (const char* name, 
   NumberOfBroadcastsRequested* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NumberOfBroadcastsRequested (OSCTXT *pctxt, 
   const char* name, const NumberOfBroadcastsRequested* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadAction                                            */
/*                                                            */
/**************************************************************/
/*
 O
OverloadAction ::= ENUMERATED { reject-non-emergency-mo-dt(0), reject-rrc-cr-signalling(1), permit-emergency-sessions-and-mobile-terminated-services-only(2), permit-high-priority-sessions-and-mobile-terminated-services-only(3), ... }
*/
typedef enum {
   reject_non_emergency_mo_dt = 0,
   reject_rrc_cr_signalling = 1,
   permit_emergency_sessions_and_mobile_terminated_services_only = 2,
   permit_high_priority_sessions_and_mobile_terminated_services_only = 3
} OverloadAction_Root;

typedef OSUINT32 OverloadAction;

EXTERN int asn1PE_OverloadAction (OSCTXT* pctxt, OverloadAction value);

EXTERN int asn1PD_OverloadAction (OSCTXT* pctxt, OverloadAction* pvalue);

EXTERN void asn1Print_OverloadAction (const char* name, const OverloadAction* pvalue);

EXTERN int asn1PrtToStr_OverloadAction (const char* name, OverloadAction* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadAction (OSCTXT *pctxt, 
   const char* name, const OverloadAction* pvalue);

EXTERN extern const OSEnumItem OverloadAction_ENUMTAB[];
#define OverloadAction_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* OverloadAction_ToString (OSINT32 value);

EXTERN int OverloadAction_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OverloadAction* pvalue);

EXTERN int OverloadAction_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, OverloadAction* pvalue);

/**************************************************************/
/*                                                            */
/*  PacketDelayBudget                                         */
/*                                                            */
/**************************************************************/
/*
 P
PacketDelayBudget ::= INTEGER (0..1023, ...)
*/
typedef OSUINT32 PacketDelayBudget;

EXTERN int asn1PE_PacketDelayBudget (OSCTXT* pctxt, PacketDelayBudget value);

EXTERN int asn1PD_PacketDelayBudget (OSCTXT* pctxt, PacketDelayBudget* pvalue);

EXTERN void asn1Print_PacketDelayBudget 
   (const char* name, const PacketDelayBudget* pvalue);

EXTERN int asn1PrtToStr_PacketDelayBudget (const char* name, 
   PacketDelayBudget* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PacketDelayBudget (OSCTXT *pctxt, 
   const char* name, const PacketDelayBudget* pvalue);

/**************************************************************/
/*                                                            */
/*  PacketLossRate                                            */
/*                                                            */
/**************************************************************/
/*
PacketLossRate ::= INTEGER (0..1000, ...)
*/
typedef OSUINT32 PacketLossRate;

EXTERN int asn1PE_PacketLossRate (OSCTXT* pctxt, PacketLossRate value);

EXTERN int asn1PD_PacketLossRate (OSCTXT* pctxt, PacketLossRate* pvalue);

EXTERN void asn1Print_PacketLossRate (const char* name, const PacketLossRate* pvalue);

EXTERN int asn1PrtToStr_PacketLossRate (const char* name, PacketLossRate* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PacketLossRate (OSCTXT *pctxt, 
   const char* name, const PacketLossRate* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingAttemptCount                                        */
/*                                                            */
/**************************************************************/
/*
PagingAttemptCount ::= INTEGER (1..16, ...)
*/
typedef OSUINT32 PagingAttemptCount;

EXTERN int asn1PE_PagingAttemptCount (OSCTXT* pctxt, PagingAttemptCount value);

EXTERN int asn1PD_PagingAttemptCount (OSCTXT* pctxt, PagingAttemptCount* pvalue);

EXTERN void asn1Print_PagingAttemptCount 
   (const char* name, const PagingAttemptCount* pvalue);

EXTERN int asn1PrtToStr_PagingAttemptCount (const char* name, 
   PagingAttemptCount* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PagingAttemptCount (OSCTXT *pctxt, 
   const char* name, const PagingAttemptCount* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingDRX                                                 */
/*                                                            */
/**************************************************************/
/*
PagingDRX ::= ENUMERATED { v32(0), v64(1), v128(2), v256(3), ... }
*/
typedef enum {
   v32 = 0,
   v64 = 1,
   v128 = 2,
   v256 = 3
} PagingDRX_Root;

typedef OSUINT32 PagingDRX;

EXTERN int asn1PE_PagingDRX (OSCTXT* pctxt, PagingDRX value);

EXTERN int asn1PD_PagingDRX (OSCTXT* pctxt, PagingDRX* pvalue);

EXTERN void asn1Print_PagingDRX (const char* name, const PagingDRX* pvalue);

EXTERN int asn1PrtToStr_PagingDRX (const char* name, PagingDRX* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PagingDRX (OSCTXT *pctxt, 
   const char* name, const PagingDRX* pvalue);

EXTERN extern const OSEnumItem PagingDRX_ENUMTAB[];
#define PagingDRX_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* PagingDRX_ToString (OSINT32 value);

EXTERN int PagingDRX_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PagingDRX* pvalue);

EXTERN int PagingDRX_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, PagingDRX* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingOrigin                                              */
/*                                                            */
/**************************************************************/
/*
PagingOrigin ::= ENUMERATED { non-3gpp(0), ... }
*/
typedef enum {
   non_3gpp = 0
} PagingOrigin_Root;

typedef OSUINT32 PagingOrigin;

EXTERN int asn1PE_PagingOrigin (OSCTXT* pctxt, PagingOrigin value);

EXTERN int asn1PD_PagingOrigin (OSCTXT* pctxt, PagingOrigin* pvalue);

EXTERN void asn1Print_PagingOrigin (const char* name, const PagingOrigin* pvalue);

EXTERN int asn1PrtToStr_PagingOrigin (const char* name, PagingOrigin* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PagingOrigin (OSCTXT *pctxt, 
   const char* name, const PagingOrigin* pvalue);

EXTERN extern const OSEnumItem PagingOrigin_ENUMTAB[];
#define PagingOrigin_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* PagingOrigin_ToString (OSINT32 value);

EXTERN int PagingOrigin_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PagingOrigin* pvalue);

EXTERN int PagingOrigin_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, PagingOrigin* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingPriority                                            */
/*                                                            */
/**************************************************************/
/*
PagingPriority ::= ENUMERATED { priolevel1(0), priolevel2(1), priolevel3(2), priolevel4(3), priolevel5(4), priolevel6(5), priolevel7(6), priolevel8(7), ... }
*/
typedef enum {
   priolevel1 = 0,
   priolevel2 = 1,
   priolevel3 = 2,
   priolevel4 = 3,
   priolevel5 = 4,
   priolevel6 = 5,
   priolevel7 = 6,
   priolevel8 = 7
} PagingPriority_Root;

typedef OSUINT32 PagingPriority;

EXTERN int asn1PE_PagingPriority (OSCTXT* pctxt, PagingPriority value);

EXTERN int asn1PD_PagingPriority (OSCTXT* pctxt, PagingPriority* pvalue);

EXTERN void asn1Print_PagingPriority (const char* name, const PagingPriority* pvalue);

EXTERN int asn1PrtToStr_PagingPriority (const char* name, PagingPriority* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PagingPriority (OSCTXT *pctxt, 
   const char* name, const PagingPriority* pvalue);

EXTERN extern const OSEnumItem PagingPriority_ENUMTAB[];
#define PagingPriority_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* PagingPriority_ToString (OSINT32 value);

EXTERN int PagingPriority_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PagingPriority* pvalue);

EXTERN int PagingPriority_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, PagingPriority* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionID                                              */
/*                                                            */
/**************************************************************/
/*
PDUSessionID ::= INTEGER (0..255)
*/
typedef OSUINT8 PDUSessionID;

EXTERN int asn1PE_PDUSessionID (OSCTXT* pctxt, PDUSessionID value);

EXTERN int asn1PD_PDUSessionID (OSCTXT* pctxt, PDUSessionID* pvalue);

EXTERN void asn1Print_PDUSessionID (const char* name, const PDUSessionID* pvalue);

EXTERN int asn1PrtToStr_PDUSessionID (const char* name, PDUSessionID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionID (OSCTXT *pctxt, 
   const char* name, const PDUSessionID* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionType                                            */
/*                                                            */
/**************************************************************/
/*
PDUSessionType ::= ENUMERATED { ipv4(0), ipv6(1), ipv4v6(2), ethernet(3), unstructured(4), ... }
*/
typedef enum {
   ipv4 = 0,
   ipv6 = 1,
   ipv4v6 = 2,
   ethernet = 3,
   unstructured = 4
} PDUSessionType_Root;

typedef OSUINT32 PDUSessionType;

EXTERN int asn1PE_PDUSessionType (OSCTXT* pctxt, PDUSessionType value);

EXTERN int asn1PD_PDUSessionType (OSCTXT* pctxt, PDUSessionType* pvalue);

EXTERN void asn1Print_PDUSessionType (const char* name, const PDUSessionType* pvalue);

EXTERN int asn1PrtToStr_PDUSessionType (const char* name, PDUSessionType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionType (OSCTXT *pctxt, 
   const char* name, const PDUSessionType* pvalue);

EXTERN extern const OSEnumItem PDUSessionType_ENUMTAB[];
#define PDUSessionType_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* PDUSessionType_ToString (OSINT32 value);

EXTERN int PDUSessionType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PDUSessionType* pvalue);

EXTERN int PDUSessionType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, PDUSessionType* pvalue);

/**************************************************************/
/*                                                            */
/*  PeriodicRegistrationUpdateTimer                           */
/*                                                            */
/**************************************************************/
/*
PeriodicRegistrationUpdateTimer ::= BIT STRING  (SIZE (8))
*/
typedef ASN1BitStr32 PeriodicRegistrationUpdateTimer;

EXTERN int asn1PE_PeriodicRegistrationUpdateTimer (OSCTXT* pctxt, PeriodicRegistrationUpdateTimer value);

EXTERN int asn1PD_PeriodicRegistrationUpdateTimer (OSCTXT* pctxt, PeriodicRegistrationUpdateTimer* pvalue);

EXTERN void asn1Print_PeriodicRegistrationUpdateTimer 
   (const char* name, const PeriodicRegistrationUpdateTimer* pvalue);

EXTERN int asn1PrtToStr_PeriodicRegistrationUpdateTimer (const char* name, 
   PeriodicRegistrationUpdateTimer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PeriodicRegistrationUpdateTimer (OSCTXT *pctxt, 
   const char* name, const PeriodicRegistrationUpdateTimer* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNIdentity                                              */
/*                                                            */
/**************************************************************/
/*
PLMNIdentity ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN PLMNIdentity {
   OSOCTET data[3];
} PLMNIdentity;

EXTERN int asn1PE_PLMNIdentity (OSCTXT* pctxt, PLMNIdentity* pvalue);

EXTERN int asn1PD_PLMNIdentity (OSCTXT* pctxt, PLMNIdentity* pvalue);

EXTERN void asn1Print_PLMNIdentity (const char* name, const PLMNIdentity* pvalue);

EXTERN int asn1PrtToStr_PLMNIdentity (const char* name, PLMNIdentity* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PLMNIdentity (OSCTXT *pctxt, 
   const char* name, const PLMNIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  PortNumber                                                */
/*                                                            */
/**************************************************************/
/*
PortNumber ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN PortNumber {
   OSOCTET data[2];
} PortNumber;

EXTERN int asn1PE_PortNumber (OSCTXT* pctxt, PortNumber* pvalue);

EXTERN int asn1PD_PortNumber (OSCTXT* pctxt, PortNumber* pvalue);

EXTERN void asn1Print_PortNumber (const char* name, const PortNumber* pvalue);

EXTERN int asn1PrtToStr_PortNumber (const char* name, PortNumber* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PortNumber (OSCTXT *pctxt, 
   const char* name, const PortNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  Pre_emptionCapability                                     */
/*                                                            */
/**************************************************************/
/*
Pre-emptionCapability ::= ENUMERATED { shall-not-trigger-pre-emption(0), may-trigger-pre-emption(1), ... }
*/
typedef enum {
   shall_not_trigger_pre_emption = 0,
   may_trigger_pre_emption = 1
} Pre_emptionCapability_Root;

typedef OSUINT32 Pre_emptionCapability;

EXTERN int asn1PE_Pre_emptionCapability (OSCTXT* pctxt, Pre_emptionCapability value);

EXTERN int asn1PD_Pre_emptionCapability (OSCTXT* pctxt, Pre_emptionCapability* pvalue);

EXTERN void asn1Print_Pre_emptionCapability 
   (const char* name, const Pre_emptionCapability* pvalue);

EXTERN int asn1PrtToStr_Pre_emptionCapability (const char* name, 
   Pre_emptionCapability* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Pre_emptionCapability (OSCTXT *pctxt, 
   const char* name, const Pre_emptionCapability* pvalue);

EXTERN extern const OSEnumItem Pre_emptionCapability_ENUMTAB[];
#define Pre_emptionCapability_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* Pre_emptionCapability_ToString (OSINT32 value);

EXTERN int Pre_emptionCapability_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Pre_emptionCapability* pvalue);

EXTERN int Pre_emptionCapability_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, Pre_emptionCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  Pre_emptionVulnerability                                  */
/*                                                            */
/**************************************************************/
/*
Pre-emptionVulnerability ::= ENUMERATED { not-pre-emptable(0), pre-emptable(1), ... }
*/
typedef enum {
   not_pre_emptable = 0,
   pre_emptable = 1
} Pre_emptionVulnerability_Root;

typedef OSUINT32 Pre_emptionVulnerability;

EXTERN int asn1PE_Pre_emptionVulnerability (OSCTXT* pctxt, Pre_emptionVulnerability value);

EXTERN int asn1PD_Pre_emptionVulnerability (OSCTXT* pctxt, Pre_emptionVulnerability* pvalue);

EXTERN void asn1Print_Pre_emptionVulnerability 
   (const char* name, const Pre_emptionVulnerability* pvalue);

EXTERN int asn1PrtToStr_Pre_emptionVulnerability (const char* name, 
   Pre_emptionVulnerability* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Pre_emptionVulnerability (OSCTXT *pctxt, 
   const char* name, const Pre_emptionVulnerability* pvalue);

EXTERN extern const OSEnumItem Pre_emptionVulnerability_ENUMTAB[];
#define Pre_emptionVulnerability_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* Pre_emptionVulnerability_ToString (OSINT32 value);

EXTERN int Pre_emptionVulnerability_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Pre_emptionVulnerability* pvalue);

EXTERN int Pre_emptionVulnerability_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, Pre_emptionVulnerability* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  PriorityLevelARP                                          */
/*                                                            */
/**************************************************************/
/*
PriorityLevelARP ::= INTEGER (1..15)
*/
typedef OSUINT8 PriorityLevelARP;

EXTERN int asn1PE_PriorityLevelARP (OSCTXT* pctxt, PriorityLevelARP value);

EXTERN int asn1PD_PriorityLevelARP (OSCTXT* pctxt, PriorityLevelARP* pvalue);

EXTERN void asn1Print_PriorityLevelARP 
   (const char* name, const PriorityLevelARP* pvalue);

EXTERN int asn1PrtToStr_PriorityLevelARP (const char* name, PriorityLevelARP* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PriorityLevelARP (OSCTXT *pctxt, 
   const char* name, const PriorityLevelARP* pvalue);

/**************************************************************/
/*                                                            */
/*  PriorityLevelQos                                          */
/*                                                            */
/**************************************************************/
/*
PriorityLevelQos ::= INTEGER (1..127, ...)
*/
typedef OSUINT32 PriorityLevelQos;

EXTERN int asn1PE_PriorityLevelQos (OSCTXT* pctxt, PriorityLevelQos value);

EXTERN int asn1PD_PriorityLevelQos (OSCTXT* pctxt, PriorityLevelQos* pvalue);

EXTERN void asn1Print_PriorityLevelQos 
   (const char* name, const PriorityLevelQos* pvalue);

EXTERN int asn1PrtToStr_PriorityLevelQos (const char* name, PriorityLevelQos* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PriorityLevelQos (OSCTXT *pctxt, 
   const char* name, const PriorityLevelQos* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowIdentifier                                         */
/*                                                            */
/**************************************************************/
/*
QosFlowIdentifier ::= INTEGER (0..63, ...)
*/
typedef OSUINT32 QosFlowIdentifier;

EXTERN int asn1PE_QosFlowIdentifier (OSCTXT* pctxt, QosFlowIdentifier value);

EXTERN int asn1PD_QosFlowIdentifier (OSCTXT* pctxt, QosFlowIdentifier* pvalue);

EXTERN void asn1Print_QosFlowIdentifier 
   (const char* name, const QosFlowIdentifier* pvalue);

EXTERN int asn1PrtToStr_QosFlowIdentifier (const char* name, 
   QosFlowIdentifier* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowIdentifier (OSCTXT *pctxt, 
   const char* name, const QosFlowIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  RANNodeName                                               */
/*                                                            */
/**************************************************************/
/*
 R
RANNodeName ::= PrintableString (SIZE (1..150, ...))
*/
typedef const char* RANNodeName;

EXTERN int asn1PE_RANNodeName (OSCTXT* pctxt, RANNodeName value);

EXTERN int asn1PD_RANNodeName (OSCTXT* pctxt, RANNodeName* pvalue);

EXTERN void asn1Print_RANNodeName (const char* name, const RANNodeName pvalue);

EXTERN int asn1PrtToStr_RANNodeName (const char* name, RANNodeName pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANNodeName (OSCTXT *pctxt, 
   const char* name, const RANNodeName pvalue);

/**************************************************************/
/*                                                            */
/*  RANPagingPriority                                         */
/*                                                            */
/**************************************************************/
/*
RANPagingPriority ::= INTEGER (1..256)
*/
typedef OSUINT16 RANPagingPriority;

EXTERN int asn1PE_RANPagingPriority (OSCTXT* pctxt, RANPagingPriority value);

EXTERN int asn1PD_RANPagingPriority (OSCTXT* pctxt, RANPagingPriority* pvalue);

EXTERN void asn1Print_RANPagingPriority 
   (const char* name, const RANPagingPriority* pvalue);

EXTERN int asn1PrtToStr_RANPagingPriority (const char* name, 
   RANPagingPriority* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANPagingPriority (OSCTXT *pctxt, 
   const char* name, const RANPagingPriority* pvalue);

/**************************************************************/
/*                                                            */
/*  RAN_UE_NGAP_ID                                            */
/*                                                            */
/**************************************************************/
/*
RAN-UE-NGAP-ID ::= INTEGER (0..4294967295)
*/
typedef OSUINT32 RAN_UE_NGAP_ID;

EXTERN int asn1PE_RAN_UE_NGAP_ID (OSCTXT* pctxt, RAN_UE_NGAP_ID value);

EXTERN int asn1PD_RAN_UE_NGAP_ID (OSCTXT* pctxt, RAN_UE_NGAP_ID* pvalue);

EXTERN void asn1Print_RAN_UE_NGAP_ID (const char* name, const RAN_UE_NGAP_ID* pvalue);

EXTERN int asn1PrtToStr_RAN_UE_NGAP_ID (const char* name, RAN_UE_NGAP_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RAN_UE_NGAP_ID (OSCTXT *pctxt, 
   const char* name, const RAN_UE_NGAP_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  RATRestrictionInformation                                 */
/*                                                            */
/**************************************************************/
/*
RATRestrictionInformation ::= BIT STRING  (SIZE (8, ...))
*/
typedef ASN1DynBitStr RATRestrictionInformation;

EXTERN int asn1PE_RATRestrictionInformation (OSCTXT* pctxt, RATRestrictionInformation value);

EXTERN int asn1PD_RATRestrictionInformation (OSCTXT* pctxt, RATRestrictionInformation* pvalue);

EXTERN void asn1Print_RATRestrictionInformation 
   (const char* name, const RATRestrictionInformation* pvalue);

EXTERN int asn1PrtToStr_RATRestrictionInformation (const char* name, 
   RATRestrictionInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RATRestrictionInformation (OSCTXT *pctxt, 
   const char* name, const RATRestrictionInformation* pvalue);

EXTERN int asn1Init_RATRestrictionInformation (RATRestrictionInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  RedirectionVoiceFallback                                  */
/*                                                            */
/**************************************************************/
/*
RedirectionVoiceFallback ::= ENUMERATED { possible(0), not-possible(1), ... }
*/
typedef enum {
   possible = 0,
   not_possible = 1
} RedirectionVoiceFallback_Root;

typedef OSUINT32 RedirectionVoiceFallback;

EXTERN int asn1PE_RedirectionVoiceFallback (OSCTXT* pctxt, RedirectionVoiceFallback value);

EXTERN int asn1PD_RedirectionVoiceFallback (OSCTXT* pctxt, RedirectionVoiceFallback* pvalue);

EXTERN void asn1Print_RedirectionVoiceFallback 
   (const char* name, const RedirectionVoiceFallback* pvalue);

EXTERN int asn1PrtToStr_RedirectionVoiceFallback (const char* name, 
   RedirectionVoiceFallback* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RedirectionVoiceFallback (OSCTXT *pctxt, 
   const char* name, const RedirectionVoiceFallback* pvalue);

EXTERN extern const OSEnumItem RedirectionVoiceFallback_ENUMTAB[];
#define RedirectionVoiceFallback_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* RedirectionVoiceFallback_ToString (OSINT32 value);

EXTERN int RedirectionVoiceFallback_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RedirectionVoiceFallback* pvalue);

EXTERN int RedirectionVoiceFallback_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, RedirectionVoiceFallback* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  ReflectiveQosAttribute                                    */
/*                                                            */
/**************************************************************/
/*
ReflectiveQosAttribute ::= ENUMERATED { subject-to(0), ... }
*/
typedef enum {
   subject_to = 0
} ReflectiveQosAttribute_Root;

typedef OSUINT32 ReflectiveQosAttribute;

EXTERN int asn1PE_ReflectiveQosAttribute (OSCTXT* pctxt, ReflectiveQosAttribute value);

EXTERN int asn1PD_ReflectiveQosAttribute (OSCTXT* pctxt, ReflectiveQosAttribute* pvalue);

EXTERN void asn1Print_ReflectiveQosAttribute 
   (const char* name, const ReflectiveQosAttribute* pvalue);

EXTERN int asn1PrtToStr_ReflectiveQosAttribute (const char* name, 
   ReflectiveQosAttribute* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ReflectiveQosAttribute (OSCTXT *pctxt, 
   const char* name, const ReflectiveQosAttribute* pvalue);

EXTERN extern const OSEnumItem ReflectiveQosAttribute_ENUMTAB[];
#define ReflectiveQosAttribute_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ReflectiveQosAttribute_ToString (OSINT32 value);

EXTERN int ReflectiveQosAttribute_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ReflectiveQosAttribute* pvalue);

EXTERN int ReflectiveQosAttribute_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ReflectiveQosAttribute* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceID                                               */
/*                                                            */
/**************************************************************/
/*
ReferenceID ::= INTEGER (1..64, ...)
*/
typedef OSUINT32 ReferenceID;

EXTERN int asn1PE_ReferenceID (OSCTXT* pctxt, ReferenceID value);

EXTERN int asn1PD_ReferenceID (OSCTXT* pctxt, ReferenceID* pvalue);

EXTERN void asn1Print_ReferenceID (const char* name, const ReferenceID* pvalue);

EXTERN int asn1PrtToStr_ReferenceID (const char* name, ReferenceID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ReferenceID (OSCTXT *pctxt, 
   const char* name, const ReferenceID* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeAMFCapacity                                       */
/*                                                            */
/**************************************************************/
/*
RelativeAMFCapacity ::= INTEGER (0..255)
*/
typedef OSUINT8 RelativeAMFCapacity;

EXTERN int asn1PE_RelativeAMFCapacity (OSCTXT* pctxt, RelativeAMFCapacity value);

EXTERN int asn1PD_RelativeAMFCapacity (OSCTXT* pctxt, RelativeAMFCapacity* pvalue);

EXTERN void asn1Print_RelativeAMFCapacity 
   (const char* name, const RelativeAMFCapacity* pvalue);

EXTERN int asn1PrtToStr_RelativeAMFCapacity (const char* name, 
   RelativeAMFCapacity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RelativeAMFCapacity (OSCTXT *pctxt, 
   const char* name, const RelativeAMFCapacity* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportArea                                                */
/*                                                            */
/**************************************************************/
/*
ReportArea ::= ENUMERATED { cell(0), ... }
*/
typedef enum {
   cell = 0
} ReportArea_Root;

typedef OSUINT32 ReportArea;

EXTERN int asn1PE_ReportArea (OSCTXT* pctxt, ReportArea value);

EXTERN int asn1PD_ReportArea (OSCTXT* pctxt, ReportArea* pvalue);

EXTERN void asn1Print_ReportArea (const char* name, const ReportArea* pvalue);

EXTERN int asn1PrtToStr_ReportArea (const char* name, ReportArea* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ReportArea (OSCTXT *pctxt, 
   const char* name, const ReportArea* pvalue);

EXTERN extern const OSEnumItem ReportArea_ENUMTAB[];
#define ReportArea_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ReportArea_ToString (OSINT32 value);

EXTERN int ReportArea_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ReportArea* pvalue);

EXTERN int ReportArea_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ReportArea* pvalue);

/**************************************************************/
/*                                                            */
/*  RepetitionPeriod                                          */
/*                                                            */
/**************************************************************/
/*
RepetitionPeriod ::= INTEGER (0..131071)
*/
typedef OSUINT32 RepetitionPeriod;

EXTERN int asn1PE_RepetitionPeriod (OSCTXT* pctxt, RepetitionPeriod value);

EXTERN int asn1PD_RepetitionPeriod (OSCTXT* pctxt, RepetitionPeriod* pvalue);

EXTERN void asn1Print_RepetitionPeriod 
   (const char* name, const RepetitionPeriod* pvalue);

EXTERN int asn1PrtToStr_RepetitionPeriod (const char* name, RepetitionPeriod* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RepetitionPeriod (OSCTXT *pctxt, 
   const char* name, const RepetitionPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetAll                                                  */
/*                                                            */
/**************************************************************/
/*
ResetAll ::= ENUMERATED { reset-all(0), ... }
*/
typedef enum {
   reset_all = 0
} ResetAll_Root;

typedef OSUINT32 ResetAll;

EXTERN int asn1PE_ResetAll (OSCTXT* pctxt, ResetAll value);

EXTERN int asn1PD_ResetAll (OSCTXT* pctxt, ResetAll* pvalue);

EXTERN void asn1Print_ResetAll (const char* name, const ResetAll* pvalue);

EXTERN int asn1PrtToStr_ResetAll (const char* name, ResetAll* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ResetAll (OSCTXT *pctxt, 
   const char* name, const ResetAll* pvalue);

EXTERN extern const OSEnumItem ResetAll_ENUMTAB[];
#define ResetAll_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ResetAll_ToString (OSINT32 value);

EXTERN int ResetAll_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ResetAll* pvalue);

EXTERN int ResetAll_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ResetAll* pvalue);

/**************************************************************/
/*                                                            */
/*  RoutingID                                                 */
/*                                                            */
/**************************************************************/
/*
RoutingID ::= OCTET STRING
*/
typedef OSDynOctStr RoutingID;

EXTERN int asn1PE_RoutingID (OSCTXT* pctxt, RoutingID value);

EXTERN int asn1PD_RoutingID (OSCTXT* pctxt, RoutingID* pvalue);

EXTERN void asn1Print_RoutingID (const char* name, const RoutingID* pvalue);

EXTERN int asn1PrtToStr_RoutingID (const char* name, RoutingID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RoutingID (OSCTXT *pctxt, 
   const char* name, const RoutingID* pvalue);

EXTERN int asn1Init_RoutingID (RoutingID* pvalue);

/**************************************************************/
/*                                                            */
/*  RRCContainer                                              */
/*                                                            */
/**************************************************************/
/*
RRCContainer ::= OCTET STRING
*/
typedef OSDynOctStr RRCContainer;

EXTERN int asn1PE_RRCContainer (OSCTXT* pctxt, RRCContainer value);

EXTERN int asn1PD_RRCContainer (OSCTXT* pctxt, RRCContainer* pvalue);

EXTERN void asn1Print_RRCContainer (const char* name, const RRCContainer* pvalue);

EXTERN int asn1PrtToStr_RRCContainer (const char* name, RRCContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RRCContainer (OSCTXT *pctxt, 
   const char* name, const RRCContainer* pvalue);

EXTERN int asn1Init_RRCContainer (RRCContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  RRCEstablishmentCause                                     */
/*                                                            */
/**************************************************************/
/*
RRCEstablishmentCause ::= ENUMERATED { emergency(0), highPriorityAccess(1), mt-Access(2), mo-Signalling(3), mo-Data(4), mo-VoiceCall(5), mo-VideoCall(6), mo-SMS(7), mps-PriorityAccess(8), mcs-PriorityAccess(9), ..., notAvailable(10) }
*/
typedef enum {
   emergency = 0,
   highPriorityAccess = 1,
   mt_Access = 2,
   mo_Signalling = 3,
   mo_Data = 4,
   mo_VoiceCall = 5,
   mo_VideoCall = 6,
   mo_SMS = 7,
   mps_PriorityAccess = 8,
   mcs_PriorityAccess = 9
} RRCEstablishmentCause_Root;

typedef enum {
   notAvailable = 10
} RRCEstablishmentCause_Ext;

typedef OSUINT32 RRCEstablishmentCause;

EXTERN int asn1PE_RRCEstablishmentCause (OSCTXT* pctxt, RRCEstablishmentCause value);

EXTERN int asn1PD_RRCEstablishmentCause (OSCTXT* pctxt, RRCEstablishmentCause* pvalue);

EXTERN void asn1Print_RRCEstablishmentCause 
   (const char* name, const RRCEstablishmentCause* pvalue);

EXTERN int asn1PrtToStr_RRCEstablishmentCause (const char* name, 
   RRCEstablishmentCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RRCEstablishmentCause (OSCTXT *pctxt, 
   const char* name, const RRCEstablishmentCause* pvalue);

EXTERN extern const OSEnumItem RRCEstablishmentCause_ENUMTAB[];
#define RRCEstablishmentCause_ENUMTABSIZE 11

EXTERN const OSUTF8CHAR* RRCEstablishmentCause_ToString (OSINT32 value);

EXTERN int RRCEstablishmentCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RRCEstablishmentCause* pvalue);

EXTERN int RRCEstablishmentCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, RRCEstablishmentCause* pvalue);

/**************************************************************/
/*                                                            */
/*  RRCInactiveTransitionReportRequest                        */
/*                                                            */
/**************************************************************/
/*
RRCInactiveTransitionReportRequest ::= ENUMERATED { subsequent-state-transition-report(0), single-rrc-connected-state-report(1), cancel-report(2), ... }
*/
typedef enum {
   subsequent_state_transition_report = 0,
   single_rrc_connected_state_report = 1,
   cancel_report = 2
} RRCInactiveTransitionReportRequest_Root;

typedef OSUINT32 RRCInactiveTransitionReportRequest;

EXTERN int asn1PE_RRCInactiveTransitionReportRequest (OSCTXT* pctxt, RRCInactiveTransitionReportRequest value);

EXTERN int asn1PD_RRCInactiveTransitionReportRequest (OSCTXT* pctxt, RRCInactiveTransitionReportRequest* pvalue);

EXTERN void asn1Print_RRCInactiveTransitionReportRequest 
   (const char* name, const RRCInactiveTransitionReportRequest* pvalue);

EXTERN int asn1PrtToStr_RRCInactiveTransitionReportRequest (const char* name, 
   RRCInactiveTransitionReportRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RRCInactiveTransitionReportRequest (OSCTXT *pctxt, 
   const char* name, const RRCInactiveTransitionReportRequest* pvalue);

EXTERN extern const OSEnumItem RRCInactiveTransitionReportRequest_ENUMTAB[];
#define RRCInactiveTransitionReportRequest_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* RRCInactiveTransitionReportRequest_ToString (OSINT32 value);

EXTERN int RRCInactiveTransitionReportRequest_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RRCInactiveTransitionReportRequest* pvalue);

EXTERN int RRCInactiveTransitionReportRequest_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      RRCInactiveTransitionReportRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  RRCState                                                  */
/*                                                            */
/**************************************************************/
/*
RRCState ::= ENUMERATED { inactive(0), connected(1), ... }
*/
typedef enum {
   inactive = 0,
   connected = 1
} RRCState_Root;

typedef OSUINT32 RRCState;

EXTERN int asn1PE_RRCState (OSCTXT* pctxt, RRCState value);

EXTERN int asn1PD_RRCState (OSCTXT* pctxt, RRCState* pvalue);

EXTERN void asn1Print_RRCState (const char* name, const RRCState* pvalue);

EXTERN int asn1PrtToStr_RRCState (const char* name, RRCState* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RRCState (OSCTXT *pctxt, 
   const char* name, const RRCState* pvalue);

EXTERN extern const OSEnumItem RRCState_ENUMTAB[];
#define RRCState_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* RRCState_ToString (OSINT32 value);

EXTERN int RRCState_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RRCState* pvalue);

EXTERN int RRCState_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, RRCState* pvalue);

/**************************************************************/
/*                                                            */
/*  SD                                                        */
/*                                                            */
/**************************************************************/
/*
SD ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN SD {
   OSOCTET data[3];
} SD;

EXTERN int asn1PE_SD (OSCTXT* pctxt, SD* pvalue);

EXTERN int asn1PD_SD (OSCTXT* pctxt, SD* pvalue);

EXTERN void asn1Print_SD (const char* name, const SD* pvalue);

EXTERN int asn1PrtToStr_SD (const char* name, SD* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SD (OSCTXT *pctxt, const char* name, const SD* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityKey                                               */
/*                                                            */
/**************************************************************/
/*
SecurityKey ::= BIT STRING  (SIZE (256))
*/
typedef struct SecurityKey {
   OSOCTET data[32];
} SecurityKey;

EXTERN int asn1PE_SecurityKey (OSCTXT* pctxt, SecurityKey* pvalue);

EXTERN int asn1PD_SecurityKey (OSCTXT* pctxt, SecurityKey* pvalue);

EXTERN void asn1Print_SecurityKey (const char* name, const SecurityKey* pvalue);

EXTERN int asn1PrtToStr_SecurityKey (const char* name, SecurityKey* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityKey (OSCTXT *pctxt, 
   const char* name, const SecurityKey* pvalue);

/**************************************************************/
/*                                                            */
/*  SerialNumber                                              */
/*                                                            */
/**************************************************************/
/*
SerialNumber ::= BIT STRING  (SIZE (16))
*/
typedef ASN1BitStr32 SerialNumber;

EXTERN int asn1PE_SerialNumber (OSCTXT* pctxt, SerialNumber value);

EXTERN int asn1PD_SerialNumber (OSCTXT* pctxt, SerialNumber* pvalue);

EXTERN void asn1Print_SerialNumber (const char* name, const SerialNumber* pvalue);

EXTERN int asn1PrtToStr_SerialNumber (const char* name, SerialNumber* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SerialNumber (OSCTXT *pctxt, 
   const char* name, const SerialNumber* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationRequest                                     */
/*                                                            */
/**************************************************************/
/*
SONInformationRequest ::= ENUMERATED { xn-TNL-configuration-info(0), ... }
*/
typedef enum {
   xn_TNL_configuration_info = 0
} SONInformationRequest_Root;

typedef OSUINT32 SONInformationRequest;

EXTERN int asn1PE_SONInformationRequest (OSCTXT* pctxt, SONInformationRequest value);

EXTERN int asn1PD_SONInformationRequest (OSCTXT* pctxt, SONInformationRequest* pvalue);

EXTERN void asn1Print_SONInformationRequest 
   (const char* name, const SONInformationRequest* pvalue);

EXTERN int asn1PrtToStr_SONInformationRequest (const char* name, 
   SONInformationRequest* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONInformationRequest (OSCTXT *pctxt, 
   const char* name, const SONInformationRequest* pvalue);

EXTERN extern const OSEnumItem SONInformationRequest_ENUMTAB[];
#define SONInformationRequest_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* SONInformationRequest_ToString (OSINT32 value);

EXTERN int SONInformationRequest_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, SONInformationRequest* pvalue);

EXTERN int SONInformationRequest_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, SONInformationRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceOfUEActivityBehaviourInformation                    */
/*                                                            */
/**************************************************************/
/*
SourceOfUEActivityBehaviourInformation ::= ENUMERATED { subscription-information(0), statistics(1), ... }
*/
typedef enum {
   subscription_information = 0,
   statistics = 1
} SourceOfUEActivityBehaviourInformation_Root;

typedef OSUINT32 SourceOfUEActivityBehaviourInformation;

EXTERN int asn1PE_SourceOfUEActivityBehaviourInformation (OSCTXT* pctxt, SourceOfUEActivityBehaviourInformation value);

EXTERN int asn1PD_SourceOfUEActivityBehaviourInformation (OSCTXT* pctxt, SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN void asn1Print_SourceOfUEActivityBehaviourInformation 
   (const char* name, const SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN int asn1PrtToStr_SourceOfUEActivityBehaviourInformation (const char* name, 
   SourceOfUEActivityBehaviourInformation* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceOfUEActivityBehaviourInformation (OSCTXT *pctxt, 
   const char* name, const SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN extern const OSEnumItem SourceOfUEActivityBehaviourInformation_ENUMTAB[];
#define SourceOfUEActivityBehaviourInformation_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* SourceOfUEActivityBehaviourInformation_ToString (OSINT32 value);

EXTERN int SourceOfUEActivityBehaviourInformation_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, SourceOfUEActivityBehaviourInformation* pvalue);

EXTERN int SourceOfUEActivityBehaviourInformation_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      SourceOfUEActivityBehaviourInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceToTarget_TransparentContainer                       */
/*                                                            */
/**************************************************************/
/*
SourceToTarget-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr SourceToTarget_TransparentContainer;

EXTERN int asn1PE_SourceToTarget_TransparentContainer (OSCTXT* pctxt, SourceToTarget_TransparentContainer value);

EXTERN int asn1PD_SourceToTarget_TransparentContainer (OSCTXT* pctxt, SourceToTarget_TransparentContainer* pvalue);

EXTERN void asn1Print_SourceToTarget_TransparentContainer 
   (const char* name, const SourceToTarget_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_SourceToTarget_TransparentContainer (const char* name, 
   SourceToTarget_TransparentContainer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceToTarget_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const SourceToTarget_TransparentContainer* pvalue);

EXTERN int asn1Init_SourceToTarget_TransparentContainer (
   SourceToTarget_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfiguredNSSAI                                           */
/*                                                            */
/**************************************************************/
/*
 This IE includes information from the source Core node to the target Core node for reroute information provide by NSSF. 
 The octets of the OCTET STRING are encoded according to the specifications of the Core network.
ConfiguredNSSAI ::= OCTET STRING (SIZE (128))
*/
typedef struct EXTERN ConfiguredNSSAI {
   OSOCTET data[128];
} ConfiguredNSSAI;

EXTERN int asn1PE_ConfiguredNSSAI (OSCTXT* pctxt, ConfiguredNSSAI* pvalue);

EXTERN int asn1PD_ConfiguredNSSAI (OSCTXT* pctxt, ConfiguredNSSAI* pvalue);

EXTERN void asn1Print_ConfiguredNSSAI 
   (const char* name, const ConfiguredNSSAI* pvalue);

EXTERN int asn1PrtToStr_ConfiguredNSSAI (const char* name, ConfiguredNSSAI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ConfiguredNSSAI (OSCTXT *pctxt, 
   const char* name, const ConfiguredNSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  RejectedNSSAIinPLMN                                       */
/*                                                            */
/**************************************************************/
/*
RejectedNSSAIinPLMN ::= OCTET STRING (SIZE (32))
*/
typedef struct EXTERN RejectedNSSAIinPLMN {
   OSOCTET data[32];
} RejectedNSSAIinPLMN;

EXTERN int asn1PE_RejectedNSSAIinPLMN (OSCTXT* pctxt, RejectedNSSAIinPLMN* pvalue);

EXTERN int asn1PD_RejectedNSSAIinPLMN (OSCTXT* pctxt, RejectedNSSAIinPLMN* pvalue);

EXTERN void asn1Print_RejectedNSSAIinPLMN 
   (const char* name, const RejectedNSSAIinPLMN* pvalue);

EXTERN int asn1PrtToStr_RejectedNSSAIinPLMN (const char* name, 
   RejectedNSSAIinPLMN* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RejectedNSSAIinPLMN (OSCTXT *pctxt, 
   const char* name, const RejectedNSSAIinPLMN* pvalue);

/**************************************************************/
/*                                                            */
/*  RejectedNSSAIinTA                                         */
/*                                                            */
/**************************************************************/
/*
RejectedNSSAIinTA ::= OCTET STRING (SIZE (32))
*/
typedef struct EXTERN RejectedNSSAIinTA {
   OSOCTET data[32];
} RejectedNSSAIinTA;

EXTERN int asn1PE_RejectedNSSAIinTA (OSCTXT* pctxt, RejectedNSSAIinTA* pvalue);

EXTERN int asn1PD_RejectedNSSAIinTA (OSCTXT* pctxt, RejectedNSSAIinTA* pvalue);

EXTERN void asn1Print_RejectedNSSAIinTA 
   (const char* name, const RejectedNSSAIinTA* pvalue);

EXTERN int asn1PrtToStr_RejectedNSSAIinTA (const char* name, 
   RejectedNSSAIinTA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RejectedNSSAIinTA (OSCTXT *pctxt, 
   const char* name, const RejectedNSSAIinTA* pvalue);

/**************************************************************/
/*                                                            */
/*  SST                                                       */
/*                                                            */
/**************************************************************/
/*
SST ::= OCTET STRING (SIZE (1))
*/
typedef struct EXTERN SST {
   OSOCTET data[1];
} SST;

EXTERN int asn1PE_SST (OSCTXT* pctxt, SST* pvalue);

EXTERN int asn1PD_SST (OSCTXT* pctxt, SST* pvalue);

EXTERN void asn1Print_SST (const char* name, const SST* pvalue);

EXTERN int asn1PrtToStr_SST (const char* name, SST* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SST (OSCTXT *pctxt, const char* name, const SST* pvalue);

/**************************************************************/
/*                                                            */
/*  TAC                                                       */
/*                                                            */
/**************************************************************/
/*
 T
TAC ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN TAC {
   OSOCTET data[3];
} TAC;

EXTERN int asn1PE_TAC (OSCTXT* pctxt, TAC* pvalue);

EXTERN int asn1PD_TAC (OSCTXT* pctxt, TAC* pvalue);

EXTERN void asn1Print_TAC (const char* name, const TAC* pvalue);

EXTERN int asn1PrtToStr_TAC (const char* name, TAC* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAC (OSCTXT *pctxt, const char* name, const TAC* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetToSource_TransparentContainer                       */
/*                                                            */
/**************************************************************/
/*
TargetToSource-TransparentContainer ::= OCTET STRING
*/
typedef OSDynOctStr TargetToSource_TransparentContainer;

EXTERN int asn1PE_TargetToSource_TransparentContainer (OSCTXT* pctxt, TargetToSource_TransparentContainer value);

EXTERN int asn1PD_TargetToSource_TransparentContainer (OSCTXT* pctxt, TargetToSource_TransparentContainer* pvalue);

EXTERN void asn1Print_TargetToSource_TransparentContainer 
   (const char* name, const TargetToSource_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_TargetToSource_TransparentContainer (const char* name, 
   TargetToSource_TransparentContainer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetToSource_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const TargetToSource_TransparentContainer* pvalue);

EXTERN int asn1Init_TargetToSource_TransparentContainer (
   TargetToSource_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TimerApproachForGUAMIRemoval                              */
/*                                                            */
/**************************************************************/
/*
 This IE includes a transparent container from the target RAN node to the source RAN node. 
 The octets of the OCTET STRING are encoded according to the specifications of the target system.
TimerApproachForGUAMIRemoval ::= ENUMERATED { apply-timer(0), ... }
*/
typedef enum {
   apply_timer = 0
} TimerApproachForGUAMIRemoval_Root;

typedef OSUINT32 TimerApproachForGUAMIRemoval;

EXTERN int asn1PE_TimerApproachForGUAMIRemoval (OSCTXT* pctxt, TimerApproachForGUAMIRemoval value);

EXTERN int asn1PD_TimerApproachForGUAMIRemoval (OSCTXT* pctxt, TimerApproachForGUAMIRemoval* pvalue);

EXTERN void asn1Print_TimerApproachForGUAMIRemoval 
   (const char* name, const TimerApproachForGUAMIRemoval* pvalue);

EXTERN int asn1PrtToStr_TimerApproachForGUAMIRemoval (const char* name, 
   TimerApproachForGUAMIRemoval* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TimerApproachForGUAMIRemoval (OSCTXT *pctxt, 
   const char* name, const TimerApproachForGUAMIRemoval* pvalue);

EXTERN extern const OSEnumItem TimerApproachForGUAMIRemoval_ENUMTAB[];
#define TimerApproachForGUAMIRemoval_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* TimerApproachForGUAMIRemoval_ToString (OSINT32 value);

EXTERN int TimerApproachForGUAMIRemoval_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TimerApproachForGUAMIRemoval* pvalue);

EXTERN int TimerApproachForGUAMIRemoval_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TimerApproachForGUAMIRemoval* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeStamp                                                 */
/*                                                            */
/**************************************************************/
/*
TimeStamp ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN TimeStamp {
   OSOCTET data[4];
} TimeStamp;

EXTERN int asn1PE_TimeStamp (OSCTXT* pctxt, TimeStamp* pvalue);

EXTERN int asn1PD_TimeStamp (OSCTXT* pctxt, TimeStamp* pvalue);

EXTERN void asn1Print_TimeStamp (const char* name, const TimeStamp* pvalue);

EXTERN int asn1PrtToStr_TimeStamp (const char* name, TimeStamp* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TimeStamp (OSCTXT *pctxt, 
   const char* name, const TimeStamp* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeToWait                                                */
/*                                                            */
/**************************************************************/
/*
TimeToWait ::= ENUMERATED { v1s(0), v2s(1), v5s(2), v10s(3), v20s(4), v60s(5), ... }
*/
typedef enum {
   v1s = 0,
   v2s = 1,
   v5s = 2,
   v10s = 3,
   v20s = 4,
   v60s = 5
} TimeToWait_Root;

typedef OSUINT32 TimeToWait;

EXTERN int asn1PE_TimeToWait (OSCTXT* pctxt, TimeToWait value);

EXTERN int asn1PD_TimeToWait (OSCTXT* pctxt, TimeToWait* pvalue);

EXTERN void asn1Print_TimeToWait (const char* name, const TimeToWait* pvalue);

EXTERN int asn1PrtToStr_TimeToWait (const char* name, TimeToWait* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TimeToWait (OSCTXT *pctxt, 
   const char* name, const TimeToWait* pvalue);

EXTERN extern const OSEnumItem TimeToWait_ENUMTAB[];
#define TimeToWait_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TimeToWait_ToString (OSINT32 value);

EXTERN int TimeToWait_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TimeToWait* pvalue);

EXTERN int TimeToWait_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TimeToWait* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeUEStayedInCell                                        */
/*                                                            */
/**************************************************************/
/*
TimeUEStayedInCell ::= INTEGER (0..4095)
*/
typedef OSUINT16 TimeUEStayedInCell;

EXTERN int asn1PE_TimeUEStayedInCell (OSCTXT* pctxt, TimeUEStayedInCell value);

EXTERN int asn1PD_TimeUEStayedInCell (OSCTXT* pctxt, TimeUEStayedInCell* pvalue);

EXTERN void asn1Print_TimeUEStayedInCell 
   (const char* name, const TimeUEStayedInCell* pvalue);

EXTERN int asn1PrtToStr_TimeUEStayedInCell (const char* name, 
   TimeUEStayedInCell* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TimeUEStayedInCell (OSCTXT *pctxt, 
   const char* name, const TimeUEStayedInCell* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeUEStayedInCellEnhancedGranularity                     */
/*                                                            */
/**************************************************************/
/*
TimeUEStayedInCellEnhancedGranularity ::= INTEGER (0..40950)
*/
typedef OSUINT16 TimeUEStayedInCellEnhancedGranularity;

EXTERN int asn1PE_TimeUEStayedInCellEnhancedGranularity (OSCTXT* pctxt, TimeUEStayedInCellEnhancedGranularity value);

EXTERN int asn1PD_TimeUEStayedInCellEnhancedGranularity (OSCTXT* pctxt, TimeUEStayedInCellEnhancedGranularity* pvalue);

EXTERN void asn1Print_TimeUEStayedInCellEnhancedGranularity 
   (const char* name, const TimeUEStayedInCellEnhancedGranularity* pvalue);

EXTERN int asn1PrtToStr_TimeUEStayedInCellEnhancedGranularity (const char* name, 
   TimeUEStayedInCellEnhancedGranularity* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TimeUEStayedInCellEnhancedGranularity (OSCTXT *pctxt, 
   const char* name, const TimeUEStayedInCellEnhancedGranularity* pvalue);

/**************************************************************/
/*                                                            */
/*  TNLAddressWeightFactor                                    */
/*                                                            */
/**************************************************************/
/*
TNLAddressWeightFactor ::= INTEGER (0..255)
*/
typedef OSUINT8 TNLAddressWeightFactor;

EXTERN int asn1PE_TNLAddressWeightFactor (OSCTXT* pctxt, TNLAddressWeightFactor value);

EXTERN int asn1PD_TNLAddressWeightFactor (OSCTXT* pctxt, TNLAddressWeightFactor* pvalue);

EXTERN void asn1Print_TNLAddressWeightFactor 
   (const char* name, const TNLAddressWeightFactor* pvalue);

EXTERN int asn1PrtToStr_TNLAddressWeightFactor (const char* name, 
   TNLAddressWeightFactor* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TNLAddressWeightFactor (OSCTXT *pctxt, 
   const char* name, const TNLAddressWeightFactor* pvalue);

/**************************************************************/
/*                                                            */
/*  TNLAssociationUsage                                       */
/*                                                            */
/**************************************************************/
/*
TNLAssociationUsage ::= ENUMERATED { ue(0), non-ue(1), both(2), ... }
*/
typedef enum {
   ue = 0,
   non_ue = 1,
   both = 2
} TNLAssociationUsage_Root;

typedef OSUINT32 TNLAssociationUsage;

EXTERN int asn1PE_TNLAssociationUsage (OSCTXT* pctxt, TNLAssociationUsage value);

EXTERN int asn1PD_TNLAssociationUsage (OSCTXT* pctxt, TNLAssociationUsage* pvalue);

EXTERN void asn1Print_TNLAssociationUsage 
   (const char* name, const TNLAssociationUsage* pvalue);

EXTERN int asn1PrtToStr_TNLAssociationUsage (const char* name, 
   TNLAssociationUsage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TNLAssociationUsage (OSCTXT *pctxt, 
   const char* name, const TNLAssociationUsage* pvalue);

EXTERN extern const OSEnumItem TNLAssociationUsage_ENUMTAB[];
#define TNLAssociationUsage_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TNLAssociationUsage_ToString (OSINT32 value);

EXTERN int TNLAssociationUsage_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TNLAssociationUsage* pvalue);

EXTERN int TNLAssociationUsage_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TNLAssociationUsage* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceDepth                                                */
/*                                                            */
/**************************************************************/
/*
TraceDepth ::= ENUMERATED { minimum(0), medium(1), maximum(2), minimumWithoutVendorSpecificExtension(3), mediumWithoutVendorSpecificExtension(4), maximumWithoutVendorSpecificExtension(5), ... }
*/
typedef enum {
   minimum = 0,
   medium_1 = 1,
   maximum = 2,
   minimumWithoutVendorSpecificExtension = 3,
   mediumWithoutVendorSpecificExtension = 4,
   maximumWithoutVendorSpecificExtension = 5
} TraceDepth_Root;

typedef OSUINT32 TraceDepth;

EXTERN int asn1PE_TraceDepth (OSCTXT* pctxt, TraceDepth value);

EXTERN int asn1PD_TraceDepth (OSCTXT* pctxt, TraceDepth* pvalue);

EXTERN void asn1Print_TraceDepth (const char* name, const TraceDepth* pvalue);

EXTERN int asn1PrtToStr_TraceDepth (const char* name, TraceDepth* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceDepth (OSCTXT *pctxt, 
   const char* name, const TraceDepth* pvalue);

EXTERN extern const OSEnumItem TraceDepth_ENUMTAB[];
#define TraceDepth_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TraceDepth_ToString (OSINT32 value);

EXTERN int TraceDepth_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TraceDepth* pvalue);

EXTERN int TraceDepth_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TraceDepth* pvalue);

/**************************************************************/
/*                                                            */
/*  TrafficLoadReductionIndication                            */
/*                                                            */
/**************************************************************/
/*
TrafficLoadReductionIndication ::= INTEGER (1..99)
*/
typedef OSUINT8 TrafficLoadReductionIndication;

EXTERN int asn1PE_TrafficLoadReductionIndication (OSCTXT* pctxt, TrafficLoadReductionIndication value);

EXTERN int asn1PD_TrafficLoadReductionIndication (OSCTXT* pctxt, TrafficLoadReductionIndication* pvalue);

EXTERN void asn1Print_TrafficLoadReductionIndication 
   (const char* name, const TrafficLoadReductionIndication* pvalue);

EXTERN int asn1PrtToStr_TrafficLoadReductionIndication (const char* name, 
   TrafficLoadReductionIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TrafficLoadReductionIndication (OSCTXT *pctxt, 
   const char* name, const TrafficLoadReductionIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  TransportLayerAddress                                     */
/*                                                            */
/**************************************************************/
/*
TransportLayerAddress ::= BIT STRING  (SIZE (1..160, ...))
*/
typedef ASN1DynBitStr TransportLayerAddress;

EXTERN int asn1PE_TransportLayerAddress (OSCTXT* pctxt, TransportLayerAddress value);

EXTERN int asn1PD_TransportLayerAddress (OSCTXT* pctxt, TransportLayerAddress* pvalue);

EXTERN void asn1Print_TransportLayerAddress 
   (const char* name, const TransportLayerAddress* pvalue);

EXTERN int asn1PrtToStr_TransportLayerAddress (const char* name, 
   TransportLayerAddress* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TransportLayerAddress (OSCTXT *pctxt, 
   const char* name, const TransportLayerAddress* pvalue);

EXTERN int asn1Init_TransportLayerAddress (TransportLayerAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  TypeOfError                                               */
/*                                                            */
/**************************************************************/
/*
TypeOfError ::= ENUMERATED { not-understood(0), missing(1), ... }
*/
typedef enum {
   not_understood = 0,
   missing = 1
} TypeOfError_Root;

typedef OSUINT32 TypeOfError;

EXTERN int asn1PE_TypeOfError (OSCTXT* pctxt, TypeOfError value);

EXTERN int asn1PD_TypeOfError (OSCTXT* pctxt, TypeOfError* pvalue);

EXTERN void asn1Print_TypeOfError (const char* name, const TypeOfError* pvalue);

EXTERN int asn1PrtToStr_TypeOfError (const char* name, TypeOfError* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TypeOfError (OSCTXT *pctxt, 
   const char* name, const TypeOfError* pvalue);

EXTERN extern const OSEnumItem TypeOfError_ENUMTAB[];
#define TypeOfError_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* TypeOfError_ToString (OSINT32 value);

EXTERN int TypeOfError_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TypeOfError* pvalue);

EXTERN int TypeOfError_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TypeOfError* pvalue);

/**************************************************************/
/*                                                            */
/*  UEContextRequest                                          */
/*                                                            */
/**************************************************************/
/*
UEContextRequest ::= ENUMERATED { requested(0), ... }
*/
typedef enum {
   requested = 0
} UEContextRequest_Root;

typedef OSUINT32 UEContextRequest;

EXTERN int asn1PE_UEContextRequest (OSCTXT* pctxt, UEContextRequest value);

EXTERN int asn1PD_UEContextRequest (OSCTXT* pctxt, UEContextRequest* pvalue);

EXTERN void asn1Print_UEContextRequest 
   (const char* name, const UEContextRequest* pvalue);

EXTERN int asn1PrtToStr_UEContextRequest (const char* name, UEContextRequest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEContextRequest (OSCTXT *pctxt, 
   const char* name, const UEContextRequest* pvalue);

EXTERN extern const OSEnumItem UEContextRequest_ENUMTAB[];
#define UEContextRequest_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* UEContextRequest_ToString (OSINT32 value);

EXTERN int UEContextRequest_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, UEContextRequest* pvalue);

EXTERN int UEContextRequest_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, UEContextRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPresence                                                */
/*                                                            */
/**************************************************************/
/*
UEPresence ::= ENUMERATED { in(0), out(1), unknown(2), ... }
*/
typedef enum {
   in = 0,
   out = 1,
   unknown = 2
} UEPresence_Root;

typedef OSUINT32 UEPresence;

EXTERN int asn1PE_UEPresence (OSCTXT* pctxt, UEPresence value);

EXTERN int asn1PD_UEPresence (OSCTXT* pctxt, UEPresence* pvalue);

EXTERN void asn1Print_UEPresence (const char* name, const UEPresence* pvalue);

EXTERN int asn1PrtToStr_UEPresence (const char* name, UEPresence* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEPresence (OSCTXT *pctxt, 
   const char* name, const UEPresence* pvalue);

EXTERN extern const OSEnumItem UEPresence_ENUMTAB[];
#define UEPresence_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* UEPresence_ToString (OSINT32 value);

EXTERN int UEPresence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, UEPresence* pvalue);

EXTERN int UEPresence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, UEPresence* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapability                                         */
/*                                                            */
/**************************************************************/
/*
UERadioCapability ::= OCTET STRING
*/
typedef OSDynOctStr UERadioCapability;

EXTERN int asn1PE_UERadioCapability (OSCTXT* pctxt, UERadioCapability value);

EXTERN int asn1PD_UERadioCapability (OSCTXT* pctxt, UERadioCapability* pvalue);

EXTERN void asn1Print_UERadioCapability 
   (const char* name, const UERadioCapability* pvalue);

EXTERN int asn1PrtToStr_UERadioCapability (const char* name, 
   UERadioCapability* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapability (OSCTXT *pctxt, 
   const char* name, const UERadioCapability* pvalue);

EXTERN int asn1Init_UERadioCapability (UERadioCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityForPagingOfNR                            */
/*                                                            */
/**************************************************************/
/*
UERadioCapabilityForPagingOfNR ::= OCTET STRING
*/
typedef OSDynOctStr UERadioCapabilityForPagingOfNR;

EXTERN int asn1PE_UERadioCapabilityForPagingOfNR (OSCTXT* pctxt, UERadioCapabilityForPagingOfNR value);

EXTERN int asn1PD_UERadioCapabilityForPagingOfNR (OSCTXT* pctxt, UERadioCapabilityForPagingOfNR* pvalue);

EXTERN void asn1Print_UERadioCapabilityForPagingOfNR 
   (const char* name, const UERadioCapabilityForPagingOfNR* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityForPagingOfNR (const char* name, 
   UERadioCapabilityForPagingOfNR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityForPagingOfNR (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityForPagingOfNR* pvalue);

EXTERN int asn1Init_UERadioCapabilityForPagingOfNR (
   UERadioCapabilityForPagingOfNR* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityForPagingOfEUTRA                         */
/*                                                            */
/**************************************************************/
/*
UERadioCapabilityForPagingOfEUTRA ::= OCTET STRING
*/
typedef OSDynOctStr UERadioCapabilityForPagingOfEUTRA;

EXTERN int asn1PE_UERadioCapabilityForPagingOfEUTRA (OSCTXT* pctxt, UERadioCapabilityForPagingOfEUTRA value);

EXTERN int asn1PD_UERadioCapabilityForPagingOfEUTRA (OSCTXT* pctxt, UERadioCapabilityForPagingOfEUTRA* pvalue);

EXTERN void asn1Print_UERadioCapabilityForPagingOfEUTRA 
   (const char* name, const UERadioCapabilityForPagingOfEUTRA* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityForPagingOfEUTRA (const char* name, 
   UERadioCapabilityForPagingOfEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityForPagingOfEUTRA (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityForPagingOfEUTRA* pvalue);

EXTERN int asn1Init_UERadioCapabilityForPagingOfEUTRA (
   UERadioCapabilityForPagingOfEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  UERetentionInformation                                    */
/*                                                            */
/**************************************************************/
/*
UERetentionInformation ::= ENUMERATED { ues-retained(0), ... }
*/
typedef enum {
   ues_retained = 0
} UERetentionInformation_Root;

typedef OSUINT32 UERetentionInformation;

EXTERN int asn1PE_UERetentionInformation (OSCTXT* pctxt, UERetentionInformation value);

EXTERN int asn1PD_UERetentionInformation (OSCTXT* pctxt, UERetentionInformation* pvalue);

EXTERN void asn1Print_UERetentionInformation 
   (const char* name, const UERetentionInformation* pvalue);

EXTERN int asn1PrtToStr_UERetentionInformation (const char* name, 
   UERetentionInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERetentionInformation (OSCTXT *pctxt, 
   const char* name, const UERetentionInformation* pvalue);

EXTERN extern const OSEnumItem UERetentionInformation_ENUMTAB[];
#define UERetentionInformation_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* UERetentionInformation_ToString (OSINT32 value);

EXTERN int UERetentionInformation_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, UERetentionInformation* pvalue);

EXTERN int UERetentionInformation_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, UERetentionInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  ULForwarding                                              */
/*                                                            */
/**************************************************************/
/*
ULForwarding ::= ENUMERATED { ul-forwarding-proposed(0), ... }
*/
typedef enum {
   ul_forwarding_proposed = 0
} ULForwarding_Root;

typedef OSUINT32 ULForwarding;

EXTERN int asn1PE_ULForwarding (OSCTXT* pctxt, ULForwarding value);

EXTERN int asn1PD_ULForwarding (OSCTXT* pctxt, ULForwarding* pvalue);

EXTERN void asn1Print_ULForwarding (const char* name, const ULForwarding* pvalue);

EXTERN int asn1PrtToStr_ULForwarding (const char* name, ULForwarding* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ULForwarding (OSCTXT *pctxt, 
   const char* name, const ULForwarding* pvalue);

EXTERN extern const OSEnumItem ULForwarding_ENUMTAB[];
#define ULForwarding_ENUMTABSIZE 1

EXTERN const OSUTF8CHAR* ULForwarding_ToString (OSINT32 value);

EXTERN int ULForwarding_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ULForwarding* pvalue);

EXTERN int ULForwarding_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, ULForwarding* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningAreaCoordinates                                    */
/*                                                            */
/**************************************************************/
/*
 W
WarningAreaCoordinates ::= OCTET STRING (SIZE (1..1024))
*/
typedef struct EXTERN WarningAreaCoordinates {
   OSUINT16 numocts;
   OSOCTET data[1024];
} WarningAreaCoordinates;

EXTERN int asn1PE_WarningAreaCoordinates (OSCTXT* pctxt, WarningAreaCoordinates* pvalue);

EXTERN int asn1PD_WarningAreaCoordinates (OSCTXT* pctxt, WarningAreaCoordinates* pvalue);

EXTERN void asn1Print_WarningAreaCoordinates 
   (const char* name, const WarningAreaCoordinates* pvalue);

EXTERN int asn1PrtToStr_WarningAreaCoordinates (const char* name, 
   WarningAreaCoordinates* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WarningAreaCoordinates (OSCTXT *pctxt, 
   const char* name, const WarningAreaCoordinates* pvalue);

EXTERN int asn1Init_WarningAreaCoordinates (WarningAreaCoordinates* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningMessageContents                                    */
/*                                                            */
/**************************************************************/
/*
WarningMessageContents ::= OCTET STRING (SIZE (1..9600))
*/
typedef struct EXTERN WarningMessageContents {
   OSUINT16 numocts;
   OSOCTET data[9600];
} WarningMessageContents;

EXTERN int asn1PE_WarningMessageContents (OSCTXT* pctxt, WarningMessageContents* pvalue);

EXTERN int asn1PD_WarningMessageContents (OSCTXT* pctxt, WarningMessageContents* pvalue);

EXTERN void asn1Print_WarningMessageContents 
   (const char* name, const WarningMessageContents* pvalue);

EXTERN int asn1PrtToStr_WarningMessageContents (const char* name, 
   WarningMessageContents* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WarningMessageContents (OSCTXT *pctxt, 
   const char* name, const WarningMessageContents* pvalue);

EXTERN int asn1Init_WarningMessageContents (WarningMessageContents* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningSecurityInfo                                       */
/*                                                            */
/**************************************************************/
/*
WarningSecurityInfo ::= OCTET STRING (SIZE (50))
*/
typedef struct EXTERN WarningSecurityInfo {
   OSOCTET data[50];
} WarningSecurityInfo;

EXTERN int asn1PE_WarningSecurityInfo (OSCTXT* pctxt, WarningSecurityInfo* pvalue);

EXTERN int asn1PD_WarningSecurityInfo (OSCTXT* pctxt, WarningSecurityInfo* pvalue);

EXTERN void asn1Print_WarningSecurityInfo 
   (const char* name, const WarningSecurityInfo* pvalue);

EXTERN int asn1PrtToStr_WarningSecurityInfo (const char* name, 
   WarningSecurityInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WarningSecurityInfo (OSCTXT *pctxt, 
   const char* name, const WarningSecurityInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningType                                               */
/*                                                            */
/**************************************************************/
/*
WarningType ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN WarningType {
   OSOCTET data[2];
} WarningType;

EXTERN int asn1PE_WarningType (OSCTXT* pctxt, WarningType* pvalue);

EXTERN int asn1PD_WarningType (OSCTXT* pctxt, WarningType* pvalue);

EXTERN void asn1Print_WarningType (const char* name, const WarningType* pvalue);

EXTERN int asn1PrtToStr_WarningType (const char* name, WarningType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WarningType (OSCTXT *pctxt, 
   const char* name, const WarningType* pvalue);

/**************************************************************/
/*                                                            */
/*  _PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension         */
/*                                                            */
/**************************************************************/
typedef OSDynOctStr _PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension;

EXTERN int asn1PE__PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension (OSCTXT* pctxt, void* pvalue_);

EXTERN int asn1PD__PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension (OSCTXT* pctxt, void* pvalue_);

EXTERN void asn1Print__PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension 
   (const char* name, const void* pvalue_);

EXTERN int asn1PrtToStr__PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension (
   const char* name, const void* pvalue_, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm__PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension (OSCTXT *pctxt, 
   const char* name, const void* pvalue_);

EXTERN int asn1Init__PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension (void* pvalue_);

/**************************************************************/
/*                                                            */
/*  AssociatedQosFlowItem_qosFlowMappingIndication            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssociatedQosFlowItem'
*/
typedef enum {
   ul = 0,
   dl = 1
} AssociatedQosFlowItem_qosFlowMappingIndication_Root;

typedef OSUINT32 AssociatedQosFlowItem_qosFlowMappingIndication;

EXTERN int asn1PE_AssociatedQosFlowItem_qosFlowMappingIndication (OSCTXT* pctxt, AssociatedQosFlowItem_qosFlowMappingIndication value);

EXTERN int asn1PD_AssociatedQosFlowItem_qosFlowMappingIndication (OSCTXT* pctxt, AssociatedQosFlowItem_qosFlowMappingIndication* pvalue);

EXTERN void asn1Print_AssociatedQosFlowItem_qosFlowMappingIndication 
   (const char* name, const AssociatedQosFlowItem_qosFlowMappingIndication* pvalue);

EXTERN int asn1PrtToStr_AssociatedQosFlowItem_qosFlowMappingIndication (
   const char* name, AssociatedQosFlowItem_qosFlowMappingIndication* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssociatedQosFlowItem_qosFlowMappingIndication (OSCTXT *pctxt, 
   const char* name, const AssociatedQosFlowItem_qosFlowMappingIndication* pvalue);

EXTERN extern const OSEnumItem AssociatedQosFlowItem_qosFlowMappingIndication_ENUMTAB[];
#define AssociatedQosFlowItem_qosFlowMappingIndication_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* AssociatedQosFlowItem_qosFlowMappingIndication_ToString (OSINT32 value);

EXTERN 
   int AssociatedQosFlowItem_qosFlowMappingIndication_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      AssociatedQosFlowItem_qosFlowMappingIndication* pvalue);

EXTERN 
   int AssociatedQosFlowItem_qosFlowMappingIndication_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      AssociatedQosFlowItem_qosFlowMappingIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictionsForEquivalentItem_cn_Type               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CNTypeRestrictionsForEquivalentItem'
*/
typedef enum {
   epc_forbidden = 0,
   fiveGC_forbidden = 1
} CNTypeRestrictionsForEquivalentItem_cn_Type_Root;

typedef OSUINT32 CNTypeRestrictionsForEquivalentItem_cn_Type;

EXTERN int asn1PE_CNTypeRestrictionsForEquivalentItem_cn_Type (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem_cn_Type value);

EXTERN int asn1PD_CNTypeRestrictionsForEquivalentItem_cn_Type (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem_cn_Type* pvalue);

EXTERN void asn1Print_CNTypeRestrictionsForEquivalentItem_cn_Type 
   (const char* name, const CNTypeRestrictionsForEquivalentItem_cn_Type* pvalue);

EXTERN int asn1PrtToStr_CNTypeRestrictionsForEquivalentItem_cn_Type (
   const char* name, CNTypeRestrictionsForEquivalentItem_cn_Type* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNTypeRestrictionsForEquivalentItem_cn_Type (OSCTXT *pctxt, 
   const char* name, const CNTypeRestrictionsForEquivalentItem_cn_Type* pvalue);

EXTERN extern const OSEnumItem CNTypeRestrictionsForEquivalentItem_cn_Type_ENUMTAB[];
#define CNTypeRestrictionsForEquivalentItem_cn_Type_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* CNTypeRestrictionsForEquivalentItem_cn_Type_ToString (OSINT32 value);

EXTERN int CNTypeRestrictionsForEquivalentItem_cn_Type_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      CNTypeRestrictionsForEquivalentItem_cn_Type* pvalue);

EXTERN int CNTypeRestrictionsForEquivalentItem_cn_Type_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      CNTypeRestrictionsForEquivalentItem_cn_Type* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusUL12'
*/
typedef struct DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs {
   OSUINT16 numbits;
   OSOCTET data[256];
} DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs;

EXTERN int asn1PE_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs (OSCTXT* pctxt, DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs* pvalue);

EXTERN int asn1PD_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs (OSCTXT* pctxt, DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs* pvalue);

EXTERN void asn1Print_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs 
   (const char* name, const DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs (const char* name, 
   DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs* pvalue);

EXTERN int asn1Init_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs (
   DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionUsageReport_rATType                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionUsageReport'
*/
typedef enum {
   nr = 0,
   eutra = 1
} PDUSessionUsageReport_rATType_Root;

typedef OSUINT32 PDUSessionUsageReport_rATType;

EXTERN int asn1PE_PDUSessionUsageReport_rATType (OSCTXT* pctxt, PDUSessionUsageReport_rATType value);

EXTERN int asn1PD_PDUSessionUsageReport_rATType (OSCTXT* pctxt, PDUSessionUsageReport_rATType* pvalue);

EXTERN void asn1Print_PDUSessionUsageReport_rATType 
   (const char* name, const PDUSessionUsageReport_rATType* pvalue);

EXTERN int asn1PrtToStr_PDUSessionUsageReport_rATType (const char* name, 
   PDUSessionUsageReport_rATType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionUsageReport_rATType (OSCTXT *pctxt, 
   const char* name, const PDUSessionUsageReport_rATType* pvalue);

EXTERN extern const OSEnumItem PDUSessionUsageReport_rATType_ENUMTAB[];
#define PDUSessionUsageReport_rATType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* PDUSessionUsageReport_rATType_ToString (OSINT32 value);

EXTERN int PDUSessionUsageReport_rATType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PDUSessionUsageReport_rATType* pvalue);

EXTERN int PDUSessionUsageReport_rATType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      PDUSessionUsageReport_rATType* pvalue);

/**************************************************************/
/*                                                            */
/*  QoSFlowsUsageReport_Item_rATType                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QoSFlowsUsageReport-Item'
*/
typedef enum {
   nr_1 = 0,
   eutra_1 = 1
} QoSFlowsUsageReport_Item_rATType_Root;

typedef OSUINT32 QoSFlowsUsageReport_Item_rATType;

EXTERN int asn1PE_QoSFlowsUsageReport_Item_rATType (OSCTXT* pctxt, QoSFlowsUsageReport_Item_rATType value);

EXTERN int asn1PD_QoSFlowsUsageReport_Item_rATType (OSCTXT* pctxt, QoSFlowsUsageReport_Item_rATType* pvalue);

EXTERN void asn1Print_QoSFlowsUsageReport_Item_rATType 
   (const char* name, const QoSFlowsUsageReport_Item_rATType* pvalue);

EXTERN int asn1PrtToStr_QoSFlowsUsageReport_Item_rATType (const char* name, 
   QoSFlowsUsageReport_Item_rATType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QoSFlowsUsageReport_Item_rATType (OSCTXT *pctxt, 
   const char* name, const QoSFlowsUsageReport_Item_rATType* pvalue);

EXTERN extern const OSEnumItem QoSFlowsUsageReport_Item_rATType_ENUMTAB[];
#define QoSFlowsUsageReport_Item_rATType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* QoSFlowsUsageReport_Item_rATType_ToString (OSINT32 value);

EXTERN int QoSFlowsUsageReport_Item_rATType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, QoSFlowsUsageReport_Item_rATType* pvalue);

EXTERN int QoSFlowsUsageReport_Item_rATType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      QoSFlowsUsageReport_Item_rATType* pvalue);

/**************************************************************/
/*                                                            */
/*  GTPTunnel_iE_Extensions_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GTPTunnel'
*/
typedef struct EXTERN GTPTunnel_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} GTPTunnel_iE_Extensions_element;

EXTERN int asn1PE_GTPTunnel_iE_Extensions_element (OSCTXT* pctxt, GTPTunnel_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GTPTunnel_iE_Extensions_element (OSCTXT* pctxt, GTPTunnel_iE_Extensions_element* pvalue);

EXTERN void asn1Print_GTPTunnel_iE_Extensions_element 
   (const char* name, const GTPTunnel_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_GTPTunnel_iE_Extensions_element (const char* name, 
   GTPTunnel_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GTPTunnel_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const GTPTunnel_iE_Extensions_element* pvalue);

EXTERN int asn1Init_GTPTunnel_iE_Extensions_element (
   GTPTunnel_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GTPTunnel_iE_Extensions                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GTPTunnel'
*/
/* List of GTPTunnel_iE_Extensions_element */
typedef OSRTDList GTPTunnel_iE_Extensions;

EXTERN int asn1PE_GTPTunnel_iE_Extensions (OSCTXT* pctxt, GTPTunnel_iE_Extensions* pvalue);

EXTERN int asn1PD_GTPTunnel_iE_Extensions (OSCTXT* pctxt, GTPTunnel_iE_Extensions* pvalue);

EXTERN void asn1Print_GTPTunnel_iE_Extensions 
   (const char* name, const GTPTunnel_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_GTPTunnel_iE_Extensions (const char* name, 
   GTPTunnel_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GTPTunnel_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const GTPTunnel_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct GTPTunnel_iE_Extensions_element* asn1Get_GTPTunnel_iE_Extensions 
   (ProtocolExtensionID id, GTPTunnel_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_GTPTunnel_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, GTPTunnel_iE_Extensions* plist, 
   GTPTunnel_iE_Extensions* pmatches);

EXTERN int asn1Init_GTPTunnel_iE_Extensions (GTPTunnel_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GTPTunnel                                                 */
/*                                                            */
/**************************************************************/
/*
GTPTunnel ::= SEQUENCE {
   transportLayerAddress [0] TransportLayerAddress,
   gTP-TEID [1] GTP-TEID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({GTPTunnel-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({GTPTunnel-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({GTPTunnel-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN GTPTunnel {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportLayerAddress transportLayerAddress;
   GTP_TEID gTP_TEID;
   GTPTunnel_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} GTPTunnel;

EXTERN int asn1PE_GTPTunnel (OSCTXT* pctxt, GTPTunnel* pvalue);

EXTERN int asn1PD_GTPTunnel (OSCTXT* pctxt, GTPTunnel* pvalue);

EXTERN void asn1Print_GTPTunnel (const char* name, const GTPTunnel* pvalue);

EXTERN int asn1PrtToStr_GTPTunnel (const char* name, GTPTunnel* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GTPTunnel (OSCTXT *pctxt, 
   const char* name, const GTPTunnel* pvalue);

EXTERN int asn1Init_GTPTunnel (GTPTunnel* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformation_choice_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UPTransportLayerInformation'
*/
typedef struct EXTERN UPTransportLayerInformation_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} UPTransportLayerInformation_choice_Extensions;

EXTERN int asn1PE_UPTransportLayerInformation_choice_Extensions (OSCTXT* pctxt, UPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN int asn1PD_UPTransportLayerInformation_choice_Extensions (OSCTXT* pctxt, UPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN void asn1Print_UPTransportLayerInformation_choice_Extensions 
   (const char* name, const UPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformation_choice_Extensions (
   const char* name, UPTransportLayerInformation_choice_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformation_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN int asn1Init_UPTransportLayerInformation_choice_Extensions (
   UPTransportLayerInformation_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformation                               */
/*                                                            */
/**************************************************************/
/*
UPTransportLayerInformation ::= CHOICE {
   gTPTunnel [0] GTPTunnel,
   choice-Extensions [1] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UPTransportLayerInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UPTransportLayerInformation-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UPTransportLayerInformation-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_UPTransportLayerInformation_gTPTunnel 1
#define T_UPTransportLayerInformation_choice_Extensions 2

typedef struct EXTERN UPTransportLayerInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      GTPTunnel *gTPTunnel;
      /* t = 2 */
      UPTransportLayerInformation_choice_Extensions *choice_Extensions;
   } u;
} UPTransportLayerInformation;

EXTERN int asn1PE_UPTransportLayerInformation (OSCTXT* pctxt, UPTransportLayerInformation* pvalue);

EXTERN int asn1PD_UPTransportLayerInformation (OSCTXT* pctxt, UPTransportLayerInformation* pvalue);

EXTERN void asn1Print_UPTransportLayerInformation 
   (const char* name, const UPTransportLayerInformation* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformation (const char* name, 
   UPTransportLayerInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformation (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformation* pvalue);

EXTERN int asn1Init_UPTransportLayerInformation (UPTransportLayerInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowItemWithDataForwarding_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowItemWithDataForwarding'
*/
typedef struct EXTERN QosFlowItemWithDataForwarding_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowItemWithDataForwarding_iE_Extensions_element;

EXTERN int asn1PE_QosFlowItemWithDataForwarding_iE_Extensions_element (OSCTXT* pctxt, QosFlowItemWithDataForwarding_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowItemWithDataForwarding_iE_Extensions_element (OSCTXT* pctxt, QosFlowItemWithDataForwarding_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowItemWithDataForwarding_iE_Extensions_element 
   (const char* name, const QosFlowItemWithDataForwarding_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowItemWithDataForwarding_iE_Extensions_element (
   const char* name, 
   QosFlowItemWithDataForwarding_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowItemWithDataForwarding_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowItemWithDataForwarding_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowItemWithDataForwarding_iE_Extensions_element (
   QosFlowItemWithDataForwarding_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowItemWithDataForwarding_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowItemWithDataForwarding'
*/
/* List of QosFlowItemWithDataForwarding_iE_Extensions_element */
typedef OSRTDList QosFlowItemWithDataForwarding_iE_Extensions;

EXTERN int asn1PE_QosFlowItemWithDataForwarding_iE_Extensions (OSCTXT* pctxt, QosFlowItemWithDataForwarding_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowItemWithDataForwarding_iE_Extensions (OSCTXT* pctxt, QosFlowItemWithDataForwarding_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowItemWithDataForwarding_iE_Extensions 
   (const char* name, const QosFlowItemWithDataForwarding_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowItemWithDataForwarding_iE_Extensions (
   const char* name, QosFlowItemWithDataForwarding_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowItemWithDataForwarding_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowItemWithDataForwarding_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowItemWithDataForwarding_iE_Extensions_element* 
   asn1Get_QosFlowItemWithDataForwarding_iE_Extensions 
   (ProtocolExtensionID id, 
   QosFlowItemWithDataForwarding_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowItemWithDataForwarding_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowItemWithDataForwarding_iE_Extensions* plist, 
   QosFlowItemWithDataForwarding_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowItemWithDataForwarding_iE_Extensions (
   QosFlowItemWithDataForwarding_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowItemWithDataForwarding                             */
/*                                                            */
/**************************************************************/
/*
QosFlowItemWithDataForwarding ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   dataForwardingAccepted [1] DataForwardingAccepted OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowItemWithDataForwarding-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowItemWithDataForwarding-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowItemWithDataForwarding-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowItemWithDataForwarding {
   struct {
      unsigned dataForwardingAcceptedPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   DataForwardingAccepted dataForwardingAccepted;
   QosFlowItemWithDataForwarding_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowItemWithDataForwarding;

EXTERN int asn1PE_QosFlowItemWithDataForwarding (OSCTXT* pctxt, QosFlowItemWithDataForwarding* pvalue);

EXTERN int asn1PD_QosFlowItemWithDataForwarding (OSCTXT* pctxt, QosFlowItemWithDataForwarding* pvalue);

EXTERN void asn1Print_QosFlowItemWithDataForwarding 
   (const char* name, const QosFlowItemWithDataForwarding* pvalue);

EXTERN int asn1PrtToStr_QosFlowItemWithDataForwarding (const char* name, 
   QosFlowItemWithDataForwarding* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowItemWithDataForwarding (OSCTXT *pctxt, 
   const char* name, const QosFlowItemWithDataForwarding* pvalue);

EXTERN int asn1Init_QosFlowItemWithDataForwarding (
   QosFlowItemWithDataForwarding* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowListWithDataForwarding                             */
/*                                                            */
/**************************************************************/
/*
QosFlowListWithDataForwarding ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowItemWithDataForwarding
*/
/* List of QosFlowItemWithDataForwarding */
typedef OSRTDList QosFlowListWithDataForwarding;

EXTERN int asn1PE_QosFlowListWithDataForwarding (OSCTXT* pctxt, QosFlowListWithDataForwarding* pvalue);

EXTERN int asn1PD_QosFlowListWithDataForwarding (OSCTXT* pctxt, QosFlowListWithDataForwarding* pvalue);

EXTERN void asn1Print_QosFlowListWithDataForwarding 
   (const char* name, const QosFlowListWithDataForwarding* pvalue);

EXTERN int asn1PrtToStr_QosFlowListWithDataForwarding (const char* name, 
   QosFlowListWithDataForwarding* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowListWithDataForwarding (OSCTXT *pctxt, 
   const char* name, const QosFlowListWithDataForwarding* pvalue);

EXTERN int asn1Init_QosFlowListWithDataForwarding (
   QosFlowListWithDataForwarding* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalDLUPTNLInformationForHOItem_iE_Extensions_elem  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AdditionalDLUPTNLInformationForHOItem'
*/
typedef struct EXTERN AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element;

EXTERN int asn1PE_AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element 
   (const char* name, const AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element (
   const char* name, 
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element (
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalDLUPTNLInformationForHOItem_iE_Extensions       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AdditionalDLUPTNLInformationForHOItem'
*/
/* List of AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element */
typedef OSRTDList AdditionalDLUPTNLInformationForHOItem_iE_Extensions;

EXTERN int asn1PE_AdditionalDLUPTNLInformationForHOItem_iE_Extensions (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AdditionalDLUPTNLInformationForHOItem_iE_Extensions (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AdditionalDLUPTNLInformationForHOItem_iE_Extensions 
   (const char* name, const AdditionalDLUPTNLInformationForHOItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AdditionalDLUPTNLInformationForHOItem_iE_Extensions (
   const char* name, 
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AdditionalDLUPTNLInformationForHOItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AdditionalDLUPTNLInformationForHOItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AdditionalDLUPTNLInformationForHOItem_iE_Extensions_element* 
   asn1Get_AdditionalDLUPTNLInformationForHOItem_iE_Extensions 
   (ProtocolExtensionID id, 
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AdditionalDLUPTNLInformationForHOItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions* plist, 
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AdditionalDLUPTNLInformationForHOItem_iE_Extensions (
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalDLUPTNLInformationForHOItem                     */
/*                                                            */
/**************************************************************/
/*
AdditionalDLUPTNLInformationForHOItem ::= SEQUENCE {
   additionalDL-NGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation,
   additionalQosFlowSetupResponseList [1] QosFlowListWithDataForwarding,
   additionalDLForwardingUPTNLInformation [2] EXPLICIT UPTransportLayerInformation OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AdditionalDLUPTNLInformationForHOItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AdditionalDLUPTNLInformationForHOItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AdditionalDLUPTNLInformationForHOItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AdditionalDLUPTNLInformationForHOItem {
   struct {
      unsigned additionalDLForwardingUPTNLInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation additionalDL_NGU_UP_TNLInformation;
   QosFlowListWithDataForwarding additionalQosFlowSetupResponseList;
   UPTransportLayerInformation additionalDLForwardingUPTNLInformation;
   AdditionalDLUPTNLInformationForHOItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AdditionalDLUPTNLInformationForHOItem;

EXTERN int asn1PE_AdditionalDLUPTNLInformationForHOItem (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOItem* pvalue);

EXTERN int asn1PD_AdditionalDLUPTNLInformationForHOItem (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOItem* pvalue);

EXTERN void asn1Print_AdditionalDLUPTNLInformationForHOItem 
   (const char* name, const AdditionalDLUPTNLInformationForHOItem* pvalue);

EXTERN int asn1PrtToStr_AdditionalDLUPTNLInformationForHOItem (const char* name, 
   AdditionalDLUPTNLInformationForHOItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AdditionalDLUPTNLInformationForHOItem (OSCTXT *pctxt, 
   const char* name, const AdditionalDLUPTNLInformationForHOItem* pvalue);

EXTERN int asn1Init_AdditionalDLUPTNLInformationForHOItem (
   AdditionalDLUPTNLInformationForHOItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalDLUPTNLInformationForHOList                     */
/*                                                            */
/**************************************************************/
/*
 A
AdditionalDLUPTNLInformationForHOList ::= SEQUENCE (SIZE (1..maxnoofMultiConnectivityMinusOne)) OF AdditionalDLUPTNLInformationForHOItem
*/
/* List of AdditionalDLUPTNLInformationForHOItem */
typedef OSRTDList AdditionalDLUPTNLInformationForHOList;

EXTERN int asn1PE_AdditionalDLUPTNLInformationForHOList (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOList* pvalue);

EXTERN int asn1PD_AdditionalDLUPTNLInformationForHOList (OSCTXT* pctxt, AdditionalDLUPTNLInformationForHOList* pvalue);

EXTERN void asn1Print_AdditionalDLUPTNLInformationForHOList 
   (const char* name, const AdditionalDLUPTNLInformationForHOList* pvalue);

EXTERN int asn1PrtToStr_AdditionalDLUPTNLInformationForHOList (const char* name, 
   AdditionalDLUPTNLInformationForHOList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AdditionalDLUPTNLInformationForHOList (OSCTXT *pctxt, 
   const char* name, const AdditionalDLUPTNLInformationForHOList* pvalue);

EXTERN int asn1Init_AdditionalDLUPTNLInformationForHOList (
   AdditionalDLUPTNLInformationForHOList* pvalue);

/**************************************************************/
/*                                                            */
/*  AllocationAndRetentionPriority_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AllocationAndRetentionPriority'
*/
typedef struct EXTERN AllocationAndRetentionPriority_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AllocationAndRetentionPriority_iE_Extensions_element;

EXTERN int asn1PE_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT* pctxt, AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT* pctxt, AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AllocationAndRetentionPriority_iE_Extensions_element 
   (const char* name, const AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AllocationAndRetentionPriority_iE_Extensions_element (
   const char* name, 
   AllocationAndRetentionPriority_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllocationAndRetentionPriority_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AllocationAndRetentionPriority_iE_Extensions_element (
   AllocationAndRetentionPriority_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AllocationAndRetentionPriority_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AllocationAndRetentionPriority'
*/
/* List of AllocationAndRetentionPriority_iE_Extensions_element */
typedef OSRTDList AllocationAndRetentionPriority_iE_Extensions;

EXTERN int asn1PE_AllocationAndRetentionPriority_iE_Extensions (OSCTXT* pctxt, AllocationAndRetentionPriority_iE_Extensions* pvalue);

EXTERN int asn1PD_AllocationAndRetentionPriority_iE_Extensions (OSCTXT* pctxt, AllocationAndRetentionPriority_iE_Extensions* pvalue);

EXTERN void asn1Print_AllocationAndRetentionPriority_iE_Extensions 
   (const char* name, const AllocationAndRetentionPriority_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AllocationAndRetentionPriority_iE_Extensions (
   const char* name, AllocationAndRetentionPriority_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllocationAndRetentionPriority_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AllocationAndRetentionPriority_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AllocationAndRetentionPriority_iE_Extensions_element* 
   asn1Get_AllocationAndRetentionPriority_iE_Extensions 
   (ProtocolExtensionID id, 
   AllocationAndRetentionPriority_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AllocationAndRetentionPriority_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AllocationAndRetentionPriority_iE_Extensions* plist, 
   AllocationAndRetentionPriority_iE_Extensions* pmatches);

EXTERN int asn1Init_AllocationAndRetentionPriority_iE_Extensions (
   AllocationAndRetentionPriority_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AllocationAndRetentionPriority                            */
/*                                                            */
/**************************************************************/
/*
AllocationAndRetentionPriority ::= SEQUENCE {
   priorityLevelARP [0] PriorityLevelARP,
   pre-emptionCapability [1] Pre-emptionCapability,
   pre-emptionVulnerability [2] Pre-emptionVulnerability,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AllocationAndRetentionPriority-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AllocationAndRetentionPriority-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AllocationAndRetentionPriority-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AllocationAndRetentionPriority {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityLevelARP priorityLevelARP;
   Pre_emptionCapability pre_emptionCapability;
   Pre_emptionVulnerability pre_emptionVulnerability;
   AllocationAndRetentionPriority_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AllocationAndRetentionPriority;

EXTERN int asn1PE_AllocationAndRetentionPriority (OSCTXT* pctxt, AllocationAndRetentionPriority* pvalue);

EXTERN int asn1PD_AllocationAndRetentionPriority (OSCTXT* pctxt, AllocationAndRetentionPriority* pvalue);

EXTERN void asn1Print_AllocationAndRetentionPriority 
   (const char* name, const AllocationAndRetentionPriority* pvalue);

EXTERN int asn1PrtToStr_AllocationAndRetentionPriority (const char* name, 
   AllocationAndRetentionPriority* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllocationAndRetentionPriority (OSCTXT *pctxt, 
   const char* name, const AllocationAndRetentionPriority* pvalue);

EXTERN int asn1Init_AllocationAndRetentionPriority (
   AllocationAndRetentionPriority* pvalue);

/**************************************************************/
/*                                                            */
/*  S_NSSAI_iE_Extensions_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S-NSSAI'
*/
typedef struct EXTERN S_NSSAI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} S_NSSAI_iE_Extensions_element;

EXTERN int asn1PE_S_NSSAI_iE_Extensions_element (OSCTXT* pctxt, S_NSSAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_S_NSSAI_iE_Extensions_element (OSCTXT* pctxt, S_NSSAI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_S_NSSAI_iE_Extensions_element 
   (const char* name, const S_NSSAI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_S_NSSAI_iE_Extensions_element (const char* name, 
   S_NSSAI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_S_NSSAI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const S_NSSAI_iE_Extensions_element* pvalue);

EXTERN int asn1Init_S_NSSAI_iE_Extensions_element (
   S_NSSAI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  S_NSSAI_iE_Extensions                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'S-NSSAI'
*/
/* List of S_NSSAI_iE_Extensions_element */
typedef OSRTDList S_NSSAI_iE_Extensions;

EXTERN int asn1PE_S_NSSAI_iE_Extensions (OSCTXT* pctxt, S_NSSAI_iE_Extensions* pvalue);

EXTERN int asn1PD_S_NSSAI_iE_Extensions (OSCTXT* pctxt, S_NSSAI_iE_Extensions* pvalue);

EXTERN void asn1Print_S_NSSAI_iE_Extensions 
   (const char* name, const S_NSSAI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_S_NSSAI_iE_Extensions (const char* name, 
   S_NSSAI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_S_NSSAI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const S_NSSAI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct S_NSSAI_iE_Extensions_element* asn1Get_S_NSSAI_iE_Extensions 
   (ProtocolExtensionID id, S_NSSAI_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_S_NSSAI_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, S_NSSAI_iE_Extensions* plist, 
   S_NSSAI_iE_Extensions* pmatches);

EXTERN int asn1Init_S_NSSAI_iE_Extensions (S_NSSAI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  S_NSSAI                                                   */
/*                                                            */
/**************************************************************/
/*
S-NSSAI ::= SEQUENCE {
   sST [0] SST,
   sD [1] SD OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({S-NSSAI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({S-NSSAI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({S-NSSAI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN S_NSSAI {
   struct {
      unsigned sDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SST sST;
   SD sD;
   S_NSSAI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} S_NSSAI;

EXTERN int asn1PE_S_NSSAI (OSCTXT* pctxt, S_NSSAI* pvalue);

EXTERN int asn1PD_S_NSSAI (OSCTXT* pctxt, S_NSSAI* pvalue);

EXTERN void asn1Print_S_NSSAI (const char* name, const S_NSSAI* pvalue);

EXTERN int asn1PrtToStr_S_NSSAI (const char* name, S_NSSAI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_S_NSSAI (OSCTXT *pctxt, 
   const char* name, const S_NSSAI* pvalue);

EXTERN int asn1Init_S_NSSAI (S_NSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedNSSAI_Item_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AllowedNSSAI-Item'
*/
typedef struct EXTERN AllowedNSSAI_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AllowedNSSAI_Item_iE_Extensions_element;

EXTERN int asn1PE_AllowedNSSAI_Item_iE_Extensions_element (OSCTXT* pctxt, AllowedNSSAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AllowedNSSAI_Item_iE_Extensions_element (OSCTXT* pctxt, AllowedNSSAI_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AllowedNSSAI_Item_iE_Extensions_element 
   (const char* name, const AllowedNSSAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AllowedNSSAI_Item_iE_Extensions_element (const char* name, 
   AllowedNSSAI_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllowedNSSAI_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AllowedNSSAI_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AllowedNSSAI_Item_iE_Extensions_element (
   AllowedNSSAI_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedNSSAI_Item_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AllowedNSSAI-Item'
*/
/* List of AllowedNSSAI_Item_iE_Extensions_element */
typedef OSRTDList AllowedNSSAI_Item_iE_Extensions;

EXTERN int asn1PE_AllowedNSSAI_Item_iE_Extensions (OSCTXT* pctxt, AllowedNSSAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_AllowedNSSAI_Item_iE_Extensions (OSCTXT* pctxt, AllowedNSSAI_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_AllowedNSSAI_Item_iE_Extensions 
   (const char* name, const AllowedNSSAI_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AllowedNSSAI_Item_iE_Extensions (const char* name, 
   AllowedNSSAI_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllowedNSSAI_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AllowedNSSAI_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AllowedNSSAI_Item_iE_Extensions_element* 
   asn1Get_AllowedNSSAI_Item_iE_Extensions (ProtocolExtensionID id, 
   AllowedNSSAI_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AllowedNSSAI_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AllowedNSSAI_Item_iE_Extensions* plist, 
   AllowedNSSAI_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_AllowedNSSAI_Item_iE_Extensions (
   AllowedNSSAI_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedNSSAI_Item                                         */
/*                                                            */
/**************************************************************/
/*
AllowedNSSAI-Item ::= SEQUENCE {
   s-NSSAI [0] S-NSSAI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AllowedNSSAI-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AllowedNSSAI-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AllowedNSSAI-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AllowedNSSAI_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   S_NSSAI s_NSSAI;
   AllowedNSSAI_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AllowedNSSAI_Item;

EXTERN int asn1PE_AllowedNSSAI_Item (OSCTXT* pctxt, AllowedNSSAI_Item* pvalue);

EXTERN int asn1PD_AllowedNSSAI_Item (OSCTXT* pctxt, AllowedNSSAI_Item* pvalue);

EXTERN void asn1Print_AllowedNSSAI_Item 
   (const char* name, const AllowedNSSAI_Item* pvalue);

EXTERN int asn1PrtToStr_AllowedNSSAI_Item (const char* name, 
   AllowedNSSAI_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllowedNSSAI_Item (OSCTXT *pctxt, 
   const char* name, const AllowedNSSAI_Item* pvalue);

EXTERN int asn1Init_AllowedNSSAI_Item (AllowedNSSAI_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedNSSAI                                              */
/*                                                            */
/**************************************************************/
/*
AllowedNSSAI ::= SEQUENCE (SIZE (1..maxnoofAllowedS-NSSAIs)) OF AllowedNSSAI-Item
*/
/* List of AllowedNSSAI_Item */
typedef OSRTDList AllowedNSSAI;

EXTERN int asn1PE_AllowedNSSAI (OSCTXT* pctxt, AllowedNSSAI* pvalue);

EXTERN int asn1PD_AllowedNSSAI (OSCTXT* pctxt, AllowedNSSAI* pvalue);

EXTERN void asn1Print_AllowedNSSAI (const char* name, const AllowedNSSAI* pvalue);

EXTERN int asn1PrtToStr_AllowedNSSAI (const char* name, AllowedNSSAI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllowedNSSAI (OSCTXT *pctxt, 
   const char* name, const AllowedNSSAI* pvalue);

EXTERN int asn1Init_AllowedNSSAI (AllowedNSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedTACs                                               */
/*                                                            */
/**************************************************************/
/*
AllowedTACs ::= SEQUENCE (SIZE (1..maxnoofAllowedAreas)) OF TAC
*/
typedef struct EXTERN AllowedTACs {
   OSUINT8 n;
   TAC elem[16];
} AllowedTACs;

EXTERN int asn1PE_AllowedTACs (OSCTXT* pctxt, AllowedTACs* pvalue);

EXTERN int asn1PD_AllowedTACs (OSCTXT* pctxt, AllowedTACs* pvalue);

EXTERN void asn1Print_AllowedTACs (const char* name, const AllowedTACs* pvalue);

EXTERN int asn1PrtToStr_AllowedTACs (const char* name, AllowedTACs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AllowedTACs (OSCTXT *pctxt, 
   const char* name, const AllowedTACs* pvalue);

EXTERN int asn1Init_AllowedTACs (AllowedTACs* pvalue);

/**************************************************************/
/*                                                            */
/*  GNB_ID_choice_Extensions                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GNB-ID'
*/
typedef struct EXTERN GNB_ID_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} GNB_ID_choice_Extensions;

EXTERN int asn1PE_GNB_ID_choice_Extensions (OSCTXT* pctxt, GNB_ID_choice_Extensions* pvalue);

EXTERN int asn1PD_GNB_ID_choice_Extensions (OSCTXT* pctxt, GNB_ID_choice_Extensions* pvalue);

EXTERN void asn1Print_GNB_ID_choice_Extensions 
   (const char* name, const GNB_ID_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_GNB_ID_choice_Extensions (const char* name, 
   GNB_ID_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GNB_ID_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const GNB_ID_choice_Extensions* pvalue);

EXTERN int asn1Init_GNB_ID_choice_Extensions (GNB_ID_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GNB_ID                                                    */
/*                                                            */
/**************************************************************/
/*
GNB-ID ::= CHOICE {
   gNB-ID [0] BIT STRING  (SIZE (22..32)),
   choice-Extensions [1] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({GNB-ID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({GNB-ID-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({GNB-ID-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_GNB_ID_gNB_ID                 1
#define T_GNB_ID_choice_Extensions      2

typedef struct EXTERN GNB_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1BitStr32 *gNB_ID;
      /* t = 2 */
      GNB_ID_choice_Extensions *choice_Extensions;
   } u;
} GNB_ID;

EXTERN int asn1PE_GNB_ID (OSCTXT* pctxt, GNB_ID* pvalue);

EXTERN int asn1PD_GNB_ID (OSCTXT* pctxt, GNB_ID* pvalue);

EXTERN void asn1Print_GNB_ID (const char* name, const GNB_ID* pvalue);

EXTERN int asn1PrtToStr_GNB_ID (const char* name, GNB_ID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GNB_ID (OSCTXT *pctxt, 
   const char* name, const GNB_ID* pvalue);

EXTERN int asn1Init_GNB_ID (GNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalGNB_ID_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GlobalGNB-ID'
*/
typedef struct EXTERN GlobalGNB_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} GlobalGNB_ID_iE_Extensions_element;

EXTERN int asn1PE_GlobalGNB_ID_iE_Extensions_element (OSCTXT* pctxt, GlobalGNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GlobalGNB_ID_iE_Extensions_element (OSCTXT* pctxt, GlobalGNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_GlobalGNB_ID_iE_Extensions_element 
   (const char* name, const GlobalGNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_GlobalGNB_ID_iE_Extensions_element (const char* name, 
   GlobalGNB_ID_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalGNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const GlobalGNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1Init_GlobalGNB_ID_iE_Extensions_element (
   GlobalGNB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalGNB_ID_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GlobalGNB-ID'
*/
/* List of GlobalGNB_ID_iE_Extensions_element */
typedef OSRTDList GlobalGNB_ID_iE_Extensions;

EXTERN int asn1PE_GlobalGNB_ID_iE_Extensions (OSCTXT* pctxt, GlobalGNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_GlobalGNB_ID_iE_Extensions (OSCTXT* pctxt, GlobalGNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_GlobalGNB_ID_iE_Extensions 
   (const char* name, const GlobalGNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_GlobalGNB_ID_iE_Extensions (const char* name, 
   GlobalGNB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalGNB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const GlobalGNB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct GlobalGNB_ID_iE_Extensions_element* 
   asn1Get_GlobalGNB_ID_iE_Extensions (ProtocolExtensionID id, 
   GlobalGNB_ID_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_GlobalGNB_ID_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, GlobalGNB_ID_iE_Extensions* plist, 
   GlobalGNB_ID_iE_Extensions* pmatches);

EXTERN int asn1Init_GlobalGNB_ID_iE_Extensions (GlobalGNB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalGNB_ID                                              */
/*                                                            */
/**************************************************************/
/*
GlobalGNB-ID ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   gNB-ID [1] EXPLICIT GNB-ID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({GlobalGNB-ID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({GlobalGNB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({GlobalGNB-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN GlobalGNB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   GNB_ID gNB_ID;
   GlobalGNB_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} GlobalGNB_ID;

EXTERN int asn1PE_GlobalGNB_ID (OSCTXT* pctxt, GlobalGNB_ID* pvalue);

EXTERN int asn1PD_GlobalGNB_ID (OSCTXT* pctxt, GlobalGNB_ID* pvalue);

EXTERN void asn1Print_GlobalGNB_ID (const char* name, const GlobalGNB_ID* pvalue);

EXTERN int asn1PrtToStr_GlobalGNB_ID (const char* name, GlobalGNB_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalGNB_ID (OSCTXT *pctxt, 
   const char* name, const GlobalGNB_ID* pvalue);

EXTERN int asn1Init_GlobalGNB_ID (GlobalGNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  NgENB_ID_choice_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NgENB-ID'
*/
typedef struct EXTERN NgENB_ID_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} NgENB_ID_choice_Extensions;

EXTERN int asn1PE_NgENB_ID_choice_Extensions (OSCTXT* pctxt, NgENB_ID_choice_Extensions* pvalue);

EXTERN int asn1PD_NgENB_ID_choice_Extensions (OSCTXT* pctxt, NgENB_ID_choice_Extensions* pvalue);

EXTERN void asn1Print_NgENB_ID_choice_Extensions 
   (const char* name, const NgENB_ID_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_NgENB_ID_choice_Extensions (const char* name, 
   NgENB_ID_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NgENB_ID_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const NgENB_ID_choice_Extensions* pvalue);

EXTERN int asn1Init_NgENB_ID_choice_Extensions (NgENB_ID_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NgENB_ID                                                  */
/*                                                            */
/**************************************************************/
/*
NgENB-ID ::= CHOICE {
   macroNgENB-ID [0] BIT STRING  (SIZE (20)),
   shortMacroNgENB-ID [1] BIT STRING  (SIZE (18)),
   longMacroNgENB-ID [2] BIT STRING  (SIZE (21)),
   choice-Extensions [3] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NgENB-ID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NgENB-ID-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NgENB-ID-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_NgENB_ID_macroNgENB_ID        1
#define T_NgENB_ID_shortMacroNgENB_ID   2
#define T_NgENB_ID_longMacroNgENB_ID    3
#define T_NgENB_ID_choice_Extensions    4

typedef struct EXTERN NgENB_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1BitStr32 *macroNgENB_ID;
      /* t = 2 */
      ASN1BitStr32 *shortMacroNgENB_ID;
      /* t = 3 */
      ASN1BitStr32 *longMacroNgENB_ID;
      /* t = 4 */
      NgENB_ID_choice_Extensions *choice_Extensions;
   } u;
} NgENB_ID;

EXTERN int asn1PE_NgENB_ID (OSCTXT* pctxt, NgENB_ID* pvalue);

EXTERN int asn1PD_NgENB_ID (OSCTXT* pctxt, NgENB_ID* pvalue);

EXTERN void asn1Print_NgENB_ID (const char* name, const NgENB_ID* pvalue);

EXTERN int asn1PrtToStr_NgENB_ID (const char* name, NgENB_ID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NgENB_ID (OSCTXT *pctxt, 
   const char* name, const NgENB_ID* pvalue);

EXTERN int asn1Init_NgENB_ID (NgENB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalNgENB_ID_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GlobalNgENB-ID'
*/
typedef struct EXTERN GlobalNgENB_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} GlobalNgENB_ID_iE_Extensions_element;

EXTERN int asn1PE_GlobalNgENB_ID_iE_Extensions_element (OSCTXT* pctxt, GlobalNgENB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GlobalNgENB_ID_iE_Extensions_element (OSCTXT* pctxt, GlobalNgENB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_GlobalNgENB_ID_iE_Extensions_element 
   (const char* name, const GlobalNgENB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_GlobalNgENB_ID_iE_Extensions_element (const char* name, 
   GlobalNgENB_ID_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalNgENB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const GlobalNgENB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1Init_GlobalNgENB_ID_iE_Extensions_element (
   GlobalNgENB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalNgENB_ID_iE_Extensions                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GlobalNgENB-ID'
*/
/* List of GlobalNgENB_ID_iE_Extensions_element */
typedef OSRTDList GlobalNgENB_ID_iE_Extensions;

EXTERN int asn1PE_GlobalNgENB_ID_iE_Extensions (OSCTXT* pctxt, GlobalNgENB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_GlobalNgENB_ID_iE_Extensions (OSCTXT* pctxt, GlobalNgENB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_GlobalNgENB_ID_iE_Extensions 
   (const char* name, const GlobalNgENB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_GlobalNgENB_ID_iE_Extensions (const char* name, 
   GlobalNgENB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalNgENB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const GlobalNgENB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct GlobalNgENB_ID_iE_Extensions_element* 
   asn1Get_GlobalNgENB_ID_iE_Extensions (ProtocolExtensionID id, 
   GlobalNgENB_ID_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_GlobalNgENB_ID_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   GlobalNgENB_ID_iE_Extensions* plist, 
   GlobalNgENB_ID_iE_Extensions* pmatches);

EXTERN int asn1Init_GlobalNgENB_ID_iE_Extensions (
   GlobalNgENB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalNgENB_ID                                            */
/*                                                            */
/**************************************************************/
/*
GlobalNgENB-ID ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   ngENB-ID [1] EXPLICIT NgENB-ID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({GlobalNgENB-ID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({GlobalNgENB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({GlobalNgENB-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN GlobalNgENB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   NgENB_ID ngENB_ID;
   GlobalNgENB_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} GlobalNgENB_ID;

EXTERN int asn1PE_GlobalNgENB_ID (OSCTXT* pctxt, GlobalNgENB_ID* pvalue);

EXTERN int asn1PD_GlobalNgENB_ID (OSCTXT* pctxt, GlobalNgENB_ID* pvalue);

EXTERN void asn1Print_GlobalNgENB_ID (const char* name, const GlobalNgENB_ID* pvalue);

EXTERN int asn1PrtToStr_GlobalNgENB_ID (const char* name, GlobalNgENB_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalNgENB_ID (OSCTXT *pctxt, 
   const char* name, const GlobalNgENB_ID* pvalue);

EXTERN int asn1Init_GlobalNgENB_ID (GlobalNgENB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  N3IWF_ID_choice_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'N3IWF-ID'
*/
typedef struct EXTERN N3IWF_ID_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} N3IWF_ID_choice_Extensions;

EXTERN int asn1PE_N3IWF_ID_choice_Extensions (OSCTXT* pctxt, N3IWF_ID_choice_Extensions* pvalue);

EXTERN int asn1PD_N3IWF_ID_choice_Extensions (OSCTXT* pctxt, N3IWF_ID_choice_Extensions* pvalue);

EXTERN void asn1Print_N3IWF_ID_choice_Extensions 
   (const char* name, const N3IWF_ID_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_N3IWF_ID_choice_Extensions (const char* name, 
   N3IWF_ID_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_N3IWF_ID_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const N3IWF_ID_choice_Extensions* pvalue);

EXTERN int asn1Init_N3IWF_ID_choice_Extensions (N3IWF_ID_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  N3IWF_ID                                                  */
/*                                                            */
/**************************************************************/
/*
 N
N3IWF-ID ::= CHOICE {
   n3IWF-ID [0] BIT STRING  (SIZE (16)),
   choice-Extensions [1] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({N3IWF-ID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({N3IWF-ID-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({N3IWF-ID-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_N3IWF_ID_n3IWF_ID             1
#define T_N3IWF_ID_choice_Extensions    2

typedef struct EXTERN N3IWF_ID {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1BitStr32 *n3IWF_ID;
      /* t = 2 */
      N3IWF_ID_choice_Extensions *choice_Extensions;
   } u;
} N3IWF_ID;

EXTERN int asn1PE_N3IWF_ID (OSCTXT* pctxt, N3IWF_ID* pvalue);

EXTERN int asn1PD_N3IWF_ID (OSCTXT* pctxt, N3IWF_ID* pvalue);

EXTERN void asn1Print_N3IWF_ID (const char* name, const N3IWF_ID* pvalue);

EXTERN int asn1PrtToStr_N3IWF_ID (const char* name, N3IWF_ID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_N3IWF_ID (OSCTXT *pctxt, 
   const char* name, const N3IWF_ID* pvalue);

EXTERN int asn1Init_N3IWF_ID (N3IWF_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalN3IWF_ID_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GlobalN3IWF-ID'
*/
typedef struct EXTERN GlobalN3IWF_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} GlobalN3IWF_ID_iE_Extensions_element;

EXTERN int asn1PE_GlobalN3IWF_ID_iE_Extensions_element (OSCTXT* pctxt, GlobalN3IWF_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GlobalN3IWF_ID_iE_Extensions_element (OSCTXT* pctxt, GlobalN3IWF_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_GlobalN3IWF_ID_iE_Extensions_element 
   (const char* name, const GlobalN3IWF_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_GlobalN3IWF_ID_iE_Extensions_element (const char* name, 
   GlobalN3IWF_ID_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalN3IWF_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const GlobalN3IWF_ID_iE_Extensions_element* pvalue);

EXTERN int asn1Init_GlobalN3IWF_ID_iE_Extensions_element (
   GlobalN3IWF_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalN3IWF_ID_iE_Extensions                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GlobalN3IWF-ID'
*/
/* List of GlobalN3IWF_ID_iE_Extensions_element */
typedef OSRTDList GlobalN3IWF_ID_iE_Extensions;

EXTERN int asn1PE_GlobalN3IWF_ID_iE_Extensions (OSCTXT* pctxt, GlobalN3IWF_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_GlobalN3IWF_ID_iE_Extensions (OSCTXT* pctxt, GlobalN3IWF_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_GlobalN3IWF_ID_iE_Extensions 
   (const char* name, const GlobalN3IWF_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_GlobalN3IWF_ID_iE_Extensions (const char* name, 
   GlobalN3IWF_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalN3IWF_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const GlobalN3IWF_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct GlobalN3IWF_ID_iE_Extensions_element* 
   asn1Get_GlobalN3IWF_ID_iE_Extensions (ProtocolExtensionID id, 
   GlobalN3IWF_ID_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_GlobalN3IWF_ID_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   GlobalN3IWF_ID_iE_Extensions* plist, 
   GlobalN3IWF_ID_iE_Extensions* pmatches);

EXTERN int asn1Init_GlobalN3IWF_ID_iE_Extensions (
   GlobalN3IWF_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalN3IWF_ID                                            */
/*                                                            */
/**************************************************************/
/*
GlobalN3IWF-ID ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   n3IWF-ID [1] EXPLICIT N3IWF-ID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({GlobalN3IWF-ID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({GlobalN3IWF-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({GlobalN3IWF-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN GlobalN3IWF_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   N3IWF_ID n3IWF_ID;
   GlobalN3IWF_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} GlobalN3IWF_ID;

EXTERN int asn1PE_GlobalN3IWF_ID (OSCTXT* pctxt, GlobalN3IWF_ID* pvalue);

EXTERN int asn1PD_GlobalN3IWF_ID (OSCTXT* pctxt, GlobalN3IWF_ID* pvalue);

EXTERN void asn1Print_GlobalN3IWF_ID (const char* name, const GlobalN3IWF_ID* pvalue);

EXTERN int asn1PrtToStr_GlobalN3IWF_ID (const char* name, GlobalN3IWF_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalN3IWF_ID (OSCTXT *pctxt, 
   const char* name, const GlobalN3IWF_ID* pvalue);

EXTERN int asn1Init_GlobalN3IWF_ID (GlobalN3IWF_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalRANNodeID_choice_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GlobalRANNodeID'
*/
typedef struct EXTERN GlobalRANNodeID_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} GlobalRANNodeID_choice_Extensions;

EXTERN int asn1PE_GlobalRANNodeID_choice_Extensions (OSCTXT* pctxt, GlobalRANNodeID_choice_Extensions* pvalue);

EXTERN int asn1PD_GlobalRANNodeID_choice_Extensions (OSCTXT* pctxt, GlobalRANNodeID_choice_Extensions* pvalue);

EXTERN void asn1Print_GlobalRANNodeID_choice_Extensions 
   (const char* name, const GlobalRANNodeID_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_GlobalRANNodeID_choice_Extensions (const char* name, 
   GlobalRANNodeID_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalRANNodeID_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const GlobalRANNodeID_choice_Extensions* pvalue);

EXTERN int asn1Init_GlobalRANNodeID_choice_Extensions (
   GlobalRANNodeID_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GlobalRANNodeID                                           */
/*                                                            */
/**************************************************************/
/*
GlobalRANNodeID ::= CHOICE {
   globalGNB-ID [0] GlobalGNB-ID,
   globalNgENB-ID [1] GlobalNgENB-ID,
   globalN3IWF-ID [2] GlobalN3IWF-ID,
   choice-Extensions [3] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({GlobalRANNodeID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({GlobalRANNodeID-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({GlobalRANNodeID-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_GlobalRANNodeID_globalGNB_ID  1
#define T_GlobalRANNodeID_globalNgENB_ID 2
#define T_GlobalRANNodeID_globalN3IWF_ID 3
#define T_GlobalRANNodeID_choice_Extensions 4

typedef struct EXTERN GlobalRANNodeID {
   OSINT32 t;
   union {
      /* t = 1 */
      GlobalGNB_ID *globalGNB_ID;
      /* t = 2 */
      GlobalNgENB_ID *globalNgENB_ID;
      /* t = 3 */
      GlobalN3IWF_ID *globalN3IWF_ID;
      /* t = 4 */
      GlobalRANNodeID_choice_Extensions *choice_Extensions;
   } u;
} GlobalRANNodeID;

EXTERN int asn1PE_GlobalRANNodeID (OSCTXT* pctxt, GlobalRANNodeID* pvalue);

EXTERN int asn1PD_GlobalRANNodeID (OSCTXT* pctxt, GlobalRANNodeID* pvalue);

EXTERN void asn1Print_GlobalRANNodeID 
   (const char* name, const GlobalRANNodeID* pvalue);

EXTERN int asn1PrtToStr_GlobalRANNodeID (const char* name, GlobalRANNodeID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GlobalRANNodeID (OSCTXT *pctxt, 
   const char* name, const GlobalRANNodeID* pvalue);

EXTERN int asn1Init_GlobalRANNodeID (GlobalRANNodeID* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_iE_Extensions_element                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI'
*/
typedef struct EXTERN TAI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TAI_iE_Extensions_element;

EXTERN int asn1PE_TAI_iE_Extensions_element (OSCTXT* pctxt, TAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TAI_iE_Extensions_element (OSCTXT* pctxt, TAI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TAI_iE_Extensions_element 
   (const char* name, const TAI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TAI_iE_Extensions_element (const char* name, 
   TAI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TAI_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TAI_iE_Extensions_element (TAI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI_iE_Extensions                                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAI'
*/
/* List of TAI_iE_Extensions_element */
typedef OSRTDList TAI_iE_Extensions;

EXTERN int asn1PE_TAI_iE_Extensions (OSCTXT* pctxt, TAI_iE_Extensions* pvalue);

EXTERN int asn1PD_TAI_iE_Extensions (OSCTXT* pctxt, TAI_iE_Extensions* pvalue);

EXTERN void asn1Print_TAI_iE_Extensions 
   (const char* name, const TAI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TAI_iE_Extensions (const char* name, 
   TAI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TAI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TAI_iE_Extensions_element* asn1Get_TAI_iE_Extensions 
   (ProtocolExtensionID id, TAI_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TAI_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, TAI_iE_Extensions* plist, 
   TAI_iE_Extensions* pmatches);

EXTERN int asn1Init_TAI_iE_Extensions (TAI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAI                                                       */
/*                                                            */
/**************************************************************/
/*
TAI ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   tAC [1] TAC,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TAI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TAI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TAI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   TAC tAC;
   TAI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TAI;

EXTERN int asn1PE_TAI (OSCTXT* pctxt, TAI* pvalue);

EXTERN int asn1PD_TAI (OSCTXT* pctxt, TAI* pvalue);

EXTERN void asn1Print_TAI (const char* name, const TAI* pvalue);

EXTERN int asn1PrtToStr_TAI (const char* name, TAI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAI (OSCTXT *pctxt, const char* name, const TAI* pvalue);

EXTERN int asn1Init_TAI (TAI* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFPagingTarget_choice_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMFPagingTarget'
*/
typedef struct EXTERN AMFPagingTarget_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} AMFPagingTarget_choice_Extensions;

EXTERN int asn1PE_AMFPagingTarget_choice_Extensions (OSCTXT* pctxt, AMFPagingTarget_choice_Extensions* pvalue);

EXTERN int asn1PD_AMFPagingTarget_choice_Extensions (OSCTXT* pctxt, AMFPagingTarget_choice_Extensions* pvalue);

EXTERN void asn1Print_AMFPagingTarget_choice_Extensions 
   (const char* name, const AMFPagingTarget_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_AMFPagingTarget_choice_Extensions (const char* name, 
   AMFPagingTarget_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFPagingTarget_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const AMFPagingTarget_choice_Extensions* pvalue);

EXTERN int asn1Init_AMFPagingTarget_choice_Extensions (
   AMFPagingTarget_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AMFPagingTarget                                           */
/*                                                            */
/**************************************************************/
/*
AMFPagingTarget ::= CHOICE {
   globalRANNodeID [0] EXPLICIT GlobalRANNodeID,
   tAI [1] TAI,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({AMFPagingTarget-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({AMFPagingTarget-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({AMFPagingTarget-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_AMFPagingTarget_globalRANNodeID 1
#define T_AMFPagingTarget_tAI           2
#define T_AMFPagingTarget_choice_Extensions 3

typedef struct EXTERN AMFPagingTarget {
   OSINT32 t;
   union {
      /* t = 1 */
      GlobalRANNodeID *globalRANNodeID;
      /* t = 2 */
      TAI *tAI;
      /* t = 3 */
      AMFPagingTarget_choice_Extensions *choice_Extensions;
   } u;
} AMFPagingTarget;

EXTERN int asn1PE_AMFPagingTarget (OSCTXT* pctxt, AMFPagingTarget* pvalue);

EXTERN int asn1PD_AMFPagingTarget (OSCTXT* pctxt, AMFPagingTarget* pvalue);

EXTERN void asn1Print_AMFPagingTarget 
   (const char* name, const AMFPagingTarget* pvalue);

EXTERN int asn1PrtToStr_AMFPagingTarget (const char* name, AMFPagingTarget* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMFPagingTarget (OSCTXT *pctxt, 
   const char* name, const AMFPagingTarget* pvalue);

EXTERN int asn1Init_AMFPagingTarget (AMFPagingTarget* pvalue);

/**************************************************************/
/*                                                            */
/*  EndpointIPAddressAndPort_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EndpointIPAddressAndPort'
*/
typedef struct EXTERN EndpointIPAddressAndPort_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EndpointIPAddressAndPort_iE_Extensions_element;

EXTERN int asn1PE_EndpointIPAddressAndPort_iE_Extensions_element (OSCTXT* pctxt, EndpointIPAddressAndPort_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EndpointIPAddressAndPort_iE_Extensions_element (OSCTXT* pctxt, EndpointIPAddressAndPort_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EndpointIPAddressAndPort_iE_Extensions_element 
   (const char* name, const EndpointIPAddressAndPort_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EndpointIPAddressAndPort_iE_Extensions_element (
   const char* name, EndpointIPAddressAndPort_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EndpointIPAddressAndPort_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EndpointIPAddressAndPort_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EndpointIPAddressAndPort_iE_Extensions_element (
   EndpointIPAddressAndPort_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EndpointIPAddressAndPort_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EndpointIPAddressAndPort'
*/
/* List of EndpointIPAddressAndPort_iE_Extensions_element */
typedef OSRTDList EndpointIPAddressAndPort_iE_Extensions;

EXTERN int asn1PE_EndpointIPAddressAndPort_iE_Extensions (OSCTXT* pctxt, EndpointIPAddressAndPort_iE_Extensions* pvalue);

EXTERN int asn1PD_EndpointIPAddressAndPort_iE_Extensions (OSCTXT* pctxt, EndpointIPAddressAndPort_iE_Extensions* pvalue);

EXTERN void asn1Print_EndpointIPAddressAndPort_iE_Extensions 
   (const char* name, const EndpointIPAddressAndPort_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EndpointIPAddressAndPort_iE_Extensions (const char* name, 
   EndpointIPAddressAndPort_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EndpointIPAddressAndPort_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EndpointIPAddressAndPort_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EndpointIPAddressAndPort_iE_Extensions_element* 
   asn1Get_EndpointIPAddressAndPort_iE_Extensions (ProtocolExtensionID id, 
   EndpointIPAddressAndPort_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EndpointIPAddressAndPort_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   EndpointIPAddressAndPort_iE_Extensions* plist, 
   EndpointIPAddressAndPort_iE_Extensions* pmatches);

EXTERN int asn1Init_EndpointIPAddressAndPort_iE_Extensions (
   EndpointIPAddressAndPort_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EndpointIPAddressAndPort                                  */
/*                                                            */
/**************************************************************/
/*
EndpointIPAddressAndPort ::= SEQUENCE {
   endpointIPAddress [0] TransportLayerAddress,
   portNumber [1] PortNumber,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EndpointIPAddressAndPort-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EndpointIPAddressAndPort-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EndpointIPAddressAndPort-ExtIEs}{@id})
   } OPTIONAL
}
*/
typedef struct EXTERN EndpointIPAddressAndPort {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportLayerAddress endpointIPAddress;
   PortNumber portNumber;
   EndpointIPAddressAndPort_iE_Extensions iE_Extensions;
} EndpointIPAddressAndPort;

EXTERN int asn1PE_EndpointIPAddressAndPort (OSCTXT* pctxt, EndpointIPAddressAndPort* pvalue);

EXTERN int asn1PD_EndpointIPAddressAndPort (OSCTXT* pctxt, EndpointIPAddressAndPort* pvalue);

EXTERN void asn1Print_EndpointIPAddressAndPort 
   (const char* name, const EndpointIPAddressAndPort* pvalue);

EXTERN int asn1PrtToStr_EndpointIPAddressAndPort (const char* name, 
   EndpointIPAddressAndPort* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EndpointIPAddressAndPort (OSCTXT *pctxt, 
   const char* name, const EndpointIPAddressAndPort* pvalue);

EXTERN int asn1Init_EndpointIPAddressAndPort (EndpointIPAddressAndPort* pvalue);

/**************************************************************/
/*                                                            */
/*  CPTransportLayerInformation_choice_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CPTransportLayerInformation'
*/
typedef struct EXTERN CPTransportLayerInformation_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      CPTransportLayerInformation_ExtIEs_TVALUE t;

      /**
       * CPTransportLayerInformation-ExtIEs information objects
       */
      union {
         /**
          * id: id-EndpointIPAddressAndPort
          * criticality: reject
          * presence: mandatory
          */
         EndpointIPAddressAndPort *_CPTransportLayerInformation_ExtIEs_id_EndpointIPAddressAndPort;

         ASN1OpenType* extElem1;
      } u;
   } value;
} CPTransportLayerInformation_choice_Extensions;

EXTERN int asn1PE_CPTransportLayerInformation_choice_Extensions (OSCTXT* pctxt, CPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN int asn1PD_CPTransportLayerInformation_choice_Extensions (OSCTXT* pctxt, CPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN void asn1Print_CPTransportLayerInformation_choice_Extensions 
   (const char* name, const CPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_CPTransportLayerInformation_choice_Extensions (
   const char* name, CPTransportLayerInformation_choice_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CPTransportLayerInformation_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const CPTransportLayerInformation_choice_Extensions* pvalue);

EXTERN int asn1Init_CPTransportLayerInformation_choice_Extensions (
   CPTransportLayerInformation_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CPTransportLayerInformation                               */
/*                                                            */
/**************************************************************/
/*
CPTransportLayerInformation ::= CHOICE {
   endpointIPAddress [0] TransportLayerAddress,
   choice-Extensions [1] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({CPTransportLayerInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({CPTransportLayerInformation-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({CPTransportLayerInformation-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_CPTransportLayerInformation_endpointIPAddress 1
#define T_CPTransportLayerInformation_choice_Extensions 2

typedef struct EXTERN CPTransportLayerInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      TransportLayerAddress *endpointIPAddress;
      /* t = 2 */
      CPTransportLayerInformation_choice_Extensions *choice_Extensions;
   } u;
} CPTransportLayerInformation;

EXTERN int asn1PE_CPTransportLayerInformation (OSCTXT* pctxt, CPTransportLayerInformation* pvalue);

EXTERN int asn1PD_CPTransportLayerInformation (OSCTXT* pctxt, CPTransportLayerInformation* pvalue);

EXTERN void asn1Print_CPTransportLayerInformation 
   (const char* name, const CPTransportLayerInformation* pvalue);

EXTERN int asn1PrtToStr_CPTransportLayerInformation (const char* name, 
   CPTransportLayerInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CPTransportLayerInformation (OSCTXT *pctxt, 
   const char* name, const CPTransportLayerInformation* pvalue);

EXTERN int asn1Init_CPTransportLayerInformation (CPTransportLayerInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationSetupItem_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationSetupItem'
*/
typedef struct EXTERN AMF_TNLAssociationSetupItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AMF_TNLAssociationSetupItem_iE_Extensions_element;

EXTERN int asn1PE_AMF_TNLAssociationSetupItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationSetupItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationSetupItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationSetupItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationSetupItem_iE_Extensions_element 
   (const char* name, const AMF_TNLAssociationSetupItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationSetupItem_iE_Extensions_element (
   const char* name, 
   AMF_TNLAssociationSetupItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationSetupItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationSetupItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationSetupItem_iE_Extensions_element (
   AMF_TNLAssociationSetupItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationSetupItem_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationSetupItem'
*/
/* List of AMF_TNLAssociationSetupItem_iE_Extensions_element */
typedef OSRTDList AMF_TNLAssociationSetupItem_iE_Extensions;

EXTERN int asn1PE_AMF_TNLAssociationSetupItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationSetupItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationSetupItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationSetupItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationSetupItem_iE_Extensions 
   (const char* name, const AMF_TNLAssociationSetupItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationSetupItem_iE_Extensions (const char* name, 
   AMF_TNLAssociationSetupItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationSetupItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationSetupItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AMF_TNLAssociationSetupItem_iE_Extensions_element* 
   asn1Get_AMF_TNLAssociationSetupItem_iE_Extensions (ProtocolExtensionID id, 
   AMF_TNLAssociationSetupItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMF_TNLAssociationSetupItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AMF_TNLAssociationSetupItem_iE_Extensions* plist, 
   AMF_TNLAssociationSetupItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AMF_TNLAssociationSetupItem_iE_Extensions (
   AMF_TNLAssociationSetupItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationSetupItem                               */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationSetupItem ::= SEQUENCE {
   aMF-TNLAssociationAddress [0] EXPLICIT CPTransportLayerInformation,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AMF-TNLAssociationSetupItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AMF-TNLAssociationSetupItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AMF-TNLAssociationSetupItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AMF_TNLAssociationSetupItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CPTransportLayerInformation aMF_TNLAssociationAddress;
   AMF_TNLAssociationSetupItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AMF_TNLAssociationSetupItem;

EXTERN int asn1PE_AMF_TNLAssociationSetupItem (OSCTXT* pctxt, AMF_TNLAssociationSetupItem* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationSetupItem (OSCTXT* pctxt, AMF_TNLAssociationSetupItem* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationSetupItem 
   (const char* name, const AMF_TNLAssociationSetupItem* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationSetupItem (const char* name, 
   AMF_TNLAssociationSetupItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationSetupItem (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationSetupItem* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationSetupItem (AMF_TNLAssociationSetupItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationSetupList                               */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationSetupList ::= SEQUENCE (SIZE (1..maxnoofTNLAssociations)) OF AMF-TNLAssociationSetupItem
*/
/* List of AMF_TNLAssociationSetupItem */
typedef OSRTDList AMF_TNLAssociationSetupList;

EXTERN int asn1PE_AMF_TNLAssociationSetupList (OSCTXT* pctxt, AMF_TNLAssociationSetupList* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationSetupList (OSCTXT* pctxt, AMF_TNLAssociationSetupList* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationSetupList 
   (const char* name, const AMF_TNLAssociationSetupList* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationSetupList (const char* name, 
   AMF_TNLAssociationSetupList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationSetupList (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationSetupList* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationSetupList (AMF_TNLAssociationSetupList* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToAddItem_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationToAddItem'
*/
typedef struct EXTERN AMF_TNLAssociationToAddItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AMF_TNLAssociationToAddItem_iE_Extensions_element;

EXTERN int asn1PE_AMF_TNLAssociationToAddItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationToAddItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToAddItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationToAddItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToAddItem_iE_Extensions_element 
   (const char* name, const AMF_TNLAssociationToAddItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToAddItem_iE_Extensions_element (
   const char* name, 
   AMF_TNLAssociationToAddItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToAddItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToAddItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToAddItem_iE_Extensions_element (
   AMF_TNLAssociationToAddItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToAddItem_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationToAddItem'
*/
/* List of AMF_TNLAssociationToAddItem_iE_Extensions_element */
typedef OSRTDList AMF_TNLAssociationToAddItem_iE_Extensions;

EXTERN int asn1PE_AMF_TNLAssociationToAddItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationToAddItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToAddItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationToAddItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToAddItem_iE_Extensions 
   (const char* name, const AMF_TNLAssociationToAddItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToAddItem_iE_Extensions (const char* name, 
   AMF_TNLAssociationToAddItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToAddItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToAddItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AMF_TNLAssociationToAddItem_iE_Extensions_element* 
   asn1Get_AMF_TNLAssociationToAddItem_iE_Extensions (ProtocolExtensionID id, 
   AMF_TNLAssociationToAddItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMF_TNLAssociationToAddItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AMF_TNLAssociationToAddItem_iE_Extensions* plist, 
   AMF_TNLAssociationToAddItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AMF_TNLAssociationToAddItem_iE_Extensions (
   AMF_TNLAssociationToAddItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToAddItem                               */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationToAddItem ::= SEQUENCE {
   aMF-TNLAssociationAddress [0] EXPLICIT CPTransportLayerInformation,
   tNLAssociationUsage [1] TNLAssociationUsage OPTIONAL,
   tNLAddressWeightFactor [2] TNLAddressWeightFactor,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AMF-TNLAssociationToAddItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AMF-TNLAssociationToAddItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AMF-TNLAssociationToAddItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AMF_TNLAssociationToAddItem {
   struct {
      unsigned tNLAssociationUsagePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CPTransportLayerInformation aMF_TNLAssociationAddress;
   TNLAssociationUsage tNLAssociationUsage;
   TNLAddressWeightFactor tNLAddressWeightFactor;
   AMF_TNLAssociationToAddItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AMF_TNLAssociationToAddItem;

EXTERN int asn1PE_AMF_TNLAssociationToAddItem (OSCTXT* pctxt, AMF_TNLAssociationToAddItem* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToAddItem (OSCTXT* pctxt, AMF_TNLAssociationToAddItem* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToAddItem 
   (const char* name, const AMF_TNLAssociationToAddItem* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToAddItem (const char* name, 
   AMF_TNLAssociationToAddItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToAddItem (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToAddItem* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToAddItem (AMF_TNLAssociationToAddItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToAddList                               */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationToAddList ::= SEQUENCE (SIZE (1..maxnoofTNLAssociations)) OF AMF-TNLAssociationToAddItem
*/
/* List of AMF_TNLAssociationToAddItem */
typedef OSRTDList AMF_TNLAssociationToAddList;

EXTERN int asn1PE_AMF_TNLAssociationToAddList (OSCTXT* pctxt, AMF_TNLAssociationToAddList* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToAddList (OSCTXT* pctxt, AMF_TNLAssociationToAddList* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToAddList 
   (const char* name, const AMF_TNLAssociationToAddList* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToAddList (const char* name, 
   AMF_TNLAssociationToAddList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToAddList (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToAddList* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToAddList (AMF_TNLAssociationToAddList* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToRemoveItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationToRemoveItem'
*/
typedef struct EXTERN AMF_TNLAssociationToRemoveItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      AMF_TNLAssociationToRemoveItem_ExtIEs_TVALUE t;

      /**
       * AMF-TNLAssociationToRemoveItem-ExtIEs information objects
       */
      union {
         /**
          * id: id-TNLAssociationTransportLayerAddressNGRAN
          * criticality: reject
          * presence: optional
          */
         CPTransportLayerInformation *_AMF_TNLAssociationToRemoveItem_ExtIEs_id_TNLAssociationTransportLayerAddressNGRAN;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} AMF_TNLAssociationToRemoveItem_iE_Extensions_element;

EXTERN int asn1PE_AMF_TNLAssociationToRemoveItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToRemoveItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToRemoveItem_iE_Extensions_element 
   (const char* name, const AMF_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToRemoveItem_iE_Extensions_element (
   const char* name, 
   AMF_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToRemoveItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToRemoveItem_iE_Extensions_element (
   AMF_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToRemoveItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationToRemoveItem'
*/
/* List of AMF_TNLAssociationToRemoveItem_iE_Extensions_element */
typedef OSRTDList AMF_TNLAssociationToRemoveItem_iE_Extensions;

EXTERN int asn1PE_AMF_TNLAssociationToRemoveItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToRemoveItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToRemoveItem_iE_Extensions 
   (const char* name, const AMF_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToRemoveItem_iE_Extensions (
   const char* name, AMF_TNLAssociationToRemoveItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToRemoveItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AMF_TNLAssociationToRemoveItem_iE_Extensions_element* 
   asn1Get_AMF_TNLAssociationToRemoveItem_iE_Extensions 
   (ProtocolExtensionID id, 
   AMF_TNLAssociationToRemoveItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMF_TNLAssociationToRemoveItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AMF_TNLAssociationToRemoveItem_iE_Extensions* plist, 
   AMF_TNLAssociationToRemoveItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AMF_TNLAssociationToRemoveItem_iE_Extensions (
   AMF_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToRemoveItem                            */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationToRemoveItem ::= SEQUENCE {
   aMF-TNLAssociationAddress [0] EXPLICIT CPTransportLayerInformation,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AMF-TNLAssociationToRemoveItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AMF-TNLAssociationToRemoveItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AMF-TNLAssociationToRemoveItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AMF_TNLAssociationToRemoveItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CPTransportLayerInformation aMF_TNLAssociationAddress;
   AMF_TNLAssociationToRemoveItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AMF_TNLAssociationToRemoveItem;

EXTERN int asn1PE_AMF_TNLAssociationToRemoveItem (OSCTXT* pctxt, AMF_TNLAssociationToRemoveItem* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToRemoveItem (OSCTXT* pctxt, AMF_TNLAssociationToRemoveItem* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToRemoveItem 
   (const char* name, const AMF_TNLAssociationToRemoveItem* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToRemoveItem (const char* name, 
   AMF_TNLAssociationToRemoveItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToRemoveItem (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToRemoveItem* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToRemoveItem (
   AMF_TNLAssociationToRemoveItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToRemoveList                            */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationToRemoveList ::= SEQUENCE (SIZE (1..maxnoofTNLAssociations)) OF AMF-TNLAssociationToRemoveItem
*/
/* List of AMF_TNLAssociationToRemoveItem */
typedef OSRTDList AMF_TNLAssociationToRemoveList;

EXTERN int asn1PE_AMF_TNLAssociationToRemoveList (OSCTXT* pctxt, AMF_TNLAssociationToRemoveList* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToRemoveList (OSCTXT* pctxt, AMF_TNLAssociationToRemoveList* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToRemoveList 
   (const char* name, const AMF_TNLAssociationToRemoveList* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToRemoveList (const char* name, 
   AMF_TNLAssociationToRemoveList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToRemoveList (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToRemoveList* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToRemoveList (
   AMF_TNLAssociationToRemoveList* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToUpdateItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationToUpdateItem'
*/
typedef struct EXTERN AMF_TNLAssociationToUpdateItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AMF_TNLAssociationToUpdateItem_iE_Extensions_element;

EXTERN int asn1PE_AMF_TNLAssociationToUpdateItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationToUpdateItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToUpdateItem_iE_Extensions_element (OSCTXT* pctxt, AMF_TNLAssociationToUpdateItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToUpdateItem_iE_Extensions_element 
   (const char* name, const AMF_TNLAssociationToUpdateItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToUpdateItem_iE_Extensions_element (
   const char* name, 
   AMF_TNLAssociationToUpdateItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToUpdateItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToUpdateItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToUpdateItem_iE_Extensions_element (
   AMF_TNLAssociationToUpdateItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToUpdateItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AMF-TNLAssociationToUpdateItem'
*/
/* List of AMF_TNLAssociationToUpdateItem_iE_Extensions_element */
typedef OSRTDList AMF_TNLAssociationToUpdateItem_iE_Extensions;

EXTERN int asn1PE_AMF_TNLAssociationToUpdateItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationToUpdateItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToUpdateItem_iE_Extensions (OSCTXT* pctxt, AMF_TNLAssociationToUpdateItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToUpdateItem_iE_Extensions 
   (const char* name, const AMF_TNLAssociationToUpdateItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToUpdateItem_iE_Extensions (
   const char* name, AMF_TNLAssociationToUpdateItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToUpdateItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToUpdateItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AMF_TNLAssociationToUpdateItem_iE_Extensions_element* 
   asn1Get_AMF_TNLAssociationToUpdateItem_iE_Extensions 
   (ProtocolExtensionID id, 
   AMF_TNLAssociationToUpdateItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AMF_TNLAssociationToUpdateItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AMF_TNLAssociationToUpdateItem_iE_Extensions* plist, 
   AMF_TNLAssociationToUpdateItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AMF_TNLAssociationToUpdateItem_iE_Extensions (
   AMF_TNLAssociationToUpdateItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToUpdateItem                            */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationToUpdateItem ::= SEQUENCE {
   aMF-TNLAssociationAddress [0] EXPLICIT CPTransportLayerInformation,
   tNLAssociationUsage [1] TNLAssociationUsage OPTIONAL,
   tNLAddressWeightFactor [2] TNLAddressWeightFactor OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AMF-TNLAssociationToUpdateItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AMF-TNLAssociationToUpdateItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AMF-TNLAssociationToUpdateItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AMF_TNLAssociationToUpdateItem {
   struct {
      unsigned tNLAssociationUsagePresent : 1;
      unsigned tNLAddressWeightFactorPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CPTransportLayerInformation aMF_TNLAssociationAddress;
   TNLAssociationUsage tNLAssociationUsage;
   TNLAddressWeightFactor tNLAddressWeightFactor;
   AMF_TNLAssociationToUpdateItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AMF_TNLAssociationToUpdateItem;

EXTERN int asn1PE_AMF_TNLAssociationToUpdateItem (OSCTXT* pctxt, AMF_TNLAssociationToUpdateItem* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToUpdateItem (OSCTXT* pctxt, AMF_TNLAssociationToUpdateItem* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToUpdateItem 
   (const char* name, const AMF_TNLAssociationToUpdateItem* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToUpdateItem (const char* name, 
   AMF_TNLAssociationToUpdateItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToUpdateItem (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToUpdateItem* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToUpdateItem (
   AMF_TNLAssociationToUpdateItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AMF_TNLAssociationToUpdateList                            */
/*                                                            */
/**************************************************************/
/*
AMF-TNLAssociationToUpdateList ::= SEQUENCE (SIZE (1..maxnoofTNLAssociations)) OF AMF-TNLAssociationToUpdateItem
*/
/* List of AMF_TNLAssociationToUpdateItem */
typedef OSRTDList AMF_TNLAssociationToUpdateList;

EXTERN int asn1PE_AMF_TNLAssociationToUpdateList (OSCTXT* pctxt, AMF_TNLAssociationToUpdateList* pvalue);

EXTERN int asn1PD_AMF_TNLAssociationToUpdateList (OSCTXT* pctxt, AMF_TNLAssociationToUpdateList* pvalue);

EXTERN void asn1Print_AMF_TNLAssociationToUpdateList 
   (const char* name, const AMF_TNLAssociationToUpdateList* pvalue);

EXTERN int asn1PrtToStr_AMF_TNLAssociationToUpdateList (const char* name, 
   AMF_TNLAssociationToUpdateList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AMF_TNLAssociationToUpdateList (OSCTXT *pctxt, 
   const char* name, const AMF_TNLAssociationToUpdateList* pvalue);

EXTERN int asn1Init_AMF_TNLAssociationToUpdateList (
   AMF_TNLAssociationToUpdateList* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestTAIItem_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestTAIItem'
*/
typedef struct EXTERN AreaOfInterestTAIItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AreaOfInterestTAIItem_iE_Extensions_element;

EXTERN int asn1PE_AreaOfInterestTAIItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestTAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AreaOfInterestTAIItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestTAIItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AreaOfInterestTAIItem_iE_Extensions_element 
   (const char* name, const AreaOfInterestTAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestTAIItem_iE_Extensions_element (
   const char* name, AreaOfInterestTAIItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestTAIItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestTAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AreaOfInterestTAIItem_iE_Extensions_element (
   AreaOfInterestTAIItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestTAIItem_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestTAIItem'
*/
/* List of AreaOfInterestTAIItem_iE_Extensions_element */
typedef OSRTDList AreaOfInterestTAIItem_iE_Extensions;

EXTERN int asn1PE_AreaOfInterestTAIItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestTAIItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AreaOfInterestTAIItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestTAIItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AreaOfInterestTAIItem_iE_Extensions 
   (const char* name, const AreaOfInterestTAIItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestTAIItem_iE_Extensions (const char* name, 
   AreaOfInterestTAIItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestTAIItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestTAIItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AreaOfInterestTAIItem_iE_Extensions_element* 
   asn1Get_AreaOfInterestTAIItem_iE_Extensions (ProtocolExtensionID id, 
   AreaOfInterestTAIItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AreaOfInterestTAIItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AreaOfInterestTAIItem_iE_Extensions* plist, 
   AreaOfInterestTAIItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AreaOfInterestTAIItem_iE_Extensions (
   AreaOfInterestTAIItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestTAIItem                                     */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestTAIItem ::= SEQUENCE {
   tAI [0] TAI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AreaOfInterestTAIItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AreaOfInterestTAIItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AreaOfInterestTAIItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AreaOfInterestTAIItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAI tAI;
   AreaOfInterestTAIItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AreaOfInterestTAIItem;

EXTERN int asn1PE_AreaOfInterestTAIItem (OSCTXT* pctxt, AreaOfInterestTAIItem* pvalue);

EXTERN int asn1PD_AreaOfInterestTAIItem (OSCTXT* pctxt, AreaOfInterestTAIItem* pvalue);

EXTERN void asn1Print_AreaOfInterestTAIItem 
   (const char* name, const AreaOfInterestTAIItem* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestTAIItem (const char* name, 
   AreaOfInterestTAIItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestTAIItem (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestTAIItem* pvalue);

EXTERN int asn1Init_AreaOfInterestTAIItem (AreaOfInterestTAIItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestTAIList                                     */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestTAIList ::= SEQUENCE (SIZE (1..maxnoofTAIinAoI)) OF AreaOfInterestTAIItem
*/
/* List of AreaOfInterestTAIItem */
typedef OSRTDList AreaOfInterestTAIList;

EXTERN int asn1PE_AreaOfInterestTAIList (OSCTXT* pctxt, AreaOfInterestTAIList* pvalue);

EXTERN int asn1PD_AreaOfInterestTAIList (OSCTXT* pctxt, AreaOfInterestTAIList* pvalue);

EXTERN void asn1Print_AreaOfInterestTAIList 
   (const char* name, const AreaOfInterestTAIList* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestTAIList (const char* name, 
   AreaOfInterestTAIList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestTAIList (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestTAIList* pvalue);

EXTERN int asn1Init_AreaOfInterestTAIList (AreaOfInterestTAIList* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGI_iE_Extensions_element                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NR-CGI'
*/
typedef struct EXTERN NR_CGI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} NR_CGI_iE_Extensions_element;

EXTERN int asn1PE_NR_CGI_iE_Extensions_element (OSCTXT* pctxt, NR_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_NR_CGI_iE_Extensions_element (OSCTXT* pctxt, NR_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_NR_CGI_iE_Extensions_element 
   (const char* name, const NR_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_NR_CGI_iE_Extensions_element (const char* name, 
   NR_CGI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NR_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const NR_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1Init_NR_CGI_iE_Extensions_element (
   NR_CGI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGI_iE_Extensions                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NR-CGI'
*/
/* List of NR_CGI_iE_Extensions_element */
typedef OSRTDList NR_CGI_iE_Extensions;

EXTERN int asn1PE_NR_CGI_iE_Extensions (OSCTXT* pctxt, NR_CGI_iE_Extensions* pvalue);

EXTERN int asn1PD_NR_CGI_iE_Extensions (OSCTXT* pctxt, NR_CGI_iE_Extensions* pvalue);

EXTERN void asn1Print_NR_CGI_iE_Extensions 
   (const char* name, const NR_CGI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_NR_CGI_iE_Extensions (const char* name, 
   NR_CGI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NR_CGI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const NR_CGI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct NR_CGI_iE_Extensions_element* asn1Get_NR_CGI_iE_Extensions 
   (ProtocolExtensionID id, NR_CGI_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NR_CGI_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, NR_CGI_iE_Extensions* plist, 
   NR_CGI_iE_Extensions* pmatches);

EXTERN int asn1Init_NR_CGI_iE_Extensions (NR_CGI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGI                                                    */
/*                                                            */
/**************************************************************/
/*
NR-CGI ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   nRCellIdentity [1] NRCellIdentity,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({NR-CGI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({NR-CGI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({NR-CGI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN NR_CGI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   NRCellIdentity nRCellIdentity;
   NR_CGI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} NR_CGI;

EXTERN int asn1PE_NR_CGI (OSCTXT* pctxt, NR_CGI* pvalue);

EXTERN int asn1PD_NR_CGI (OSCTXT* pctxt, NR_CGI* pvalue);

EXTERN void asn1Print_NR_CGI (const char* name, const NR_CGI* pvalue);

EXTERN int asn1PrtToStr_NR_CGI (const char* name, NR_CGI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NR_CGI (OSCTXT *pctxt, 
   const char* name, const NR_CGI* pvalue);

EXTERN int asn1Init_NR_CGI (NR_CGI* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRA_CGI_iE_Extensions_element                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EUTRA-CGI'
*/
typedef struct EXTERN EUTRA_CGI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EUTRA_CGI_iE_Extensions_element;

EXTERN int asn1PE_EUTRA_CGI_iE_Extensions_element (OSCTXT* pctxt, EUTRA_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EUTRA_CGI_iE_Extensions_element (OSCTXT* pctxt, EUTRA_CGI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EUTRA_CGI_iE_Extensions_element 
   (const char* name, const EUTRA_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EUTRA_CGI_iE_Extensions_element (const char* name, 
   EUTRA_CGI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRA_CGI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EUTRA_CGI_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EUTRA_CGI_iE_Extensions_element (
   EUTRA_CGI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRA_CGI_iE_Extensions                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EUTRA-CGI'
*/
/* List of EUTRA_CGI_iE_Extensions_element */
typedef OSRTDList EUTRA_CGI_iE_Extensions;

EXTERN int asn1PE_EUTRA_CGI_iE_Extensions (OSCTXT* pctxt, EUTRA_CGI_iE_Extensions* pvalue);

EXTERN int asn1PD_EUTRA_CGI_iE_Extensions (OSCTXT* pctxt, EUTRA_CGI_iE_Extensions* pvalue);

EXTERN void asn1Print_EUTRA_CGI_iE_Extensions 
   (const char* name, const EUTRA_CGI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EUTRA_CGI_iE_Extensions (const char* name, 
   EUTRA_CGI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRA_CGI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EUTRA_CGI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EUTRA_CGI_iE_Extensions_element* asn1Get_EUTRA_CGI_iE_Extensions 
   (ProtocolExtensionID id, EUTRA_CGI_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EUTRA_CGI_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, EUTRA_CGI_iE_Extensions* plist, 
   EUTRA_CGI_iE_Extensions* pmatches);

EXTERN int asn1Init_EUTRA_CGI_iE_Extensions (EUTRA_CGI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRA_CGI                                                 */
/*                                                            */
/**************************************************************/
/*
EUTRA-CGI ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   eUTRACellIdentity [1] EUTRACellIdentity,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EUTRA-CGI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EUTRA-CGI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EUTRA-CGI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN EUTRA_CGI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   EUTRACellIdentity eUTRACellIdentity;
   EUTRA_CGI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} EUTRA_CGI;

EXTERN int asn1PE_EUTRA_CGI (OSCTXT* pctxt, EUTRA_CGI* pvalue);

EXTERN int asn1PD_EUTRA_CGI (OSCTXT* pctxt, EUTRA_CGI* pvalue);

EXTERN void asn1Print_EUTRA_CGI (const char* name, const EUTRA_CGI* pvalue);

EXTERN int asn1PrtToStr_EUTRA_CGI (const char* name, EUTRA_CGI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRA_CGI (OSCTXT *pctxt, 
   const char* name, const EUTRA_CGI* pvalue);

EXTERN int asn1Init_EUTRA_CGI (EUTRA_CGI* pvalue);

/**************************************************************/
/*                                                            */
/*  NGRAN_CGI_choice_Extensions                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGRAN-CGI'
*/
typedef struct EXTERN NGRAN_CGI_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} NGRAN_CGI_choice_Extensions;

EXTERN int asn1PE_NGRAN_CGI_choice_Extensions (OSCTXT* pctxt, NGRAN_CGI_choice_Extensions* pvalue);

EXTERN int asn1PD_NGRAN_CGI_choice_Extensions (OSCTXT* pctxt, NGRAN_CGI_choice_Extensions* pvalue);

EXTERN void asn1Print_NGRAN_CGI_choice_Extensions 
   (const char* name, const NGRAN_CGI_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_NGRAN_CGI_choice_Extensions (const char* name, 
   NGRAN_CGI_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGRAN_CGI_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const NGRAN_CGI_choice_Extensions* pvalue);

EXTERN int asn1Init_NGRAN_CGI_choice_Extensions (NGRAN_CGI_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NGRAN_CGI                                                 */
/*                                                            */
/**************************************************************/
/*
NGRAN-CGI ::= CHOICE {
   nR-CGI [0] NR-CGI,
   eUTRA-CGI [1] EUTRA-CGI,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({NGRAN-CGI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({NGRAN-CGI-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({NGRAN-CGI-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_NGRAN_CGI_nR_CGI              1
#define T_NGRAN_CGI_eUTRA_CGI           2
#define T_NGRAN_CGI_choice_Extensions   3

typedef struct EXTERN NGRAN_CGI {
   OSINT32 t;
   union {
      /* t = 1 */
      NR_CGI *nR_CGI;
      /* t = 2 */
      EUTRA_CGI *eUTRA_CGI;
      /* t = 3 */
      NGRAN_CGI_choice_Extensions *choice_Extensions;
   } u;
} NGRAN_CGI;

EXTERN int asn1PE_NGRAN_CGI (OSCTXT* pctxt, NGRAN_CGI* pvalue);

EXTERN int asn1PD_NGRAN_CGI (OSCTXT* pctxt, NGRAN_CGI* pvalue);

EXTERN void asn1Print_NGRAN_CGI (const char* name, const NGRAN_CGI* pvalue);

EXTERN int asn1PrtToStr_NGRAN_CGI (const char* name, NGRAN_CGI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGRAN_CGI (OSCTXT *pctxt, 
   const char* name, const NGRAN_CGI* pvalue);

EXTERN int asn1Init_NGRAN_CGI (NGRAN_CGI* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestCellItem_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestCellItem'
*/
typedef struct EXTERN AreaOfInterestCellItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AreaOfInterestCellItem_iE_Extensions_element;

EXTERN int asn1PE_AreaOfInterestCellItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AreaOfInterestCellItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestCellItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AreaOfInterestCellItem_iE_Extensions_element 
   (const char* name, const AreaOfInterestCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestCellItem_iE_Extensions_element (
   const char* name, AreaOfInterestCellItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestCellItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AreaOfInterestCellItem_iE_Extensions_element (
   AreaOfInterestCellItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestCellItem_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestCellItem'
*/
/* List of AreaOfInterestCellItem_iE_Extensions_element */
typedef OSRTDList AreaOfInterestCellItem_iE_Extensions;

EXTERN int asn1PE_AreaOfInterestCellItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestCellItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AreaOfInterestCellItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestCellItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AreaOfInterestCellItem_iE_Extensions 
   (const char* name, const AreaOfInterestCellItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestCellItem_iE_Extensions (const char* name, 
   AreaOfInterestCellItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestCellItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestCellItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AreaOfInterestCellItem_iE_Extensions_element* 
   asn1Get_AreaOfInterestCellItem_iE_Extensions (ProtocolExtensionID id, 
   AreaOfInterestCellItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AreaOfInterestCellItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AreaOfInterestCellItem_iE_Extensions* plist, 
   AreaOfInterestCellItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AreaOfInterestCellItem_iE_Extensions (
   AreaOfInterestCellItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestCellItem                                    */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestCellItem ::= SEQUENCE {
   nGRAN-CGI [0] EXPLICIT NGRAN-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AreaOfInterestCellItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AreaOfInterestCellItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AreaOfInterestCellItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AreaOfInterestCellItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NGRAN_CGI nGRAN_CGI;
   AreaOfInterestCellItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AreaOfInterestCellItem;

EXTERN int asn1PE_AreaOfInterestCellItem (OSCTXT* pctxt, AreaOfInterestCellItem* pvalue);

EXTERN int asn1PD_AreaOfInterestCellItem (OSCTXT* pctxt, AreaOfInterestCellItem* pvalue);

EXTERN void asn1Print_AreaOfInterestCellItem 
   (const char* name, const AreaOfInterestCellItem* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestCellItem (const char* name, 
   AreaOfInterestCellItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestCellItem (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestCellItem* pvalue);

EXTERN int asn1Init_AreaOfInterestCellItem (AreaOfInterestCellItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestCellList                                    */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestCellList ::= SEQUENCE (SIZE (1..maxnoofCellinAoI)) OF AreaOfInterestCellItem
*/
/* List of AreaOfInterestCellItem */
typedef OSRTDList AreaOfInterestCellList;

EXTERN int asn1PE_AreaOfInterestCellList (OSCTXT* pctxt, AreaOfInterestCellList* pvalue);

EXTERN int asn1PD_AreaOfInterestCellList (OSCTXT* pctxt, AreaOfInterestCellList* pvalue);

EXTERN void asn1Print_AreaOfInterestCellList 
   (const char* name, const AreaOfInterestCellList* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestCellList (const char* name, 
   AreaOfInterestCellList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestCellList (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestCellList* pvalue);

EXTERN int asn1Init_AreaOfInterestCellList (AreaOfInterestCellList* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestRANNodeItem_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestRANNodeItem'
*/
typedef struct EXTERN AreaOfInterestRANNodeItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AreaOfInterestRANNodeItem_iE_Extensions_element;

EXTERN int asn1PE_AreaOfInterestRANNodeItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestRANNodeItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AreaOfInterestRANNodeItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestRANNodeItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AreaOfInterestRANNodeItem_iE_Extensions_element 
   (const char* name, const AreaOfInterestRANNodeItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestRANNodeItem_iE_Extensions_element (
   const char* name, AreaOfInterestRANNodeItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestRANNodeItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestRANNodeItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AreaOfInterestRANNodeItem_iE_Extensions_element (
   AreaOfInterestRANNodeItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestRANNodeItem_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestRANNodeItem'
*/
/* List of AreaOfInterestRANNodeItem_iE_Extensions_element */
typedef OSRTDList AreaOfInterestRANNodeItem_iE_Extensions;

EXTERN int asn1PE_AreaOfInterestRANNodeItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestRANNodeItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AreaOfInterestRANNodeItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestRANNodeItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AreaOfInterestRANNodeItem_iE_Extensions 
   (const char* name, const AreaOfInterestRANNodeItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestRANNodeItem_iE_Extensions (const char* name, 
   AreaOfInterestRANNodeItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestRANNodeItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestRANNodeItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AreaOfInterestRANNodeItem_iE_Extensions_element* 
   asn1Get_AreaOfInterestRANNodeItem_iE_Extensions (ProtocolExtensionID id, 
   AreaOfInterestRANNodeItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AreaOfInterestRANNodeItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AreaOfInterestRANNodeItem_iE_Extensions* plist, 
   AreaOfInterestRANNodeItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AreaOfInterestRANNodeItem_iE_Extensions (
   AreaOfInterestRANNodeItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestRANNodeItem                                 */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestRANNodeItem ::= SEQUENCE {
   globalRANNodeID [0] EXPLICIT GlobalRANNodeID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AreaOfInterestRANNodeItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AreaOfInterestRANNodeItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AreaOfInterestRANNodeItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AreaOfInterestRANNodeItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GlobalRANNodeID globalRANNodeID;
   AreaOfInterestRANNodeItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AreaOfInterestRANNodeItem;

EXTERN int asn1PE_AreaOfInterestRANNodeItem (OSCTXT* pctxt, AreaOfInterestRANNodeItem* pvalue);

EXTERN int asn1PD_AreaOfInterestRANNodeItem (OSCTXT* pctxt, AreaOfInterestRANNodeItem* pvalue);

EXTERN void asn1Print_AreaOfInterestRANNodeItem 
   (const char* name, const AreaOfInterestRANNodeItem* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestRANNodeItem (const char* name, 
   AreaOfInterestRANNodeItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestRANNodeItem (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestRANNodeItem* pvalue);

EXTERN int asn1Init_AreaOfInterestRANNodeItem (AreaOfInterestRANNodeItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestRANNodeList                                 */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestRANNodeList ::= SEQUENCE (SIZE (1..maxnoofRANNodeinAoI)) OF AreaOfInterestRANNodeItem
*/
/* List of AreaOfInterestRANNodeItem */
typedef OSRTDList AreaOfInterestRANNodeList;

EXTERN int asn1PE_AreaOfInterestRANNodeList (OSCTXT* pctxt, AreaOfInterestRANNodeList* pvalue);

EXTERN int asn1PD_AreaOfInterestRANNodeList (OSCTXT* pctxt, AreaOfInterestRANNodeList* pvalue);

EXTERN void asn1Print_AreaOfInterestRANNodeList 
   (const char* name, const AreaOfInterestRANNodeList* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestRANNodeList (const char* name, 
   AreaOfInterestRANNodeList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestRANNodeList (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestRANNodeList* pvalue);

EXTERN int asn1Init_AreaOfInterestRANNodeList (AreaOfInterestRANNodeList* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterest_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterest'
*/
typedef struct EXTERN AreaOfInterest_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AreaOfInterest_iE_Extensions_element;

EXTERN int asn1PE_AreaOfInterest_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterest_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AreaOfInterest_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterest_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AreaOfInterest_iE_Extensions_element 
   (const char* name, const AreaOfInterest_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterest_iE_Extensions_element (const char* name, 
   AreaOfInterest_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterest_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AreaOfInterest_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AreaOfInterest_iE_Extensions_element (
   AreaOfInterest_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterest_iE_Extensions                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterest'
*/
/* List of AreaOfInterest_iE_Extensions_element */
typedef OSRTDList AreaOfInterest_iE_Extensions;

EXTERN int asn1PE_AreaOfInterest_iE_Extensions (OSCTXT* pctxt, AreaOfInterest_iE_Extensions* pvalue);

EXTERN int asn1PD_AreaOfInterest_iE_Extensions (OSCTXT* pctxt, AreaOfInterest_iE_Extensions* pvalue);

EXTERN void asn1Print_AreaOfInterest_iE_Extensions 
   (const char* name, const AreaOfInterest_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterest_iE_Extensions (const char* name, 
   AreaOfInterest_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterest_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AreaOfInterest_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AreaOfInterest_iE_Extensions_element* 
   asn1Get_AreaOfInterest_iE_Extensions (ProtocolExtensionID id, 
   AreaOfInterest_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AreaOfInterest_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AreaOfInterest_iE_Extensions* plist, 
   AreaOfInterest_iE_Extensions* pmatches);

EXTERN int asn1Init_AreaOfInterest_iE_Extensions (
   AreaOfInterest_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterest                                            */
/*                                                            */
/**************************************************************/
/*
AreaOfInterest ::= SEQUENCE {
   areaOfInterestTAIList [0] AreaOfInterestTAIList OPTIONAL,
   areaOfInterestCellList [1] AreaOfInterestCellList OPTIONAL,
   areaOfInterestRANNodeList [2] AreaOfInterestRANNodeList OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AreaOfInterest-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AreaOfInterest-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AreaOfInterest-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AreaOfInterest {
   struct {
      unsigned areaOfInterestTAIListPresent : 1;
      unsigned areaOfInterestCellListPresent : 1;
      unsigned areaOfInterestRANNodeListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AreaOfInterestTAIList areaOfInterestTAIList;
   AreaOfInterestCellList areaOfInterestCellList;
   AreaOfInterestRANNodeList areaOfInterestRANNodeList;
   AreaOfInterest_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AreaOfInterest;

EXTERN int asn1PE_AreaOfInterest (OSCTXT* pctxt, AreaOfInterest* pvalue);

EXTERN int asn1PD_AreaOfInterest (OSCTXT* pctxt, AreaOfInterest* pvalue);

EXTERN void asn1Print_AreaOfInterest (const char* name, const AreaOfInterest* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterest (const char* name, AreaOfInterest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterest (OSCTXT *pctxt, 
   const char* name, const AreaOfInterest* pvalue);

EXTERN int asn1Init_AreaOfInterest (AreaOfInterest* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestItem_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestItem'
*/
typedef struct EXTERN AreaOfInterestItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AreaOfInterestItem_iE_Extensions_element;

EXTERN int asn1PE_AreaOfInterestItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AreaOfInterestItem_iE_Extensions_element (OSCTXT* pctxt, AreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AreaOfInterestItem_iE_Extensions_element 
   (const char* name, const AreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestItem_iE_Extensions_element (const char* name, 
   AreaOfInterestItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AreaOfInterestItem_iE_Extensions_element (
   AreaOfInterestItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestItem_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AreaOfInterestItem'
*/
/* List of AreaOfInterestItem_iE_Extensions_element */
typedef OSRTDList AreaOfInterestItem_iE_Extensions;

EXTERN int asn1PE_AreaOfInterestItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AreaOfInterestItem_iE_Extensions (OSCTXT* pctxt, AreaOfInterestItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AreaOfInterestItem_iE_Extensions 
   (const char* name, const AreaOfInterestItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestItem_iE_Extensions (const char* name, 
   AreaOfInterestItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AreaOfInterestItem_iE_Extensions_element* 
   asn1Get_AreaOfInterestItem_iE_Extensions (ProtocolExtensionID id, 
   AreaOfInterestItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AreaOfInterestItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AreaOfInterestItem_iE_Extensions* plist, 
   AreaOfInterestItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AreaOfInterestItem_iE_Extensions (
   AreaOfInterestItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestItem                                        */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestItem ::= SEQUENCE {
   areaOfInterest [0] AreaOfInterest,
   locationReportingReferenceID [1] LocationReportingReferenceID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AreaOfInterestItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AreaOfInterestItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AreaOfInterestItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AreaOfInterestItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AreaOfInterest areaOfInterest;
   LocationReportingReferenceID locationReportingReferenceID;
   AreaOfInterestItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AreaOfInterestItem;

EXTERN int asn1PE_AreaOfInterestItem (OSCTXT* pctxt, AreaOfInterestItem* pvalue);

EXTERN int asn1PD_AreaOfInterestItem (OSCTXT* pctxt, AreaOfInterestItem* pvalue);

EXTERN void asn1Print_AreaOfInterestItem 
   (const char* name, const AreaOfInterestItem* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestItem (const char* name, 
   AreaOfInterestItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestItem (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestItem* pvalue);

EXTERN int asn1Init_AreaOfInterestItem (AreaOfInterestItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOfInterestList                                        */
/*                                                            */
/**************************************************************/
/*
AreaOfInterestList ::= SEQUENCE (SIZE (1..maxnoofAoI)) OF AreaOfInterestItem
*/
/* List of AreaOfInterestItem */
typedef OSRTDList AreaOfInterestList;

EXTERN int asn1PE_AreaOfInterestList (OSCTXT* pctxt, AreaOfInterestList* pvalue);

EXTERN int asn1PD_AreaOfInterestList (OSCTXT* pctxt, AreaOfInterestList* pvalue);

EXTERN void asn1Print_AreaOfInterestList 
   (const char* name, const AreaOfInterestList* pvalue);

EXTERN int asn1PrtToStr_AreaOfInterestList (const char* name, 
   AreaOfInterestList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AreaOfInterestList (OSCTXT *pctxt, 
   const char* name, const AreaOfInterestList* pvalue);

EXTERN int asn1Init_AreaOfInterestList (AreaOfInterestList* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellItem_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellItem'
*/
typedef struct EXTERN RecommendedCellItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} RecommendedCellItem_iE_Extensions_element;

EXTERN int asn1PE_RecommendedCellItem_iE_Extensions_element (OSCTXT* pctxt, RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RecommendedCellItem_iE_Extensions_element (OSCTXT* pctxt, RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_RecommendedCellItem_iE_Extensions_element 
   (const char* name, const RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_RecommendedCellItem_iE_Extensions_element (const char* name, 
   RecommendedCellItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedCellItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const RecommendedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_RecommendedCellItem_iE_Extensions_element (
   RecommendedCellItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellItem_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellItem'
*/
/* List of RecommendedCellItem_iE_Extensions_element */
typedef OSRTDList RecommendedCellItem_iE_Extensions;

EXTERN int asn1PE_RecommendedCellItem_iE_Extensions (OSCTXT* pctxt, RecommendedCellItem_iE_Extensions* pvalue);

EXTERN int asn1PD_RecommendedCellItem_iE_Extensions (OSCTXT* pctxt, RecommendedCellItem_iE_Extensions* pvalue);

EXTERN void asn1Print_RecommendedCellItem_iE_Extensions 
   (const char* name, const RecommendedCellItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_RecommendedCellItem_iE_Extensions (const char* name, 
   RecommendedCellItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedCellItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const RecommendedCellItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct RecommendedCellItem_iE_Extensions_element* 
   asn1Get_RecommendedCellItem_iE_Extensions (ProtocolExtensionID id, 
   RecommendedCellItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RecommendedCellItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   RecommendedCellItem_iE_Extensions* plist, 
   RecommendedCellItem_iE_Extensions* pmatches);

EXTERN int asn1Init_RecommendedCellItem_iE_Extensions (
   RecommendedCellItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellItem                                       */
/*                                                            */
/**************************************************************/
/*
RecommendedCellItem ::= SEQUENCE {
   nGRAN-CGI [0] EXPLICIT NGRAN-CGI,
   timeStayedInCell [1] INTEGER (0..4095) OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({RecommendedCellItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({RecommendedCellItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({RecommendedCellItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN RecommendedCellItem {
   struct {
      unsigned timeStayedInCellPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NGRAN_CGI nGRAN_CGI;
   OSUINT16 timeStayedInCell;
   RecommendedCellItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} RecommendedCellItem;

EXTERN int asn1PE_RecommendedCellItem (OSCTXT* pctxt, RecommendedCellItem* pvalue);

EXTERN int asn1PD_RecommendedCellItem (OSCTXT* pctxt, RecommendedCellItem* pvalue);

EXTERN void asn1Print_RecommendedCellItem 
   (const char* name, const RecommendedCellItem* pvalue);

EXTERN int asn1PrtToStr_RecommendedCellItem (const char* name, 
   RecommendedCellItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedCellItem (OSCTXT *pctxt, 
   const char* name, const RecommendedCellItem* pvalue);

EXTERN int asn1Init_RecommendedCellItem (RecommendedCellItem* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellList                                       */
/*                                                            */
/**************************************************************/
/*
RecommendedCellList ::= SEQUENCE (SIZE (1..maxnoofRecommendedCells)) OF RecommendedCellItem
*/
/* List of RecommendedCellItem */
typedef OSRTDList RecommendedCellList;

EXTERN int asn1PE_RecommendedCellList (OSCTXT* pctxt, RecommendedCellList* pvalue);

EXTERN int asn1PD_RecommendedCellList (OSCTXT* pctxt, RecommendedCellList* pvalue);

EXTERN void asn1Print_RecommendedCellList 
   (const char* name, const RecommendedCellList* pvalue);

EXTERN int asn1PrtToStr_RecommendedCellList (const char* name, 
   RecommendedCellList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedCellList (OSCTXT *pctxt, 
   const char* name, const RecommendedCellList* pvalue);

EXTERN int asn1Init_RecommendedCellList (RecommendedCellList* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellsForPaging_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellsForPaging'
*/
typedef struct EXTERN RecommendedCellsForPaging_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} RecommendedCellsForPaging_iE_Extensions_element;

EXTERN int asn1PE_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT* pctxt, RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT* pctxt, RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_RecommendedCellsForPaging_iE_Extensions_element 
   (const char* name, const RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_RecommendedCellsForPaging_iE_Extensions_element (
   const char* name, RecommendedCellsForPaging_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedCellsForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const RecommendedCellsForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1Init_RecommendedCellsForPaging_iE_Extensions_element (
   RecommendedCellsForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellsForPaging_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedCellsForPaging'
*/
/* List of RecommendedCellsForPaging_iE_Extensions_element */
typedef OSRTDList RecommendedCellsForPaging_iE_Extensions;

EXTERN int asn1PE_RecommendedCellsForPaging_iE_Extensions (OSCTXT* pctxt, RecommendedCellsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_RecommendedCellsForPaging_iE_Extensions (OSCTXT* pctxt, RecommendedCellsForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_RecommendedCellsForPaging_iE_Extensions 
   (const char* name, const RecommendedCellsForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_RecommendedCellsForPaging_iE_Extensions (const char* name, 
   RecommendedCellsForPaging_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedCellsForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const RecommendedCellsForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct RecommendedCellsForPaging_iE_Extensions_element* 
   asn1Get_RecommendedCellsForPaging_iE_Extensions (ProtocolExtensionID id, 
   RecommendedCellsForPaging_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RecommendedCellsForPaging_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   RecommendedCellsForPaging_iE_Extensions* plist, 
   RecommendedCellsForPaging_iE_Extensions* pmatches);

EXTERN int asn1Init_RecommendedCellsForPaging_iE_Extensions (
   RecommendedCellsForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedCellsForPaging                                 */
/*                                                            */
/**************************************************************/
/*
RecommendedCellsForPaging ::= SEQUENCE {
   recommendedCellList [0] RecommendedCellList,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({RecommendedCellsForPaging-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({RecommendedCellsForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({RecommendedCellsForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN RecommendedCellsForPaging {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RecommendedCellList recommendedCellList;
   RecommendedCellsForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} RecommendedCellsForPaging;

EXTERN int asn1PE_RecommendedCellsForPaging (OSCTXT* pctxt, RecommendedCellsForPaging* pvalue);

EXTERN int asn1PD_RecommendedCellsForPaging (OSCTXT* pctxt, RecommendedCellsForPaging* pvalue);

EXTERN void asn1Print_RecommendedCellsForPaging 
   (const char* name, const RecommendedCellsForPaging* pvalue);

EXTERN int asn1PrtToStr_RecommendedCellsForPaging (const char* name, 
   RecommendedCellsForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedCellsForPaging (OSCTXT *pctxt, 
   const char* name, const RecommendedCellsForPaging* pvalue);

EXTERN int asn1Init_RecommendedCellsForPaging (RecommendedCellsForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForRecommendedCells_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForRecommendedCells'
*/
typedef struct EXTERN AssistanceDataForRecommendedCells_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AssistanceDataForRecommendedCells_iE_Extensions_element;

EXTERN int asn1PE_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT* pctxt, AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT* pctxt, AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AssistanceDataForRecommendedCells_iE_Extensions_element 
   (const char* name, const AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AssistanceDataForRecommendedCells_iE_Extensions_element (
   const char* name, 
   AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssistanceDataForRecommendedCells_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AssistanceDataForRecommendedCells_iE_Extensions_element (
   AssistanceDataForRecommendedCells_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForRecommendedCells_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForRecommendedCells'
*/
/* List of AssistanceDataForRecommendedCells_iE_Extensions_element */
typedef OSRTDList AssistanceDataForRecommendedCells_iE_Extensions;

EXTERN int asn1PE_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT* pctxt, AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

EXTERN int asn1PD_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT* pctxt, AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

EXTERN void asn1Print_AssistanceDataForRecommendedCells_iE_Extensions 
   (const char* name, const AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AssistanceDataForRecommendedCells_iE_Extensions (
   const char* name, AssistanceDataForRecommendedCells_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssistanceDataForRecommendedCells_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AssistanceDataForRecommendedCells_iE_Extensions_element* 
   asn1Get_AssistanceDataForRecommendedCells_iE_Extensions 
   (ProtocolExtensionID id, 
   AssistanceDataForRecommendedCells_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AssistanceDataForRecommendedCells_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AssistanceDataForRecommendedCells_iE_Extensions* plist, 
   AssistanceDataForRecommendedCells_iE_Extensions* pmatches);

EXTERN int asn1Init_AssistanceDataForRecommendedCells_iE_Extensions (
   AssistanceDataForRecommendedCells_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForRecommendedCells                         */
/*                                                            */
/**************************************************************/
/*
AssistanceDataForRecommendedCells ::= SEQUENCE {
   recommendedCellsForPaging [0] RecommendedCellsForPaging,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AssistanceDataForRecommendedCells-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AssistanceDataForRecommendedCells-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AssistanceDataForRecommendedCells-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AssistanceDataForRecommendedCells {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RecommendedCellsForPaging recommendedCellsForPaging;
   AssistanceDataForRecommendedCells_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AssistanceDataForRecommendedCells;

EXTERN int asn1PE_AssistanceDataForRecommendedCells (OSCTXT* pctxt, AssistanceDataForRecommendedCells* pvalue);

EXTERN int asn1PD_AssistanceDataForRecommendedCells (OSCTXT* pctxt, AssistanceDataForRecommendedCells* pvalue);

EXTERN void asn1Print_AssistanceDataForRecommendedCells 
   (const char* name, const AssistanceDataForRecommendedCells* pvalue);

EXTERN int asn1PrtToStr_AssistanceDataForRecommendedCells (const char* name, 
   AssistanceDataForRecommendedCells* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssistanceDataForRecommendedCells (OSCTXT *pctxt, 
   const char* name, const AssistanceDataForRecommendedCells* pvalue);

EXTERN int asn1Init_AssistanceDataForRecommendedCells (
   AssistanceDataForRecommendedCells* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingAttemptInformation_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PagingAttemptInformation'
*/
typedef struct EXTERN PagingAttemptInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PagingAttemptInformation_iE_Extensions_element;

EXTERN int asn1PE_PagingAttemptInformation_iE_Extensions_element (OSCTXT* pctxt, PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PagingAttemptInformation_iE_Extensions_element (OSCTXT* pctxt, PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PagingAttemptInformation_iE_Extensions_element 
   (const char* name, const PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PagingAttemptInformation_iE_Extensions_element (
   const char* name, PagingAttemptInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PagingAttemptInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PagingAttemptInformation_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PagingAttemptInformation_iE_Extensions_element (
   PagingAttemptInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingAttemptInformation_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PagingAttemptInformation'
*/
/* List of PagingAttemptInformation_iE_Extensions_element */
typedef OSRTDList PagingAttemptInformation_iE_Extensions;

EXTERN int asn1PE_PagingAttemptInformation_iE_Extensions (OSCTXT* pctxt, PagingAttemptInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_PagingAttemptInformation_iE_Extensions (OSCTXT* pctxt, PagingAttemptInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_PagingAttemptInformation_iE_Extensions 
   (const char* name, const PagingAttemptInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PagingAttemptInformation_iE_Extensions (const char* name, 
   PagingAttemptInformation_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PagingAttemptInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PagingAttemptInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PagingAttemptInformation_iE_Extensions_element* 
   asn1Get_PagingAttemptInformation_iE_Extensions (ProtocolExtensionID id, 
   PagingAttemptInformation_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PagingAttemptInformation_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PagingAttemptInformation_iE_Extensions* plist, 
   PagingAttemptInformation_iE_Extensions* pmatches);

EXTERN int asn1Init_PagingAttemptInformation_iE_Extensions (
   PagingAttemptInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingAttemptInformation                                  */
/*                                                            */
/**************************************************************/
/*
PagingAttemptInformation ::= SEQUENCE {
   pagingAttemptCount [0] PagingAttemptCount,
   intendedNumberOfPagingAttempts [1] IntendedNumberOfPagingAttempts,
   nextPagingAreaScope [2] NextPagingAreaScope OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PagingAttemptInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PagingAttemptInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PagingAttemptInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PagingAttemptInformation {
   struct {
      unsigned nextPagingAreaScopePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PagingAttemptCount pagingAttemptCount;
   IntendedNumberOfPagingAttempts intendedNumberOfPagingAttempts;
   NextPagingAreaScope nextPagingAreaScope;
   PagingAttemptInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PagingAttemptInformation;

EXTERN int asn1PE_PagingAttemptInformation (OSCTXT* pctxt, PagingAttemptInformation* pvalue);

EXTERN int asn1PD_PagingAttemptInformation (OSCTXT* pctxt, PagingAttemptInformation* pvalue);

EXTERN void asn1Print_PagingAttemptInformation 
   (const char* name, const PagingAttemptInformation* pvalue);

EXTERN int asn1PrtToStr_PagingAttemptInformation (const char* name, 
   PagingAttemptInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PagingAttemptInformation (OSCTXT *pctxt, 
   const char* name, const PagingAttemptInformation* pvalue);

EXTERN int asn1Init_PagingAttemptInformation (PagingAttemptInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForPaging_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForPaging'
*/
typedef struct EXTERN AssistanceDataForPaging_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AssistanceDataForPaging_iE_Extensions_element;

EXTERN int asn1PE_AssistanceDataForPaging_iE_Extensions_element (OSCTXT* pctxt, AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AssistanceDataForPaging_iE_Extensions_element (OSCTXT* pctxt, AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AssistanceDataForPaging_iE_Extensions_element 
   (const char* name, const AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AssistanceDataForPaging_iE_Extensions_element (
   const char* name, AssistanceDataForPaging_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssistanceDataForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AssistanceDataForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AssistanceDataForPaging_iE_Extensions_element (
   AssistanceDataForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForPaging_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssistanceDataForPaging'
*/
/* List of AssistanceDataForPaging_iE_Extensions_element */
typedef OSRTDList AssistanceDataForPaging_iE_Extensions;

EXTERN int asn1PE_AssistanceDataForPaging_iE_Extensions (OSCTXT* pctxt, AssistanceDataForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_AssistanceDataForPaging_iE_Extensions (OSCTXT* pctxt, AssistanceDataForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_AssistanceDataForPaging_iE_Extensions 
   (const char* name, const AssistanceDataForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AssistanceDataForPaging_iE_Extensions (const char* name, 
   AssistanceDataForPaging_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssistanceDataForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AssistanceDataForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AssistanceDataForPaging_iE_Extensions_element* 
   asn1Get_AssistanceDataForPaging_iE_Extensions (ProtocolExtensionID id, 
   AssistanceDataForPaging_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AssistanceDataForPaging_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AssistanceDataForPaging_iE_Extensions* plist, 
   AssistanceDataForPaging_iE_Extensions* pmatches);

EXTERN int asn1Init_AssistanceDataForPaging_iE_Extensions (
   AssistanceDataForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AssistanceDataForPaging                                   */
/*                                                            */
/**************************************************************/
/*
AssistanceDataForPaging ::= SEQUENCE {
   assistanceDataForRecommendedCells [0] AssistanceDataForRecommendedCells OPTIONAL,
   pagingAttemptInformation [1] PagingAttemptInformation OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AssistanceDataForPaging-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AssistanceDataForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AssistanceDataForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AssistanceDataForPaging {
   struct {
      unsigned assistanceDataForRecommendedCellsPresent : 1;
      unsigned pagingAttemptInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AssistanceDataForRecommendedCells assistanceDataForRecommendedCells;
   PagingAttemptInformation pagingAttemptInformation;
   AssistanceDataForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AssistanceDataForPaging;

EXTERN int asn1PE_AssistanceDataForPaging (OSCTXT* pctxt, AssistanceDataForPaging* pvalue);

EXTERN int asn1PD_AssistanceDataForPaging (OSCTXT* pctxt, AssistanceDataForPaging* pvalue);

EXTERN void asn1Print_AssistanceDataForPaging 
   (const char* name, const AssistanceDataForPaging* pvalue);

EXTERN int asn1PrtToStr_AssistanceDataForPaging (const char* name, 
   AssistanceDataForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssistanceDataForPaging (OSCTXT *pctxt, 
   const char* name, const AssistanceDataForPaging* pvalue);

EXTERN int asn1Init_AssistanceDataForPaging (AssistanceDataForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  AssociatedQosFlowItem_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssociatedQosFlowItem'
*/
typedef struct EXTERN AssociatedQosFlowItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} AssociatedQosFlowItem_iE_Extensions_element;

EXTERN int asn1PE_AssociatedQosFlowItem_iE_Extensions_element (OSCTXT* pctxt, AssociatedQosFlowItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_AssociatedQosFlowItem_iE_Extensions_element (OSCTXT* pctxt, AssociatedQosFlowItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_AssociatedQosFlowItem_iE_Extensions_element 
   (const char* name, const AssociatedQosFlowItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_AssociatedQosFlowItem_iE_Extensions_element (
   const char* name, AssociatedQosFlowItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssociatedQosFlowItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const AssociatedQosFlowItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_AssociatedQosFlowItem_iE_Extensions_element (
   AssociatedQosFlowItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  AssociatedQosFlowItem_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AssociatedQosFlowItem'
*/
/* List of AssociatedQosFlowItem_iE_Extensions_element */
typedef OSRTDList AssociatedQosFlowItem_iE_Extensions;

EXTERN int asn1PE_AssociatedQosFlowItem_iE_Extensions (OSCTXT* pctxt, AssociatedQosFlowItem_iE_Extensions* pvalue);

EXTERN int asn1PD_AssociatedQosFlowItem_iE_Extensions (OSCTXT* pctxt, AssociatedQosFlowItem_iE_Extensions* pvalue);

EXTERN void asn1Print_AssociatedQosFlowItem_iE_Extensions 
   (const char* name, const AssociatedQosFlowItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_AssociatedQosFlowItem_iE_Extensions (const char* name, 
   AssociatedQosFlowItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssociatedQosFlowItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const AssociatedQosFlowItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct AssociatedQosFlowItem_iE_Extensions_element* 
   asn1Get_AssociatedQosFlowItem_iE_Extensions (ProtocolExtensionID id, 
   AssociatedQosFlowItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_AssociatedQosFlowItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   AssociatedQosFlowItem_iE_Extensions* plist, 
   AssociatedQosFlowItem_iE_Extensions* pmatches);

EXTERN int asn1Init_AssociatedQosFlowItem_iE_Extensions (
   AssociatedQosFlowItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  AssociatedQosFlowItem                                     */
/*                                                            */
/**************************************************************/
/*
AssociatedQosFlowItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   qosFlowMappingIndication [1] ENUMERATED { ul(0), dl(1), ... } OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({AssociatedQosFlowItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({AssociatedQosFlowItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({AssociatedQosFlowItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN AssociatedQosFlowItem {
   struct {
      unsigned qosFlowMappingIndicationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   AssociatedQosFlowItem_qosFlowMappingIndication qosFlowMappingIndication;
   AssociatedQosFlowItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} AssociatedQosFlowItem;

EXTERN int asn1PE_AssociatedQosFlowItem (OSCTXT* pctxt, AssociatedQosFlowItem* pvalue);

EXTERN int asn1PD_AssociatedQosFlowItem (OSCTXT* pctxt, AssociatedQosFlowItem* pvalue);

EXTERN void asn1Print_AssociatedQosFlowItem 
   (const char* name, const AssociatedQosFlowItem* pvalue);

EXTERN int asn1PrtToStr_AssociatedQosFlowItem (const char* name, 
   AssociatedQosFlowItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssociatedQosFlowItem (OSCTXT *pctxt, 
   const char* name, const AssociatedQosFlowItem* pvalue);

EXTERN int asn1Init_AssociatedQosFlowItem (AssociatedQosFlowItem* pvalue);

/**************************************************************/
/*                                                            */
/*  AssociatedQosFlowList                                     */
/*                                                            */
/**************************************************************/
/*
AssociatedQosFlowList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF AssociatedQosFlowItem
*/
/* List of AssociatedQosFlowItem */
typedef OSRTDList AssociatedQosFlowList;

EXTERN int asn1PE_AssociatedQosFlowList (OSCTXT* pctxt, AssociatedQosFlowList* pvalue);

EXTERN int asn1PD_AssociatedQosFlowList (OSCTXT* pctxt, AssociatedQosFlowList* pvalue);

EXTERN void asn1Print_AssociatedQosFlowList 
   (const char* name, const AssociatedQosFlowList* pvalue);

EXTERN int asn1PrtToStr_AssociatedQosFlowList (const char* name, 
   AssociatedQosFlowList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AssociatedQosFlowList (OSCTXT *pctxt, 
   const char* name, const AssociatedQosFlowList* pvalue);

EXTERN int asn1Init_AssociatedQosFlowList (AssociatedQosFlowList* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledEUTRA_Item_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDCancelledEUTRA-Item'
*/
typedef struct EXTERN CellIDCancelledEUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CellIDCancelledEUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_CellIDCancelledEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CellIDCancelledEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CellIDCancelledEUTRA_Item_iE_Extensions_element 
   (const char* name, const CellIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledEUTRA_Item_iE_Extensions_element (
   const char* name, CellIDCancelledEUTRA_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledEUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CellIDCancelledEUTRA_Item_iE_Extensions_element (
   CellIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledEUTRA_Item_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDCancelledEUTRA-Item'
*/
/* List of CellIDCancelledEUTRA_Item_iE_Extensions_element */
typedef OSRTDList CellIDCancelledEUTRA_Item_iE_Extensions;

EXTERN int asn1PE_CellIDCancelledEUTRA_Item_iE_Extensions (OSCTXT* pctxt, CellIDCancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CellIDCancelledEUTRA_Item_iE_Extensions (OSCTXT* pctxt, CellIDCancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CellIDCancelledEUTRA_Item_iE_Extensions 
   (const char* name, const CellIDCancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledEUTRA_Item_iE_Extensions (const char* name, 
   CellIDCancelledEUTRA_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledEUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledEUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CellIDCancelledEUTRA_Item_iE_Extensions_element* 
   asn1Get_CellIDCancelledEUTRA_Item_iE_Extensions (ProtocolExtensionID id, 
   CellIDCancelledEUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CellIDCancelledEUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CellIDCancelledEUTRA_Item_iE_Extensions* plist, 
   CellIDCancelledEUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CellIDCancelledEUTRA_Item_iE_Extensions (
   CellIDCancelledEUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledEUTRA_Item                                 */
/*                                                            */
/**************************************************************/
/*
CellIDCancelledEUTRA-Item ::= SEQUENCE {
   eUTRA-CGI [0] EUTRA-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CellIDCancelledEUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CellIDCancelledEUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CellIDCancelledEUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CellIDCancelledEUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EUTRA_CGI eUTRA_CGI;
   NumberOfBroadcasts numberOfBroadcasts;
   CellIDCancelledEUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CellIDCancelledEUTRA_Item;

EXTERN int asn1PE_CellIDCancelledEUTRA_Item (OSCTXT* pctxt, CellIDCancelledEUTRA_Item* pvalue);

EXTERN int asn1PD_CellIDCancelledEUTRA_Item (OSCTXT* pctxt, CellIDCancelledEUTRA_Item* pvalue);

EXTERN void asn1Print_CellIDCancelledEUTRA_Item 
   (const char* name, const CellIDCancelledEUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledEUTRA_Item (const char* name, 
   CellIDCancelledEUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledEUTRA_Item (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledEUTRA_Item* pvalue);

EXTERN int asn1Init_CellIDCancelledEUTRA_Item (CellIDCancelledEUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledEUTRA                                      */
/*                                                            */
/**************************************************************/
/*
CellIDCancelledEUTRA ::= SEQUENCE (SIZE (1..maxnoofCellIDforWarning)) OF CellIDCancelledEUTRA-Item
*/
/* List of CellIDCancelledEUTRA_Item */
typedef OSRTDList CellIDCancelledEUTRA;

EXTERN int asn1PE_CellIDCancelledEUTRA (OSCTXT* pctxt, CellIDCancelledEUTRA* pvalue);

EXTERN int asn1PD_CellIDCancelledEUTRA (OSCTXT* pctxt, CellIDCancelledEUTRA* pvalue);

EXTERN void asn1Print_CellIDCancelledEUTRA 
   (const char* name, const CellIDCancelledEUTRA* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledEUTRA (const char* name, 
   CellIDCancelledEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledEUTRA (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledEUTRA* pvalue);

EXTERN int asn1Init_CellIDCancelledEUTRA (CellIDCancelledEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInTAI-EUTRA-Item'
*/
typedef struct EXTERN CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element 
   (const char* name, const CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element (
   const char* name, 
   CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element (
   CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_EUTRA_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInTAI-EUTRA-Item'
*/
/* List of CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element */
typedef OSRTDList CancelledCellsInTAI_EUTRA_Item_iE_Extensions;

EXTERN int asn1PE_CancelledCellsInTAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_EUTRA_Item_iE_Extensions 
   (const char* name, const CancelledCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_EUTRA_Item_iE_Extensions (
   const char* name, CancelledCellsInTAI_EUTRA_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_EUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CancelledCellsInTAI_EUTRA_Item_iE_Extensions_element* 
   asn1Get_CancelledCellsInTAI_EUTRA_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   CancelledCellsInTAI_EUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CancelledCellsInTAI_EUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CancelledCellsInTAI_EUTRA_Item_iE_Extensions* plist, 
   CancelledCellsInTAI_EUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CancelledCellsInTAI_EUTRA_Item_iE_Extensions (
   CancelledCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_EUTRA_Item                            */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInTAI-EUTRA-Item ::= SEQUENCE {
   eUTRA-CGI [0] EUTRA-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CancelledCellsInTAI-EUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CancelledCellsInTAI-EUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CancelledCellsInTAI-EUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CancelledCellsInTAI_EUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EUTRA_CGI eUTRA_CGI;
   NumberOfBroadcasts numberOfBroadcasts;
   CancelledCellsInTAI_EUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CancelledCellsInTAI_EUTRA_Item;

EXTERN int asn1PE_CancelledCellsInTAI_EUTRA_Item (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA_Item* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_EUTRA_Item (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA_Item* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_EUTRA_Item 
   (const char* name, const CancelledCellsInTAI_EUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_EUTRA_Item (const char* name, 
   CancelledCellsInTAI_EUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_EUTRA_Item (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_EUTRA_Item* pvalue);

EXTERN int asn1Init_CancelledCellsInTAI_EUTRA_Item (
   CancelledCellsInTAI_EUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_EUTRA                                 */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInTAI-EUTRA ::= SEQUENCE (SIZE (1..maxnoofCellinTAI)) OF CancelledCellsInTAI-EUTRA-Item
*/
/* List of CancelledCellsInTAI_EUTRA_Item */
typedef OSRTDList CancelledCellsInTAI_EUTRA;

EXTERN int asn1PE_CancelledCellsInTAI_EUTRA (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_EUTRA (OSCTXT* pctxt, CancelledCellsInTAI_EUTRA* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_EUTRA 
   (const char* name, const CancelledCellsInTAI_EUTRA* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_EUTRA (const char* name, 
   CancelledCellsInTAI_EUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_EUTRA (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_EUTRA* pvalue);

EXTERN int asn1Init_CancelledCellsInTAI_EUTRA (CancelledCellsInTAI_EUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledEUTRA_Item_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAICancelledEUTRA-Item'
*/
typedef struct EXTERN TAICancelledEUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TAICancelledEUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_TAICancelledEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, TAICancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TAICancelledEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, TAICancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TAICancelledEUTRA_Item_iE_Extensions_element 
   (const char* name, const TAICancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TAICancelledEUTRA_Item_iE_Extensions_element (
   const char* name, TAICancelledEUTRA_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledEUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TAICancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TAICancelledEUTRA_Item_iE_Extensions_element (
   TAICancelledEUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledEUTRA_Item_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAICancelledEUTRA-Item'
*/
/* List of TAICancelledEUTRA_Item_iE_Extensions_element */
typedef OSRTDList TAICancelledEUTRA_Item_iE_Extensions;

EXTERN int asn1PE_TAICancelledEUTRA_Item_iE_Extensions (OSCTXT* pctxt, TAICancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_TAICancelledEUTRA_Item_iE_Extensions (OSCTXT* pctxt, TAICancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_TAICancelledEUTRA_Item_iE_Extensions 
   (const char* name, const TAICancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TAICancelledEUTRA_Item_iE_Extensions (const char* name, 
   TAICancelledEUTRA_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledEUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TAICancelledEUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TAICancelledEUTRA_Item_iE_Extensions_element* 
   asn1Get_TAICancelledEUTRA_Item_iE_Extensions (ProtocolExtensionID id, 
   TAICancelledEUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TAICancelledEUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TAICancelledEUTRA_Item_iE_Extensions* plist, 
   TAICancelledEUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_TAICancelledEUTRA_Item_iE_Extensions (
   TAICancelledEUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledEUTRA_Item                                    */
/*                                                            */
/**************************************************************/
/*
TAICancelledEUTRA-Item ::= SEQUENCE {
   tAI [0] TAI,
   cancelledCellsInTAI-EUTRA [1] CancelledCellsInTAI-EUTRA,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TAICancelledEUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TAICancelledEUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TAICancelledEUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TAICancelledEUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAI tAI;
   CancelledCellsInTAI_EUTRA cancelledCellsInTAI_EUTRA;
   TAICancelledEUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TAICancelledEUTRA_Item;

EXTERN int asn1PE_TAICancelledEUTRA_Item (OSCTXT* pctxt, TAICancelledEUTRA_Item* pvalue);

EXTERN int asn1PD_TAICancelledEUTRA_Item (OSCTXT* pctxt, TAICancelledEUTRA_Item* pvalue);

EXTERN void asn1Print_TAICancelledEUTRA_Item 
   (const char* name, const TAICancelledEUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_TAICancelledEUTRA_Item (const char* name, 
   TAICancelledEUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledEUTRA_Item (OSCTXT *pctxt, 
   const char* name, const TAICancelledEUTRA_Item* pvalue);

EXTERN int asn1Init_TAICancelledEUTRA_Item (TAICancelledEUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledEUTRA                                         */
/*                                                            */
/**************************************************************/
/*
TAICancelledEUTRA ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAICancelledEUTRA-Item
*/
/* List of TAICancelledEUTRA_Item */
typedef OSRTDList TAICancelledEUTRA;

EXTERN int asn1PE_TAICancelledEUTRA (OSCTXT* pctxt, TAICancelledEUTRA* pvalue);

EXTERN int asn1PD_TAICancelledEUTRA (OSCTXT* pctxt, TAICancelledEUTRA* pvalue);

EXTERN void asn1Print_TAICancelledEUTRA 
   (const char* name, const TAICancelledEUTRA* pvalue);

EXTERN int asn1PrtToStr_TAICancelledEUTRA (const char* name, 
   TAICancelledEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledEUTRA (OSCTXT *pctxt, 
   const char* name, const TAICancelledEUTRA* pvalue);

EXTERN int asn1Init_TAICancelledEUTRA (TAICancelledEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInEAI-EUTRA-Item'
*/
typedef struct EXTERN CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element 
   (const char* name, const CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element (
   const char* name, 
   CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element (
   CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_EUTRA_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInEAI-EUTRA-Item'
*/
/* List of CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element */
typedef OSRTDList CancelledCellsInEAI_EUTRA_Item_iE_Extensions;

EXTERN int asn1PE_CancelledCellsInEAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_EUTRA_Item_iE_Extensions 
   (const char* name, const CancelledCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_EUTRA_Item_iE_Extensions (
   const char* name, CancelledCellsInEAI_EUTRA_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_EUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CancelledCellsInEAI_EUTRA_Item_iE_Extensions_element* 
   asn1Get_CancelledCellsInEAI_EUTRA_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   CancelledCellsInEAI_EUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CancelledCellsInEAI_EUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CancelledCellsInEAI_EUTRA_Item_iE_Extensions* plist, 
   CancelledCellsInEAI_EUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CancelledCellsInEAI_EUTRA_Item_iE_Extensions (
   CancelledCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_EUTRA_Item                            */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInEAI-EUTRA-Item ::= SEQUENCE {
   eUTRA-CGI [0] EUTRA-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CancelledCellsInEAI-EUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CancelledCellsInEAI-EUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CancelledCellsInEAI-EUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CancelledCellsInEAI_EUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EUTRA_CGI eUTRA_CGI;
   NumberOfBroadcasts numberOfBroadcasts;
   CancelledCellsInEAI_EUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CancelledCellsInEAI_EUTRA_Item;

EXTERN int asn1PE_CancelledCellsInEAI_EUTRA_Item (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA_Item* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_EUTRA_Item (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA_Item* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_EUTRA_Item 
   (const char* name, const CancelledCellsInEAI_EUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_EUTRA_Item (const char* name, 
   CancelledCellsInEAI_EUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_EUTRA_Item (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_EUTRA_Item* pvalue);

EXTERN int asn1Init_CancelledCellsInEAI_EUTRA_Item (
   CancelledCellsInEAI_EUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_EUTRA                                 */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInEAI-EUTRA ::= SEQUENCE (SIZE (1..maxnoofCellinEAI)) OF CancelledCellsInEAI-EUTRA-Item
*/
/* List of CancelledCellsInEAI_EUTRA_Item */
typedef OSRTDList CancelledCellsInEAI_EUTRA;

EXTERN int asn1PE_CancelledCellsInEAI_EUTRA (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_EUTRA (OSCTXT* pctxt, CancelledCellsInEAI_EUTRA* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_EUTRA 
   (const char* name, const CancelledCellsInEAI_EUTRA* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_EUTRA (const char* name, 
   CancelledCellsInEAI_EUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_EUTRA (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_EUTRA* pvalue);

EXTERN int asn1Init_CancelledCellsInEAI_EUTRA (CancelledCellsInEAI_EUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDCancelledEUTRA-Item'
*/
typedef struct EXTERN EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element 
   (const char* name, const EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element (
   const char* name, 
   EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element (
   EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDCancelledEUTRA-Item'
*/
/* List of EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element */
typedef OSRTDList EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions;

EXTERN int asn1PE_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions 
   (const char* name, const EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions (
   const char* name, EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions_element* 
   asn1Get_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* plist, 
   EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions (
   EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledEUTRA_Item                        */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDCancelledEUTRA-Item ::= SEQUENCE {
   emergencyAreaID [0] EmergencyAreaID,
   cancelledCellsInEAI-EUTRA [1] CancelledCellsInEAI-EUTRA,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EmergencyAreaIDCancelledEUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EmergencyAreaIDCancelledEUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EmergencyAreaIDCancelledEUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN EmergencyAreaIDCancelledEUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EmergencyAreaID emergencyAreaID;
   CancelledCellsInEAI_EUTRA cancelledCellsInEAI_EUTRA;
   EmergencyAreaIDCancelledEUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} EmergencyAreaIDCancelledEUTRA_Item;

EXTERN int asn1PE_EmergencyAreaIDCancelledEUTRA_Item (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA_Item* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledEUTRA_Item (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA_Item* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledEUTRA_Item 
   (const char* name, const EmergencyAreaIDCancelledEUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledEUTRA_Item (const char* name, 
   EmergencyAreaIDCancelledEUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledEUTRA_Item (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledEUTRA_Item* pvalue);

EXTERN int asn1Init_EmergencyAreaIDCancelledEUTRA_Item (
   EmergencyAreaIDCancelledEUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledEUTRA                             */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDCancelledEUTRA ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaIDCancelledEUTRA-Item
*/
/* List of EmergencyAreaIDCancelledEUTRA_Item */
typedef OSRTDList EmergencyAreaIDCancelledEUTRA;

EXTERN int asn1PE_EmergencyAreaIDCancelledEUTRA (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledEUTRA (OSCTXT* pctxt, EmergencyAreaIDCancelledEUTRA* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledEUTRA 
   (const char* name, const EmergencyAreaIDCancelledEUTRA* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledEUTRA (const char* name, 
   EmergencyAreaIDCancelledEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledEUTRA (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledEUTRA* pvalue);

EXTERN int asn1Init_EmergencyAreaIDCancelledEUTRA (
   EmergencyAreaIDCancelledEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledNR_Item_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDCancelledNR-Item'
*/
typedef struct EXTERN CellIDCancelledNR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CellIDCancelledNR_Item_iE_Extensions_element;

EXTERN int asn1PE_CellIDCancelledNR_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CellIDCancelledNR_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CellIDCancelledNR_Item_iE_Extensions_element 
   (const char* name, const CellIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledNR_Item_iE_Extensions_element (
   const char* name, CellIDCancelledNR_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledNR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CellIDCancelledNR_Item_iE_Extensions_element (
   CellIDCancelledNR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledNR_Item_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDCancelledNR-Item'
*/
/* List of CellIDCancelledNR_Item_iE_Extensions_element */
typedef OSRTDList CellIDCancelledNR_Item_iE_Extensions;

EXTERN int asn1PE_CellIDCancelledNR_Item_iE_Extensions (OSCTXT* pctxt, CellIDCancelledNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CellIDCancelledNR_Item_iE_Extensions (OSCTXT* pctxt, CellIDCancelledNR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CellIDCancelledNR_Item_iE_Extensions 
   (const char* name, const CellIDCancelledNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledNR_Item_iE_Extensions (const char* name, 
   CellIDCancelledNR_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledNR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledNR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CellIDCancelledNR_Item_iE_Extensions_element* 
   asn1Get_CellIDCancelledNR_Item_iE_Extensions (ProtocolExtensionID id, 
   CellIDCancelledNR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CellIDCancelledNR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CellIDCancelledNR_Item_iE_Extensions* plist, 
   CellIDCancelledNR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CellIDCancelledNR_Item_iE_Extensions (
   CellIDCancelledNR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledNR_Item                                    */
/*                                                            */
/**************************************************************/
/*
CellIDCancelledNR-Item ::= SEQUENCE {
   nR-CGI [0] NR-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CellIDCancelledNR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CellIDCancelledNR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CellIDCancelledNR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CellIDCancelledNR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NR_CGI nR_CGI;
   NumberOfBroadcasts numberOfBroadcasts;
   CellIDCancelledNR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CellIDCancelledNR_Item;

EXTERN int asn1PE_CellIDCancelledNR_Item (OSCTXT* pctxt, CellIDCancelledNR_Item* pvalue);

EXTERN int asn1PD_CellIDCancelledNR_Item (OSCTXT* pctxt, CellIDCancelledNR_Item* pvalue);

EXTERN void asn1Print_CellIDCancelledNR_Item 
   (const char* name, const CellIDCancelledNR_Item* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledNR_Item (const char* name, 
   CellIDCancelledNR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledNR_Item (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledNR_Item* pvalue);

EXTERN int asn1Init_CellIDCancelledNR_Item (CellIDCancelledNR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDCancelledNR                                         */
/*                                                            */
/**************************************************************/
/*
CellIDCancelledNR ::= SEQUENCE (SIZE (1..maxnoofCellIDforWarning)) OF CellIDCancelledNR-Item
*/
/* List of CellIDCancelledNR_Item */
typedef OSRTDList CellIDCancelledNR;

EXTERN int asn1PE_CellIDCancelledNR (OSCTXT* pctxt, CellIDCancelledNR* pvalue);

EXTERN int asn1PD_CellIDCancelledNR (OSCTXT* pctxt, CellIDCancelledNR* pvalue);

EXTERN void asn1Print_CellIDCancelledNR 
   (const char* name, const CellIDCancelledNR* pvalue);

EXTERN int asn1PrtToStr_CellIDCancelledNR (const char* name, 
   CellIDCancelledNR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDCancelledNR (OSCTXT *pctxt, 
   const char* name, const CellIDCancelledNR* pvalue);

EXTERN int asn1Init_CellIDCancelledNR (CellIDCancelledNR* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_NR_Item_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInTAI-NR-Item'
*/
typedef struct EXTERN CancelledCellsInTAI_NR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CancelledCellsInTAI_NR_Item_iE_Extensions_element;

EXTERN int asn1PE_CancelledCellsInTAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_NR_Item_iE_Extensions_element 
   (const char* name, const CancelledCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_NR_Item_iE_Extensions_element (
   const char* name, 
   CancelledCellsInTAI_NR_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_NR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CancelledCellsInTAI_NR_Item_iE_Extensions_element (
   CancelledCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_NR_Item_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInTAI-NR-Item'
*/
/* List of CancelledCellsInTAI_NR_Item_iE_Extensions_element */
typedef OSRTDList CancelledCellsInTAI_NR_Item_iE_Extensions;

EXTERN int asn1PE_CancelledCellsInTAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInTAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInTAI_NR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_NR_Item_iE_Extensions 
   (const char* name, const CancelledCellsInTAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_NR_Item_iE_Extensions (const char* name, 
   CancelledCellsInTAI_NR_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_NR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_NR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CancelledCellsInTAI_NR_Item_iE_Extensions_element* 
   asn1Get_CancelledCellsInTAI_NR_Item_iE_Extensions (ProtocolExtensionID id, 
   CancelledCellsInTAI_NR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CancelledCellsInTAI_NR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CancelledCellsInTAI_NR_Item_iE_Extensions* plist, 
   CancelledCellsInTAI_NR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CancelledCellsInTAI_NR_Item_iE_Extensions (
   CancelledCellsInTAI_NR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_NR_Item                               */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInTAI-NR-Item ::= SEQUENCE {
   nR-CGI [0] NR-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CancelledCellsInTAI-NR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CancelledCellsInTAI-NR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CancelledCellsInTAI-NR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CancelledCellsInTAI_NR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NR_CGI nR_CGI;
   NumberOfBroadcasts numberOfBroadcasts;
   CancelledCellsInTAI_NR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CancelledCellsInTAI_NR_Item;

EXTERN int asn1PE_CancelledCellsInTAI_NR_Item (OSCTXT* pctxt, CancelledCellsInTAI_NR_Item* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_NR_Item (OSCTXT* pctxt, CancelledCellsInTAI_NR_Item* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_NR_Item 
   (const char* name, const CancelledCellsInTAI_NR_Item* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_NR_Item (const char* name, 
   CancelledCellsInTAI_NR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_NR_Item (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_NR_Item* pvalue);

EXTERN int asn1Init_CancelledCellsInTAI_NR_Item (CancelledCellsInTAI_NR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInTAI_NR                                    */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInTAI-NR ::= SEQUENCE (SIZE (1..maxnoofCellinTAI)) OF CancelledCellsInTAI-NR-Item
*/
/* List of CancelledCellsInTAI_NR_Item */
typedef OSRTDList CancelledCellsInTAI_NR;

EXTERN int asn1PE_CancelledCellsInTAI_NR (OSCTXT* pctxt, CancelledCellsInTAI_NR* pvalue);

EXTERN int asn1PD_CancelledCellsInTAI_NR (OSCTXT* pctxt, CancelledCellsInTAI_NR* pvalue);

EXTERN void asn1Print_CancelledCellsInTAI_NR 
   (const char* name, const CancelledCellsInTAI_NR* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInTAI_NR (const char* name, 
   CancelledCellsInTAI_NR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInTAI_NR (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInTAI_NR* pvalue);

EXTERN int asn1Init_CancelledCellsInTAI_NR (CancelledCellsInTAI_NR* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledNR_Item_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAICancelledNR-Item'
*/
typedef struct EXTERN TAICancelledNR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TAICancelledNR_Item_iE_Extensions_element;

EXTERN int asn1PE_TAICancelledNR_Item_iE_Extensions_element (OSCTXT* pctxt, TAICancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TAICancelledNR_Item_iE_Extensions_element (OSCTXT* pctxt, TAICancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TAICancelledNR_Item_iE_Extensions_element 
   (const char* name, const TAICancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TAICancelledNR_Item_iE_Extensions_element (const char* name, 
   TAICancelledNR_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledNR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TAICancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TAICancelledNR_Item_iE_Extensions_element (
   TAICancelledNR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledNR_Item_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAICancelledNR-Item'
*/
/* List of TAICancelledNR_Item_iE_Extensions_element */
typedef OSRTDList TAICancelledNR_Item_iE_Extensions;

EXTERN int asn1PE_TAICancelledNR_Item_iE_Extensions (OSCTXT* pctxt, TAICancelledNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_TAICancelledNR_Item_iE_Extensions (OSCTXT* pctxt, TAICancelledNR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_TAICancelledNR_Item_iE_Extensions 
   (const char* name, const TAICancelledNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TAICancelledNR_Item_iE_Extensions (const char* name, 
   TAICancelledNR_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledNR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TAICancelledNR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TAICancelledNR_Item_iE_Extensions_element* 
   asn1Get_TAICancelledNR_Item_iE_Extensions (ProtocolExtensionID id, 
   TAICancelledNR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TAICancelledNR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TAICancelledNR_Item_iE_Extensions* plist, 
   TAICancelledNR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_TAICancelledNR_Item_iE_Extensions (
   TAICancelledNR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledNR_Item                                       */
/*                                                            */
/**************************************************************/
/*
TAICancelledNR-Item ::= SEQUENCE {
   tAI [0] TAI,
   cancelledCellsInTAI-NR [1] CancelledCellsInTAI-NR,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TAICancelledNR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TAICancelledNR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TAICancelledNR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TAICancelledNR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAI tAI;
   CancelledCellsInTAI_NR cancelledCellsInTAI_NR;
   TAICancelledNR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TAICancelledNR_Item;

EXTERN int asn1PE_TAICancelledNR_Item (OSCTXT* pctxt, TAICancelledNR_Item* pvalue);

EXTERN int asn1PD_TAICancelledNR_Item (OSCTXT* pctxt, TAICancelledNR_Item* pvalue);

EXTERN void asn1Print_TAICancelledNR_Item 
   (const char* name, const TAICancelledNR_Item* pvalue);

EXTERN int asn1PrtToStr_TAICancelledNR_Item (const char* name, 
   TAICancelledNR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledNR_Item (OSCTXT *pctxt, 
   const char* name, const TAICancelledNR_Item* pvalue);

EXTERN int asn1Init_TAICancelledNR_Item (TAICancelledNR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  TAICancelledNR                                            */
/*                                                            */
/**************************************************************/
/*
TAICancelledNR ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAICancelledNR-Item
*/
/* List of TAICancelledNR_Item */
typedef OSRTDList TAICancelledNR;

EXTERN int asn1PE_TAICancelledNR (OSCTXT* pctxt, TAICancelledNR* pvalue);

EXTERN int asn1PD_TAICancelledNR (OSCTXT* pctxt, TAICancelledNR* pvalue);

EXTERN void asn1Print_TAICancelledNR (const char* name, const TAICancelledNR* pvalue);

EXTERN int asn1PrtToStr_TAICancelledNR (const char* name, TAICancelledNR* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAICancelledNR (OSCTXT *pctxt, 
   const char* name, const TAICancelledNR* pvalue);

EXTERN int asn1Init_TAICancelledNR (TAICancelledNR* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_NR_Item_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInEAI-NR-Item'
*/
typedef struct EXTERN CancelledCellsInEAI_NR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CancelledCellsInEAI_NR_Item_iE_Extensions_element;

EXTERN int asn1PE_CancelledCellsInEAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CancelledCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_NR_Item_iE_Extensions_element 
   (const char* name, const CancelledCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_NR_Item_iE_Extensions_element (
   const char* name, 
   CancelledCellsInEAI_NR_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_NR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CancelledCellsInEAI_NR_Item_iE_Extensions_element (
   CancelledCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_NR_Item_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CancelledCellsInEAI-NR-Item'
*/
/* List of CancelledCellsInEAI_NR_Item_iE_Extensions_element */
typedef OSRTDList CancelledCellsInEAI_NR_Item_iE_Extensions;

EXTERN int asn1PE_CancelledCellsInEAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInEAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CancelledCellsInEAI_NR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_NR_Item_iE_Extensions 
   (const char* name, const CancelledCellsInEAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_NR_Item_iE_Extensions (const char* name, 
   CancelledCellsInEAI_NR_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_NR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_NR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CancelledCellsInEAI_NR_Item_iE_Extensions_element* 
   asn1Get_CancelledCellsInEAI_NR_Item_iE_Extensions (ProtocolExtensionID id, 
   CancelledCellsInEAI_NR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CancelledCellsInEAI_NR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CancelledCellsInEAI_NR_Item_iE_Extensions* plist, 
   CancelledCellsInEAI_NR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CancelledCellsInEAI_NR_Item_iE_Extensions (
   CancelledCellsInEAI_NR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_NR_Item                               */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInEAI-NR-Item ::= SEQUENCE {
   nR-CGI [0] NR-CGI,
   numberOfBroadcasts [1] NumberOfBroadcasts,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CancelledCellsInEAI-NR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CancelledCellsInEAI-NR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CancelledCellsInEAI-NR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CancelledCellsInEAI_NR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NR_CGI nR_CGI;
   NumberOfBroadcasts numberOfBroadcasts;
   CancelledCellsInEAI_NR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CancelledCellsInEAI_NR_Item;

EXTERN int asn1PE_CancelledCellsInEAI_NR_Item (OSCTXT* pctxt, CancelledCellsInEAI_NR_Item* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_NR_Item (OSCTXT* pctxt, CancelledCellsInEAI_NR_Item* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_NR_Item 
   (const char* name, const CancelledCellsInEAI_NR_Item* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_NR_Item (const char* name, 
   CancelledCellsInEAI_NR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_NR_Item (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_NR_Item* pvalue);

EXTERN int asn1Init_CancelledCellsInEAI_NR_Item (CancelledCellsInEAI_NR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelledCellsInEAI_NR                                    */
/*                                                            */
/**************************************************************/
/*
CancelledCellsInEAI-NR ::= SEQUENCE (SIZE (1..maxnoofCellinEAI)) OF CancelledCellsInEAI-NR-Item
*/
/* List of CancelledCellsInEAI_NR_Item */
typedef OSRTDList CancelledCellsInEAI_NR;

EXTERN int asn1PE_CancelledCellsInEAI_NR (OSCTXT* pctxt, CancelledCellsInEAI_NR* pvalue);

EXTERN int asn1PD_CancelledCellsInEAI_NR (OSCTXT* pctxt, CancelledCellsInEAI_NR* pvalue);

EXTERN void asn1Print_CancelledCellsInEAI_NR 
   (const char* name, const CancelledCellsInEAI_NR* pvalue);

EXTERN int asn1PrtToStr_CancelledCellsInEAI_NR (const char* name, 
   CancelledCellsInEAI_NR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CancelledCellsInEAI_NR (OSCTXT *pctxt, 
   const char* name, const CancelledCellsInEAI_NR* pvalue);

EXTERN int asn1Init_CancelledCellsInEAI_NR (CancelledCellsInEAI_NR* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledNR_Item_iE_Extensions_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDCancelledNR-Item'
*/
typedef struct EXTERN EmergencyAreaIDCancelledNR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EmergencyAreaIDCancelledNR_Item_iE_Extensions_element;

EXTERN int asn1PE_EmergencyAreaIDCancelledNR_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledNR_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledNR_Item_iE_Extensions_element 
   (const char* name, const EmergencyAreaIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledNR_Item_iE_Extensions_element (
   const char* name, 
   EmergencyAreaIDCancelledNR_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledNR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EmergencyAreaIDCancelledNR_Item_iE_Extensions_element (
   EmergencyAreaIDCancelledNR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledNR_Item_iE_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDCancelledNR-Item'
*/
/* List of EmergencyAreaIDCancelledNR_Item_iE_Extensions_element */
typedef OSRTDList EmergencyAreaIDCancelledNR_Item_iE_Extensions;

EXTERN int asn1PE_EmergencyAreaIDCancelledNR_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDCancelledNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledNR_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDCancelledNR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledNR_Item_iE_Extensions 
   (const char* name, const EmergencyAreaIDCancelledNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledNR_Item_iE_Extensions (
   const char* name, EmergencyAreaIDCancelledNR_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledNR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledNR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EmergencyAreaIDCancelledNR_Item_iE_Extensions_element* 
   asn1Get_EmergencyAreaIDCancelledNR_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   EmergencyAreaIDCancelledNR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EmergencyAreaIDCancelledNR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   EmergencyAreaIDCancelledNR_Item_iE_Extensions* plist, 
   EmergencyAreaIDCancelledNR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_EmergencyAreaIDCancelledNR_Item_iE_Extensions (
   EmergencyAreaIDCancelledNR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledNR_Item                           */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDCancelledNR-Item ::= SEQUENCE {
   emergencyAreaID [0] EmergencyAreaID,
   cancelledCellsInEAI-NR [1] CancelledCellsInEAI-NR,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EmergencyAreaIDCancelledNR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EmergencyAreaIDCancelledNR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EmergencyAreaIDCancelledNR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN EmergencyAreaIDCancelledNR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EmergencyAreaID emergencyAreaID;
   CancelledCellsInEAI_NR cancelledCellsInEAI_NR;
   EmergencyAreaIDCancelledNR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} EmergencyAreaIDCancelledNR_Item;

EXTERN int asn1PE_EmergencyAreaIDCancelledNR_Item (OSCTXT* pctxt, EmergencyAreaIDCancelledNR_Item* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledNR_Item (OSCTXT* pctxt, EmergencyAreaIDCancelledNR_Item* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledNR_Item 
   (const char* name, const EmergencyAreaIDCancelledNR_Item* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledNR_Item (const char* name, 
   EmergencyAreaIDCancelledNR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledNR_Item (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledNR_Item* pvalue);

EXTERN int asn1Init_EmergencyAreaIDCancelledNR_Item (
   EmergencyAreaIDCancelledNR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDCancelledNR                                */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDCancelledNR ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaIDCancelledNR-Item
*/
/* List of EmergencyAreaIDCancelledNR_Item */
typedef OSRTDList EmergencyAreaIDCancelledNR;

EXTERN int asn1PE_EmergencyAreaIDCancelledNR (OSCTXT* pctxt, EmergencyAreaIDCancelledNR* pvalue);

EXTERN int asn1PD_EmergencyAreaIDCancelledNR (OSCTXT* pctxt, EmergencyAreaIDCancelledNR* pvalue);

EXTERN void asn1Print_EmergencyAreaIDCancelledNR 
   (const char* name, const EmergencyAreaIDCancelledNR* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDCancelledNR (const char* name, 
   EmergencyAreaIDCancelledNR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDCancelledNR (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDCancelledNR* pvalue);

EXTERN int asn1Init_EmergencyAreaIDCancelledNR (EmergencyAreaIDCancelledNR* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastCancelledAreaList_choice_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'BroadcastCancelledAreaList'
*/
typedef struct EXTERN BroadcastCancelledAreaList_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} BroadcastCancelledAreaList_choice_Extensions;

EXTERN int asn1PE_BroadcastCancelledAreaList_choice_Extensions (OSCTXT* pctxt, BroadcastCancelledAreaList_choice_Extensions* pvalue);

EXTERN int asn1PD_BroadcastCancelledAreaList_choice_Extensions (OSCTXT* pctxt, BroadcastCancelledAreaList_choice_Extensions* pvalue);

EXTERN void asn1Print_BroadcastCancelledAreaList_choice_Extensions 
   (const char* name, const BroadcastCancelledAreaList_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_BroadcastCancelledAreaList_choice_Extensions (
   const char* name, BroadcastCancelledAreaList_choice_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastCancelledAreaList_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const BroadcastCancelledAreaList_choice_Extensions* pvalue);

EXTERN int asn1Init_BroadcastCancelledAreaList_choice_Extensions (
   BroadcastCancelledAreaList_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastCancelledAreaList                                */
/*                                                            */
/**************************************************************/
/*
BroadcastCancelledAreaList ::= CHOICE {
   cellIDCancelledEUTRA [0] CellIDCancelledEUTRA,
   tAICancelledEUTRA [1] TAICancelledEUTRA,
   emergencyAreaIDCancelledEUTRA [2] EmergencyAreaIDCancelledEUTRA,
   cellIDCancelledNR [3] CellIDCancelledNR,
   tAICancelledNR [4] TAICancelledNR,
   emergencyAreaIDCancelledNR [5] EmergencyAreaIDCancelledNR,
   choice-Extensions [6] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({BroadcastCancelledAreaList-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({BroadcastCancelledAreaList-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({BroadcastCancelledAreaList-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_BroadcastCancelledAreaList_cellIDCancelledEUTRA 1
#define T_BroadcastCancelledAreaList_tAICancelledEUTRA 2
#define T_BroadcastCancelledAreaList_emergencyAreaIDCancelledEUTRA 3
#define T_BroadcastCancelledAreaList_cellIDCancelledNR 4
#define T_BroadcastCancelledAreaList_tAICancelledNR 5
#define T_BroadcastCancelledAreaList_emergencyAreaIDCancelledNR 6
#define T_BroadcastCancelledAreaList_choice_Extensions 7

typedef struct EXTERN BroadcastCancelledAreaList {
   OSINT32 t;
   union {
      /* t = 1 */
      CellIDCancelledEUTRA *cellIDCancelledEUTRA;
      /* t = 2 */
      TAICancelledEUTRA *tAICancelledEUTRA;
      /* t = 3 */
      EmergencyAreaIDCancelledEUTRA *emergencyAreaIDCancelledEUTRA;
      /* t = 4 */
      CellIDCancelledNR *cellIDCancelledNR;
      /* t = 5 */
      TAICancelledNR *tAICancelledNR;
      /* t = 6 */
      EmergencyAreaIDCancelledNR *emergencyAreaIDCancelledNR;
      /* t = 7 */
      BroadcastCancelledAreaList_choice_Extensions *choice_Extensions;
   } u;
} BroadcastCancelledAreaList;

EXTERN int asn1PE_BroadcastCancelledAreaList (OSCTXT* pctxt, BroadcastCancelledAreaList* pvalue);

EXTERN int asn1PD_BroadcastCancelledAreaList (OSCTXT* pctxt, BroadcastCancelledAreaList* pvalue);

EXTERN void asn1Print_BroadcastCancelledAreaList 
   (const char* name, const BroadcastCancelledAreaList* pvalue);

EXTERN int asn1PrtToStr_BroadcastCancelledAreaList (const char* name, 
   BroadcastCancelledAreaList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastCancelledAreaList (OSCTXT *pctxt, 
   const char* name, const BroadcastCancelledAreaList* pvalue);

EXTERN int asn1Init_BroadcastCancelledAreaList (BroadcastCancelledAreaList* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastEUTRA_Item_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDBroadcastEUTRA-Item'
*/
typedef struct EXTERN CellIDBroadcastEUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CellIDBroadcastEUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_CellIDBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CellIDBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CellIDBroadcastEUTRA_Item_iE_Extensions_element 
   (const char* name, const CellIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastEUTRA_Item_iE_Extensions_element (
   const char* name, CellIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CellIDBroadcastEUTRA_Item_iE_Extensions_element (
   CellIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastEUTRA_Item_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDBroadcastEUTRA-Item'
*/
/* List of CellIDBroadcastEUTRA_Item_iE_Extensions_element */
typedef OSRTDList CellIDBroadcastEUTRA_Item_iE_Extensions;

EXTERN int asn1PE_CellIDBroadcastEUTRA_Item_iE_Extensions (OSCTXT* pctxt, CellIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CellIDBroadcastEUTRA_Item_iE_Extensions (OSCTXT* pctxt, CellIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CellIDBroadcastEUTRA_Item_iE_Extensions 
   (const char* name, const CellIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastEUTRA_Item_iE_Extensions (const char* name, 
   CellIDBroadcastEUTRA_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastEUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CellIDBroadcastEUTRA_Item_iE_Extensions_element* 
   asn1Get_CellIDBroadcastEUTRA_Item_iE_Extensions (ProtocolExtensionID id, 
   CellIDBroadcastEUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CellIDBroadcastEUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CellIDBroadcastEUTRA_Item_iE_Extensions* plist, 
   CellIDBroadcastEUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CellIDBroadcastEUTRA_Item_iE_Extensions (
   CellIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastEUTRA_Item                                 */
/*                                                            */
/**************************************************************/
/*
CellIDBroadcastEUTRA-Item ::= SEQUENCE {
   eUTRA-CGI [0] EUTRA-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CellIDBroadcastEUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CellIDBroadcastEUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CellIDBroadcastEUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CellIDBroadcastEUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EUTRA_CGI eUTRA_CGI;
   CellIDBroadcastEUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CellIDBroadcastEUTRA_Item;

EXTERN int asn1PE_CellIDBroadcastEUTRA_Item (OSCTXT* pctxt, CellIDBroadcastEUTRA_Item* pvalue);

EXTERN int asn1PD_CellIDBroadcastEUTRA_Item (OSCTXT* pctxt, CellIDBroadcastEUTRA_Item* pvalue);

EXTERN void asn1Print_CellIDBroadcastEUTRA_Item 
   (const char* name, const CellIDBroadcastEUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastEUTRA_Item (const char* name, 
   CellIDBroadcastEUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastEUTRA_Item (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastEUTRA_Item* pvalue);

EXTERN int asn1Init_CellIDBroadcastEUTRA_Item (CellIDBroadcastEUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastEUTRA                                      */
/*                                                            */
/**************************************************************/
/*
CellIDBroadcastEUTRA ::= SEQUENCE (SIZE (1..maxnoofCellIDforWarning)) OF CellIDBroadcastEUTRA-Item
*/
/* List of CellIDBroadcastEUTRA_Item */
typedef OSRTDList CellIDBroadcastEUTRA;

EXTERN int asn1PE_CellIDBroadcastEUTRA (OSCTXT* pctxt, CellIDBroadcastEUTRA* pvalue);

EXTERN int asn1PD_CellIDBroadcastEUTRA (OSCTXT* pctxt, CellIDBroadcastEUTRA* pvalue);

EXTERN void asn1Print_CellIDBroadcastEUTRA 
   (const char* name, const CellIDBroadcastEUTRA* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastEUTRA (const char* name, 
   CellIDBroadcastEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastEUTRA (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastEUTRA* pvalue);

EXTERN int asn1Init_CellIDBroadcastEUTRA (CellIDBroadcastEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInTAI-EUTRA-Item'
*/
typedef struct EXTERN CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element 
   (const char* name, const CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element (
   const char* name, 
   CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element (
   CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_EUTRA_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInTAI-EUTRA-Item'
*/
/* List of CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element */
typedef OSRTDList CompletedCellsInTAI_EUTRA_Item_iE_Extensions;

EXTERN int asn1PE_CompletedCellsInTAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_EUTRA_Item_iE_Extensions 
   (const char* name, const CompletedCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_EUTRA_Item_iE_Extensions (
   const char* name, CompletedCellsInTAI_EUTRA_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_EUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CompletedCellsInTAI_EUTRA_Item_iE_Extensions_element* 
   asn1Get_CompletedCellsInTAI_EUTRA_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   CompletedCellsInTAI_EUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CompletedCellsInTAI_EUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CompletedCellsInTAI_EUTRA_Item_iE_Extensions* plist, 
   CompletedCellsInTAI_EUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CompletedCellsInTAI_EUTRA_Item_iE_Extensions (
   CompletedCellsInTAI_EUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_EUTRA_Item                            */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInTAI-EUTRA-Item ::= SEQUENCE {
   eUTRA-CGI [0] EUTRA-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CompletedCellsInTAI-EUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CompletedCellsInTAI-EUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CompletedCellsInTAI-EUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CompletedCellsInTAI_EUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EUTRA_CGI eUTRA_CGI;
   CompletedCellsInTAI_EUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CompletedCellsInTAI_EUTRA_Item;

EXTERN int asn1PE_CompletedCellsInTAI_EUTRA_Item (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA_Item* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_EUTRA_Item (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA_Item* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_EUTRA_Item 
   (const char* name, const CompletedCellsInTAI_EUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_EUTRA_Item (const char* name, 
   CompletedCellsInTAI_EUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_EUTRA_Item (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_EUTRA_Item* pvalue);

EXTERN int asn1Init_CompletedCellsInTAI_EUTRA_Item (
   CompletedCellsInTAI_EUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_EUTRA                                 */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInTAI-EUTRA ::= SEQUENCE (SIZE (1..maxnoofCellinTAI)) OF CompletedCellsInTAI-EUTRA-Item
*/
/* List of CompletedCellsInTAI_EUTRA_Item */
typedef OSRTDList CompletedCellsInTAI_EUTRA;

EXTERN int asn1PE_CompletedCellsInTAI_EUTRA (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_EUTRA (OSCTXT* pctxt, CompletedCellsInTAI_EUTRA* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_EUTRA 
   (const char* name, const CompletedCellsInTAI_EUTRA* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_EUTRA (const char* name, 
   CompletedCellsInTAI_EUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_EUTRA (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_EUTRA* pvalue);

EXTERN int asn1Init_CompletedCellsInTAI_EUTRA (CompletedCellsInTAI_EUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastEUTRA_Item_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBroadcastEUTRA-Item'
*/
typedef struct EXTERN TAIBroadcastEUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TAIBroadcastEUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_TAIBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, TAIBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TAIBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, TAIBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TAIBroadcastEUTRA_Item_iE_Extensions_element 
   (const char* name, const TAIBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastEUTRA_Item_iE_Extensions_element (
   const char* name, TAIBroadcastEUTRA_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TAIBroadcastEUTRA_Item_iE_Extensions_element (
   TAIBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastEUTRA_Item_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBroadcastEUTRA-Item'
*/
/* List of TAIBroadcastEUTRA_Item_iE_Extensions_element */
typedef OSRTDList TAIBroadcastEUTRA_Item_iE_Extensions;

EXTERN int asn1PE_TAIBroadcastEUTRA_Item_iE_Extensions (OSCTXT* pctxt, TAIBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_TAIBroadcastEUTRA_Item_iE_Extensions (OSCTXT* pctxt, TAIBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_TAIBroadcastEUTRA_Item_iE_Extensions 
   (const char* name, const TAIBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastEUTRA_Item_iE_Extensions (const char* name, 
   TAIBroadcastEUTRA_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastEUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastEUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TAIBroadcastEUTRA_Item_iE_Extensions_element* 
   asn1Get_TAIBroadcastEUTRA_Item_iE_Extensions (ProtocolExtensionID id, 
   TAIBroadcastEUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TAIBroadcastEUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TAIBroadcastEUTRA_Item_iE_Extensions* plist, 
   TAIBroadcastEUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_TAIBroadcastEUTRA_Item_iE_Extensions (
   TAIBroadcastEUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastEUTRA_Item                                    */
/*                                                            */
/**************************************************************/
/*
TAIBroadcastEUTRA-Item ::= SEQUENCE {
   tAI [0] TAI,
   completedCellsInTAI-EUTRA [1] CompletedCellsInTAI-EUTRA,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TAIBroadcastEUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TAIBroadcastEUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TAIBroadcastEUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TAIBroadcastEUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAI tAI;
   CompletedCellsInTAI_EUTRA completedCellsInTAI_EUTRA;
   TAIBroadcastEUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TAIBroadcastEUTRA_Item;

EXTERN int asn1PE_TAIBroadcastEUTRA_Item (OSCTXT* pctxt, TAIBroadcastEUTRA_Item* pvalue);

EXTERN int asn1PD_TAIBroadcastEUTRA_Item (OSCTXT* pctxt, TAIBroadcastEUTRA_Item* pvalue);

EXTERN void asn1Print_TAIBroadcastEUTRA_Item 
   (const char* name, const TAIBroadcastEUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastEUTRA_Item (const char* name, 
   TAIBroadcastEUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastEUTRA_Item (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastEUTRA_Item* pvalue);

EXTERN int asn1Init_TAIBroadcastEUTRA_Item (TAIBroadcastEUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastEUTRA                                         */
/*                                                            */
/**************************************************************/
/*
TAIBroadcastEUTRA ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAIBroadcastEUTRA-Item
*/
/* List of TAIBroadcastEUTRA_Item */
typedef OSRTDList TAIBroadcastEUTRA;

EXTERN int asn1PE_TAIBroadcastEUTRA (OSCTXT* pctxt, TAIBroadcastEUTRA* pvalue);

EXTERN int asn1PD_TAIBroadcastEUTRA (OSCTXT* pctxt, TAIBroadcastEUTRA* pvalue);

EXTERN void asn1Print_TAIBroadcastEUTRA 
   (const char* name, const TAIBroadcastEUTRA* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastEUTRA (const char* name, 
   TAIBroadcastEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastEUTRA (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastEUTRA* pvalue);

EXTERN int asn1Init_TAIBroadcastEUTRA (TAIBroadcastEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInEAI-EUTRA-Item'
*/
typedef struct EXTERN CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element 
   (const char* name, const CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element (
   const char* name, 
   CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element (
   CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_EUTRA_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInEAI-EUTRA-Item'
*/
/* List of CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element */
typedef OSRTDList CompletedCellsInEAI_EUTRA_Item_iE_Extensions;

EXTERN int asn1PE_CompletedCellsInEAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_EUTRA_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_EUTRA_Item_iE_Extensions 
   (const char* name, const CompletedCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_EUTRA_Item_iE_Extensions (
   const char* name, CompletedCellsInEAI_EUTRA_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_EUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CompletedCellsInEAI_EUTRA_Item_iE_Extensions_element* 
   asn1Get_CompletedCellsInEAI_EUTRA_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   CompletedCellsInEAI_EUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CompletedCellsInEAI_EUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CompletedCellsInEAI_EUTRA_Item_iE_Extensions* plist, 
   CompletedCellsInEAI_EUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CompletedCellsInEAI_EUTRA_Item_iE_Extensions (
   CompletedCellsInEAI_EUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_EUTRA_Item                            */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInEAI-EUTRA-Item ::= SEQUENCE {
   eUTRA-CGI [0] EUTRA-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CompletedCellsInEAI-EUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CompletedCellsInEAI-EUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CompletedCellsInEAI-EUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CompletedCellsInEAI_EUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EUTRA_CGI eUTRA_CGI;
   CompletedCellsInEAI_EUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CompletedCellsInEAI_EUTRA_Item;

EXTERN int asn1PE_CompletedCellsInEAI_EUTRA_Item (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA_Item* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_EUTRA_Item (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA_Item* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_EUTRA_Item 
   (const char* name, const CompletedCellsInEAI_EUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_EUTRA_Item (const char* name, 
   CompletedCellsInEAI_EUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_EUTRA_Item (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_EUTRA_Item* pvalue);

EXTERN int asn1Init_CompletedCellsInEAI_EUTRA_Item (
   CompletedCellsInEAI_EUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_EUTRA                                 */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInEAI-EUTRA ::= SEQUENCE (SIZE (1..maxnoofCellinEAI)) OF CompletedCellsInEAI-EUTRA-Item
*/
/* List of CompletedCellsInEAI_EUTRA_Item */
typedef OSRTDList CompletedCellsInEAI_EUTRA;

EXTERN int asn1PE_CompletedCellsInEAI_EUTRA (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_EUTRA (OSCTXT* pctxt, CompletedCellsInEAI_EUTRA* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_EUTRA 
   (const char* name, const CompletedCellsInEAI_EUTRA* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_EUTRA (const char* name, 
   CompletedCellsInEAI_EUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_EUTRA (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_EUTRA* pvalue);

EXTERN int asn1Init_CompletedCellsInEAI_EUTRA (CompletedCellsInEAI_EUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDBroadcastEUTRA-Item'
*/
typedef struct EXTERN EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element;

EXTERN int asn1PE_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element 
   (const char* name, const EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element (
   const char* name, 
   EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element (
   EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDBroadcastEUTRA-Item'
*/
/* List of EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element */
typedef OSRTDList EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions;

EXTERN int asn1PE_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions 
   (const char* name, const EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions (
   const char* name, EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions_element* 
   asn1Get_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* plist, 
   EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions (
   EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastEUTRA_Item                        */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDBroadcastEUTRA-Item ::= SEQUENCE {
   emergencyAreaID [0] EmergencyAreaID,
   completedCellsInEAI-EUTRA [1] CompletedCellsInEAI-EUTRA,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EmergencyAreaIDBroadcastEUTRA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EmergencyAreaIDBroadcastEUTRA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EmergencyAreaIDBroadcastEUTRA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN EmergencyAreaIDBroadcastEUTRA_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EmergencyAreaID emergencyAreaID;
   CompletedCellsInEAI_EUTRA completedCellsInEAI_EUTRA;
   EmergencyAreaIDBroadcastEUTRA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} EmergencyAreaIDBroadcastEUTRA_Item;

EXTERN int asn1PE_EmergencyAreaIDBroadcastEUTRA_Item (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA_Item* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastEUTRA_Item (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA_Item* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastEUTRA_Item 
   (const char* name, const EmergencyAreaIDBroadcastEUTRA_Item* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastEUTRA_Item (const char* name, 
   EmergencyAreaIDBroadcastEUTRA_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastEUTRA_Item (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastEUTRA_Item* pvalue);

EXTERN int asn1Init_EmergencyAreaIDBroadcastEUTRA_Item (
   EmergencyAreaIDBroadcastEUTRA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastEUTRA                             */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDBroadcastEUTRA ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaIDBroadcastEUTRA-Item
*/
/* List of EmergencyAreaIDBroadcastEUTRA_Item */
typedef OSRTDList EmergencyAreaIDBroadcastEUTRA;

EXTERN int asn1PE_EmergencyAreaIDBroadcastEUTRA (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastEUTRA (OSCTXT* pctxt, EmergencyAreaIDBroadcastEUTRA* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastEUTRA 
   (const char* name, const EmergencyAreaIDBroadcastEUTRA* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastEUTRA (const char* name, 
   EmergencyAreaIDBroadcastEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastEUTRA (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastEUTRA* pvalue);

EXTERN int asn1Init_EmergencyAreaIDBroadcastEUTRA (
   EmergencyAreaIDBroadcastEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastNR_Item_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDBroadcastNR-Item'
*/
typedef struct EXTERN CellIDBroadcastNR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CellIDBroadcastNR_Item_iE_Extensions_element;

EXTERN int asn1PE_CellIDBroadcastNR_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CellIDBroadcastNR_Item_iE_Extensions_element (OSCTXT* pctxt, CellIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CellIDBroadcastNR_Item_iE_Extensions_element 
   (const char* name, const CellIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastNR_Item_iE_Extensions_element (
   const char* name, CellIDBroadcastNR_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastNR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CellIDBroadcastNR_Item_iE_Extensions_element (
   CellIDBroadcastNR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastNR_Item_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDBroadcastNR-Item'
*/
/* List of CellIDBroadcastNR_Item_iE_Extensions_element */
typedef OSRTDList CellIDBroadcastNR_Item_iE_Extensions;

EXTERN int asn1PE_CellIDBroadcastNR_Item_iE_Extensions (OSCTXT* pctxt, CellIDBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CellIDBroadcastNR_Item_iE_Extensions (OSCTXT* pctxt, CellIDBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CellIDBroadcastNR_Item_iE_Extensions 
   (const char* name, const CellIDBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastNR_Item_iE_Extensions (const char* name, 
   CellIDBroadcastNR_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastNR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastNR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CellIDBroadcastNR_Item_iE_Extensions_element* 
   asn1Get_CellIDBroadcastNR_Item_iE_Extensions (ProtocolExtensionID id, 
   CellIDBroadcastNR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CellIDBroadcastNR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CellIDBroadcastNR_Item_iE_Extensions* plist, 
   CellIDBroadcastNR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CellIDBroadcastNR_Item_iE_Extensions (
   CellIDBroadcastNR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastNR_Item                                    */
/*                                                            */
/**************************************************************/
/*
CellIDBroadcastNR-Item ::= SEQUENCE {
   nR-CGI [0] NR-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CellIDBroadcastNR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CellIDBroadcastNR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CellIDBroadcastNR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CellIDBroadcastNR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NR_CGI nR_CGI;
   CellIDBroadcastNR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CellIDBroadcastNR_Item;

EXTERN int asn1PE_CellIDBroadcastNR_Item (OSCTXT* pctxt, CellIDBroadcastNR_Item* pvalue);

EXTERN int asn1PD_CellIDBroadcastNR_Item (OSCTXT* pctxt, CellIDBroadcastNR_Item* pvalue);

EXTERN void asn1Print_CellIDBroadcastNR_Item 
   (const char* name, const CellIDBroadcastNR_Item* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastNR_Item (const char* name, 
   CellIDBroadcastNR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastNR_Item (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastNR_Item* pvalue);

EXTERN int asn1Init_CellIDBroadcastNR_Item (CellIDBroadcastNR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDBroadcastNR                                         */
/*                                                            */
/**************************************************************/
/*
CellIDBroadcastNR ::= SEQUENCE (SIZE (1..maxnoofCellIDforWarning)) OF CellIDBroadcastNR-Item
*/
/* List of CellIDBroadcastNR_Item */
typedef OSRTDList CellIDBroadcastNR;

EXTERN int asn1PE_CellIDBroadcastNR (OSCTXT* pctxt, CellIDBroadcastNR* pvalue);

EXTERN int asn1PD_CellIDBroadcastNR (OSCTXT* pctxt, CellIDBroadcastNR* pvalue);

EXTERN void asn1Print_CellIDBroadcastNR 
   (const char* name, const CellIDBroadcastNR* pvalue);

EXTERN int asn1PrtToStr_CellIDBroadcastNR (const char* name, 
   CellIDBroadcastNR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDBroadcastNR (OSCTXT *pctxt, 
   const char* name, const CellIDBroadcastNR* pvalue);

EXTERN int asn1Init_CellIDBroadcastNR (CellIDBroadcastNR* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_NR_Item_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInTAI-NR-Item'
*/
typedef struct EXTERN CompletedCellsInTAI_NR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CompletedCellsInTAI_NR_Item_iE_Extensions_element;

EXTERN int asn1PE_CompletedCellsInTAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_NR_Item_iE_Extensions_element 
   (const char* name, const CompletedCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_NR_Item_iE_Extensions_element (
   const char* name, 
   CompletedCellsInTAI_NR_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_NR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CompletedCellsInTAI_NR_Item_iE_Extensions_element (
   CompletedCellsInTAI_NR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_NR_Item_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInTAI-NR-Item'
*/
/* List of CompletedCellsInTAI_NR_Item_iE_Extensions_element */
typedef OSRTDList CompletedCellsInTAI_NR_Item_iE_Extensions;

EXTERN int asn1PE_CompletedCellsInTAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInTAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInTAI_NR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_NR_Item_iE_Extensions 
   (const char* name, const CompletedCellsInTAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_NR_Item_iE_Extensions (const char* name, 
   CompletedCellsInTAI_NR_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_NR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_NR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CompletedCellsInTAI_NR_Item_iE_Extensions_element* 
   asn1Get_CompletedCellsInTAI_NR_Item_iE_Extensions (ProtocolExtensionID id, 
   CompletedCellsInTAI_NR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CompletedCellsInTAI_NR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CompletedCellsInTAI_NR_Item_iE_Extensions* plist, 
   CompletedCellsInTAI_NR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CompletedCellsInTAI_NR_Item_iE_Extensions (
   CompletedCellsInTAI_NR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_NR_Item                               */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInTAI-NR-Item ::= SEQUENCE {
   nR-CGI [0] NR-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CompletedCellsInTAI-NR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CompletedCellsInTAI-NR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CompletedCellsInTAI-NR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CompletedCellsInTAI_NR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NR_CGI nR_CGI;
   CompletedCellsInTAI_NR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CompletedCellsInTAI_NR_Item;

EXTERN int asn1PE_CompletedCellsInTAI_NR_Item (OSCTXT* pctxt, CompletedCellsInTAI_NR_Item* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_NR_Item (OSCTXT* pctxt, CompletedCellsInTAI_NR_Item* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_NR_Item 
   (const char* name, const CompletedCellsInTAI_NR_Item* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_NR_Item (const char* name, 
   CompletedCellsInTAI_NR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_NR_Item (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_NR_Item* pvalue);

EXTERN int asn1Init_CompletedCellsInTAI_NR_Item (CompletedCellsInTAI_NR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInTAI_NR                                    */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInTAI-NR ::= SEQUENCE (SIZE (1..maxnoofCellinTAI)) OF CompletedCellsInTAI-NR-Item
*/
/* List of CompletedCellsInTAI_NR_Item */
typedef OSRTDList CompletedCellsInTAI_NR;

EXTERN int asn1PE_CompletedCellsInTAI_NR (OSCTXT* pctxt, CompletedCellsInTAI_NR* pvalue);

EXTERN int asn1PD_CompletedCellsInTAI_NR (OSCTXT* pctxt, CompletedCellsInTAI_NR* pvalue);

EXTERN void asn1Print_CompletedCellsInTAI_NR 
   (const char* name, const CompletedCellsInTAI_NR* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInTAI_NR (const char* name, 
   CompletedCellsInTAI_NR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInTAI_NR (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInTAI_NR* pvalue);

EXTERN int asn1Init_CompletedCellsInTAI_NR (CompletedCellsInTAI_NR* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastNR_Item_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBroadcastNR-Item'
*/
typedef struct EXTERN TAIBroadcastNR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TAIBroadcastNR_Item_iE_Extensions_element;

EXTERN int asn1PE_TAIBroadcastNR_Item_iE_Extensions_element (OSCTXT* pctxt, TAIBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TAIBroadcastNR_Item_iE_Extensions_element (OSCTXT* pctxt, TAIBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TAIBroadcastNR_Item_iE_Extensions_element 
   (const char* name, const TAIBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastNR_Item_iE_Extensions_element (const char* name, 
   TAIBroadcastNR_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastNR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TAIBroadcastNR_Item_iE_Extensions_element (
   TAIBroadcastNR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastNR_Item_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIBroadcastNR-Item'
*/
/* List of TAIBroadcastNR_Item_iE_Extensions_element */
typedef OSRTDList TAIBroadcastNR_Item_iE_Extensions;

EXTERN int asn1PE_TAIBroadcastNR_Item_iE_Extensions (OSCTXT* pctxt, TAIBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_TAIBroadcastNR_Item_iE_Extensions (OSCTXT* pctxt, TAIBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_TAIBroadcastNR_Item_iE_Extensions 
   (const char* name, const TAIBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastNR_Item_iE_Extensions (const char* name, 
   TAIBroadcastNR_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastNR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastNR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TAIBroadcastNR_Item_iE_Extensions_element* 
   asn1Get_TAIBroadcastNR_Item_iE_Extensions (ProtocolExtensionID id, 
   TAIBroadcastNR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TAIBroadcastNR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TAIBroadcastNR_Item_iE_Extensions* plist, 
   TAIBroadcastNR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_TAIBroadcastNR_Item_iE_Extensions (
   TAIBroadcastNR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastNR_Item                                       */
/*                                                            */
/**************************************************************/
/*
TAIBroadcastNR-Item ::= SEQUENCE {
   tAI [0] TAI,
   completedCellsInTAI-NR [1] CompletedCellsInTAI-NR,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TAIBroadcastNR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TAIBroadcastNR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TAIBroadcastNR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TAIBroadcastNR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAI tAI;
   CompletedCellsInTAI_NR completedCellsInTAI_NR;
   TAIBroadcastNR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TAIBroadcastNR_Item;

EXTERN int asn1PE_TAIBroadcastNR_Item (OSCTXT* pctxt, TAIBroadcastNR_Item* pvalue);

EXTERN int asn1PD_TAIBroadcastNR_Item (OSCTXT* pctxt, TAIBroadcastNR_Item* pvalue);

EXTERN void asn1Print_TAIBroadcastNR_Item 
   (const char* name, const TAIBroadcastNR_Item* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastNR_Item (const char* name, 
   TAIBroadcastNR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastNR_Item (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastNR_Item* pvalue);

EXTERN int asn1Init_TAIBroadcastNR_Item (TAIBroadcastNR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIBroadcastNR                                            */
/*                                                            */
/**************************************************************/
/*
TAIBroadcastNR ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAIBroadcastNR-Item
*/
/* List of TAIBroadcastNR_Item */
typedef OSRTDList TAIBroadcastNR;

EXTERN int asn1PE_TAIBroadcastNR (OSCTXT* pctxt, TAIBroadcastNR* pvalue);

EXTERN int asn1PD_TAIBroadcastNR (OSCTXT* pctxt, TAIBroadcastNR* pvalue);

EXTERN void asn1Print_TAIBroadcastNR (const char* name, const TAIBroadcastNR* pvalue);

EXTERN int asn1PrtToStr_TAIBroadcastNR (const char* name, TAIBroadcastNR* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIBroadcastNR (OSCTXT *pctxt, 
   const char* name, const TAIBroadcastNR* pvalue);

EXTERN int asn1Init_TAIBroadcastNR (TAIBroadcastNR* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_NR_Item_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInEAI-NR-Item'
*/
typedef struct EXTERN CompletedCellsInEAI_NR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CompletedCellsInEAI_NR_Item_iE_Extensions_element;

EXTERN int asn1PE_CompletedCellsInEAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_NR_Item_iE_Extensions_element (OSCTXT* pctxt, CompletedCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_NR_Item_iE_Extensions_element 
   (const char* name, const CompletedCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_NR_Item_iE_Extensions_element (
   const char* name, 
   CompletedCellsInEAI_NR_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_NR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CompletedCellsInEAI_NR_Item_iE_Extensions_element (
   CompletedCellsInEAI_NR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_NR_Item_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CompletedCellsInEAI-NR-Item'
*/
/* List of CompletedCellsInEAI_NR_Item_iE_Extensions_element */
typedef OSRTDList CompletedCellsInEAI_NR_Item_iE_Extensions;

EXTERN int asn1PE_CompletedCellsInEAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInEAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_NR_Item_iE_Extensions (OSCTXT* pctxt, CompletedCellsInEAI_NR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_NR_Item_iE_Extensions 
   (const char* name, const CompletedCellsInEAI_NR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_NR_Item_iE_Extensions (const char* name, 
   CompletedCellsInEAI_NR_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_NR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_NR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CompletedCellsInEAI_NR_Item_iE_Extensions_element* 
   asn1Get_CompletedCellsInEAI_NR_Item_iE_Extensions (ProtocolExtensionID id, 
   CompletedCellsInEAI_NR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CompletedCellsInEAI_NR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CompletedCellsInEAI_NR_Item_iE_Extensions* plist, 
   CompletedCellsInEAI_NR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CompletedCellsInEAI_NR_Item_iE_Extensions (
   CompletedCellsInEAI_NR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_NR_Item                               */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInEAI-NR-Item ::= SEQUENCE {
   nR-CGI [0] NR-CGI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CompletedCellsInEAI-NR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CompletedCellsInEAI-NR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CompletedCellsInEAI-NR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CompletedCellsInEAI_NR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NR_CGI nR_CGI;
   CompletedCellsInEAI_NR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CompletedCellsInEAI_NR_Item;

EXTERN int asn1PE_CompletedCellsInEAI_NR_Item (OSCTXT* pctxt, CompletedCellsInEAI_NR_Item* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_NR_Item (OSCTXT* pctxt, CompletedCellsInEAI_NR_Item* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_NR_Item 
   (const char* name, const CompletedCellsInEAI_NR_Item* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_NR_Item (const char* name, 
   CompletedCellsInEAI_NR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_NR_Item (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_NR_Item* pvalue);

EXTERN int asn1Init_CompletedCellsInEAI_NR_Item (CompletedCellsInEAI_NR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CompletedCellsInEAI_NR                                    */
/*                                                            */
/**************************************************************/
/*
CompletedCellsInEAI-NR ::= SEQUENCE (SIZE (1..maxnoofCellinEAI)) OF CompletedCellsInEAI-NR-Item
*/
/* List of CompletedCellsInEAI_NR_Item */
typedef OSRTDList CompletedCellsInEAI_NR;

EXTERN int asn1PE_CompletedCellsInEAI_NR (OSCTXT* pctxt, CompletedCellsInEAI_NR* pvalue);

EXTERN int asn1PD_CompletedCellsInEAI_NR (OSCTXT* pctxt, CompletedCellsInEAI_NR* pvalue);

EXTERN void asn1Print_CompletedCellsInEAI_NR 
   (const char* name, const CompletedCellsInEAI_NR* pvalue);

EXTERN int asn1PrtToStr_CompletedCellsInEAI_NR (const char* name, 
   CompletedCellsInEAI_NR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CompletedCellsInEAI_NR (OSCTXT *pctxt, 
   const char* name, const CompletedCellsInEAI_NR* pvalue);

EXTERN int asn1Init_CompletedCellsInEAI_NR (CompletedCellsInEAI_NR* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDBroadcastNR-Item'
*/
typedef struct EXTERN EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element;

EXTERN int asn1PE_EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element 
   (const char* name, const EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element (
   const char* name, 
   EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element (
   EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastNR_Item_iE_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyAreaIDBroadcastNR-Item'
*/
/* List of EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element */
typedef OSRTDList EmergencyAreaIDBroadcastNR_Item_iE_Extensions;

EXTERN int asn1PE_EmergencyAreaIDBroadcastNR_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastNR_Item_iE_Extensions (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastNR_Item_iE_Extensions 
   (const char* name, const EmergencyAreaIDBroadcastNR_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastNR_Item_iE_Extensions (
   const char* name, EmergencyAreaIDBroadcastNR_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastNR_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastNR_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EmergencyAreaIDBroadcastNR_Item_iE_Extensions_element* 
   asn1Get_EmergencyAreaIDBroadcastNR_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   EmergencyAreaIDBroadcastNR_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EmergencyAreaIDBroadcastNR_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   EmergencyAreaIDBroadcastNR_Item_iE_Extensions* plist, 
   EmergencyAreaIDBroadcastNR_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_EmergencyAreaIDBroadcastNR_Item_iE_Extensions (
   EmergencyAreaIDBroadcastNR_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastNR_Item                           */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDBroadcastNR-Item ::= SEQUENCE {
   emergencyAreaID [0] EmergencyAreaID,
   completedCellsInEAI-NR [1] CompletedCellsInEAI-NR,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EmergencyAreaIDBroadcastNR-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EmergencyAreaIDBroadcastNR-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EmergencyAreaIDBroadcastNR-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN EmergencyAreaIDBroadcastNR_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EmergencyAreaID emergencyAreaID;
   CompletedCellsInEAI_NR completedCellsInEAI_NR;
   EmergencyAreaIDBroadcastNR_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} EmergencyAreaIDBroadcastNR_Item;

EXTERN int asn1PE_EmergencyAreaIDBroadcastNR_Item (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR_Item* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastNR_Item (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR_Item* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastNR_Item 
   (const char* name, const EmergencyAreaIDBroadcastNR_Item* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastNR_Item (const char* name, 
   EmergencyAreaIDBroadcastNR_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastNR_Item (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastNR_Item* pvalue);

EXTERN int asn1Init_EmergencyAreaIDBroadcastNR_Item (
   EmergencyAreaIDBroadcastNR_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDBroadcastNR                                */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDBroadcastNR ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaIDBroadcastNR-Item
*/
/* List of EmergencyAreaIDBroadcastNR_Item */
typedef OSRTDList EmergencyAreaIDBroadcastNR;

EXTERN int asn1PE_EmergencyAreaIDBroadcastNR (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR* pvalue);

EXTERN int asn1PD_EmergencyAreaIDBroadcastNR (OSCTXT* pctxt, EmergencyAreaIDBroadcastNR* pvalue);

EXTERN void asn1Print_EmergencyAreaIDBroadcastNR 
   (const char* name, const EmergencyAreaIDBroadcastNR* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDBroadcastNR (const char* name, 
   EmergencyAreaIDBroadcastNR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDBroadcastNR (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDBroadcastNR* pvalue);

EXTERN int asn1Init_EmergencyAreaIDBroadcastNR (EmergencyAreaIDBroadcastNR* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastCompletedAreaList_choice_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'BroadcastCompletedAreaList'
*/
typedef struct EXTERN BroadcastCompletedAreaList_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} BroadcastCompletedAreaList_choice_Extensions;

EXTERN int asn1PE_BroadcastCompletedAreaList_choice_Extensions (OSCTXT* pctxt, BroadcastCompletedAreaList_choice_Extensions* pvalue);

EXTERN int asn1PD_BroadcastCompletedAreaList_choice_Extensions (OSCTXT* pctxt, BroadcastCompletedAreaList_choice_Extensions* pvalue);

EXTERN void asn1Print_BroadcastCompletedAreaList_choice_Extensions 
   (const char* name, const BroadcastCompletedAreaList_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_BroadcastCompletedAreaList_choice_Extensions (
   const char* name, BroadcastCompletedAreaList_choice_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastCompletedAreaList_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const BroadcastCompletedAreaList_choice_Extensions* pvalue);

EXTERN int asn1Init_BroadcastCompletedAreaList_choice_Extensions (
   BroadcastCompletedAreaList_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastCompletedAreaList                                */
/*                                                            */
/**************************************************************/
/*
BroadcastCompletedAreaList ::= CHOICE {
   cellIDBroadcastEUTRA [0] CellIDBroadcastEUTRA,
   tAIBroadcastEUTRA [1] TAIBroadcastEUTRA,
   emergencyAreaIDBroadcastEUTRA [2] EmergencyAreaIDBroadcastEUTRA,
   cellIDBroadcastNR [3] CellIDBroadcastNR,
   tAIBroadcastNR [4] TAIBroadcastNR,
   emergencyAreaIDBroadcastNR [5] EmergencyAreaIDBroadcastNR,
   choice-Extensions [6] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({BroadcastCompletedAreaList-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({BroadcastCompletedAreaList-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({BroadcastCompletedAreaList-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_BroadcastCompletedAreaList_cellIDBroadcastEUTRA 1
#define T_BroadcastCompletedAreaList_tAIBroadcastEUTRA 2
#define T_BroadcastCompletedAreaList_emergencyAreaIDBroadcastEUTRA 3
#define T_BroadcastCompletedAreaList_cellIDBroadcastNR 4
#define T_BroadcastCompletedAreaList_tAIBroadcastNR 5
#define T_BroadcastCompletedAreaList_emergencyAreaIDBroadcastNR 6
#define T_BroadcastCompletedAreaList_choice_Extensions 7

typedef struct EXTERN BroadcastCompletedAreaList {
   OSINT32 t;
   union {
      /* t = 1 */
      CellIDBroadcastEUTRA *cellIDBroadcastEUTRA;
      /* t = 2 */
      TAIBroadcastEUTRA *tAIBroadcastEUTRA;
      /* t = 3 */
      EmergencyAreaIDBroadcastEUTRA *emergencyAreaIDBroadcastEUTRA;
      /* t = 4 */
      CellIDBroadcastNR *cellIDBroadcastNR;
      /* t = 5 */
      TAIBroadcastNR *tAIBroadcastNR;
      /* t = 6 */
      EmergencyAreaIDBroadcastNR *emergencyAreaIDBroadcastNR;
      /* t = 7 */
      BroadcastCompletedAreaList_choice_Extensions *choice_Extensions;
   } u;
} BroadcastCompletedAreaList;

EXTERN int asn1PE_BroadcastCompletedAreaList (OSCTXT* pctxt, BroadcastCompletedAreaList* pvalue);

EXTERN int asn1PD_BroadcastCompletedAreaList (OSCTXT* pctxt, BroadcastCompletedAreaList* pvalue);

EXTERN void asn1Print_BroadcastCompletedAreaList 
   (const char* name, const BroadcastCompletedAreaList* pvalue);

EXTERN int asn1PrtToStr_BroadcastCompletedAreaList (const char* name, 
   BroadcastCompletedAreaList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastCompletedAreaList (OSCTXT *pctxt, 
   const char* name, const BroadcastCompletedAreaList* pvalue);

EXTERN int asn1Init_BroadcastCompletedAreaList (BroadcastCompletedAreaList* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceSupportItem_iE_Extensions_element                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SliceSupportItem'
*/
typedef struct EXTERN SliceSupportItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SliceSupportItem_iE_Extensions_element;

EXTERN int asn1PE_SliceSupportItem_iE_Extensions_element (OSCTXT* pctxt, SliceSupportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SliceSupportItem_iE_Extensions_element (OSCTXT* pctxt, SliceSupportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SliceSupportItem_iE_Extensions_element 
   (const char* name, const SliceSupportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SliceSupportItem_iE_Extensions_element (const char* name, 
   SliceSupportItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceSupportItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SliceSupportItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SliceSupportItem_iE_Extensions_element (
   SliceSupportItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceSupportItem_iE_Extensions                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SliceSupportItem'
*/
/* List of SliceSupportItem_iE_Extensions_element */
typedef OSRTDList SliceSupportItem_iE_Extensions;

EXTERN int asn1PE_SliceSupportItem_iE_Extensions (OSCTXT* pctxt, SliceSupportItem_iE_Extensions* pvalue);

EXTERN int asn1PD_SliceSupportItem_iE_Extensions (OSCTXT* pctxt, SliceSupportItem_iE_Extensions* pvalue);

EXTERN void asn1Print_SliceSupportItem_iE_Extensions 
   (const char* name, const SliceSupportItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SliceSupportItem_iE_Extensions (const char* name, 
   SliceSupportItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceSupportItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SliceSupportItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SliceSupportItem_iE_Extensions_element* 
   asn1Get_SliceSupportItem_iE_Extensions (ProtocolExtensionID id, 
   SliceSupportItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SliceSupportItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SliceSupportItem_iE_Extensions* plist, 
   SliceSupportItem_iE_Extensions* pmatches);

EXTERN int asn1Init_SliceSupportItem_iE_Extensions (
   SliceSupportItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceSupportItem                                          */
/*                                                            */
/**************************************************************/
/*
SliceSupportItem ::= SEQUENCE {
   s-NSSAI [0] S-NSSAI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SliceSupportItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SliceSupportItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SliceSupportItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SliceSupportItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   S_NSSAI s_NSSAI;
   SliceSupportItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SliceSupportItem;

EXTERN int asn1PE_SliceSupportItem (OSCTXT* pctxt, SliceSupportItem* pvalue);

EXTERN int asn1PD_SliceSupportItem (OSCTXT* pctxt, SliceSupportItem* pvalue);

EXTERN void asn1Print_SliceSupportItem 
   (const char* name, const SliceSupportItem* pvalue);

EXTERN int asn1PrtToStr_SliceSupportItem (const char* name, SliceSupportItem* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceSupportItem (OSCTXT *pctxt, 
   const char* name, const SliceSupportItem* pvalue);

EXTERN int asn1Init_SliceSupportItem (SliceSupportItem* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceSupportList                                          */
/*                                                            */
/**************************************************************/
/*
SliceSupportList ::= SEQUENCE (SIZE (1..maxnoofSliceItems)) OF SliceSupportItem
*/
/* List of SliceSupportItem */
typedef OSRTDList SliceSupportList;

EXTERN int asn1PE_SliceSupportList (OSCTXT* pctxt, SliceSupportList* pvalue);

EXTERN int asn1PD_SliceSupportList (OSCTXT* pctxt, SliceSupportList* pvalue);

EXTERN void asn1Print_SliceSupportList 
   (const char* name, const SliceSupportList* pvalue);

EXTERN int asn1PrtToStr_SliceSupportList (const char* name, SliceSupportList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceSupportList (OSCTXT *pctxt, 
   const char* name, const SliceSupportList* pvalue);

EXTERN int asn1Init_SliceSupportList (SliceSupportList* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastPLMNItem_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'BroadcastPLMNItem'
*/
typedef struct EXTERN BroadcastPLMNItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} BroadcastPLMNItem_iE_Extensions_element;

EXTERN int asn1PE_BroadcastPLMNItem_iE_Extensions_element (OSCTXT* pctxt, BroadcastPLMNItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_BroadcastPLMNItem_iE_Extensions_element (OSCTXT* pctxt, BroadcastPLMNItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_BroadcastPLMNItem_iE_Extensions_element 
   (const char* name, const BroadcastPLMNItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_BroadcastPLMNItem_iE_Extensions_element (const char* name, 
   BroadcastPLMNItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastPLMNItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const BroadcastPLMNItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_BroadcastPLMNItem_iE_Extensions_element (
   BroadcastPLMNItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastPLMNItem_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'BroadcastPLMNItem'
*/
/* List of BroadcastPLMNItem_iE_Extensions_element */
typedef OSRTDList BroadcastPLMNItem_iE_Extensions;

EXTERN int asn1PE_BroadcastPLMNItem_iE_Extensions (OSCTXT* pctxt, BroadcastPLMNItem_iE_Extensions* pvalue);

EXTERN int asn1PD_BroadcastPLMNItem_iE_Extensions (OSCTXT* pctxt, BroadcastPLMNItem_iE_Extensions* pvalue);

EXTERN void asn1Print_BroadcastPLMNItem_iE_Extensions 
   (const char* name, const BroadcastPLMNItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_BroadcastPLMNItem_iE_Extensions (const char* name, 
   BroadcastPLMNItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastPLMNItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const BroadcastPLMNItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct BroadcastPLMNItem_iE_Extensions_element* 
   asn1Get_BroadcastPLMNItem_iE_Extensions (ProtocolExtensionID id, 
   BroadcastPLMNItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_BroadcastPLMNItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   BroadcastPLMNItem_iE_Extensions* plist, 
   BroadcastPLMNItem_iE_Extensions* pmatches);

EXTERN int asn1Init_BroadcastPLMNItem_iE_Extensions (
   BroadcastPLMNItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastPLMNItem                                         */
/*                                                            */
/**************************************************************/
/*
BroadcastPLMNItem ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   tAISliceSupportList [1] SliceSupportList,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({BroadcastPLMNItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({BroadcastPLMNItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({BroadcastPLMNItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN BroadcastPLMNItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   SliceSupportList tAISliceSupportList;
   BroadcastPLMNItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} BroadcastPLMNItem;

EXTERN int asn1PE_BroadcastPLMNItem (OSCTXT* pctxt, BroadcastPLMNItem* pvalue);

EXTERN int asn1PD_BroadcastPLMNItem (OSCTXT* pctxt, BroadcastPLMNItem* pvalue);

EXTERN void asn1Print_BroadcastPLMNItem 
   (const char* name, const BroadcastPLMNItem* pvalue);

EXTERN int asn1PrtToStr_BroadcastPLMNItem (const char* name, 
   BroadcastPLMNItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastPLMNItem (OSCTXT *pctxt, 
   const char* name, const BroadcastPLMNItem* pvalue);

EXTERN int asn1Init_BroadcastPLMNItem (BroadcastPLMNItem* pvalue);

/**************************************************************/
/*                                                            */
/*  BroadcastPLMNList                                         */
/*                                                            */
/**************************************************************/
/*
BroadcastPLMNList ::= SEQUENCE (SIZE (1..maxnoofBPLMNs)) OF BroadcastPLMNItem
*/
/* List of BroadcastPLMNItem */
typedef OSRTDList BroadcastPLMNList;

EXTERN int asn1PE_BroadcastPLMNList (OSCTXT* pctxt, BroadcastPLMNList* pvalue);

EXTERN int asn1PD_BroadcastPLMNList (OSCTXT* pctxt, BroadcastPLMNList* pvalue);

EXTERN void asn1Print_BroadcastPLMNList 
   (const char* name, const BroadcastPLMNList* pvalue);

EXTERN int asn1PrtToStr_BroadcastPLMNList (const char* name, 
   BroadcastPLMNList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_BroadcastPLMNList (OSCTXT *pctxt, 
   const char* name, const BroadcastPLMNList* pvalue);

EXTERN int asn1Init_BroadcastPLMNList (BroadcastPLMNList* pvalue);

/**************************************************************/
/*                                                            */
/*  Cause_choice_Extensions                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Cause'
*/
typedef struct EXTERN Cause_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} Cause_choice_Extensions;

EXTERN int asn1PE_Cause_choice_Extensions (OSCTXT* pctxt, Cause_choice_Extensions* pvalue);

EXTERN int asn1PD_Cause_choice_Extensions (OSCTXT* pctxt, Cause_choice_Extensions* pvalue);

EXTERN void asn1Print_Cause_choice_Extensions 
   (const char* name, const Cause_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_Cause_choice_Extensions (const char* name, 
   Cause_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Cause_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const Cause_choice_Extensions* pvalue);

EXTERN int asn1Init_Cause_choice_Extensions (Cause_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Cause                                                     */
/*                                                            */
/**************************************************************/
/*
Cause ::= CHOICE {
   radioNetwork [0] CauseRadioNetwork,
   transport [1] CauseTransport,
   nas [2] CauseNas,
   protocol [3] CauseProtocol,
   misc [4] CauseMisc,
   choice-Extensions [5] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({Cause-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({Cause-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({Cause-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_Cause_radioNetwork            1
#define T_Cause_transport               2
#define T_Cause_nas                     3
#define T_Cause_protocol                4
#define T_Cause_misc                    5
#define T_Cause_choice_Extensions       6

typedef struct EXTERN Cause {
   OSINT32 t;
   union {
      /* t = 1 */
      CauseRadioNetwork radioNetwork;
      /* t = 2 */
      CauseTransport transport;
      /* t = 3 */
      CauseNas nas;
      /* t = 4 */
      CauseProtocol protocol;
      /* t = 5 */
      CauseMisc misc;
      /* t = 6 */
      Cause_choice_Extensions *choice_Extensions;
   } u;
} Cause;

EXTERN int asn1PE_Cause (OSCTXT* pctxt, Cause* pvalue);

EXTERN int asn1PD_Cause (OSCTXT* pctxt, Cause* pvalue);

EXTERN void asn1Print_Cause (const char* name, const Cause* pvalue);

EXTERN int asn1PrtToStr_Cause (const char* name, Cause* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Cause (OSCTXT *pctxt, const char* name, const Cause* pvalue);

EXTERN int asn1Init_Cause (Cause* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRA_CGIList                                             */
/*                                                            */
/**************************************************************/
/*
EUTRA-CGIList ::= SEQUENCE (SIZE (1..maxnoofCellsinngeNB)) OF EUTRA-CGI
*/
/* List of EUTRA_CGI */
typedef OSRTDList EUTRA_CGIList;

EXTERN int asn1PE_EUTRA_CGIList (OSCTXT* pctxt, EUTRA_CGIList* pvalue);

EXTERN int asn1PD_EUTRA_CGIList (OSCTXT* pctxt, EUTRA_CGIList* pvalue);

EXTERN void asn1Print_EUTRA_CGIList (const char* name, const EUTRA_CGIList* pvalue);

EXTERN int asn1PrtToStr_EUTRA_CGIList (const char* name, EUTRA_CGIList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRA_CGIList (OSCTXT *pctxt, 
   const char* name, const EUTRA_CGIList* pvalue);

EXTERN int asn1Init_EUTRA_CGIList (EUTRA_CGIList* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGIList                                                */
/*                                                            */
/**************************************************************/
/*
NR-CGIList ::= SEQUENCE (SIZE (1..maxnoofCellsingNB)) OF NR-CGI
*/
/* List of NR_CGI */
typedef OSRTDList NR_CGIList;

EXTERN int asn1PE_NR_CGIList (OSCTXT* pctxt, NR_CGIList* pvalue);

EXTERN int asn1PD_NR_CGIList (OSCTXT* pctxt, NR_CGIList* pvalue);

EXTERN void asn1Print_NR_CGIList (const char* name, const NR_CGIList* pvalue);

EXTERN int asn1PrtToStr_NR_CGIList (const char* name, NR_CGIList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NR_CGIList (OSCTXT *pctxt, 
   const char* name, const NR_CGIList* pvalue);

EXTERN int asn1Init_NR_CGIList (NR_CGIList* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDListForRestart_choice_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellIDListForRestart'
*/
typedef struct EXTERN CellIDListForRestart_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} CellIDListForRestart_choice_Extensions;

EXTERN int asn1PE_CellIDListForRestart_choice_Extensions (OSCTXT* pctxt, CellIDListForRestart_choice_Extensions* pvalue);

EXTERN int asn1PD_CellIDListForRestart_choice_Extensions (OSCTXT* pctxt, CellIDListForRestart_choice_Extensions* pvalue);

EXTERN void asn1Print_CellIDListForRestart_choice_Extensions 
   (const char* name, const CellIDListForRestart_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_CellIDListForRestart_choice_Extensions (const char* name, 
   CellIDListForRestart_choice_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDListForRestart_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const CellIDListForRestart_choice_Extensions* pvalue);

EXTERN int asn1Init_CellIDListForRestart_choice_Extensions (
   CellIDListForRestart_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellIDListForRestart                                      */
/*                                                            */
/**************************************************************/
/*
CellIDListForRestart ::= CHOICE {
   eUTRA-CGIListforRestart [0] EUTRA-CGIList,
   nR-CGIListforRestart [1] NR-CGIList,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({CellIDListForRestart-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({CellIDListForRestart-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({CellIDListForRestart-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_CellIDListForRestart_eUTRA_CGIListforRestart 1
#define T_CellIDListForRestart_nR_CGIListforRestart 2
#define T_CellIDListForRestart_choice_Extensions 3

typedef struct EXTERN CellIDListForRestart {
   OSINT32 t;
   union {
      /* t = 1 */
      EUTRA_CGIList *eUTRA_CGIListforRestart;
      /* t = 2 */
      NR_CGIList *nR_CGIListforRestart;
      /* t = 3 */
      CellIDListForRestart_choice_Extensions *choice_Extensions;
   } u;
} CellIDListForRestart;

EXTERN int asn1PE_CellIDListForRestart (OSCTXT* pctxt, CellIDListForRestart* pvalue);

EXTERN int asn1PD_CellIDListForRestart (OSCTXT* pctxt, CellIDListForRestart* pvalue);

EXTERN void asn1Print_CellIDListForRestart 
   (const char* name, const CellIDListForRestart* pvalue);

EXTERN int asn1PrtToStr_CellIDListForRestart (const char* name, 
   CellIDListForRestart* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellIDListForRestart (OSCTXT *pctxt, 
   const char* name, const CellIDListForRestart* pvalue);

EXTERN int asn1Init_CellIDListForRestart (CellIDListForRestart* pvalue);

/**************************************************************/
/*                                                            */
/*  CellType_iE_Extensions_element                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellType'
*/
typedef struct EXTERN CellType_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CellType_iE_Extensions_element;

EXTERN int asn1PE_CellType_iE_Extensions_element (OSCTXT* pctxt, CellType_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CellType_iE_Extensions_element (OSCTXT* pctxt, CellType_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CellType_iE_Extensions_element 
   (const char* name, const CellType_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CellType_iE_Extensions_element (const char* name, 
   CellType_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellType_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CellType_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CellType_iE_Extensions_element (
   CellType_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CellType_iE_Extensions                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CellType'
*/
/* List of CellType_iE_Extensions_element */
typedef OSRTDList CellType_iE_Extensions;

EXTERN int asn1PE_CellType_iE_Extensions (OSCTXT* pctxt, CellType_iE_Extensions* pvalue);

EXTERN int asn1PD_CellType_iE_Extensions (OSCTXT* pctxt, CellType_iE_Extensions* pvalue);

EXTERN void asn1Print_CellType_iE_Extensions 
   (const char* name, const CellType_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CellType_iE_Extensions (const char* name, 
   CellType_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellType_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CellType_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CellType_iE_Extensions_element* asn1Get_CellType_iE_Extensions 
   (ProtocolExtensionID id, CellType_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CellType_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, CellType_iE_Extensions* plist, 
   CellType_iE_Extensions* pmatches);

EXTERN int asn1Init_CellType_iE_Extensions (CellType_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CellType                                                  */
/*                                                            */
/**************************************************************/
/*
CellType ::= SEQUENCE {
   cellSize [0] CellSize,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CellType-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CellType-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CellType-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CellType {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CellSize cellSize;
   CellType_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CellType;

EXTERN int asn1PE_CellType (OSCTXT* pctxt, CellType* pvalue);

EXTERN int asn1PD_CellType (OSCTXT* pctxt, CellType* pvalue);

EXTERN void asn1Print_CellType (const char* name, const CellType* pvalue);

EXTERN int asn1PrtToStr_CellType (const char* name, CellType* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CellType (OSCTXT *pctxt, 
   const char* name, const CellType* pvalue);

EXTERN int asn1Init_CellType (CellType* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEActivityBehaviour_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEActivityBehaviour'
*/
typedef struct EXTERN ExpectedUEActivityBehaviour_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} ExpectedUEActivityBehaviour_iE_Extensions_element;

EXTERN int asn1PE_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT* pctxt, ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PD_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT* pctxt, ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Print_ExpectedUEActivityBehaviour_iE_Extensions_element 
   (const char* name, const ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEActivityBehaviour_iE_Extensions_element (
   const char* name, 
   ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEActivityBehaviour_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1Init_ExpectedUEActivityBehaviour_iE_Extensions_element (
   ExpectedUEActivityBehaviour_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEActivityBehaviour_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEActivityBehaviour'
*/
/* List of ExpectedUEActivityBehaviour_iE_Extensions_element */
typedef OSRTDList ExpectedUEActivityBehaviour_iE_Extensions;

EXTERN int asn1PE_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT* pctxt, ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PD_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT* pctxt, ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

EXTERN void asn1Print_ExpectedUEActivityBehaviour_iE_Extensions 
   (const char* name, const ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEActivityBehaviour_iE_Extensions (const char* name, 
   ExpectedUEActivityBehaviour_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEActivityBehaviour_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct ExpectedUEActivityBehaviour_iE_Extensions_element* 
   asn1Get_ExpectedUEActivityBehaviour_iE_Extensions (ProtocolExtensionID id, 
   ExpectedUEActivityBehaviour_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_ExpectedUEActivityBehaviour_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   ExpectedUEActivityBehaviour_iE_Extensions* plist, 
   ExpectedUEActivityBehaviour_iE_Extensions* pmatches);

EXTERN int asn1Init_ExpectedUEActivityBehaviour_iE_Extensions (
   ExpectedUEActivityBehaviour_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEActivityBehaviour                               */
/*                                                            */
/**************************************************************/
/*
ExpectedUEActivityBehaviour ::= SEQUENCE {
   expectedActivityPeriod [0] ExpectedActivityPeriod OPTIONAL,
   expectedIdlePeriod [1] ExpectedIdlePeriod OPTIONAL,
   sourceOfUEActivityBehaviourInformation [2] SourceOfUEActivityBehaviourInformation OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({ExpectedUEActivityBehaviour-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({ExpectedUEActivityBehaviour-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({ExpectedUEActivityBehaviour-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN ExpectedUEActivityBehaviour {
   struct {
      unsigned expectedActivityPeriodPresent : 1;
      unsigned expectedIdlePeriodPresent : 1;
      unsigned sourceOfUEActivityBehaviourInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ExpectedActivityPeriod expectedActivityPeriod;
   ExpectedIdlePeriod expectedIdlePeriod;
   SourceOfUEActivityBehaviourInformation sourceOfUEActivityBehaviourInformation;
   ExpectedUEActivityBehaviour_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} ExpectedUEActivityBehaviour;

EXTERN int asn1PE_ExpectedUEActivityBehaviour (OSCTXT* pctxt, ExpectedUEActivityBehaviour* pvalue);

EXTERN int asn1PD_ExpectedUEActivityBehaviour (OSCTXT* pctxt, ExpectedUEActivityBehaviour* pvalue);

EXTERN void asn1Print_ExpectedUEActivityBehaviour 
   (const char* name, const ExpectedUEActivityBehaviour* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEActivityBehaviour (const char* name, 
   ExpectedUEActivityBehaviour* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEActivityBehaviour (OSCTXT *pctxt, 
   const char* name, const ExpectedUEActivityBehaviour* pvalue);

EXTERN int asn1Init_ExpectedUEActivityBehaviour (ExpectedUEActivityBehaviour* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEMovingTrajectoryItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEMovingTrajectoryItem'
*/
typedef struct EXTERN ExpectedUEMovingTrajectoryItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} ExpectedUEMovingTrajectoryItem_iE_Extensions_element;

EXTERN int asn1PE_ExpectedUEMovingTrajectoryItem_iE_Extensions_element (OSCTXT* pctxt, ExpectedUEMovingTrajectoryItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_ExpectedUEMovingTrajectoryItem_iE_Extensions_element (OSCTXT* pctxt, ExpectedUEMovingTrajectoryItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_ExpectedUEMovingTrajectoryItem_iE_Extensions_element 
   (const char* name, const ExpectedUEMovingTrajectoryItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEMovingTrajectoryItem_iE_Extensions_element (
   const char* name, 
   ExpectedUEMovingTrajectoryItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEMovingTrajectoryItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const ExpectedUEMovingTrajectoryItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_ExpectedUEMovingTrajectoryItem_iE_Extensions_element (
   ExpectedUEMovingTrajectoryItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEMovingTrajectoryItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEMovingTrajectoryItem'
*/
/* List of ExpectedUEMovingTrajectoryItem_iE_Extensions_element */
typedef OSRTDList ExpectedUEMovingTrajectoryItem_iE_Extensions;

EXTERN int asn1PE_ExpectedUEMovingTrajectoryItem_iE_Extensions (OSCTXT* pctxt, ExpectedUEMovingTrajectoryItem_iE_Extensions* pvalue);

EXTERN int asn1PD_ExpectedUEMovingTrajectoryItem_iE_Extensions (OSCTXT* pctxt, ExpectedUEMovingTrajectoryItem_iE_Extensions* pvalue);

EXTERN void asn1Print_ExpectedUEMovingTrajectoryItem_iE_Extensions 
   (const char* name, const ExpectedUEMovingTrajectoryItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEMovingTrajectoryItem_iE_Extensions (
   const char* name, ExpectedUEMovingTrajectoryItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEMovingTrajectoryItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const ExpectedUEMovingTrajectoryItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct ExpectedUEMovingTrajectoryItem_iE_Extensions_element* 
   asn1Get_ExpectedUEMovingTrajectoryItem_iE_Extensions 
   (ProtocolExtensionID id, 
   ExpectedUEMovingTrajectoryItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_ExpectedUEMovingTrajectoryItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   ExpectedUEMovingTrajectoryItem_iE_Extensions* plist, 
   ExpectedUEMovingTrajectoryItem_iE_Extensions* pmatches);

EXTERN int asn1Init_ExpectedUEMovingTrajectoryItem_iE_Extensions (
   ExpectedUEMovingTrajectoryItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEMovingTrajectoryItem                            */
/*                                                            */
/**************************************************************/
/*
ExpectedUEMovingTrajectoryItem ::= SEQUENCE {
   nGRAN-CGI [0] EXPLICIT NGRAN-CGI,
   timeStayedInCell [1] INTEGER (0..4095) OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({ExpectedUEMovingTrajectoryItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({ExpectedUEMovingTrajectoryItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({ExpectedUEMovingTrajectoryItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN ExpectedUEMovingTrajectoryItem {
   struct {
      unsigned timeStayedInCellPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NGRAN_CGI nGRAN_CGI;
   OSUINT16 timeStayedInCell;
   ExpectedUEMovingTrajectoryItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} ExpectedUEMovingTrajectoryItem;

EXTERN int asn1PE_ExpectedUEMovingTrajectoryItem (OSCTXT* pctxt, ExpectedUEMovingTrajectoryItem* pvalue);

EXTERN int asn1PD_ExpectedUEMovingTrajectoryItem (OSCTXT* pctxt, ExpectedUEMovingTrajectoryItem* pvalue);

EXTERN void asn1Print_ExpectedUEMovingTrajectoryItem 
   (const char* name, const ExpectedUEMovingTrajectoryItem* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEMovingTrajectoryItem (const char* name, 
   ExpectedUEMovingTrajectoryItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEMovingTrajectoryItem (OSCTXT *pctxt, 
   const char* name, const ExpectedUEMovingTrajectoryItem* pvalue);

EXTERN int asn1Init_ExpectedUEMovingTrajectoryItem (
   ExpectedUEMovingTrajectoryItem* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEMovingTrajectory                                */
/*                                                            */
/**************************************************************/
/*
ExpectedUEMovingTrajectory ::= SEQUENCE (SIZE (1..maxnoofCellsUEMovingTrajectory)) OF ExpectedUEMovingTrajectoryItem
*/
/* List of ExpectedUEMovingTrajectoryItem */
typedef OSRTDList ExpectedUEMovingTrajectory;

EXTERN int asn1PE_ExpectedUEMovingTrajectory (OSCTXT* pctxt, ExpectedUEMovingTrajectory* pvalue);

EXTERN int asn1PD_ExpectedUEMovingTrajectory (OSCTXT* pctxt, ExpectedUEMovingTrajectory* pvalue);

EXTERN void asn1Print_ExpectedUEMovingTrajectory 
   (const char* name, const ExpectedUEMovingTrajectory* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEMovingTrajectory (const char* name, 
   ExpectedUEMovingTrajectory* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEMovingTrajectory (OSCTXT *pctxt, 
   const char* name, const ExpectedUEMovingTrajectory* pvalue);

EXTERN int asn1Init_ExpectedUEMovingTrajectory (ExpectedUEMovingTrajectory* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEBehaviour_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEBehaviour'
*/
typedef struct EXTERN ExpectedUEBehaviour_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} ExpectedUEBehaviour_iE_Extensions_element;

EXTERN int asn1PE_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT* pctxt, ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PD_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT* pctxt, ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN void asn1Print_ExpectedUEBehaviour_iE_Extensions_element 
   (const char* name, const ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEBehaviour_iE_Extensions_element (const char* name, 
   ExpectedUEBehaviour_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEBehaviour_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const ExpectedUEBehaviour_iE_Extensions_element* pvalue);

EXTERN int asn1Init_ExpectedUEBehaviour_iE_Extensions_element (
   ExpectedUEBehaviour_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEBehaviour_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExpectedUEBehaviour'
*/
/* List of ExpectedUEBehaviour_iE_Extensions_element */
typedef OSRTDList ExpectedUEBehaviour_iE_Extensions;

EXTERN int asn1PE_ExpectedUEBehaviour_iE_Extensions (OSCTXT* pctxt, ExpectedUEBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PD_ExpectedUEBehaviour_iE_Extensions (OSCTXT* pctxt, ExpectedUEBehaviour_iE_Extensions* pvalue);

EXTERN void asn1Print_ExpectedUEBehaviour_iE_Extensions 
   (const char* name, const ExpectedUEBehaviour_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEBehaviour_iE_Extensions (const char* name, 
   ExpectedUEBehaviour_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEBehaviour_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const ExpectedUEBehaviour_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct ExpectedUEBehaviour_iE_Extensions_element* 
   asn1Get_ExpectedUEBehaviour_iE_Extensions (ProtocolExtensionID id, 
   ExpectedUEBehaviour_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_ExpectedUEBehaviour_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   ExpectedUEBehaviour_iE_Extensions* plist, 
   ExpectedUEBehaviour_iE_Extensions* pmatches);

EXTERN int asn1Init_ExpectedUEBehaviour_iE_Extensions (
   ExpectedUEBehaviour_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpectedUEBehaviour                                       */
/*                                                            */
/**************************************************************/
/*
ExpectedUEBehaviour ::= SEQUENCE {
   expectedUEActivityBehaviour [0] ExpectedUEActivityBehaviour OPTIONAL,
   expectedHOInterval [1] ExpectedHOInterval OPTIONAL,
   expectedUEMobility [2] ExpectedUEMobility OPTIONAL,
   expectedUEMovingTrajectory [3] ExpectedUEMovingTrajectory OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({ExpectedUEBehaviour-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({ExpectedUEBehaviour-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({ExpectedUEBehaviour-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN ExpectedUEBehaviour {
   struct {
      unsigned expectedUEActivityBehaviourPresent : 1;
      unsigned expectedHOIntervalPresent : 1;
      unsigned expectedUEMobilityPresent : 1;
      unsigned expectedUEMovingTrajectoryPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ExpectedUEActivityBehaviour expectedUEActivityBehaviour;
   ExpectedHOInterval expectedHOInterval;
   ExpectedUEMobility expectedUEMobility;
   ExpectedUEMovingTrajectory expectedUEMovingTrajectory;
   ExpectedUEBehaviour_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} ExpectedUEBehaviour;

EXTERN int asn1PE_ExpectedUEBehaviour (OSCTXT* pctxt, ExpectedUEBehaviour* pvalue);

EXTERN int asn1PD_ExpectedUEBehaviour (OSCTXT* pctxt, ExpectedUEBehaviour* pvalue);

EXTERN void asn1Print_ExpectedUEBehaviour 
   (const char* name, const ExpectedUEBehaviour* pvalue);

EXTERN int asn1PrtToStr_ExpectedUEBehaviour (const char* name, 
   ExpectedUEBehaviour* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ExpectedUEBehaviour (OSCTXT *pctxt, 
   const char* name, const ExpectedUEBehaviour* pvalue);

EXTERN int asn1Init_ExpectedUEBehaviour (ExpectedUEBehaviour* pvalue);

/**************************************************************/
/*                                                            */
/*  CNAssistedRANTuning_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CNAssistedRANTuning'
*/
typedef struct EXTERN CNAssistedRANTuning_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CNAssistedRANTuning_iE_Extensions_element;

EXTERN int asn1PE_CNAssistedRANTuning_iE_Extensions_element (OSCTXT* pctxt, CNAssistedRANTuning_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CNAssistedRANTuning_iE_Extensions_element (OSCTXT* pctxt, CNAssistedRANTuning_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CNAssistedRANTuning_iE_Extensions_element 
   (const char* name, const CNAssistedRANTuning_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CNAssistedRANTuning_iE_Extensions_element (const char* name, 
   CNAssistedRANTuning_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNAssistedRANTuning_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CNAssistedRANTuning_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CNAssistedRANTuning_iE_Extensions_element (
   CNAssistedRANTuning_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CNAssistedRANTuning_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CNAssistedRANTuning'
*/
/* List of CNAssistedRANTuning_iE_Extensions_element */
typedef OSRTDList CNAssistedRANTuning_iE_Extensions;

EXTERN int asn1PE_CNAssistedRANTuning_iE_Extensions (OSCTXT* pctxt, CNAssistedRANTuning_iE_Extensions* pvalue);

EXTERN int asn1PD_CNAssistedRANTuning_iE_Extensions (OSCTXT* pctxt, CNAssistedRANTuning_iE_Extensions* pvalue);

EXTERN void asn1Print_CNAssistedRANTuning_iE_Extensions 
   (const char* name, const CNAssistedRANTuning_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CNAssistedRANTuning_iE_Extensions (const char* name, 
   CNAssistedRANTuning_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNAssistedRANTuning_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CNAssistedRANTuning_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CNAssistedRANTuning_iE_Extensions_element* 
   asn1Get_CNAssistedRANTuning_iE_Extensions (ProtocolExtensionID id, 
   CNAssistedRANTuning_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CNAssistedRANTuning_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CNAssistedRANTuning_iE_Extensions* plist, 
   CNAssistedRANTuning_iE_Extensions* pmatches);

EXTERN int asn1Init_CNAssistedRANTuning_iE_Extensions (
   CNAssistedRANTuning_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CNAssistedRANTuning                                       */
/*                                                            */
/**************************************************************/
/*
CNAssistedRANTuning ::= SEQUENCE {
   expectedUEBehaviour [0] ExpectedUEBehaviour OPTIONAL,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CNAssistedRANTuning-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CNAssistedRANTuning-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CNAssistedRANTuning-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CNAssistedRANTuning {
   struct {
      unsigned expectedUEBehaviourPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ExpectedUEBehaviour expectedUEBehaviour;
   CNAssistedRANTuning_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CNAssistedRANTuning;

EXTERN int asn1PE_CNAssistedRANTuning (OSCTXT* pctxt, CNAssistedRANTuning* pvalue);

EXTERN int asn1PD_CNAssistedRANTuning (OSCTXT* pctxt, CNAssistedRANTuning* pvalue);

EXTERN void asn1Print_CNAssistedRANTuning 
   (const char* name, const CNAssistedRANTuning* pvalue);

EXTERN int asn1PrtToStr_CNAssistedRANTuning (const char* name, 
   CNAssistedRANTuning* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNAssistedRANTuning (OSCTXT *pctxt, 
   const char* name, const CNAssistedRANTuning* pvalue);

EXTERN int asn1Init_CNAssistedRANTuning (CNAssistedRANTuning* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictionsForEquivalentItem_iE_Extensions_elemen  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CNTypeRestrictionsForEquivalentItem'
*/
typedef struct EXTERN CNTypeRestrictionsForEquivalentItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CNTypeRestrictionsForEquivalentItem_iE_Extensions_element;

EXTERN int asn1PE_CNTypeRestrictionsForEquivalentItem_iE_Extensions_element (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CNTypeRestrictionsForEquivalentItem_iE_Extensions_element (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CNTypeRestrictionsForEquivalentItem_iE_Extensions_element 
   (const char* name, const CNTypeRestrictionsForEquivalentItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CNTypeRestrictionsForEquivalentItem_iE_Extensions_element (
   const char* name, 
   CNTypeRestrictionsForEquivalentItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNTypeRestrictionsForEquivalentItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CNTypeRestrictionsForEquivalentItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CNTypeRestrictionsForEquivalentItem_iE_Extensions_element (
   CNTypeRestrictionsForEquivalentItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictionsForEquivalentItem_iE_Extensions         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CNTypeRestrictionsForEquivalentItem'
*/
/* List of CNTypeRestrictionsForEquivalentItem_iE_Extensions_element */
typedef OSRTDList CNTypeRestrictionsForEquivalentItem_iE_Extensions;

EXTERN int asn1PE_CNTypeRestrictionsForEquivalentItem_iE_Extensions (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem_iE_Extensions* pvalue);

EXTERN int asn1PD_CNTypeRestrictionsForEquivalentItem_iE_Extensions (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem_iE_Extensions* pvalue);

EXTERN void asn1Print_CNTypeRestrictionsForEquivalentItem_iE_Extensions 
   (const char* name, const CNTypeRestrictionsForEquivalentItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CNTypeRestrictionsForEquivalentItem_iE_Extensions (
   const char* name, 
   CNTypeRestrictionsForEquivalentItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNTypeRestrictionsForEquivalentItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CNTypeRestrictionsForEquivalentItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CNTypeRestrictionsForEquivalentItem_iE_Extensions_element* 
   asn1Get_CNTypeRestrictionsForEquivalentItem_iE_Extensions 
   (ProtocolExtensionID id, 
   CNTypeRestrictionsForEquivalentItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CNTypeRestrictionsForEquivalentItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CNTypeRestrictionsForEquivalentItem_iE_Extensions* plist, 
   CNTypeRestrictionsForEquivalentItem_iE_Extensions* pmatches);

EXTERN int asn1Init_CNTypeRestrictionsForEquivalentItem_iE_Extensions (
   CNTypeRestrictionsForEquivalentItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictionsForEquivalentItem                       */
/*                                                            */
/**************************************************************/
/*
CNTypeRestrictionsForEquivalentItem ::= SEQUENCE {
   plmnIdentity [0] PLMNIdentity,
   cn-Type [1] ENUMERATED { epc-forbidden(0), fiveGC-forbidden(1), ... },
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CNTypeRestrictionsForEquivalentItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CNTypeRestrictionsForEquivalentItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CNTypeRestrictionsForEquivalentItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CNTypeRestrictionsForEquivalentItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity plmnIdentity;
   CNTypeRestrictionsForEquivalentItem_cn_Type cn_Type;
   CNTypeRestrictionsForEquivalentItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CNTypeRestrictionsForEquivalentItem;

EXTERN int asn1PE_CNTypeRestrictionsForEquivalentItem (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem* pvalue);

EXTERN int asn1PD_CNTypeRestrictionsForEquivalentItem (OSCTXT* pctxt, CNTypeRestrictionsForEquivalentItem* pvalue);

EXTERN void asn1Print_CNTypeRestrictionsForEquivalentItem 
   (const char* name, const CNTypeRestrictionsForEquivalentItem* pvalue);

EXTERN int asn1PrtToStr_CNTypeRestrictionsForEquivalentItem (const char* name, 
   CNTypeRestrictionsForEquivalentItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNTypeRestrictionsForEquivalentItem (OSCTXT *pctxt, 
   const char* name, const CNTypeRestrictionsForEquivalentItem* pvalue);

EXTERN int asn1Init_CNTypeRestrictionsForEquivalentItem (
   CNTypeRestrictionsForEquivalentItem* pvalue);

/**************************************************************/
/*                                                            */
/*  CNTypeRestrictionsForEquivalent                           */
/*                                                            */
/**************************************************************/
/*
CNTypeRestrictionsForEquivalent ::= SEQUENCE (SIZE (1..maxnoofEPLMNs)) OF CNTypeRestrictionsForEquivalentItem
*/
/* List of CNTypeRestrictionsForEquivalentItem */
typedef OSRTDList CNTypeRestrictionsForEquivalent;

EXTERN int asn1PE_CNTypeRestrictionsForEquivalent (OSCTXT* pctxt, CNTypeRestrictionsForEquivalent* pvalue);

EXTERN int asn1PD_CNTypeRestrictionsForEquivalent (OSCTXT* pctxt, CNTypeRestrictionsForEquivalent* pvalue);

EXTERN void asn1Print_CNTypeRestrictionsForEquivalent 
   (const char* name, const CNTypeRestrictionsForEquivalent* pvalue);

EXTERN int asn1PrtToStr_CNTypeRestrictionsForEquivalent (const char* name, 
   CNTypeRestrictionsForEquivalent* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CNTypeRestrictionsForEquivalent (OSCTXT *pctxt, 
   const char* name, const CNTypeRestrictionsForEquivalent* pvalue);

EXTERN int asn1Init_CNTypeRestrictionsForEquivalent (
   CNTypeRestrictionsForEquivalent* pvalue);

/**************************************************************/
/*                                                            */
/*  UEIdentityIndexValue_choice_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEIdentityIndexValue'
*/
typedef struct EXTERN UEIdentityIndexValue_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} UEIdentityIndexValue_choice_Extensions;

EXTERN int asn1PE_UEIdentityIndexValue_choice_Extensions (OSCTXT* pctxt, UEIdentityIndexValue_choice_Extensions* pvalue);

EXTERN int asn1PD_UEIdentityIndexValue_choice_Extensions (OSCTXT* pctxt, UEIdentityIndexValue_choice_Extensions* pvalue);

EXTERN void asn1Print_UEIdentityIndexValue_choice_Extensions 
   (const char* name, const UEIdentityIndexValue_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_UEIdentityIndexValue_choice_Extensions (const char* name, 
   UEIdentityIndexValue_choice_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEIdentityIndexValue_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const UEIdentityIndexValue_choice_Extensions* pvalue);

EXTERN int asn1Init_UEIdentityIndexValue_choice_Extensions (
   UEIdentityIndexValue_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UEIdentityIndexValue                                      */
/*                                                            */
/**************************************************************/
/*
UEIdentityIndexValue ::= CHOICE {
   indexLength10 [0] BIT STRING  (SIZE (10)),
   choice-Extensions [1] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEIdentityIndexValue-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEIdentityIndexValue-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEIdentityIndexValue-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_UEIdentityIndexValue_indexLength10 1
#define T_UEIdentityIndexValue_choice_Extensions 2

typedef struct EXTERN UEIdentityIndexValue {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1BitStr32 *indexLength10;
      /* t = 2 */
      UEIdentityIndexValue_choice_Extensions *choice_Extensions;
   } u;
} UEIdentityIndexValue;

EXTERN int asn1PE_UEIdentityIndexValue (OSCTXT* pctxt, UEIdentityIndexValue* pvalue);

EXTERN int asn1PD_UEIdentityIndexValue (OSCTXT* pctxt, UEIdentityIndexValue* pvalue);

EXTERN void asn1Print_UEIdentityIndexValue 
   (const char* name, const UEIdentityIndexValue* pvalue);

EXTERN int asn1PrtToStr_UEIdentityIndexValue (const char* name, 
   UEIdentityIndexValue* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEIdentityIndexValue (OSCTXT *pctxt, 
   const char* name, const UEIdentityIndexValue* pvalue);

EXTERN int asn1Init_UEIdentityIndexValue (UEIdentityIndexValue* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForInactiveItem_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIListForInactiveItem'
*/
typedef struct EXTERN TAIListForInactiveItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TAIListForInactiveItem_iE_Extensions_element;

EXTERN int asn1PE_TAIListForInactiveItem_iE_Extensions_element (OSCTXT* pctxt, TAIListForInactiveItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TAIListForInactiveItem_iE_Extensions_element (OSCTXT* pctxt, TAIListForInactiveItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TAIListForInactiveItem_iE_Extensions_element 
   (const char* name, const TAIListForInactiveItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TAIListForInactiveItem_iE_Extensions_element (
   const char* name, TAIListForInactiveItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForInactiveItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TAIListForInactiveItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TAIListForInactiveItem_iE_Extensions_element (
   TAIListForInactiveItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForInactiveItem_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIListForInactiveItem'
*/
/* List of TAIListForInactiveItem_iE_Extensions_element */
typedef OSRTDList TAIListForInactiveItem_iE_Extensions;

EXTERN int asn1PE_TAIListForInactiveItem_iE_Extensions (OSCTXT* pctxt, TAIListForInactiveItem_iE_Extensions* pvalue);

EXTERN int asn1PD_TAIListForInactiveItem_iE_Extensions (OSCTXT* pctxt, TAIListForInactiveItem_iE_Extensions* pvalue);

EXTERN void asn1Print_TAIListForInactiveItem_iE_Extensions 
   (const char* name, const TAIListForInactiveItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TAIListForInactiveItem_iE_Extensions (const char* name, 
   TAIListForInactiveItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForInactiveItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TAIListForInactiveItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TAIListForInactiveItem_iE_Extensions_element* 
   asn1Get_TAIListForInactiveItem_iE_Extensions (ProtocolExtensionID id, 
   TAIListForInactiveItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TAIListForInactiveItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TAIListForInactiveItem_iE_Extensions* plist, 
   TAIListForInactiveItem_iE_Extensions* pmatches);

EXTERN int asn1Init_TAIListForInactiveItem_iE_Extensions (
   TAIListForInactiveItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForInactiveItem                                    */
/*                                                            */
/**************************************************************/
/*
TAIListForInactiveItem ::= SEQUENCE {
   tAI [0] TAI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TAIListForInactiveItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TAIListForInactiveItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TAIListForInactiveItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TAIListForInactiveItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAI tAI;
   TAIListForInactiveItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TAIListForInactiveItem;

EXTERN int asn1PE_TAIListForInactiveItem (OSCTXT* pctxt, TAIListForInactiveItem* pvalue);

EXTERN int asn1PD_TAIListForInactiveItem (OSCTXT* pctxt, TAIListForInactiveItem* pvalue);

EXTERN void asn1Print_TAIListForInactiveItem 
   (const char* name, const TAIListForInactiveItem* pvalue);

EXTERN int asn1PrtToStr_TAIListForInactiveItem (const char* name, 
   TAIListForInactiveItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForInactiveItem (OSCTXT *pctxt, 
   const char* name, const TAIListForInactiveItem* pvalue);

EXTERN int asn1Init_TAIListForInactiveItem (TAIListForInactiveItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForInactive                                        */
/*                                                            */
/**************************************************************/
/*
TAIListForInactive ::= SEQUENCE (SIZE (1..maxnoofTAIforInactive)) OF TAIListForInactiveItem
*/
/* List of TAIListForInactiveItem */
typedef OSRTDList TAIListForInactive;

EXTERN int asn1PE_TAIListForInactive (OSCTXT* pctxt, TAIListForInactive* pvalue);

EXTERN int asn1PD_TAIListForInactive (OSCTXT* pctxt, TAIListForInactive* pvalue);

EXTERN void asn1Print_TAIListForInactive 
   (const char* name, const TAIListForInactive* pvalue);

EXTERN int asn1PrtToStr_TAIListForInactive (const char* name, 
   TAIListForInactive* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForInactive (OSCTXT *pctxt, 
   const char* name, const TAIListForInactive* pvalue);

EXTERN int asn1Init_TAIListForInactive (TAIListForInactive* pvalue);

/**************************************************************/
/*                                                            */
/*  CoreNetworkAssistanceInformationForInactive_iE_Extension  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CoreNetworkAssistanceInformationForInactive'
*/
typedef struct EXTERN CoreNetworkAssistanceInformationForInactive_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CoreNetworkAssistanceInformationForInactive_iE_Extensions_element;

EXTERN int asn1PE_CoreNetworkAssistanceInformationForInactive_iE_Extensions_element (OSCTXT* pctxt, CoreNetworkAssistanceInformationForInactive_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CoreNetworkAssistanceInformationForInactive_iE_Extensions_element (OSCTXT* pctxt, CoreNetworkAssistanceInformationForInactive_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CoreNetworkAssistanceInformationForInactive_iE_Extensions_element 
   (const char* name, const CoreNetworkAssistanceInformationForInactive_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CoreNetworkAssistanceInformationForInactive_iE_Extensions_element (
   const char* name, 
   CoreNetworkAssistanceInformationForInactive_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CoreNetworkAssistanceInformationForInactive_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CoreNetworkAssistanceInformationForInactive_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CoreNetworkAssistanceInformationForInactive_iE_Extensions_element (
   CoreNetworkAssistanceInformationForInactive_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CoreNetworkAssistanceInformationForInactive_iE_Extension  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CoreNetworkAssistanceInformationForInactive'
*/
/* List of CoreNetworkAssistanceInformationForInactive_iE_Extensions_element */
typedef OSRTDList CoreNetworkAssistanceInformationForInactive_iE_Extensions;

EXTERN int asn1PE_CoreNetworkAssistanceInformationForInactive_iE_Extensions (OSCTXT* pctxt, CoreNetworkAssistanceInformationForInactive_iE_Extensions* pvalue);

EXTERN int asn1PD_CoreNetworkAssistanceInformationForInactive_iE_Extensions (OSCTXT* pctxt, CoreNetworkAssistanceInformationForInactive_iE_Extensions* pvalue);

EXTERN void asn1Print_CoreNetworkAssistanceInformationForInactive_iE_Extensions 
   (const char* name, const CoreNetworkAssistanceInformationForInactive_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CoreNetworkAssistanceInformationForInactive_iE_Extensions (
   const char* name, 
   CoreNetworkAssistanceInformationForInactive_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CoreNetworkAssistanceInformationForInactive_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CoreNetworkAssistanceInformationForInactive_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CoreNetworkAssistanceInformationForInactive_iE_Extensions_element* 
   asn1Get_CoreNetworkAssistanceInformationForInactive_iE_Extensions 
   (ProtocolExtensionID id, 
   CoreNetworkAssistanceInformationForInactive_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int 
   asn1GetAll_CoreNetworkAssistanceInformationForInactive_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CoreNetworkAssistanceInformationForInactive_iE_Extensions* plist, 
   CoreNetworkAssistanceInformationForInactive_iE_Extensions* pmatches);

EXTERN int asn1Init_CoreNetworkAssistanceInformationForInactive_iE_Extensions (
   CoreNetworkAssistanceInformationForInactive_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CoreNetworkAssistanceInformationForInactive               */
/*                                                            */
/**************************************************************/
/*
CoreNetworkAssistanceInformationForInactive ::= SEQUENCE {
   uEIdentityIndexValue [0] EXPLICIT UEIdentityIndexValue,
   uESpecificDRX [1] PagingDRX OPTIONAL,
   periodicRegistrationUpdateTimer [2] PeriodicRegistrationUpdateTimer,
   mICOModeIndication [3] MICOModeIndication OPTIONAL,
   tAIListForInactive [4] TAIListForInactive,
   expectedUEBehaviour [5] ExpectedUEBehaviour OPTIONAL,
   iE-Extensions [6] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CoreNetworkAssistanceInformationForInactive-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CoreNetworkAssistanceInformationForInactive-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CoreNetworkAssistanceInformationForInactive-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CoreNetworkAssistanceInformationForInactive {
   struct {
      unsigned uESpecificDRXPresent : 1;
      unsigned mICOModeIndicationPresent : 1;
      unsigned expectedUEBehaviourPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UEIdentityIndexValue uEIdentityIndexValue;
   PagingDRX uESpecificDRX;
   PeriodicRegistrationUpdateTimer periodicRegistrationUpdateTimer;
   MICOModeIndication mICOModeIndication;
   TAIListForInactive tAIListForInactive;
   ExpectedUEBehaviour expectedUEBehaviour;
   CoreNetworkAssistanceInformationForInactive_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CoreNetworkAssistanceInformationForInactive;

EXTERN int asn1PE_CoreNetworkAssistanceInformationForInactive (OSCTXT* pctxt, CoreNetworkAssistanceInformationForInactive* pvalue);

EXTERN int asn1PD_CoreNetworkAssistanceInformationForInactive (OSCTXT* pctxt, CoreNetworkAssistanceInformationForInactive* pvalue);

EXTERN void asn1Print_CoreNetworkAssistanceInformationForInactive 
   (const char* name, const CoreNetworkAssistanceInformationForInactive* pvalue);

EXTERN int asn1PrtToStr_CoreNetworkAssistanceInformationForInactive (
   const char* name, CoreNetworkAssistanceInformationForInactive* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CoreNetworkAssistanceInformationForInactive (OSCTXT *pctxt, 
   const char* name, const CoreNetworkAssistanceInformationForInactive* pvalue);

EXTERN int asn1Init_CoreNetworkAssistanceInformationForInactive (
   CoreNetworkAssistanceInformationForInactive* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueForPDCP_SN12_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTValueForPDCP-SN12'
*/
typedef struct EXTERN COUNTValueForPDCP_SN12_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} COUNTValueForPDCP_SN12_iE_Extensions_element;

EXTERN int asn1PE_COUNTValueForPDCP_SN12_iE_Extensions_element (OSCTXT* pctxt, COUNTValueForPDCP_SN12_iE_Extensions_element* pvalue);

EXTERN int asn1PD_COUNTValueForPDCP_SN12_iE_Extensions_element (OSCTXT* pctxt, COUNTValueForPDCP_SN12_iE_Extensions_element* pvalue);

EXTERN void asn1Print_COUNTValueForPDCP_SN12_iE_Extensions_element 
   (const char* name, const COUNTValueForPDCP_SN12_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_COUNTValueForPDCP_SN12_iE_Extensions_element (
   const char* name, COUNTValueForPDCP_SN12_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_COUNTValueForPDCP_SN12_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const COUNTValueForPDCP_SN12_iE_Extensions_element* pvalue);

EXTERN int asn1Init_COUNTValueForPDCP_SN12_iE_Extensions_element (
   COUNTValueForPDCP_SN12_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueForPDCP_SN12_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTValueForPDCP-SN12'
*/
/* List of COUNTValueForPDCP_SN12_iE_Extensions_element */
typedef OSRTDList COUNTValueForPDCP_SN12_iE_Extensions;

EXTERN int asn1PE_COUNTValueForPDCP_SN12_iE_Extensions (OSCTXT* pctxt, COUNTValueForPDCP_SN12_iE_Extensions* pvalue);

EXTERN int asn1PD_COUNTValueForPDCP_SN12_iE_Extensions (OSCTXT* pctxt, COUNTValueForPDCP_SN12_iE_Extensions* pvalue);

EXTERN void asn1Print_COUNTValueForPDCP_SN12_iE_Extensions 
   (const char* name, const COUNTValueForPDCP_SN12_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_COUNTValueForPDCP_SN12_iE_Extensions (const char* name, 
   COUNTValueForPDCP_SN12_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_COUNTValueForPDCP_SN12_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const COUNTValueForPDCP_SN12_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct COUNTValueForPDCP_SN12_iE_Extensions_element* 
   asn1Get_COUNTValueForPDCP_SN12_iE_Extensions (ProtocolExtensionID id, 
   COUNTValueForPDCP_SN12_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_COUNTValueForPDCP_SN12_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   COUNTValueForPDCP_SN12_iE_Extensions* plist, 
   COUNTValueForPDCP_SN12_iE_Extensions* pmatches);

EXTERN int asn1Init_COUNTValueForPDCP_SN12_iE_Extensions (
   COUNTValueForPDCP_SN12_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueForPDCP_SN12                                    */
/*                                                            */
/**************************************************************/
/*
COUNTValueForPDCP-SN12 ::= SEQUENCE {
   pDCP-SN12 [0] INTEGER (0..4095),
   hFN-PDCP-SN12 [1] INTEGER (0..1048575),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({COUNTValueForPDCP-SN12-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({COUNTValueForPDCP-SN12-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({COUNTValueForPDCP-SN12-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN COUNTValueForPDCP_SN12 {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT16 pDCP_SN12;
   OSUINT32 hFN_PDCP_SN12;
   COUNTValueForPDCP_SN12_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} COUNTValueForPDCP_SN12;

EXTERN int asn1PE_COUNTValueForPDCP_SN12 (OSCTXT* pctxt, COUNTValueForPDCP_SN12* pvalue);

EXTERN int asn1PD_COUNTValueForPDCP_SN12 (OSCTXT* pctxt, COUNTValueForPDCP_SN12* pvalue);

EXTERN void asn1Print_COUNTValueForPDCP_SN12 
   (const char* name, const COUNTValueForPDCP_SN12* pvalue);

EXTERN int asn1PrtToStr_COUNTValueForPDCP_SN12 (const char* name, 
   COUNTValueForPDCP_SN12* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_COUNTValueForPDCP_SN12 (OSCTXT *pctxt, 
   const char* name, const COUNTValueForPDCP_SN12* pvalue);

EXTERN int asn1Init_COUNTValueForPDCP_SN12 (COUNTValueForPDCP_SN12* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueForPDCP_SN18_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTValueForPDCP-SN18'
*/
typedef struct EXTERN COUNTValueForPDCP_SN18_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} COUNTValueForPDCP_SN18_iE_Extensions_element;

EXTERN int asn1PE_COUNTValueForPDCP_SN18_iE_Extensions_element (OSCTXT* pctxt, COUNTValueForPDCP_SN18_iE_Extensions_element* pvalue);

EXTERN int asn1PD_COUNTValueForPDCP_SN18_iE_Extensions_element (OSCTXT* pctxt, COUNTValueForPDCP_SN18_iE_Extensions_element* pvalue);

EXTERN void asn1Print_COUNTValueForPDCP_SN18_iE_Extensions_element 
   (const char* name, const COUNTValueForPDCP_SN18_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_COUNTValueForPDCP_SN18_iE_Extensions_element (
   const char* name, COUNTValueForPDCP_SN18_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_COUNTValueForPDCP_SN18_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const COUNTValueForPDCP_SN18_iE_Extensions_element* pvalue);

EXTERN int asn1Init_COUNTValueForPDCP_SN18_iE_Extensions_element (
   COUNTValueForPDCP_SN18_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueForPDCP_SN18_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'COUNTValueForPDCP-SN18'
*/
/* List of COUNTValueForPDCP_SN18_iE_Extensions_element */
typedef OSRTDList COUNTValueForPDCP_SN18_iE_Extensions;

EXTERN int asn1PE_COUNTValueForPDCP_SN18_iE_Extensions (OSCTXT* pctxt, COUNTValueForPDCP_SN18_iE_Extensions* pvalue);

EXTERN int asn1PD_COUNTValueForPDCP_SN18_iE_Extensions (OSCTXT* pctxt, COUNTValueForPDCP_SN18_iE_Extensions* pvalue);

EXTERN void asn1Print_COUNTValueForPDCP_SN18_iE_Extensions 
   (const char* name, const COUNTValueForPDCP_SN18_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_COUNTValueForPDCP_SN18_iE_Extensions (const char* name, 
   COUNTValueForPDCP_SN18_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_COUNTValueForPDCP_SN18_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const COUNTValueForPDCP_SN18_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct COUNTValueForPDCP_SN18_iE_Extensions_element* 
   asn1Get_COUNTValueForPDCP_SN18_iE_Extensions (ProtocolExtensionID id, 
   COUNTValueForPDCP_SN18_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_COUNTValueForPDCP_SN18_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   COUNTValueForPDCP_SN18_iE_Extensions* plist, 
   COUNTValueForPDCP_SN18_iE_Extensions* pmatches);

EXTERN int asn1Init_COUNTValueForPDCP_SN18_iE_Extensions (
   COUNTValueForPDCP_SN18_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  COUNTValueForPDCP_SN18                                    */
/*                                                            */
/**************************************************************/
/*
COUNTValueForPDCP-SN18 ::= SEQUENCE {
   pDCP-SN18 [0] INTEGER (0..262143),
   hFN-PDCP-SN18 [1] INTEGER (0..16383),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({COUNTValueForPDCP-SN18-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({COUNTValueForPDCP-SN18-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({COUNTValueForPDCP-SN18-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN COUNTValueForPDCP_SN18 {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT32 pDCP_SN18;
   OSUINT16 hFN_PDCP_SN18;
   COUNTValueForPDCP_SN18_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} COUNTValueForPDCP_SN18;

EXTERN int asn1PE_COUNTValueForPDCP_SN18 (OSCTXT* pctxt, COUNTValueForPDCP_SN18* pvalue);

EXTERN int asn1PD_COUNTValueForPDCP_SN18 (OSCTXT* pctxt, COUNTValueForPDCP_SN18* pvalue);

EXTERN void asn1Print_COUNTValueForPDCP_SN18 
   (const char* name, const COUNTValueForPDCP_SN18* pvalue);

EXTERN int asn1PrtToStr_COUNTValueForPDCP_SN18 (const char* name, 
   COUNTValueForPDCP_SN18* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_COUNTValueForPDCP_SN18 (OSCTXT *pctxt, 
   const char* name, const COUNTValueForPDCP_SN18* pvalue);

EXTERN int asn1Init_COUNTValueForPDCP_SN18 (COUNTValueForPDCP_SN18* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_Item_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics-IE-Item'
*/
typedef struct EXTERN CriticalityDiagnostics_IE_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CriticalityDiagnostics_IE_Item_iE_Extensions_element;

EXTERN int asn1PE_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT* pctxt, CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT* pctxt, CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_Item_iE_Extensions_element 
   (const char* name, const CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CriticalityDiagnostics_IE_Item_iE_Extensions_element (
   const char* name, 
   CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CriticalityDiagnostics_IE_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CriticalityDiagnostics_IE_Item_iE_Extensions_element (
   CriticalityDiagnostics_IE_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_Item_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics-IE-Item'
*/
/* List of CriticalityDiagnostics_IE_Item_iE_Extensions_element */
typedef OSRTDList CriticalityDiagnostics_IE_Item_iE_Extensions;

EXTERN int asn1PE_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT* pctxt, CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT* pctxt, CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_Item_iE_Extensions 
   (const char* name, const CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CriticalityDiagnostics_IE_Item_iE_Extensions (
   const char* name, CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CriticalityDiagnostics_IE_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CriticalityDiagnostics_IE_Item_iE_Extensions_element* 
   asn1Get_CriticalityDiagnostics_IE_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   CriticalityDiagnostics_IE_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CriticalityDiagnostics_IE_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CriticalityDiagnostics_IE_Item_iE_Extensions* plist, 
   CriticalityDiagnostics_IE_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_CriticalityDiagnostics_IE_Item_iE_Extensions (
   CriticalityDiagnostics_IE_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_Item                            */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics-IE-Item ::= SEQUENCE {
   iECriticality [0] Criticality,
   iE-ID [1] ProtocolIE-ID,
   typeOfError [2] TypeOfError,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CriticalityDiagnostics-IE-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CriticalityDiagnostics-IE-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CriticalityDiagnostics-IE-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CriticalityDiagnostics_IE_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Criticality iECriticality;
   ProtocolIE_ID iE_ID;
   TypeOfError typeOfError;
   CriticalityDiagnostics_IE_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CriticalityDiagnostics_IE_Item;

EXTERN int asn1PE_CriticalityDiagnostics_IE_Item (OSCTXT* pctxt, CriticalityDiagnostics_IE_Item* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_Item (OSCTXT* pctxt, CriticalityDiagnostics_IE_Item* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_Item 
   (const char* name, const CriticalityDiagnostics_IE_Item* pvalue);

EXTERN int asn1PrtToStr_CriticalityDiagnostics_IE_Item (const char* name, 
   CriticalityDiagnostics_IE_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CriticalityDiagnostics_IE_Item (OSCTXT *pctxt, 
   const char* name, const CriticalityDiagnostics_IE_Item* pvalue);

EXTERN int asn1Init_CriticalityDiagnostics_IE_Item (
   CriticalityDiagnostics_IE_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_IE_List                            */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics-IE-List ::= SEQUENCE (SIZE (1..maxnoofErrors)) OF CriticalityDiagnostics-IE-Item
*/
/* List of CriticalityDiagnostics_IE_Item */
typedef OSRTDList CriticalityDiagnostics_IE_List;

EXTERN int asn1PE_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_IE_List (OSCTXT* pctxt, CriticalityDiagnostics_IE_List* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_IE_List 
   (const char* name, const CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1PrtToStr_CriticalityDiagnostics_IE_List (const char* name, 
   CriticalityDiagnostics_IE_List* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CriticalityDiagnostics_IE_List (OSCTXT *pctxt, 
   const char* name, const CriticalityDiagnostics_IE_List* pvalue);

EXTERN int asn1Init_CriticalityDiagnostics_IE_List (
   CriticalityDiagnostics_IE_List* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics'
*/
typedef struct EXTERN CriticalityDiagnostics_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} CriticalityDiagnostics_iE_Extensions_element;

EXTERN int asn1PE_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_iE_Extensions_element (OSCTXT* pctxt, CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_iE_Extensions_element 
   (const char* name, const CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_CriticalityDiagnostics_iE_Extensions_element (
   const char* name, CriticalityDiagnostics_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CriticalityDiagnostics_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const CriticalityDiagnostics_iE_Extensions_element* pvalue);

EXTERN int asn1Init_CriticalityDiagnostics_iE_Extensions_element (
   CriticalityDiagnostics_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CriticalityDiagnostics'
*/
/* List of CriticalityDiagnostics_iE_Extensions_element */
typedef OSRTDList CriticalityDiagnostics_iE_Extensions;

EXTERN int asn1PE_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics_iE_Extensions (OSCTXT* pctxt, CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics_iE_Extensions 
   (const char* name, const CriticalityDiagnostics_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_CriticalityDiagnostics_iE_Extensions (const char* name, 
   CriticalityDiagnostics_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CriticalityDiagnostics_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const CriticalityDiagnostics_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct CriticalityDiagnostics_iE_Extensions_element* 
   asn1Get_CriticalityDiagnostics_iE_Extensions (ProtocolExtensionID id, 
   CriticalityDiagnostics_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_CriticalityDiagnostics_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   CriticalityDiagnostics_iE_Extensions* plist, 
   CriticalityDiagnostics_iE_Extensions* pmatches);

EXTERN int asn1Init_CriticalityDiagnostics_iE_Extensions (
   CriticalityDiagnostics_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  CriticalityDiagnostics                                    */
/*                                                            */
/**************************************************************/
/*
CriticalityDiagnostics ::= SEQUENCE {
   procedureCode [0] ProcedureCode OPTIONAL,
   triggeringMessage [1] TriggeringMessage OPTIONAL,
   procedureCriticality [2] Criticality OPTIONAL,
   iEsCriticalityDiagnostics [3] CriticalityDiagnostics-IE-List OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({CriticalityDiagnostics-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({CriticalityDiagnostics-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({CriticalityDiagnostics-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN CriticalityDiagnostics {
   struct {
      unsigned procedureCodePresent : 1;
      unsigned triggeringMessagePresent : 1;
      unsigned procedureCriticalityPresent : 1;
      unsigned iEsCriticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ProcedureCode procedureCode;
   TriggeringMessage triggeringMessage;
   Criticality procedureCriticality;
   CriticalityDiagnostics_IE_List iEsCriticalityDiagnostics;
   CriticalityDiagnostics_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} CriticalityDiagnostics;

EXTERN int asn1PE_CriticalityDiagnostics (OSCTXT* pctxt, CriticalityDiagnostics* pvalue);

EXTERN int asn1PD_CriticalityDiagnostics (OSCTXT* pctxt, CriticalityDiagnostics* pvalue);

EXTERN void asn1Print_CriticalityDiagnostics 
   (const char* name, const CriticalityDiagnostics* pvalue);

EXTERN int asn1PrtToStr_CriticalityDiagnostics (const char* name, 
   CriticalityDiagnostics* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_CriticalityDiagnostics (OSCTXT *pctxt, 
   const char* name, const CriticalityDiagnostics* pvalue);

EXTERN int asn1Init_CriticalityDiagnostics (CriticalityDiagnostics* pvalue);

/**************************************************************/
/*                                                            */
/*  DataForwardingResponseDRBItem_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DataForwardingResponseDRBItem'
*/
typedef struct EXTERN DataForwardingResponseDRBItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} DataForwardingResponseDRBItem_iE_Extensions_element;

EXTERN int asn1PE_DataForwardingResponseDRBItem_iE_Extensions_element (OSCTXT* pctxt, DataForwardingResponseDRBItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_DataForwardingResponseDRBItem_iE_Extensions_element (OSCTXT* pctxt, DataForwardingResponseDRBItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_DataForwardingResponseDRBItem_iE_Extensions_element 
   (const char* name, const DataForwardingResponseDRBItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_DataForwardingResponseDRBItem_iE_Extensions_element (
   const char* name, 
   DataForwardingResponseDRBItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DataForwardingResponseDRBItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const DataForwardingResponseDRBItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_DataForwardingResponseDRBItem_iE_Extensions_element (
   DataForwardingResponseDRBItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DataForwardingResponseDRBItem_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DataForwardingResponseDRBItem'
*/
/* List of DataForwardingResponseDRBItem_iE_Extensions_element */
typedef OSRTDList DataForwardingResponseDRBItem_iE_Extensions;

EXTERN int asn1PE_DataForwardingResponseDRBItem_iE_Extensions (OSCTXT* pctxt, DataForwardingResponseDRBItem_iE_Extensions* pvalue);

EXTERN int asn1PD_DataForwardingResponseDRBItem_iE_Extensions (OSCTXT* pctxt, DataForwardingResponseDRBItem_iE_Extensions* pvalue);

EXTERN void asn1Print_DataForwardingResponseDRBItem_iE_Extensions 
   (const char* name, const DataForwardingResponseDRBItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_DataForwardingResponseDRBItem_iE_Extensions (
   const char* name, DataForwardingResponseDRBItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DataForwardingResponseDRBItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const DataForwardingResponseDRBItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct DataForwardingResponseDRBItem_iE_Extensions_element* 
   asn1Get_DataForwardingResponseDRBItem_iE_Extensions 
   (ProtocolExtensionID id, 
   DataForwardingResponseDRBItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DataForwardingResponseDRBItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   DataForwardingResponseDRBItem_iE_Extensions* plist, 
   DataForwardingResponseDRBItem_iE_Extensions* pmatches);

EXTERN int asn1Init_DataForwardingResponseDRBItem_iE_Extensions (
   DataForwardingResponseDRBItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  DataForwardingResponseDRBItem                             */
/*                                                            */
/**************************************************************/
/*
DataForwardingResponseDRBItem ::= SEQUENCE {
   dRB-ID [0] DRB-ID,
   dLForwardingUP-TNLInformation [1] EXPLICIT UPTransportLayerInformation OPTIONAL,
   uLForwardingUP-TNLInformation [2] EXPLICIT UPTransportLayerInformation OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({DataForwardingResponseDRBItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({DataForwardingResponseDRBItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({DataForwardingResponseDRBItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN DataForwardingResponseDRBItem {
   struct {
      unsigned dLForwardingUP_TNLInformationPresent : 1;
      unsigned uLForwardingUP_TNLInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DRB_ID dRB_ID;
   UPTransportLayerInformation dLForwardingUP_TNLInformation;
   UPTransportLayerInformation uLForwardingUP_TNLInformation;
   DataForwardingResponseDRBItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} DataForwardingResponseDRBItem;

EXTERN int asn1PE_DataForwardingResponseDRBItem (OSCTXT* pctxt, DataForwardingResponseDRBItem* pvalue);

EXTERN int asn1PD_DataForwardingResponseDRBItem (OSCTXT* pctxt, DataForwardingResponseDRBItem* pvalue);

EXTERN void asn1Print_DataForwardingResponseDRBItem 
   (const char* name, const DataForwardingResponseDRBItem* pvalue);

EXTERN int asn1PrtToStr_DataForwardingResponseDRBItem (const char* name, 
   DataForwardingResponseDRBItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DataForwardingResponseDRBItem (OSCTXT *pctxt, 
   const char* name, const DataForwardingResponseDRBItem* pvalue);

EXTERN int asn1Init_DataForwardingResponseDRBItem (
   DataForwardingResponseDRBItem* pvalue);

/**************************************************************/
/*                                                            */
/*  DataForwardingResponseDRBList                             */
/*                                                            */
/**************************************************************/
/*
DataForwardingResponseDRBList ::= SEQUENCE (SIZE (1..maxnoofDRBs)) OF DataForwardingResponseDRBItem
*/
/* List of DataForwardingResponseDRBItem */
typedef OSRTDList DataForwardingResponseDRBList;

EXTERN int asn1PE_DataForwardingResponseDRBList (OSCTXT* pctxt, DataForwardingResponseDRBList* pvalue);

EXTERN int asn1PD_DataForwardingResponseDRBList (OSCTXT* pctxt, DataForwardingResponseDRBList* pvalue);

EXTERN void asn1Print_DataForwardingResponseDRBList 
   (const char* name, const DataForwardingResponseDRBList* pvalue);

EXTERN int asn1PrtToStr_DataForwardingResponseDRBList (const char* name, 
   DataForwardingResponseDRBList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DataForwardingResponseDRBList (OSCTXT *pctxt, 
   const char* name, const DataForwardingResponseDRBList* pvalue);

EXTERN int asn1Init_DataForwardingResponseDRBList (
   DataForwardingResponseDRBList* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL12_iE_Extension_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusUL12'
*/
typedef struct EXTERN DRBStatusUL12_iE_Extension_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} DRBStatusUL12_iE_Extension_element;

EXTERN int asn1PE_DRBStatusUL12_iE_Extension_element (OSCTXT* pctxt, DRBStatusUL12_iE_Extension_element* pvalue);

EXTERN int asn1PD_DRBStatusUL12_iE_Extension_element (OSCTXT* pctxt, DRBStatusUL12_iE_Extension_element* pvalue);

EXTERN void asn1Print_DRBStatusUL12_iE_Extension_element 
   (const char* name, const DRBStatusUL12_iE_Extension_element* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL12_iE_Extension_element (const char* name, 
   DRBStatusUL12_iE_Extension_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL12_iE_Extension_element (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL12_iE_Extension_element* pvalue);

EXTERN int asn1Init_DRBStatusUL12_iE_Extension_element (
   DRBStatusUL12_iE_Extension_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL12_iE_Extension                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusUL12'
*/
/* List of DRBStatusUL12_iE_Extension_element */
typedef OSRTDList DRBStatusUL12_iE_Extension;

EXTERN int asn1PE_DRBStatusUL12_iE_Extension (OSCTXT* pctxt, DRBStatusUL12_iE_Extension* pvalue);

EXTERN int asn1PD_DRBStatusUL12_iE_Extension (OSCTXT* pctxt, DRBStatusUL12_iE_Extension* pvalue);

EXTERN void asn1Print_DRBStatusUL12_iE_Extension 
   (const char* name, const DRBStatusUL12_iE_Extension* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL12_iE_Extension (const char* name, 
   DRBStatusUL12_iE_Extension* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL12_iE_Extension (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL12_iE_Extension* pvalue);

/* Get IE using id key value */
EXTERN struct DRBStatusUL12_iE_Extension_element* 
   asn1Get_DRBStatusUL12_iE_Extension (ProtocolExtensionID id, 
   DRBStatusUL12_iE_Extension* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DRBStatusUL12_iE_Extension 
   (OSCTXT* pctxt, ProtocolExtensionID id, DRBStatusUL12_iE_Extension* plist, 
   DRBStatusUL12_iE_Extension* pmatches);

EXTERN int asn1Init_DRBStatusUL12_iE_Extension (DRBStatusUL12_iE_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL12                                             */
/*                                                            */
/**************************************************************/
/*
DRBStatusUL12 ::= SEQUENCE {
   uL-COUNTValue [0] COUNTValueForPDCP-SN12,
   receiveStatusOfUL-PDCP-SDUs [1] BIT STRING  (SIZE (1..2048)) OPTIONAL,
   iE-Extension [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({DRBStatusUL12-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({DRBStatusUL12-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({DRBStatusUL12-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN DRBStatusUL12 {
   struct {
      unsigned receiveStatusOfUL_PDCP_SDUsPresent : 1;
      unsigned iE_ExtensionPresent : 1;
   } m;
   COUNTValueForPDCP_SN12 uL_COUNTValue;
   DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs receiveStatusOfUL_PDCP_SDUs;
   DRBStatusUL12_iE_Extension iE_Extension;
   OSRTDList extElem1;
} DRBStatusUL12;

EXTERN int asn1PE_DRBStatusUL12 (OSCTXT* pctxt, DRBStatusUL12* pvalue);

EXTERN int asn1PD_DRBStatusUL12 (OSCTXT* pctxt, DRBStatusUL12* pvalue);

EXTERN void asn1Print_DRBStatusUL12 (const char* name, const DRBStatusUL12* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL12 (const char* name, DRBStatusUL12* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL12 (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL12* pvalue);

EXTERN int asn1Init_DRBStatusUL12 (DRBStatusUL12* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL18_iE_Extension_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusUL18'
*/
typedef struct EXTERN DRBStatusUL18_iE_Extension_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} DRBStatusUL18_iE_Extension_element;

EXTERN int asn1PE_DRBStatusUL18_iE_Extension_element (OSCTXT* pctxt, DRBStatusUL18_iE_Extension_element* pvalue);

EXTERN int asn1PD_DRBStatusUL18_iE_Extension_element (OSCTXT* pctxt, DRBStatusUL18_iE_Extension_element* pvalue);

EXTERN void asn1Print_DRBStatusUL18_iE_Extension_element 
   (const char* name, const DRBStatusUL18_iE_Extension_element* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL18_iE_Extension_element (const char* name, 
   DRBStatusUL18_iE_Extension_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL18_iE_Extension_element (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL18_iE_Extension_element* pvalue);

EXTERN int asn1Init_DRBStatusUL18_iE_Extension_element (
   DRBStatusUL18_iE_Extension_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL18_iE_Extension                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusUL18'
*/
/* List of DRBStatusUL18_iE_Extension_element */
typedef OSRTDList DRBStatusUL18_iE_Extension;

EXTERN int asn1PE_DRBStatusUL18_iE_Extension (OSCTXT* pctxt, DRBStatusUL18_iE_Extension* pvalue);

EXTERN int asn1PD_DRBStatusUL18_iE_Extension (OSCTXT* pctxt, DRBStatusUL18_iE_Extension* pvalue);

EXTERN void asn1Print_DRBStatusUL18_iE_Extension 
   (const char* name, const DRBStatusUL18_iE_Extension* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL18_iE_Extension (const char* name, 
   DRBStatusUL18_iE_Extension* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL18_iE_Extension (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL18_iE_Extension* pvalue);

/* Get IE using id key value */
EXTERN struct DRBStatusUL18_iE_Extension_element* 
   asn1Get_DRBStatusUL18_iE_Extension (ProtocolExtensionID id, 
   DRBStatusUL18_iE_Extension* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DRBStatusUL18_iE_Extension 
   (OSCTXT* pctxt, ProtocolExtensionID id, DRBStatusUL18_iE_Extension* plist, 
   DRBStatusUL18_iE_Extension* pmatches);

EXTERN int asn1Init_DRBStatusUL18_iE_Extension (DRBStatusUL18_iE_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL18                                             */
/*                                                            */
/**************************************************************/
/*
DRBStatusUL18 ::= SEQUENCE {
   uL-COUNTValue [0] COUNTValueForPDCP-SN18,
   receiveStatusOfUL-PDCP-SDUs [1] BIT STRING  (SIZE (1..131072)) OPTIONAL,
   iE-Extension [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({DRBStatusUL18-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({DRBStatusUL18-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({DRBStatusUL18-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN DRBStatusUL18 {
   struct {
      unsigned receiveStatusOfUL_PDCP_SDUsPresent : 1;
      unsigned iE_ExtensionPresent : 1;
   } m;
   COUNTValueForPDCP_SN18 uL_COUNTValue;
   ASN1DynBitStr receiveStatusOfUL_PDCP_SDUs;
   DRBStatusUL18_iE_Extension iE_Extension;
   OSRTDList extElem1;
} DRBStatusUL18;

EXTERN int asn1PE_DRBStatusUL18 (OSCTXT* pctxt, DRBStatusUL18* pvalue);

EXTERN int asn1PD_DRBStatusUL18 (OSCTXT* pctxt, DRBStatusUL18* pvalue);

EXTERN void asn1Print_DRBStatusUL18 (const char* name, const DRBStatusUL18* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL18 (const char* name, DRBStatusUL18* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL18 (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL18* pvalue);

EXTERN int asn1Init_DRBStatusUL18 (DRBStatusUL18* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL_choice_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusUL'
*/
typedef struct EXTERN DRBStatusUL_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} DRBStatusUL_choice_Extensions;

EXTERN int asn1PE_DRBStatusUL_choice_Extensions (OSCTXT* pctxt, DRBStatusUL_choice_Extensions* pvalue);

EXTERN int asn1PD_DRBStatusUL_choice_Extensions (OSCTXT* pctxt, DRBStatusUL_choice_Extensions* pvalue);

EXTERN void asn1Print_DRBStatusUL_choice_Extensions 
   (const char* name, const DRBStatusUL_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL_choice_Extensions (const char* name, 
   DRBStatusUL_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL_choice_Extensions* pvalue);

EXTERN int asn1Init_DRBStatusUL_choice_Extensions (
   DRBStatusUL_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusUL                                               */
/*                                                            */
/**************************************************************/
/*
DRBStatusUL ::= CHOICE {
   dRBStatusUL12 [0] DRBStatusUL12,
   dRBStatusUL18 [1] DRBStatusUL18,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DRBStatusUL-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DRBStatusUL-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DRBStatusUL-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_DRBStatusUL_dRBStatusUL12     1
#define T_DRBStatusUL_dRBStatusUL18     2
#define T_DRBStatusUL_choice_Extensions 3

typedef struct EXTERN DRBStatusUL {
   OSINT32 t;
   union {
      /* t = 1 */
      DRBStatusUL12 *dRBStatusUL12;
      /* t = 2 */
      DRBStatusUL18 *dRBStatusUL18;
      /* t = 3 */
      DRBStatusUL_choice_Extensions *choice_Extensions;
   } u;
} DRBStatusUL;

EXTERN int asn1PE_DRBStatusUL (OSCTXT* pctxt, DRBStatusUL* pvalue);

EXTERN int asn1PD_DRBStatusUL (OSCTXT* pctxt, DRBStatusUL* pvalue);

EXTERN void asn1Print_DRBStatusUL (const char* name, const DRBStatusUL* pvalue);

EXTERN int asn1PrtToStr_DRBStatusUL (const char* name, DRBStatusUL* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusUL (OSCTXT *pctxt, 
   const char* name, const DRBStatusUL* pvalue);

EXTERN int asn1Init_DRBStatusUL (DRBStatusUL* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL12_iE_Extension_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusDL12'
*/
typedef struct EXTERN DRBStatusDL12_iE_Extension_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} DRBStatusDL12_iE_Extension_element;

EXTERN int asn1PE_DRBStatusDL12_iE_Extension_element (OSCTXT* pctxt, DRBStatusDL12_iE_Extension_element* pvalue);

EXTERN int asn1PD_DRBStatusDL12_iE_Extension_element (OSCTXT* pctxt, DRBStatusDL12_iE_Extension_element* pvalue);

EXTERN void asn1Print_DRBStatusDL12_iE_Extension_element 
   (const char* name, const DRBStatusDL12_iE_Extension_element* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL12_iE_Extension_element (const char* name, 
   DRBStatusDL12_iE_Extension_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL12_iE_Extension_element (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL12_iE_Extension_element* pvalue);

EXTERN int asn1Init_DRBStatusDL12_iE_Extension_element (
   DRBStatusDL12_iE_Extension_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL12_iE_Extension                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusDL12'
*/
/* List of DRBStatusDL12_iE_Extension_element */
typedef OSRTDList DRBStatusDL12_iE_Extension;

EXTERN int asn1PE_DRBStatusDL12_iE_Extension (OSCTXT* pctxt, DRBStatusDL12_iE_Extension* pvalue);

EXTERN int asn1PD_DRBStatusDL12_iE_Extension (OSCTXT* pctxt, DRBStatusDL12_iE_Extension* pvalue);

EXTERN void asn1Print_DRBStatusDL12_iE_Extension 
   (const char* name, const DRBStatusDL12_iE_Extension* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL12_iE_Extension (const char* name, 
   DRBStatusDL12_iE_Extension* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL12_iE_Extension (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL12_iE_Extension* pvalue);

/* Get IE using id key value */
EXTERN struct DRBStatusDL12_iE_Extension_element* 
   asn1Get_DRBStatusDL12_iE_Extension (ProtocolExtensionID id, 
   DRBStatusDL12_iE_Extension* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DRBStatusDL12_iE_Extension 
   (OSCTXT* pctxt, ProtocolExtensionID id, DRBStatusDL12_iE_Extension* plist, 
   DRBStatusDL12_iE_Extension* pmatches);

EXTERN int asn1Init_DRBStatusDL12_iE_Extension (DRBStatusDL12_iE_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL12                                             */
/*                                                            */
/**************************************************************/
/*
DRBStatusDL12 ::= SEQUENCE {
   dL-COUNTValue [0] COUNTValueForPDCP-SN12,
   iE-Extension [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({DRBStatusDL12-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({DRBStatusDL12-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({DRBStatusDL12-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN DRBStatusDL12 {
   struct {
      unsigned iE_ExtensionPresent : 1;
   } m;
   COUNTValueForPDCP_SN12 dL_COUNTValue;
   DRBStatusDL12_iE_Extension iE_Extension;
   OSRTDList extElem1;
} DRBStatusDL12;

EXTERN int asn1PE_DRBStatusDL12 (OSCTXT* pctxt, DRBStatusDL12* pvalue);

EXTERN int asn1PD_DRBStatusDL12 (OSCTXT* pctxt, DRBStatusDL12* pvalue);

EXTERN void asn1Print_DRBStatusDL12 (const char* name, const DRBStatusDL12* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL12 (const char* name, DRBStatusDL12* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL12 (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL12* pvalue);

EXTERN int asn1Init_DRBStatusDL12 (DRBStatusDL12* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL18_iE_Extension_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusDL18'
*/
typedef struct EXTERN DRBStatusDL18_iE_Extension_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} DRBStatusDL18_iE_Extension_element;

EXTERN int asn1PE_DRBStatusDL18_iE_Extension_element (OSCTXT* pctxt, DRBStatusDL18_iE_Extension_element* pvalue);

EXTERN int asn1PD_DRBStatusDL18_iE_Extension_element (OSCTXT* pctxt, DRBStatusDL18_iE_Extension_element* pvalue);

EXTERN void asn1Print_DRBStatusDL18_iE_Extension_element 
   (const char* name, const DRBStatusDL18_iE_Extension_element* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL18_iE_Extension_element (const char* name, 
   DRBStatusDL18_iE_Extension_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL18_iE_Extension_element (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL18_iE_Extension_element* pvalue);

EXTERN int asn1Init_DRBStatusDL18_iE_Extension_element (
   DRBStatusDL18_iE_Extension_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL18_iE_Extension                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusDL18'
*/
/* List of DRBStatusDL18_iE_Extension_element */
typedef OSRTDList DRBStatusDL18_iE_Extension;

EXTERN int asn1PE_DRBStatusDL18_iE_Extension (OSCTXT* pctxt, DRBStatusDL18_iE_Extension* pvalue);

EXTERN int asn1PD_DRBStatusDL18_iE_Extension (OSCTXT* pctxt, DRBStatusDL18_iE_Extension* pvalue);

EXTERN void asn1Print_DRBStatusDL18_iE_Extension 
   (const char* name, const DRBStatusDL18_iE_Extension* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL18_iE_Extension (const char* name, 
   DRBStatusDL18_iE_Extension* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL18_iE_Extension (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL18_iE_Extension* pvalue);

/* Get IE using id key value */
EXTERN struct DRBStatusDL18_iE_Extension_element* 
   asn1Get_DRBStatusDL18_iE_Extension (ProtocolExtensionID id, 
   DRBStatusDL18_iE_Extension* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DRBStatusDL18_iE_Extension 
   (OSCTXT* pctxt, ProtocolExtensionID id, DRBStatusDL18_iE_Extension* plist, 
   DRBStatusDL18_iE_Extension* pmatches);

EXTERN int asn1Init_DRBStatusDL18_iE_Extension (DRBStatusDL18_iE_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL18                                             */
/*                                                            */
/**************************************************************/
/*
DRBStatusDL18 ::= SEQUENCE {
   dL-COUNTValue [0] COUNTValueForPDCP-SN18,
   iE-Extension [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({DRBStatusDL18-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({DRBStatusDL18-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({DRBStatusDL18-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN DRBStatusDL18 {
   struct {
      unsigned iE_ExtensionPresent : 1;
   } m;
   COUNTValueForPDCP_SN18 dL_COUNTValue;
   DRBStatusDL18_iE_Extension iE_Extension;
   OSRTDList extElem1;
} DRBStatusDL18;

EXTERN int asn1PE_DRBStatusDL18 (OSCTXT* pctxt, DRBStatusDL18* pvalue);

EXTERN int asn1PD_DRBStatusDL18 (OSCTXT* pctxt, DRBStatusDL18* pvalue);

EXTERN void asn1Print_DRBStatusDL18 (const char* name, const DRBStatusDL18* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL18 (const char* name, DRBStatusDL18* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL18 (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL18* pvalue);

EXTERN int asn1Init_DRBStatusDL18 (DRBStatusDL18* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL_choice_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBStatusDL'
*/
typedef struct EXTERN DRBStatusDL_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} DRBStatusDL_choice_Extensions;

EXTERN int asn1PE_DRBStatusDL_choice_Extensions (OSCTXT* pctxt, DRBStatusDL_choice_Extensions* pvalue);

EXTERN int asn1PD_DRBStatusDL_choice_Extensions (OSCTXT* pctxt, DRBStatusDL_choice_Extensions* pvalue);

EXTERN void asn1Print_DRBStatusDL_choice_Extensions 
   (const char* name, const DRBStatusDL_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL_choice_Extensions (const char* name, 
   DRBStatusDL_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL_choice_Extensions* pvalue);

EXTERN int asn1Init_DRBStatusDL_choice_Extensions (
   DRBStatusDL_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBStatusDL                                               */
/*                                                            */
/**************************************************************/
/*
DRBStatusDL ::= CHOICE {
   dRBStatusDL12 [0] DRBStatusDL12,
   dRBStatusDL18 [1] DRBStatusDL18,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({DRBStatusDL-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({DRBStatusDL-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({DRBStatusDL-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_DRBStatusDL_dRBStatusDL12     1
#define T_DRBStatusDL_dRBStatusDL18     2
#define T_DRBStatusDL_choice_Extensions 3

typedef struct EXTERN DRBStatusDL {
   OSINT32 t;
   union {
      /* t = 1 */
      DRBStatusDL12 *dRBStatusDL12;
      /* t = 2 */
      DRBStatusDL18 *dRBStatusDL18;
      /* t = 3 */
      DRBStatusDL_choice_Extensions *choice_Extensions;
   } u;
} DRBStatusDL;

EXTERN int asn1PE_DRBStatusDL (OSCTXT* pctxt, DRBStatusDL* pvalue);

EXTERN int asn1PD_DRBStatusDL (OSCTXT* pctxt, DRBStatusDL* pvalue);

EXTERN void asn1Print_DRBStatusDL (const char* name, const DRBStatusDL* pvalue);

EXTERN int asn1PrtToStr_DRBStatusDL (const char* name, DRBStatusDL* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBStatusDL (OSCTXT *pctxt, 
   const char* name, const DRBStatusDL* pvalue);

EXTERN int asn1Init_DRBStatusDL (DRBStatusDL* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsSubjectToStatusTransferItem_iE_Extension_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBsSubjectToStatusTransferItem'
*/
typedef struct EXTERN DRBsSubjectToStatusTransferItem_iE_Extension_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      DRBsSubjectToStatusTransferItem_ExtIEs_TVALUE t;

      /**
       * DRBsSubjectToStatusTransferItem-ExtIEs information objects
       */
      union {
         /**
          * id: id-OldAssociatedQosFlowList-ULendmarkerexpected
          * criticality: reject
          * presence: optional
          */
         AssociatedQosFlowList *_DRBsSubjectToStatusTransferItem_ExtIEs_id_OldAssociatedQosFlowList_ULendmarkerexpected;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} DRBsSubjectToStatusTransferItem_iE_Extension_element;

EXTERN int asn1PE_DRBsSubjectToStatusTransferItem_iE_Extension_element (OSCTXT* pctxt, DRBsSubjectToStatusTransferItem_iE_Extension_element* pvalue);

EXTERN int asn1PD_DRBsSubjectToStatusTransferItem_iE_Extension_element (OSCTXT* pctxt, DRBsSubjectToStatusTransferItem_iE_Extension_element* pvalue);

EXTERN void asn1Print_DRBsSubjectToStatusTransferItem_iE_Extension_element 
   (const char* name, const DRBsSubjectToStatusTransferItem_iE_Extension_element* pvalue);

EXTERN int asn1PrtToStr_DRBsSubjectToStatusTransferItem_iE_Extension_element (
   const char* name, 
   DRBsSubjectToStatusTransferItem_iE_Extension_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsSubjectToStatusTransferItem_iE_Extension_element (OSCTXT *pctxt, 
   const char* name, const DRBsSubjectToStatusTransferItem_iE_Extension_element* pvalue);

EXTERN int asn1Init_DRBsSubjectToStatusTransferItem_iE_Extension_element (
   DRBsSubjectToStatusTransferItem_iE_Extension_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsSubjectToStatusTransferItem_iE_Extension              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBsSubjectToStatusTransferItem'
*/
/* List of DRBsSubjectToStatusTransferItem_iE_Extension_element */
typedef OSRTDList DRBsSubjectToStatusTransferItem_iE_Extension;

EXTERN int asn1PE_DRBsSubjectToStatusTransferItem_iE_Extension (OSCTXT* pctxt, DRBsSubjectToStatusTransferItem_iE_Extension* pvalue);

EXTERN int asn1PD_DRBsSubjectToStatusTransferItem_iE_Extension (OSCTXT* pctxt, DRBsSubjectToStatusTransferItem_iE_Extension* pvalue);

EXTERN void asn1Print_DRBsSubjectToStatusTransferItem_iE_Extension 
   (const char* name, const DRBsSubjectToStatusTransferItem_iE_Extension* pvalue);

EXTERN int asn1PrtToStr_DRBsSubjectToStatusTransferItem_iE_Extension (
   const char* name, DRBsSubjectToStatusTransferItem_iE_Extension* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsSubjectToStatusTransferItem_iE_Extension (OSCTXT *pctxt, 
   const char* name, const DRBsSubjectToStatusTransferItem_iE_Extension* pvalue);

/* Get IE using id key value */
EXTERN struct DRBsSubjectToStatusTransferItem_iE_Extension_element* 
   asn1Get_DRBsSubjectToStatusTransferItem_iE_Extension 
   (ProtocolExtensionID id, 
   DRBsSubjectToStatusTransferItem_iE_Extension* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DRBsSubjectToStatusTransferItem_iE_Extension 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   DRBsSubjectToStatusTransferItem_iE_Extension* plist, 
   DRBsSubjectToStatusTransferItem_iE_Extension* pmatches);

EXTERN int asn1Init_DRBsSubjectToStatusTransferItem_iE_Extension (
   DRBsSubjectToStatusTransferItem_iE_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsSubjectToStatusTransferItem                           */
/*                                                            */
/**************************************************************/
/*
DRBsSubjectToStatusTransferItem ::= SEQUENCE {
   dRB-ID [0] DRB-ID,
   dRBStatusUL [1] EXPLICIT DRBStatusUL,
   dRBStatusDL [2] EXPLICIT DRBStatusDL,
   iE-Extension [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({DRBsSubjectToStatusTransferItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({DRBsSubjectToStatusTransferItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({DRBsSubjectToStatusTransferItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN DRBsSubjectToStatusTransferItem {
   struct {
      unsigned iE_ExtensionPresent : 1;
   } m;
   DRB_ID dRB_ID;
   DRBStatusUL dRBStatusUL;
   DRBStatusDL dRBStatusDL;
   DRBsSubjectToStatusTransferItem_iE_Extension iE_Extension;
   OSRTDList extElem1;
} DRBsSubjectToStatusTransferItem;

EXTERN int asn1PE_DRBsSubjectToStatusTransferItem (OSCTXT* pctxt, DRBsSubjectToStatusTransferItem* pvalue);

EXTERN int asn1PD_DRBsSubjectToStatusTransferItem (OSCTXT* pctxt, DRBsSubjectToStatusTransferItem* pvalue);

EXTERN void asn1Print_DRBsSubjectToStatusTransferItem 
   (const char* name, const DRBsSubjectToStatusTransferItem* pvalue);

EXTERN int asn1PrtToStr_DRBsSubjectToStatusTransferItem (const char* name, 
   DRBsSubjectToStatusTransferItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsSubjectToStatusTransferItem (OSCTXT *pctxt, 
   const char* name, const DRBsSubjectToStatusTransferItem* pvalue);

EXTERN int asn1Init_DRBsSubjectToStatusTransferItem (
   DRBsSubjectToStatusTransferItem* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsSubjectToStatusTransferList                           */
/*                                                            */
/**************************************************************/
/*
DRBsSubjectToStatusTransferList ::= SEQUENCE (SIZE (1..maxnoofDRBs)) OF DRBsSubjectToStatusTransferItem
*/
/* List of DRBsSubjectToStatusTransferItem */
typedef OSRTDList DRBsSubjectToStatusTransferList;

EXTERN int asn1PE_DRBsSubjectToStatusTransferList (OSCTXT* pctxt, DRBsSubjectToStatusTransferList* pvalue);

EXTERN int asn1PD_DRBsSubjectToStatusTransferList (OSCTXT* pctxt, DRBsSubjectToStatusTransferList* pvalue);

EXTERN void asn1Print_DRBsSubjectToStatusTransferList 
   (const char* name, const DRBsSubjectToStatusTransferList* pvalue);

EXTERN int asn1PrtToStr_DRBsSubjectToStatusTransferList (const char* name, 
   DRBsSubjectToStatusTransferList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsSubjectToStatusTransferList (OSCTXT *pctxt, 
   const char* name, const DRBsSubjectToStatusTransferList* pvalue);

EXTERN int asn1Init_DRBsSubjectToStatusTransferList (
   DRBsSubjectToStatusTransferList* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsToQosFlowsMappingItem_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBsToQosFlowsMappingItem'
*/
typedef struct EXTERN DRBsToQosFlowsMappingItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} DRBsToQosFlowsMappingItem_iE_Extensions_element;

EXTERN int asn1PE_DRBsToQosFlowsMappingItem_iE_Extensions_element (OSCTXT* pctxt, DRBsToQosFlowsMappingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_DRBsToQosFlowsMappingItem_iE_Extensions_element (OSCTXT* pctxt, DRBsToQosFlowsMappingItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_DRBsToQosFlowsMappingItem_iE_Extensions_element 
   (const char* name, const DRBsToQosFlowsMappingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_DRBsToQosFlowsMappingItem_iE_Extensions_element (
   const char* name, DRBsToQosFlowsMappingItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsToQosFlowsMappingItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const DRBsToQosFlowsMappingItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_DRBsToQosFlowsMappingItem_iE_Extensions_element (
   DRBsToQosFlowsMappingItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsToQosFlowsMappingItem_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DRBsToQosFlowsMappingItem'
*/
/* List of DRBsToQosFlowsMappingItem_iE_Extensions_element */
typedef OSRTDList DRBsToQosFlowsMappingItem_iE_Extensions;

EXTERN int asn1PE_DRBsToQosFlowsMappingItem_iE_Extensions (OSCTXT* pctxt, DRBsToQosFlowsMappingItem_iE_Extensions* pvalue);

EXTERN int asn1PD_DRBsToQosFlowsMappingItem_iE_Extensions (OSCTXT* pctxt, DRBsToQosFlowsMappingItem_iE_Extensions* pvalue);

EXTERN void asn1Print_DRBsToQosFlowsMappingItem_iE_Extensions 
   (const char* name, const DRBsToQosFlowsMappingItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_DRBsToQosFlowsMappingItem_iE_Extensions (const char* name, 
   DRBsToQosFlowsMappingItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsToQosFlowsMappingItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const DRBsToQosFlowsMappingItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct DRBsToQosFlowsMappingItem_iE_Extensions_element* 
   asn1Get_DRBsToQosFlowsMappingItem_iE_Extensions (ProtocolExtensionID id, 
   DRBsToQosFlowsMappingItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_DRBsToQosFlowsMappingItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   DRBsToQosFlowsMappingItem_iE_Extensions* plist, 
   DRBsToQosFlowsMappingItem_iE_Extensions* pmatches);

EXTERN int asn1Init_DRBsToQosFlowsMappingItem_iE_Extensions (
   DRBsToQosFlowsMappingItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsToQosFlowsMappingItem                                 */
/*                                                            */
/**************************************************************/
/*
DRBsToQosFlowsMappingItem ::= SEQUENCE {
   dRB-ID [0] DRB-ID,
   associatedQosFlowList [1] AssociatedQosFlowList,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({DRBsToQosFlowsMappingItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({DRBsToQosFlowsMappingItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({DRBsToQosFlowsMappingItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN DRBsToQosFlowsMappingItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DRB_ID dRB_ID;
   AssociatedQosFlowList associatedQosFlowList;
   DRBsToQosFlowsMappingItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} DRBsToQosFlowsMappingItem;

EXTERN int asn1PE_DRBsToQosFlowsMappingItem (OSCTXT* pctxt, DRBsToQosFlowsMappingItem* pvalue);

EXTERN int asn1PD_DRBsToQosFlowsMappingItem (OSCTXT* pctxt, DRBsToQosFlowsMappingItem* pvalue);

EXTERN void asn1Print_DRBsToQosFlowsMappingItem 
   (const char* name, const DRBsToQosFlowsMappingItem* pvalue);

EXTERN int asn1PrtToStr_DRBsToQosFlowsMappingItem (const char* name, 
   DRBsToQosFlowsMappingItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsToQosFlowsMappingItem (OSCTXT *pctxt, 
   const char* name, const DRBsToQosFlowsMappingItem* pvalue);

EXTERN int asn1Init_DRBsToQosFlowsMappingItem (DRBsToQosFlowsMappingItem* pvalue);

/**************************************************************/
/*                                                            */
/*  DRBsToQosFlowsMappingList                                 */
/*                                                            */
/**************************************************************/
/*
DRBsToQosFlowsMappingList ::= SEQUENCE (SIZE (1..maxnoofDRBs)) OF DRBsToQosFlowsMappingItem
*/
/* List of DRBsToQosFlowsMappingItem */
typedef OSRTDList DRBsToQosFlowsMappingList;

EXTERN int asn1PE_DRBsToQosFlowsMappingList (OSCTXT* pctxt, DRBsToQosFlowsMappingList* pvalue);

EXTERN int asn1PD_DRBsToQosFlowsMappingList (OSCTXT* pctxt, DRBsToQosFlowsMappingList* pvalue);

EXTERN void asn1Print_DRBsToQosFlowsMappingList 
   (const char* name, const DRBsToQosFlowsMappingList* pvalue);

EXTERN int asn1PrtToStr_DRBsToQosFlowsMappingList (const char* name, 
   DRBsToQosFlowsMappingList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DRBsToQosFlowsMappingList (OSCTXT *pctxt, 
   const char* name, const DRBsToQosFlowsMappingList* pvalue);

EXTERN int asn1Init_DRBsToQosFlowsMappingList (DRBsToQosFlowsMappingList* pvalue);

/**************************************************************/
/*                                                            */
/*  PacketErrorRate_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PacketErrorRate'
*/
typedef struct EXTERN PacketErrorRate_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PacketErrorRate_iE_Extensions_element;

EXTERN int asn1PE_PacketErrorRate_iE_Extensions_element (OSCTXT* pctxt, PacketErrorRate_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PacketErrorRate_iE_Extensions_element (OSCTXT* pctxt, PacketErrorRate_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PacketErrorRate_iE_Extensions_element 
   (const char* name, const PacketErrorRate_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PacketErrorRate_iE_Extensions_element (const char* name, 
   PacketErrorRate_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PacketErrorRate_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PacketErrorRate_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PacketErrorRate_iE_Extensions_element (
   PacketErrorRate_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PacketErrorRate_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PacketErrorRate'
*/
/* List of PacketErrorRate_iE_Extensions_element */
typedef OSRTDList PacketErrorRate_iE_Extensions;

EXTERN int asn1PE_PacketErrorRate_iE_Extensions (OSCTXT* pctxt, PacketErrorRate_iE_Extensions* pvalue);

EXTERN int asn1PD_PacketErrorRate_iE_Extensions (OSCTXT* pctxt, PacketErrorRate_iE_Extensions* pvalue);

EXTERN void asn1Print_PacketErrorRate_iE_Extensions 
   (const char* name, const PacketErrorRate_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PacketErrorRate_iE_Extensions (const char* name, 
   PacketErrorRate_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PacketErrorRate_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PacketErrorRate_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PacketErrorRate_iE_Extensions_element* 
   asn1Get_PacketErrorRate_iE_Extensions (ProtocolExtensionID id, 
   PacketErrorRate_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PacketErrorRate_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PacketErrorRate_iE_Extensions* plist, 
   PacketErrorRate_iE_Extensions* pmatches);

EXTERN int asn1Init_PacketErrorRate_iE_Extensions (
   PacketErrorRate_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PacketErrorRate                                           */
/*                                                            */
/**************************************************************/
/*
PacketErrorRate ::= SEQUENCE {
   pERScalar [0] INTEGER (0..9, ...),
   pERExponent [1] INTEGER (0..9, ...),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PacketErrorRate-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PacketErrorRate-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PacketErrorRate-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PacketErrorRate {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSUINT32 pERScalar;
   OSUINT32 pERExponent;
   PacketErrorRate_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PacketErrorRate;

EXTERN int asn1PE_PacketErrorRate (OSCTXT* pctxt, PacketErrorRate* pvalue);

EXTERN int asn1PD_PacketErrorRate (OSCTXT* pctxt, PacketErrorRate* pvalue);

EXTERN void asn1Print_PacketErrorRate 
   (const char* name, const PacketErrorRate* pvalue);

EXTERN int asn1PrtToStr_PacketErrorRate (const char* name, PacketErrorRate* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PacketErrorRate (OSCTXT *pctxt, 
   const char* name, const PacketErrorRate* pvalue);

EXTERN int asn1Init_PacketErrorRate (PacketErrorRate* pvalue);

/**************************************************************/
/*                                                            */
/*  Dynamic5QIDescriptor_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Dynamic5QIDescriptor'
*/
typedef struct EXTERN Dynamic5QIDescriptor_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} Dynamic5QIDescriptor_iE_Extensions_element;

EXTERN int asn1PE_Dynamic5QIDescriptor_iE_Extensions_element (OSCTXT* pctxt, Dynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN int asn1PD_Dynamic5QIDescriptor_iE_Extensions_element (OSCTXT* pctxt, Dynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN void asn1Print_Dynamic5QIDescriptor_iE_Extensions_element 
   (const char* name, const Dynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_Dynamic5QIDescriptor_iE_Extensions_element (const char* name, 
   Dynamic5QIDescriptor_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Dynamic5QIDescriptor_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const Dynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN int asn1Init_Dynamic5QIDescriptor_iE_Extensions_element (
   Dynamic5QIDescriptor_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Dynamic5QIDescriptor_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Dynamic5QIDescriptor'
*/
/* List of Dynamic5QIDescriptor_iE_Extensions_element */
typedef OSRTDList Dynamic5QIDescriptor_iE_Extensions;

EXTERN int asn1PE_Dynamic5QIDescriptor_iE_Extensions (OSCTXT* pctxt, Dynamic5QIDescriptor_iE_Extensions* pvalue);

EXTERN int asn1PD_Dynamic5QIDescriptor_iE_Extensions (OSCTXT* pctxt, Dynamic5QIDescriptor_iE_Extensions* pvalue);

EXTERN void asn1Print_Dynamic5QIDescriptor_iE_Extensions 
   (const char* name, const Dynamic5QIDescriptor_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_Dynamic5QIDescriptor_iE_Extensions (const char* name, 
   Dynamic5QIDescriptor_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Dynamic5QIDescriptor_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const Dynamic5QIDescriptor_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct Dynamic5QIDescriptor_iE_Extensions_element* 
   asn1Get_Dynamic5QIDescriptor_iE_Extensions (ProtocolExtensionID id, 
   Dynamic5QIDescriptor_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_Dynamic5QIDescriptor_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   Dynamic5QIDescriptor_iE_Extensions* plist, 
   Dynamic5QIDescriptor_iE_Extensions* pmatches);

EXTERN int asn1Init_Dynamic5QIDescriptor_iE_Extensions (
   Dynamic5QIDescriptor_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  Dynamic5QIDescriptor                                      */
/*                                                            */
/**************************************************************/
/*
Dynamic5QIDescriptor ::= SEQUENCE {
   priorityLevelQos [0] PriorityLevelQos,
   packetDelayBudget [1] PacketDelayBudget,
   packetErrorRate [2] PacketErrorRate,
   fiveQI [3] FiveQI OPTIONAL,
   delayCritical [4] DelayCritical OPTIONAL,
--The above IE shall be present in case of GBR QoS flow
   averagingWindow [5] AveragingWindow OPTIONAL,
--The above IE shall be present in case of GBR QoS flow
   maximumDataBurstVolume [6] MaximumDataBurstVolume OPTIONAL,
   iE-Extensions [7] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({Dynamic5QIDescriptor-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({Dynamic5QIDescriptor-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({Dynamic5QIDescriptor-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN Dynamic5QIDescriptor {
   struct {
      unsigned fiveQIPresent : 1;
      unsigned delayCriticalPresent : 1;
      unsigned averagingWindowPresent : 1;
      unsigned maximumDataBurstVolumePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PriorityLevelQos priorityLevelQos;
   PacketDelayBudget packetDelayBudget;
   PacketErrorRate packetErrorRate;
   FiveQI fiveQI;
   DelayCritical delayCritical;
   AveragingWindow averagingWindow;
   MaximumDataBurstVolume maximumDataBurstVolume;
   Dynamic5QIDescriptor_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} Dynamic5QIDescriptor;

EXTERN int asn1PE_Dynamic5QIDescriptor (OSCTXT* pctxt, Dynamic5QIDescriptor* pvalue);

EXTERN int asn1PD_Dynamic5QIDescriptor (OSCTXT* pctxt, Dynamic5QIDescriptor* pvalue);

EXTERN void asn1Print_Dynamic5QIDescriptor 
   (const char* name, const Dynamic5QIDescriptor* pvalue);

EXTERN int asn1PrtToStr_Dynamic5QIDescriptor (const char* name, 
   Dynamic5QIDescriptor* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Dynamic5QIDescriptor (OSCTXT *pctxt, 
   const char* name, const Dynamic5QIDescriptor* pvalue);

EXTERN int asn1Init_Dynamic5QIDescriptor (Dynamic5QIDescriptor* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDList                                       */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDList ::= SEQUENCE (SIZE (1..maxnoofEmergencyAreaID)) OF EmergencyAreaID
*/
/* List of EmergencyAreaID */
typedef OSRTDList EmergencyAreaIDList;

EXTERN int asn1PE_EmergencyAreaIDList (OSCTXT* pctxt, EmergencyAreaIDList* pvalue);

EXTERN int asn1PD_EmergencyAreaIDList (OSCTXT* pctxt, EmergencyAreaIDList* pvalue);

EXTERN void asn1Print_EmergencyAreaIDList 
   (const char* name, const EmergencyAreaIDList* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDList (const char* name, 
   EmergencyAreaIDList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDList (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDList* pvalue);

EXTERN int asn1Init_EmergencyAreaIDList (EmergencyAreaIDList* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyAreaIDListForRestart                             */
/*                                                            */
/**************************************************************/
/*
EmergencyAreaIDListForRestart ::= SEQUENCE (SIZE (1..maxnoofEAIforRestart)) OF EmergencyAreaID
*/
typedef struct EXTERN EmergencyAreaIDListForRestart {
   OSUINT16 n;
   EmergencyAreaID elem[256];
} EmergencyAreaIDListForRestart;

EXTERN int asn1PE_EmergencyAreaIDListForRestart (OSCTXT* pctxt, EmergencyAreaIDListForRestart* pvalue);

EXTERN int asn1PD_EmergencyAreaIDListForRestart (OSCTXT* pctxt, EmergencyAreaIDListForRestart* pvalue);

EXTERN void asn1Print_EmergencyAreaIDListForRestart 
   (const char* name, const EmergencyAreaIDListForRestart* pvalue);

EXTERN int asn1PrtToStr_EmergencyAreaIDListForRestart (const char* name, 
   EmergencyAreaIDListForRestart* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyAreaIDListForRestart (OSCTXT *pctxt, 
   const char* name, const EmergencyAreaIDListForRestart* pvalue);

EXTERN int asn1Init_EmergencyAreaIDListForRestart (
   EmergencyAreaIDListForRestart* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyFallbackIndicator_iE_Extensions_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyFallbackIndicator'
*/
typedef struct EXTERN EmergencyFallbackIndicator_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EmergencyFallbackIndicator_iE_Extensions_element;

EXTERN int asn1PE_EmergencyFallbackIndicator_iE_Extensions_element (OSCTXT* pctxt, EmergencyFallbackIndicator_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EmergencyFallbackIndicator_iE_Extensions_element (OSCTXT* pctxt, EmergencyFallbackIndicator_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EmergencyFallbackIndicator_iE_Extensions_element 
   (const char* name, const EmergencyFallbackIndicator_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EmergencyFallbackIndicator_iE_Extensions_element (
   const char* name, EmergencyFallbackIndicator_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyFallbackIndicator_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EmergencyFallbackIndicator_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EmergencyFallbackIndicator_iE_Extensions_element (
   EmergencyFallbackIndicator_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyFallbackIndicator_iE_Extensions                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EmergencyFallbackIndicator'
*/
/* List of EmergencyFallbackIndicator_iE_Extensions_element */
typedef OSRTDList EmergencyFallbackIndicator_iE_Extensions;

EXTERN int asn1PE_EmergencyFallbackIndicator_iE_Extensions (OSCTXT* pctxt, EmergencyFallbackIndicator_iE_Extensions* pvalue);

EXTERN int asn1PD_EmergencyFallbackIndicator_iE_Extensions (OSCTXT* pctxt, EmergencyFallbackIndicator_iE_Extensions* pvalue);

EXTERN void asn1Print_EmergencyFallbackIndicator_iE_Extensions 
   (const char* name, const EmergencyFallbackIndicator_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EmergencyFallbackIndicator_iE_Extensions (const char* name, 
   EmergencyFallbackIndicator_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyFallbackIndicator_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EmergencyFallbackIndicator_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EmergencyFallbackIndicator_iE_Extensions_element* 
   asn1Get_EmergencyFallbackIndicator_iE_Extensions (ProtocolExtensionID id, 
   EmergencyFallbackIndicator_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EmergencyFallbackIndicator_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   EmergencyFallbackIndicator_iE_Extensions* plist, 
   EmergencyFallbackIndicator_iE_Extensions* pmatches);

EXTERN int asn1Init_EmergencyFallbackIndicator_iE_Extensions (
   EmergencyFallbackIndicator_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EmergencyFallbackIndicator                                */
/*                                                            */
/**************************************************************/
/*
EmergencyFallbackIndicator ::= SEQUENCE {
   emergencyFallbackRequestIndicator [0] EmergencyFallbackRequestIndicator,
   emergencyServiceTargetCN [1] EmergencyServiceTargetCN OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EmergencyFallbackIndicator-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EmergencyFallbackIndicator-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EmergencyFallbackIndicator-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN EmergencyFallbackIndicator {
   struct {
      unsigned emergencyServiceTargetCNPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EmergencyFallbackRequestIndicator emergencyFallbackRequestIndicator;
   EmergencyServiceTargetCN emergencyServiceTargetCN;
   EmergencyFallbackIndicator_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} EmergencyFallbackIndicator;

EXTERN int asn1PE_EmergencyFallbackIndicator (OSCTXT* pctxt, EmergencyFallbackIndicator* pvalue);

EXTERN int asn1PD_EmergencyFallbackIndicator (OSCTXT* pctxt, EmergencyFallbackIndicator* pvalue);

EXTERN void asn1Print_EmergencyFallbackIndicator 
   (const char* name, const EmergencyFallbackIndicator* pvalue);

EXTERN int asn1PrtToStr_EmergencyFallbackIndicator (const char* name, 
   EmergencyFallbackIndicator* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmergencyFallbackIndicator (OSCTXT *pctxt, 
   const char* name, const EmergencyFallbackIndicator* pvalue);

EXTERN int asn1Init_EmergencyFallbackIndicator (EmergencyFallbackIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  EquivalentPLMNs                                           */
/*                                                            */
/**************************************************************/
/*
EquivalentPLMNs ::= SEQUENCE (SIZE (1..maxnoofEPLMNs)) OF PLMNIdentity
*/
typedef struct EXTERN EquivalentPLMNs {
   OSUINT8 n;
   PLMNIdentity elem[15];
} EquivalentPLMNs;

EXTERN int asn1PE_EquivalentPLMNs (OSCTXT* pctxt, EquivalentPLMNs* pvalue);

EXTERN int asn1PD_EquivalentPLMNs (OSCTXT* pctxt, EquivalentPLMNs* pvalue);

EXTERN void asn1Print_EquivalentPLMNs 
   (const char* name, const EquivalentPLMNs* pvalue);

EXTERN int asn1PrtToStr_EquivalentPLMNs (const char* name, EquivalentPLMNs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EquivalentPLMNs (OSCTXT *pctxt, 
   const char* name, const EquivalentPLMNs* pvalue);

EXTERN int asn1Init_EquivalentPLMNs (EquivalentPLMNs* pvalue);

/**************************************************************/
/*                                                            */
/*  EPS_TAI_iE_Extensions_element                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EPS-TAI'
*/
typedef struct EXTERN EPS_TAI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} EPS_TAI_iE_Extensions_element;

EXTERN int asn1PE_EPS_TAI_iE_Extensions_element (OSCTXT* pctxt, EPS_TAI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_EPS_TAI_iE_Extensions_element (OSCTXT* pctxt, EPS_TAI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_EPS_TAI_iE_Extensions_element 
   (const char* name, const EPS_TAI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_EPS_TAI_iE_Extensions_element (const char* name, 
   EPS_TAI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EPS_TAI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const EPS_TAI_iE_Extensions_element* pvalue);

EXTERN int asn1Init_EPS_TAI_iE_Extensions_element (
   EPS_TAI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  EPS_TAI_iE_Extensions                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EPS-TAI'
*/
/* List of EPS_TAI_iE_Extensions_element */
typedef OSRTDList EPS_TAI_iE_Extensions;

EXTERN int asn1PE_EPS_TAI_iE_Extensions (OSCTXT* pctxt, EPS_TAI_iE_Extensions* pvalue);

EXTERN int asn1PD_EPS_TAI_iE_Extensions (OSCTXT* pctxt, EPS_TAI_iE_Extensions* pvalue);

EXTERN void asn1Print_EPS_TAI_iE_Extensions 
   (const char* name, const EPS_TAI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_EPS_TAI_iE_Extensions (const char* name, 
   EPS_TAI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EPS_TAI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const EPS_TAI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct EPS_TAI_iE_Extensions_element* asn1Get_EPS_TAI_iE_Extensions 
   (ProtocolExtensionID id, EPS_TAI_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_EPS_TAI_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, EPS_TAI_iE_Extensions* plist, 
   EPS_TAI_iE_Extensions* pmatches);

EXTERN int asn1Init_EPS_TAI_iE_Extensions (EPS_TAI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  EPS_TAI                                                   */
/*                                                            */
/**************************************************************/
/*
EPS-TAI ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   ePS-TAC [1] EPS-TAC,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({EPS-TAI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({EPS-TAI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({EPS-TAI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN EPS_TAI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   EPS_TAC ePS_TAC;
   EPS_TAI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} EPS_TAI;

EXTERN int asn1PE_EPS_TAI (OSCTXT* pctxt, EPS_TAI* pvalue);

EXTERN int asn1PD_EPS_TAI (OSCTXT* pctxt, EPS_TAI* pvalue);

EXTERN void asn1Print_EPS_TAI (const char* name, const EPS_TAI* pvalue);

EXTERN int asn1PrtToStr_EPS_TAI (const char* name, EPS_TAI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EPS_TAI (OSCTXT *pctxt, 
   const char* name, const EPS_TAI* pvalue);

EXTERN int asn1Init_EPS_TAI (EPS_TAI* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationItem_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABInformationItem'
*/
typedef struct EXTERN E_RABInformationItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} E_RABInformationItem_iE_Extensions_element;

EXTERN int asn1PE_E_RABInformationItem_iE_Extensions_element (OSCTXT* pctxt, E_RABInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_E_RABInformationItem_iE_Extensions_element (OSCTXT* pctxt, E_RABInformationItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_E_RABInformationItem_iE_Extensions_element 
   (const char* name, const E_RABInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_E_RABInformationItem_iE_Extensions_element (const char* name, 
   E_RABInformationItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_E_RABInformationItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const E_RABInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_E_RABInformationItem_iE_Extensions_element (
   E_RABInformationItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationItem_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'E-RABInformationItem'
*/
/* List of E_RABInformationItem_iE_Extensions_element */
typedef OSRTDList E_RABInformationItem_iE_Extensions;

EXTERN int asn1PE_E_RABInformationItem_iE_Extensions (OSCTXT* pctxt, E_RABInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PD_E_RABInformationItem_iE_Extensions (OSCTXT* pctxt, E_RABInformationItem_iE_Extensions* pvalue);

EXTERN void asn1Print_E_RABInformationItem_iE_Extensions 
   (const char* name, const E_RABInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_E_RABInformationItem_iE_Extensions (const char* name, 
   E_RABInformationItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_E_RABInformationItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const E_RABInformationItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct E_RABInformationItem_iE_Extensions_element* 
   asn1Get_E_RABInformationItem_iE_Extensions (ProtocolExtensionID id, 
   E_RABInformationItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_E_RABInformationItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   E_RABInformationItem_iE_Extensions* plist, 
   E_RABInformationItem_iE_Extensions* pmatches);

EXTERN int asn1Init_E_RABInformationItem_iE_Extensions (
   E_RABInformationItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationItem                                      */
/*                                                            */
/**************************************************************/
/*
E-RABInformationItem ::= SEQUENCE {
   e-RAB-ID [0] E-RAB-ID,
   dLForwarding [1] DLForwarding OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({E-RABInformationItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({E-RABInformationItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({E-RABInformationItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN E_RABInformationItem {
   struct {
      unsigned dLForwardingPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   E_RAB_ID e_RAB_ID;
   DLForwarding dLForwarding;
   E_RABInformationItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} E_RABInformationItem;

EXTERN int asn1PE_E_RABInformationItem (OSCTXT* pctxt, E_RABInformationItem* pvalue);

EXTERN int asn1PD_E_RABInformationItem (OSCTXT* pctxt, E_RABInformationItem* pvalue);

EXTERN void asn1Print_E_RABInformationItem 
   (const char* name, const E_RABInformationItem* pvalue);

EXTERN int asn1PrtToStr_E_RABInformationItem (const char* name, 
   E_RABInformationItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_E_RABInformationItem (OSCTXT *pctxt, 
   const char* name, const E_RABInformationItem* pvalue);

EXTERN int asn1Init_E_RABInformationItem (E_RABInformationItem* pvalue);

/**************************************************************/
/*                                                            */
/*  E_RABInformationList                                      */
/*                                                            */
/**************************************************************/
/*
E-RABInformationList ::= SEQUENCE (SIZE (1..maxnoofE-RABs)) OF E-RABInformationItem
*/
/* List of E_RABInformationItem */
typedef OSRTDList E_RABInformationList;

EXTERN int asn1PE_E_RABInformationList (OSCTXT* pctxt, E_RABInformationList* pvalue);

EXTERN int asn1PD_E_RABInformationList (OSCTXT* pctxt, E_RABInformationList* pvalue);

EXTERN void asn1Print_E_RABInformationList 
   (const char* name, const E_RABInformationList* pvalue);

EXTERN int asn1PrtToStr_E_RABInformationList (const char* name, 
   E_RABInformationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_E_RABInformationList (OSCTXT *pctxt, 
   const char* name, const E_RABInformationList* pvalue);

EXTERN int asn1Init_E_RABInformationList (E_RABInformationList* pvalue);

/**************************************************************/
/*                                                            */
/*  EUTRA_CGIListForWarning                                   */
/*                                                            */
/**************************************************************/
/*
EUTRA-CGIListForWarning ::= SEQUENCE (SIZE (1..maxnoofCellIDforWarning)) OF EUTRA-CGI
*/
/* List of EUTRA_CGI */
typedef OSRTDList EUTRA_CGIListForWarning;

EXTERN int asn1PE_EUTRA_CGIListForWarning (OSCTXT* pctxt, EUTRA_CGIListForWarning* pvalue);

EXTERN int asn1PD_EUTRA_CGIListForWarning (OSCTXT* pctxt, EUTRA_CGIListForWarning* pvalue);

EXTERN void asn1Print_EUTRA_CGIListForWarning 
   (const char* name, const EUTRA_CGIListForWarning* pvalue);

EXTERN int asn1PrtToStr_EUTRA_CGIListForWarning (const char* name, 
   EUTRA_CGIListForWarning* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EUTRA_CGIListForWarning (OSCTXT *pctxt, 
   const char* name, const EUTRA_CGIListForWarning* pvalue);

EXTERN int asn1Init_EUTRA_CGIListForWarning (EUTRA_CGIListForWarning* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveG_S_TMSI_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'FiveG-S-TMSI'
*/
typedef struct EXTERN FiveG_S_TMSI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} FiveG_S_TMSI_iE_Extensions_element;

EXTERN int asn1PE_FiveG_S_TMSI_iE_Extensions_element (OSCTXT* pctxt, FiveG_S_TMSI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_FiveG_S_TMSI_iE_Extensions_element (OSCTXT* pctxt, FiveG_S_TMSI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_FiveG_S_TMSI_iE_Extensions_element 
   (const char* name, const FiveG_S_TMSI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_FiveG_S_TMSI_iE_Extensions_element (const char* name, 
   FiveG_S_TMSI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_FiveG_S_TMSI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const FiveG_S_TMSI_iE_Extensions_element* pvalue);

EXTERN int asn1Init_FiveG_S_TMSI_iE_Extensions_element (
   FiveG_S_TMSI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveG_S_TMSI_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'FiveG-S-TMSI'
*/
/* List of FiveG_S_TMSI_iE_Extensions_element */
typedef OSRTDList FiveG_S_TMSI_iE_Extensions;

EXTERN int asn1PE_FiveG_S_TMSI_iE_Extensions (OSCTXT* pctxt, FiveG_S_TMSI_iE_Extensions* pvalue);

EXTERN int asn1PD_FiveG_S_TMSI_iE_Extensions (OSCTXT* pctxt, FiveG_S_TMSI_iE_Extensions* pvalue);

EXTERN void asn1Print_FiveG_S_TMSI_iE_Extensions 
   (const char* name, const FiveG_S_TMSI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_FiveG_S_TMSI_iE_Extensions (const char* name, 
   FiveG_S_TMSI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_FiveG_S_TMSI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const FiveG_S_TMSI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct FiveG_S_TMSI_iE_Extensions_element* 
   asn1Get_FiveG_S_TMSI_iE_Extensions (ProtocolExtensionID id, 
   FiveG_S_TMSI_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_FiveG_S_TMSI_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, FiveG_S_TMSI_iE_Extensions* plist, 
   FiveG_S_TMSI_iE_Extensions* pmatches);

EXTERN int asn1Init_FiveG_S_TMSI_iE_Extensions (FiveG_S_TMSI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  FiveG_S_TMSI                                              */
/*                                                            */
/**************************************************************/
/*
 F
FiveG-S-TMSI ::= SEQUENCE {
   aMFSetID [0] AMFSetID,
   aMFPointer [1] AMFPointer,
   fiveG-TMSI [2] FiveG-TMSI,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({FiveG-S-TMSI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({FiveG-S-TMSI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({FiveG-S-TMSI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN FiveG_S_TMSI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AMFSetID aMFSetID;
   AMFPointer aMFPointer;
   FiveG_TMSI fiveG_TMSI;
   FiveG_S_TMSI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} FiveG_S_TMSI;

EXTERN int asn1PE_FiveG_S_TMSI (OSCTXT* pctxt, FiveG_S_TMSI* pvalue);

EXTERN int asn1PD_FiveG_S_TMSI (OSCTXT* pctxt, FiveG_S_TMSI* pvalue);

EXTERN void asn1Print_FiveG_S_TMSI (const char* name, const FiveG_S_TMSI* pvalue);

EXTERN int asn1PrtToStr_FiveG_S_TMSI (const char* name, FiveG_S_TMSI* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_FiveG_S_TMSI (OSCTXT *pctxt, 
   const char* name, const FiveG_S_TMSI* pvalue);

EXTERN int asn1Init_FiveG_S_TMSI (FiveG_S_TMSI* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenTACs                                             */
/*                                                            */
/**************************************************************/
/*
ForbiddenTACs ::= SEQUENCE (SIZE (1..maxnoofForbTACs)) OF TAC
*/
typedef struct EXTERN ForbiddenTACs {
   OSUINT16 n;
   TAC elem[4096];
} ForbiddenTACs;

EXTERN int asn1PE_ForbiddenTACs (OSCTXT* pctxt, ForbiddenTACs* pvalue);

EXTERN int asn1PD_ForbiddenTACs (OSCTXT* pctxt, ForbiddenTACs* pvalue);

EXTERN void asn1Print_ForbiddenTACs (const char* name, const ForbiddenTACs* pvalue);

EXTERN int asn1PrtToStr_ForbiddenTACs (const char* name, ForbiddenTACs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ForbiddenTACs (OSCTXT *pctxt, 
   const char* name, const ForbiddenTACs* pvalue);

EXTERN int asn1Init_ForbiddenTACs (ForbiddenTACs* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenAreaInformation_Item_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ForbiddenAreaInformation-Item'
*/
typedef struct EXTERN ForbiddenAreaInformation_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} ForbiddenAreaInformation_Item_iE_Extensions_element;

EXTERN int asn1PE_ForbiddenAreaInformation_Item_iE_Extensions_element (OSCTXT* pctxt, ForbiddenAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_ForbiddenAreaInformation_Item_iE_Extensions_element (OSCTXT* pctxt, ForbiddenAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_ForbiddenAreaInformation_Item_iE_Extensions_element 
   (const char* name, const ForbiddenAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_ForbiddenAreaInformation_Item_iE_Extensions_element (
   const char* name, 
   ForbiddenAreaInformation_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ForbiddenAreaInformation_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const ForbiddenAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_ForbiddenAreaInformation_Item_iE_Extensions_element (
   ForbiddenAreaInformation_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenAreaInformation_Item_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ForbiddenAreaInformation-Item'
*/
/* List of ForbiddenAreaInformation_Item_iE_Extensions_element */
typedef OSRTDList ForbiddenAreaInformation_Item_iE_Extensions;

EXTERN int asn1PE_ForbiddenAreaInformation_Item_iE_Extensions (OSCTXT* pctxt, ForbiddenAreaInformation_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_ForbiddenAreaInformation_Item_iE_Extensions (OSCTXT* pctxt, ForbiddenAreaInformation_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_ForbiddenAreaInformation_Item_iE_Extensions 
   (const char* name, const ForbiddenAreaInformation_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_ForbiddenAreaInformation_Item_iE_Extensions (
   const char* name, ForbiddenAreaInformation_Item_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ForbiddenAreaInformation_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const ForbiddenAreaInformation_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct ForbiddenAreaInformation_Item_iE_Extensions_element* 
   asn1Get_ForbiddenAreaInformation_Item_iE_Extensions 
   (ProtocolExtensionID id, 
   ForbiddenAreaInformation_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_ForbiddenAreaInformation_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   ForbiddenAreaInformation_Item_iE_Extensions* plist, 
   ForbiddenAreaInformation_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_ForbiddenAreaInformation_Item_iE_Extensions (
   ForbiddenAreaInformation_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenAreaInformation_Item                             */
/*                                                            */
/**************************************************************/
/*
ForbiddenAreaInformation-Item ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   forbiddenTACs [1] ForbiddenTACs,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({ForbiddenAreaInformation-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({ForbiddenAreaInformation-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({ForbiddenAreaInformation-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN ForbiddenAreaInformation_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   ForbiddenTACs forbiddenTACs;
   ForbiddenAreaInformation_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} ForbiddenAreaInformation_Item;

EXTERN int asn1PE_ForbiddenAreaInformation_Item (OSCTXT* pctxt, ForbiddenAreaInformation_Item* pvalue);

EXTERN int asn1PD_ForbiddenAreaInformation_Item (OSCTXT* pctxt, ForbiddenAreaInformation_Item* pvalue);

EXTERN void asn1Print_ForbiddenAreaInformation_Item 
   (const char* name, const ForbiddenAreaInformation_Item* pvalue);

EXTERN int asn1PrtToStr_ForbiddenAreaInformation_Item (const char* name, 
   ForbiddenAreaInformation_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ForbiddenAreaInformation_Item (OSCTXT *pctxt, 
   const char* name, const ForbiddenAreaInformation_Item* pvalue);

EXTERN int asn1Init_ForbiddenAreaInformation_Item (
   ForbiddenAreaInformation_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ForbiddenAreaInformation                                  */
/*                                                            */
/**************************************************************/
/*
ForbiddenAreaInformation ::= SEQUENCE (SIZE (1..maxnoofEPLMNsPlusOne)) OF ForbiddenAreaInformation-Item
*/
/* List of ForbiddenAreaInformation_Item */
typedef OSRTDList ForbiddenAreaInformation;

EXTERN int asn1PE_ForbiddenAreaInformation (OSCTXT* pctxt, ForbiddenAreaInformation* pvalue);

EXTERN int asn1PD_ForbiddenAreaInformation (OSCTXT* pctxt, ForbiddenAreaInformation* pvalue);

EXTERN void asn1Print_ForbiddenAreaInformation 
   (const char* name, const ForbiddenAreaInformation* pvalue);

EXTERN int asn1PrtToStr_ForbiddenAreaInformation (const char* name, 
   ForbiddenAreaInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ForbiddenAreaInformation (OSCTXT *pctxt, 
   const char* name, const ForbiddenAreaInformation* pvalue);

EXTERN int asn1Init_ForbiddenAreaInformation (ForbiddenAreaInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  GBR_QosInformation_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GBR-QosInformation'
*/
typedef struct EXTERN GBR_QosInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} GBR_QosInformation_iE_Extensions_element;

EXTERN int asn1PE_GBR_QosInformation_iE_Extensions_element (OSCTXT* pctxt, GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GBR_QosInformation_iE_Extensions_element (OSCTXT* pctxt, GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_GBR_QosInformation_iE_Extensions_element 
   (const char* name, const GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_GBR_QosInformation_iE_Extensions_element (const char* name, 
   GBR_QosInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GBR_QosInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const GBR_QosInformation_iE_Extensions_element* pvalue);

EXTERN int asn1Init_GBR_QosInformation_iE_Extensions_element (
   GBR_QosInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GBR_QosInformation_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GBR-QosInformation'
*/
/* List of GBR_QosInformation_iE_Extensions_element */
typedef OSRTDList GBR_QosInformation_iE_Extensions;

EXTERN int asn1PE_GBR_QosInformation_iE_Extensions (OSCTXT* pctxt, GBR_QosInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_GBR_QosInformation_iE_Extensions (OSCTXT* pctxt, GBR_QosInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_GBR_QosInformation_iE_Extensions 
   (const char* name, const GBR_QosInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_GBR_QosInformation_iE_Extensions (const char* name, 
   GBR_QosInformation_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GBR_QosInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const GBR_QosInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct GBR_QosInformation_iE_Extensions_element* 
   asn1Get_GBR_QosInformation_iE_Extensions (ProtocolExtensionID id, 
   GBR_QosInformation_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_GBR_QosInformation_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   GBR_QosInformation_iE_Extensions* plist, 
   GBR_QosInformation_iE_Extensions* pmatches);

EXTERN int asn1Init_GBR_QosInformation_iE_Extensions (
   GBR_QosInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GBR_QosInformation                                        */
/*                                                            */
/**************************************************************/
/*
 G
GBR-QosInformation ::= SEQUENCE {
   maximumFlowBitRateDL [0] BitRate,
   maximumFlowBitRateUL [1] BitRate,
   guaranteedFlowBitRateDL [2] BitRate,
   guaranteedFlowBitRateUL [3] BitRate,
   notificationControl [4] NotificationControl OPTIONAL,
   maximumPacketLossRateDL [5] PacketLossRate OPTIONAL,
   maximumPacketLossRateUL [6] PacketLossRate OPTIONAL,
   iE-Extensions [7] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({GBR-QosInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({GBR-QosInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({GBR-QosInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN GBR_QosInformation {
   struct {
      unsigned notificationControlPresent : 1;
      unsigned maximumPacketLossRateDLPresent : 1;
      unsigned maximumPacketLossRateULPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   BitRate maximumFlowBitRateDL;
   BitRate maximumFlowBitRateUL;
   BitRate guaranteedFlowBitRateDL;
   BitRate guaranteedFlowBitRateUL;
   NotificationControl notificationControl;
   PacketLossRate maximumPacketLossRateDL;
   PacketLossRate maximumPacketLossRateUL;
   GBR_QosInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} GBR_QosInformation;

EXTERN int asn1PE_GBR_QosInformation (OSCTXT* pctxt, GBR_QosInformation* pvalue);

EXTERN int asn1PD_GBR_QosInformation (OSCTXT* pctxt, GBR_QosInformation* pvalue);

EXTERN void asn1Print_GBR_QosInformation 
   (const char* name, const GBR_QosInformation* pvalue);

EXTERN int asn1PrtToStr_GBR_QosInformation (const char* name, 
   GBR_QosInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GBR_QosInformation (OSCTXT *pctxt, 
   const char* name, const GBR_QosInformation* pvalue);

EXTERN int asn1Init_GBR_QosInformation (GBR_QosInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  GUAMI_iE_Extensions_element                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GUAMI'
*/
typedef struct EXTERN GUAMI_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} GUAMI_iE_Extensions_element;

EXTERN int asn1PE_GUAMI_iE_Extensions_element (OSCTXT* pctxt, GUAMI_iE_Extensions_element* pvalue);

EXTERN int asn1PD_GUAMI_iE_Extensions_element (OSCTXT* pctxt, GUAMI_iE_Extensions_element* pvalue);

EXTERN void asn1Print_GUAMI_iE_Extensions_element 
   (const char* name, const GUAMI_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_GUAMI_iE_Extensions_element (const char* name, 
   GUAMI_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GUAMI_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const GUAMI_iE_Extensions_element* pvalue);

EXTERN int asn1Init_GUAMI_iE_Extensions_element (GUAMI_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  GUAMI_iE_Extensions                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'GUAMI'
*/
/* List of GUAMI_iE_Extensions_element */
typedef OSRTDList GUAMI_iE_Extensions;

EXTERN int asn1PE_GUAMI_iE_Extensions (OSCTXT* pctxt, GUAMI_iE_Extensions* pvalue);

EXTERN int asn1PD_GUAMI_iE_Extensions (OSCTXT* pctxt, GUAMI_iE_Extensions* pvalue);

EXTERN void asn1Print_GUAMI_iE_Extensions 
   (const char* name, const GUAMI_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_GUAMI_iE_Extensions (const char* name, 
   GUAMI_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GUAMI_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const GUAMI_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct GUAMI_iE_Extensions_element* asn1Get_GUAMI_iE_Extensions 
   (ProtocolExtensionID id, GUAMI_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_GUAMI_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, GUAMI_iE_Extensions* plist, 
   GUAMI_iE_Extensions* pmatches);

EXTERN int asn1Init_GUAMI_iE_Extensions (GUAMI_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  GUAMI                                                     */
/*                                                            */
/**************************************************************/
/*
GUAMI ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   aMFRegionID [1] AMFRegionID,
   aMFSetID [2] AMFSetID,
   aMFPointer [3] AMFPointer,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({GUAMI-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({GUAMI-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({GUAMI-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN GUAMI {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   AMFRegionID aMFRegionID;
   AMFSetID aMFSetID;
   AMFPointer aMFPointer;
   GUAMI_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} GUAMI;

EXTERN int asn1PE_GUAMI (OSCTXT* pctxt, GUAMI* pvalue);

EXTERN int asn1PD_GUAMI (OSCTXT* pctxt, GUAMI* pvalue);

EXTERN void asn1Print_GUAMI (const char* name, const GUAMI* pvalue);

EXTERN int asn1PrtToStr_GUAMI (const char* name, GUAMI* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_GUAMI (OSCTXT *pctxt, const char* name, const GUAMI* pvalue);

EXTERN int asn1Init_GUAMI (GUAMI* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowToBeForwardedItem_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowToBeForwardedItem'
*/
typedef struct EXTERN QosFlowToBeForwardedItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowToBeForwardedItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowToBeForwardedItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowToBeForwardedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowToBeForwardedItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowToBeForwardedItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowToBeForwardedItem_iE_Extensions_element 
   (const char* name, const QosFlowToBeForwardedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowToBeForwardedItem_iE_Extensions_element (
   const char* name, QosFlowToBeForwardedItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowToBeForwardedItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowToBeForwardedItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowToBeForwardedItem_iE_Extensions_element (
   QosFlowToBeForwardedItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowToBeForwardedItem_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowToBeForwardedItem'
*/
/* List of QosFlowToBeForwardedItem_iE_Extensions_element */
typedef OSRTDList QosFlowToBeForwardedItem_iE_Extensions;

EXTERN int asn1PE_QosFlowToBeForwardedItem_iE_Extensions (OSCTXT* pctxt, QosFlowToBeForwardedItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowToBeForwardedItem_iE_Extensions (OSCTXT* pctxt, QosFlowToBeForwardedItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowToBeForwardedItem_iE_Extensions 
   (const char* name, const QosFlowToBeForwardedItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowToBeForwardedItem_iE_Extensions (const char* name, 
   QosFlowToBeForwardedItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowToBeForwardedItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowToBeForwardedItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowToBeForwardedItem_iE_Extensions_element* 
   asn1Get_QosFlowToBeForwardedItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowToBeForwardedItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowToBeForwardedItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowToBeForwardedItem_iE_Extensions* plist, 
   QosFlowToBeForwardedItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowToBeForwardedItem_iE_Extensions (
   QosFlowToBeForwardedItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowToBeForwardedItem                                  */
/*                                                            */
/**************************************************************/
/*
QosFlowToBeForwardedItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowToBeForwardedItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowToBeForwardedItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowToBeForwardedItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowToBeForwardedItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QosFlowToBeForwardedItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowToBeForwardedItem;

EXTERN int asn1PE_QosFlowToBeForwardedItem (OSCTXT* pctxt, QosFlowToBeForwardedItem* pvalue);

EXTERN int asn1PD_QosFlowToBeForwardedItem (OSCTXT* pctxt, QosFlowToBeForwardedItem* pvalue);

EXTERN void asn1Print_QosFlowToBeForwardedItem 
   (const char* name, const QosFlowToBeForwardedItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowToBeForwardedItem (const char* name, 
   QosFlowToBeForwardedItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowToBeForwardedItem (OSCTXT *pctxt, 
   const char* name, const QosFlowToBeForwardedItem* pvalue);

EXTERN int asn1Init_QosFlowToBeForwardedItem (QosFlowToBeForwardedItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowToBeForwardedList                                  */
/*                                                            */
/**************************************************************/
/*
QosFlowToBeForwardedList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowToBeForwardedItem
*/
/* List of QosFlowToBeForwardedItem */
typedef OSRTDList QosFlowToBeForwardedList;

EXTERN int asn1PE_QosFlowToBeForwardedList (OSCTXT* pctxt, QosFlowToBeForwardedList* pvalue);

EXTERN int asn1PD_QosFlowToBeForwardedList (OSCTXT* pctxt, QosFlowToBeForwardedList* pvalue);

EXTERN void asn1Print_QosFlowToBeForwardedList 
   (const char* name, const QosFlowToBeForwardedList* pvalue);

EXTERN int asn1PrtToStr_QosFlowToBeForwardedList (const char* name, 
   QosFlowToBeForwardedList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowToBeForwardedList (OSCTXT *pctxt, 
   const char* name, const QosFlowToBeForwardedList* pvalue);

EXTERN int asn1Init_QosFlowToBeForwardedList (QosFlowToBeForwardedList* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowPerTNLInformation_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowPerTNLInformation'
*/
typedef struct EXTERN QosFlowPerTNLInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowPerTNLInformation_iE_Extensions_element;

EXTERN int asn1PE_QosFlowPerTNLInformation_iE_Extensions_element (OSCTXT* pctxt, QosFlowPerTNLInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowPerTNLInformation_iE_Extensions_element (OSCTXT* pctxt, QosFlowPerTNLInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowPerTNLInformation_iE_Extensions_element 
   (const char* name, const QosFlowPerTNLInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowPerTNLInformation_iE_Extensions_element (
   const char* name, QosFlowPerTNLInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowPerTNLInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowPerTNLInformation_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowPerTNLInformation_iE_Extensions_element (
   QosFlowPerTNLInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowPerTNLInformation_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowPerTNLInformation'
*/
/* List of QosFlowPerTNLInformation_iE_Extensions_element */
typedef OSRTDList QosFlowPerTNLInformation_iE_Extensions;

EXTERN int asn1PE_QosFlowPerTNLInformation_iE_Extensions (OSCTXT* pctxt, QosFlowPerTNLInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowPerTNLInformation_iE_Extensions (OSCTXT* pctxt, QosFlowPerTNLInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowPerTNLInformation_iE_Extensions 
   (const char* name, const QosFlowPerTNLInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowPerTNLInformation_iE_Extensions (const char* name, 
   QosFlowPerTNLInformation_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowPerTNLInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowPerTNLInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowPerTNLInformation_iE_Extensions_element* 
   asn1Get_QosFlowPerTNLInformation_iE_Extensions (ProtocolExtensionID id, 
   QosFlowPerTNLInformation_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowPerTNLInformation_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowPerTNLInformation_iE_Extensions* plist, 
   QosFlowPerTNLInformation_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowPerTNLInformation_iE_Extensions (
   QosFlowPerTNLInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowPerTNLInformation                                  */
/*                                                            */
/**************************************************************/
/*
QosFlowPerTNLInformation ::= SEQUENCE {
   uPTransportLayerInformation [0] EXPLICIT UPTransportLayerInformation,
   associatedQosFlowList [1] AssociatedQosFlowList,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowPerTNLInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowPerTNLInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowPerTNLInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowPerTNLInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation uPTransportLayerInformation;
   AssociatedQosFlowList associatedQosFlowList;
   QosFlowPerTNLInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowPerTNLInformation;

EXTERN int asn1PE_QosFlowPerTNLInformation (OSCTXT* pctxt, QosFlowPerTNLInformation* pvalue);

EXTERN int asn1PD_QosFlowPerTNLInformation (OSCTXT* pctxt, QosFlowPerTNLInformation* pvalue);

EXTERN void asn1Print_QosFlowPerTNLInformation 
   (const char* name, const QosFlowPerTNLInformation* pvalue);

EXTERN int asn1PrtToStr_QosFlowPerTNLInformation (const char* name, 
   QosFlowPerTNLInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowPerTNLInformation (OSCTXT *pctxt, 
   const char* name, const QosFlowPerTNLInformation* pvalue);

EXTERN int asn1Init_QosFlowPerTNLInformation (QosFlowPerTNLInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowPerTNLInformationItem_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowPerTNLInformationItem'
*/
typedef struct EXTERN QosFlowPerTNLInformationItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowPerTNLInformationItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowPerTNLInformationItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowPerTNLInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowPerTNLInformationItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowPerTNLInformationItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowPerTNLInformationItem_iE_Extensions_element 
   (const char* name, const QosFlowPerTNLInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowPerTNLInformationItem_iE_Extensions_element (
   const char* name, 
   QosFlowPerTNLInformationItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowPerTNLInformationItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowPerTNLInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowPerTNLInformationItem_iE_Extensions_element (
   QosFlowPerTNLInformationItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowPerTNLInformationItem_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowPerTNLInformationItem'
*/
/* List of QosFlowPerTNLInformationItem_iE_Extensions_element */
typedef OSRTDList QosFlowPerTNLInformationItem_iE_Extensions;

EXTERN int asn1PE_QosFlowPerTNLInformationItem_iE_Extensions (OSCTXT* pctxt, QosFlowPerTNLInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowPerTNLInformationItem_iE_Extensions (OSCTXT* pctxt, QosFlowPerTNLInformationItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowPerTNLInformationItem_iE_Extensions 
   (const char* name, const QosFlowPerTNLInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowPerTNLInformationItem_iE_Extensions (const char* name, 
   QosFlowPerTNLInformationItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowPerTNLInformationItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowPerTNLInformationItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowPerTNLInformationItem_iE_Extensions_element* 
   asn1Get_QosFlowPerTNLInformationItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowPerTNLInformationItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowPerTNLInformationItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowPerTNLInformationItem_iE_Extensions* plist, 
   QosFlowPerTNLInformationItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowPerTNLInformationItem_iE_Extensions (
   QosFlowPerTNLInformationItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowPerTNLInformationItem                              */
/*                                                            */
/**************************************************************/
/*
QosFlowPerTNLInformationItem ::= SEQUENCE {
   qosFlowPerTNLInformation [0] QosFlowPerTNLInformation,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowPerTNLInformationItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowPerTNLInformationItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowPerTNLInformationItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowPerTNLInformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowPerTNLInformation qosFlowPerTNLInformation;
   QosFlowPerTNLInformationItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowPerTNLInformationItem;

EXTERN int asn1PE_QosFlowPerTNLInformationItem (OSCTXT* pctxt, QosFlowPerTNLInformationItem* pvalue);

EXTERN int asn1PD_QosFlowPerTNLInformationItem (OSCTXT* pctxt, QosFlowPerTNLInformationItem* pvalue);

EXTERN void asn1Print_QosFlowPerTNLInformationItem 
   (const char* name, const QosFlowPerTNLInformationItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowPerTNLInformationItem (const char* name, 
   QosFlowPerTNLInformationItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowPerTNLInformationItem (OSCTXT *pctxt, 
   const char* name, const QosFlowPerTNLInformationItem* pvalue);

EXTERN int asn1Init_QosFlowPerTNLInformationItem (
   QosFlowPerTNLInformationItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowPerTNLInformationList                              */
/*                                                            */
/**************************************************************/
/*
QosFlowPerTNLInformationList ::= SEQUENCE (SIZE (1..maxnoofMultiConnectivityMinusOne)) OF QosFlowPerTNLInformationItem
*/
/* List of QosFlowPerTNLInformationItem */
typedef OSRTDList QosFlowPerTNLInformationList;

EXTERN int asn1PE_QosFlowPerTNLInformationList (OSCTXT* pctxt, QosFlowPerTNLInformationList* pvalue);

EXTERN int asn1PD_QosFlowPerTNLInformationList (OSCTXT* pctxt, QosFlowPerTNLInformationList* pvalue);

EXTERN void asn1Print_QosFlowPerTNLInformationList 
   (const char* name, const QosFlowPerTNLInformationList* pvalue);

EXTERN int asn1PrtToStr_QosFlowPerTNLInformationList (const char* name, 
   QosFlowPerTNLInformationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowPerTNLInformationList (OSCTXT *pctxt, 
   const char* name, const QosFlowPerTNLInformationList* pvalue);

EXTERN int asn1Init_QosFlowPerTNLInformationList (
   QosFlowPerTNLInformationList* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationItem_iE_Extensions_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UPTransportLayerInformationItem'
*/
typedef struct EXTERN UPTransportLayerInformationItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UPTransportLayerInformationItem_iE_Extensions_element;

EXTERN int asn1PE_UPTransportLayerInformationItem_iE_Extensions_element (OSCTXT* pctxt, UPTransportLayerInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationItem_iE_Extensions_element (OSCTXT* pctxt, UPTransportLayerInformationItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationItem_iE_Extensions_element 
   (const char* name, const UPTransportLayerInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationItem_iE_Extensions_element (
   const char* name, 
   UPTransportLayerInformationItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UPTransportLayerInformationItem_iE_Extensions_element (
   UPTransportLayerInformationItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationItem_iE_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UPTransportLayerInformationItem'
*/
/* List of UPTransportLayerInformationItem_iE_Extensions_element */
typedef OSRTDList UPTransportLayerInformationItem_iE_Extensions;

EXTERN int asn1PE_UPTransportLayerInformationItem_iE_Extensions (OSCTXT* pctxt, UPTransportLayerInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationItem_iE_Extensions (OSCTXT* pctxt, UPTransportLayerInformationItem_iE_Extensions* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationItem_iE_Extensions 
   (const char* name, const UPTransportLayerInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationItem_iE_Extensions (
   const char* name, UPTransportLayerInformationItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UPTransportLayerInformationItem_iE_Extensions_element* 
   asn1Get_UPTransportLayerInformationItem_iE_Extensions 
   (ProtocolExtensionID id, 
   UPTransportLayerInformationItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UPTransportLayerInformationItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UPTransportLayerInformationItem_iE_Extensions* plist, 
   UPTransportLayerInformationItem_iE_Extensions* pmatches);

EXTERN int asn1Init_UPTransportLayerInformationItem_iE_Extensions (
   UPTransportLayerInformationItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationItem                           */
/*                                                            */
/**************************************************************/
/*
UPTransportLayerInformationItem ::= SEQUENCE {
   nGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UPTransportLayerInformationItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UPTransportLayerInformationItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UPTransportLayerInformationItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UPTransportLayerInformationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation nGU_UP_TNLInformation;
   UPTransportLayerInformationItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UPTransportLayerInformationItem;

EXTERN int asn1PE_UPTransportLayerInformationItem (OSCTXT* pctxt, UPTransportLayerInformationItem* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationItem (OSCTXT* pctxt, UPTransportLayerInformationItem* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationItem 
   (const char* name, const UPTransportLayerInformationItem* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationItem (const char* name, 
   UPTransportLayerInformationItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationItem (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationItem* pvalue);

EXTERN int asn1Init_UPTransportLayerInformationItem (
   UPTransportLayerInformationItem* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationList                           */
/*                                                            */
/**************************************************************/
/*
UPTransportLayerInformationList ::= SEQUENCE (SIZE (1..maxnoofMultiConnectivityMinusOne)) OF UPTransportLayerInformationItem
*/
/* List of UPTransportLayerInformationItem */
typedef OSRTDList UPTransportLayerInformationList;

EXTERN int asn1PE_UPTransportLayerInformationList (OSCTXT* pctxt, UPTransportLayerInformationList* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationList (OSCTXT* pctxt, UPTransportLayerInformationList* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationList 
   (const char* name, const UPTransportLayerInformationList* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationList (const char* name, 
   UPTransportLayerInformationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationList (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationList* pvalue);

EXTERN int asn1Init_UPTransportLayerInformationList (
   UPTransportLayerInformationList* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommandTransfer_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCommandTransfer'
*/
typedef struct EXTERN HandoverCommandTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverCommandTransfer_ExtIEs_TVALUE t;

      /**
       * HandoverCommandTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-AdditionalDLForwardingUPTNLInformation
          * criticality: ignore
          * presence: optional
          */
         QosFlowPerTNLInformationList *_HandoverCommandTransfer_ExtIEs_id_AdditionalDLForwardingUPTNLInformation;
         /**
          * id: id-ULForwardingUP-TNLInformation
          * criticality: reject
          * presence: optional
          */
         UPTransportLayerInformation *_HandoverCommandTransfer_ExtIEs_id_ULForwardingUP_TNLInformation;
         /**
          * id: id-AdditionalULForwardingUPTNLInformation
          * criticality: reject
          * presence: optional
          */
         UPTransportLayerInformationList *_HandoverCommandTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} HandoverCommandTransfer_iE_Extensions_element;

EXTERN int asn1PE_HandoverCommandTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_HandoverCommandTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_HandoverCommandTransfer_iE_Extensions_element 
   (const char* name, const HandoverCommandTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_HandoverCommandTransfer_iE_Extensions_element (
   const char* name, HandoverCommandTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCommandTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const HandoverCommandTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_HandoverCommandTransfer_iE_Extensions_element_HandoverCommandTransfer_ExtIEs_id_AdditionalDLForwardingUPTNLInformation
   (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions_element* pElem, 
   QosFlowPerTNLInformationList *pvalue);

EXTERN void asn1SetTC_HandoverCommandTransfer_iE_Extensions_element_HandoverCommandTransfer_ExtIEs_id_ULForwardingUP_TNLInformation
   (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions_element* pElem, 
   UPTransportLayerInformation *pvalue);

EXTERN void asn1SetTC_HandoverCommandTransfer_iE_Extensions_element_HandoverCommandTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation
   (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions_element* pElem, 
   UPTransportLayerInformationList *pvalue);

EXTERN int asn1Init_HandoverCommandTransfer_iE_Extensions_element (
   HandoverCommandTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommandTransfer_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverCommandTransfer'
*/
/* List of HandoverCommandTransfer_iE_Extensions_element */
typedef OSRTDList HandoverCommandTransfer_iE_Extensions;

EXTERN int asn1PE_HandoverCommandTransfer_iE_Extensions (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_HandoverCommandTransfer_iE_Extensions (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_HandoverCommandTransfer_iE_Extensions 
   (const char* name, const HandoverCommandTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_HandoverCommandTransfer_iE_Extensions (const char* name, 
   HandoverCommandTransfer_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCommandTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const HandoverCommandTransfer_iE_Extensions* pvalue);

/* Append IE with value type QosFlowPerTNLInformationList to list */
EXTERN int asn1Append_HandoverCommandTransfer_ExtIEs_id_AdditionalDLForwardingUPTNLInformation
   (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions* plist, 
   QosFlowPerTNLInformationList *pvalue);

/* Append IE with value type UPTransportLayerInformation to list */
struct UPTransportLayerInformation ;
EXTERN int asn1Append_HandoverCommandTransfer_ExtIEs_id_ULForwardingUP_TNLInformation
   (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions* plist, struct 
   UPTransportLayerInformation *pvalue);

/* Append IE with value type UPTransportLayerInformationList to list */
EXTERN int asn1Append_HandoverCommandTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation
   (OSCTXT* pctxt, HandoverCommandTransfer_iE_Extensions* plist, 
   UPTransportLayerInformationList *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverCommandTransfer_iE_Extensions_element* 
   asn1Get_HandoverCommandTransfer_iE_Extensions (ProtocolExtensionID id, 
   HandoverCommandTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverCommandTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   HandoverCommandTransfer_iE_Extensions* plist, 
   HandoverCommandTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_HandoverCommandTransfer_iE_Extensions (
   HandoverCommandTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverCommandTransfer                                   */
/*                                                            */
/**************************************************************/
/*
 H
HandoverCommandTransfer ::= SEQUENCE {
   dLForwardingUP-TNLInformation [0] EXPLICIT UPTransportLayerInformation OPTIONAL,
   qosFlowToBeForwardedList [1] QosFlowToBeForwardedList OPTIONAL,
   dataForwardingResponseDRBList [2] DataForwardingResponseDRBList OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({HandoverCommandTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({HandoverCommandTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({HandoverCommandTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN HandoverCommandTransfer {
   struct {
      unsigned dLForwardingUP_TNLInformationPresent : 1;
      unsigned qosFlowToBeForwardedListPresent : 1;
      unsigned dataForwardingResponseDRBListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation dLForwardingUP_TNLInformation;
   QosFlowToBeForwardedList qosFlowToBeForwardedList;
   DataForwardingResponseDRBList dataForwardingResponseDRBList;
   HandoverCommandTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} HandoverCommandTransfer;

EXTERN int asn1PE_HandoverCommandTransfer (OSCTXT* pctxt, HandoverCommandTransfer* pvalue);

EXTERN int asn1PD_HandoverCommandTransfer (OSCTXT* pctxt, HandoverCommandTransfer* pvalue);

EXTERN void asn1Print_HandoverCommandTransfer 
   (const char* name, const HandoverCommandTransfer* pvalue);

EXTERN int asn1PrtToStr_HandoverCommandTransfer (const char* name, 
   HandoverCommandTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverCommandTransfer (OSCTXT *pctxt, 
   const char* name, const HandoverCommandTransfer* pvalue);

EXTERN int asn1Init_HandoverCommandTransfer (HandoverCommandTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationUnsuccessfulTransfer_iE_Extensions_el  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverPreparationUnsuccessfulTransfer'
*/
typedef struct EXTERN HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element;

EXTERN int asn1PE_HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element 
   (const char* name, const HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element (
   const char* name, 
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element (
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationUnsuccessfulTransfer_iE_Extensions     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverPreparationUnsuccessfulTransfer'
*/
/* List of HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element */
typedef OSRTDList HandoverPreparationUnsuccessfulTransfer_iE_Extensions;

EXTERN int asn1PE_HandoverPreparationUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, HandoverPreparationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_HandoverPreparationUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, HandoverPreparationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_HandoverPreparationUnsuccessfulTransfer_iE_Extensions 
   (const char* name, const HandoverPreparationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_HandoverPreparationUnsuccessfulTransfer_iE_Extensions (
   const char* name, 
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverPreparationUnsuccessfulTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const HandoverPreparationUnsuccessfulTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct HandoverPreparationUnsuccessfulTransfer_iE_Extensions_element* 
   asn1Get_HandoverPreparationUnsuccessfulTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverPreparationUnsuccessfulTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions* plist, 
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_HandoverPreparationUnsuccessfulTransfer_iE_Extensions (
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverPreparationUnsuccessfulTransfer                   */
/*                                                            */
/**************************************************************/
/*
HandoverPreparationUnsuccessfulTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({HandoverPreparationUnsuccessfulTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({HandoverPreparationUnsuccessfulTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({HandoverPreparationUnsuccessfulTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN HandoverPreparationUnsuccessfulTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   HandoverPreparationUnsuccessfulTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} HandoverPreparationUnsuccessfulTransfer;

EXTERN int asn1PE_HandoverPreparationUnsuccessfulTransfer (OSCTXT* pctxt, HandoverPreparationUnsuccessfulTransfer* pvalue);

EXTERN int asn1PD_HandoverPreparationUnsuccessfulTransfer (OSCTXT* pctxt, HandoverPreparationUnsuccessfulTransfer* pvalue);

EXTERN void asn1Print_HandoverPreparationUnsuccessfulTransfer 
   (const char* name, const HandoverPreparationUnsuccessfulTransfer* pvalue);

EXTERN int asn1PrtToStr_HandoverPreparationUnsuccessfulTransfer (const char* name, 
   HandoverPreparationUnsuccessfulTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverPreparationUnsuccessfulTransfer (OSCTXT *pctxt, 
   const char* name, const HandoverPreparationUnsuccessfulTransfer* pvalue);

EXTERN int asn1Init_HandoverPreparationUnsuccessfulTransfer (
   HandoverPreparationUnsuccessfulTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityResult_iE_Extensions_element                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityResult'
*/
typedef struct EXTERN SecurityResult_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SecurityResult_iE_Extensions_element;

EXTERN int asn1PE_SecurityResult_iE_Extensions_element (OSCTXT* pctxt, SecurityResult_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SecurityResult_iE_Extensions_element (OSCTXT* pctxt, SecurityResult_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SecurityResult_iE_Extensions_element 
   (const char* name, const SecurityResult_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SecurityResult_iE_Extensions_element (const char* name, 
   SecurityResult_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityResult_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SecurityResult_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SecurityResult_iE_Extensions_element (
   SecurityResult_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityResult_iE_Extensions                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityResult'
*/
/* List of SecurityResult_iE_Extensions_element */
typedef OSRTDList SecurityResult_iE_Extensions;

EXTERN int asn1PE_SecurityResult_iE_Extensions (OSCTXT* pctxt, SecurityResult_iE_Extensions* pvalue);

EXTERN int asn1PD_SecurityResult_iE_Extensions (OSCTXT* pctxt, SecurityResult_iE_Extensions* pvalue);

EXTERN void asn1Print_SecurityResult_iE_Extensions 
   (const char* name, const SecurityResult_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SecurityResult_iE_Extensions (const char* name, 
   SecurityResult_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityResult_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SecurityResult_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SecurityResult_iE_Extensions_element* 
   asn1Get_SecurityResult_iE_Extensions (ProtocolExtensionID id, 
   SecurityResult_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SecurityResult_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SecurityResult_iE_Extensions* plist, 
   SecurityResult_iE_Extensions* pmatches);

EXTERN int asn1Init_SecurityResult_iE_Extensions (
   SecurityResult_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityResult                                            */
/*                                                            */
/**************************************************************/
/*
SecurityResult ::= SEQUENCE {
   integrityProtectionResult [0] IntegrityProtectionResult,
   confidentialityProtectionResult [1] ConfidentialityProtectionResult,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SecurityResult-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SecurityResult-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SecurityResult-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SecurityResult {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   IntegrityProtectionResult integrityProtectionResult;
   ConfidentialityProtectionResult confidentialityProtectionResult;
   SecurityResult_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SecurityResult;

EXTERN int asn1PE_SecurityResult (OSCTXT* pctxt, SecurityResult* pvalue);

EXTERN int asn1PD_SecurityResult (OSCTXT* pctxt, SecurityResult* pvalue);

EXTERN void asn1Print_SecurityResult (const char* name, const SecurityResult* pvalue);

EXTERN int asn1PrtToStr_SecurityResult (const char* name, SecurityResult* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityResult (OSCTXT *pctxt, 
   const char* name, const SecurityResult* pvalue);

EXTERN int asn1Init_SecurityResult (SecurityResult* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowWithCauseItem_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowWithCauseItem'
*/
typedef struct EXTERN QosFlowWithCauseItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowWithCauseItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowWithCauseItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowWithCauseItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowWithCauseItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowWithCauseItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowWithCauseItem_iE_Extensions_element 
   (const char* name, const QosFlowWithCauseItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowWithCauseItem_iE_Extensions_element (const char* name, 
   QosFlowWithCauseItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowWithCauseItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowWithCauseItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowWithCauseItem_iE_Extensions_element (
   QosFlowWithCauseItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowWithCauseItem_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowWithCauseItem'
*/
/* List of QosFlowWithCauseItem_iE_Extensions_element */
typedef OSRTDList QosFlowWithCauseItem_iE_Extensions;

EXTERN int asn1PE_QosFlowWithCauseItem_iE_Extensions (OSCTXT* pctxt, QosFlowWithCauseItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowWithCauseItem_iE_Extensions (OSCTXT* pctxt, QosFlowWithCauseItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowWithCauseItem_iE_Extensions 
   (const char* name, const QosFlowWithCauseItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowWithCauseItem_iE_Extensions (const char* name, 
   QosFlowWithCauseItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowWithCauseItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowWithCauseItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowWithCauseItem_iE_Extensions_element* 
   asn1Get_QosFlowWithCauseItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowWithCauseItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowWithCauseItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowWithCauseItem_iE_Extensions* plist, 
   QosFlowWithCauseItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowWithCauseItem_iE_Extensions (
   QosFlowWithCauseItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowWithCauseItem                                      */
/*                                                            */
/**************************************************************/
/*
QosFlowWithCauseItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   cause [1] EXPLICIT Cause,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowWithCauseItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowWithCauseItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowWithCauseItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowWithCauseItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   Cause cause;
   QosFlowWithCauseItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowWithCauseItem;

EXTERN int asn1PE_QosFlowWithCauseItem (OSCTXT* pctxt, QosFlowWithCauseItem* pvalue);

EXTERN int asn1PD_QosFlowWithCauseItem (OSCTXT* pctxt, QosFlowWithCauseItem* pvalue);

EXTERN void asn1Print_QosFlowWithCauseItem 
   (const char* name, const QosFlowWithCauseItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowWithCauseItem (const char* name, 
   QosFlowWithCauseItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowWithCauseItem (OSCTXT *pctxt, 
   const char* name, const QosFlowWithCauseItem* pvalue);

EXTERN int asn1Init_QosFlowWithCauseItem (QosFlowWithCauseItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowListWithCause                                      */
/*                                                            */
/**************************************************************/
/*
QosFlowListWithCause ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowWithCauseItem
*/
/* List of QosFlowWithCauseItem */
typedef OSRTDList QosFlowListWithCause;

EXTERN int asn1PE_QosFlowListWithCause (OSCTXT* pctxt, QosFlowListWithCause* pvalue);

EXTERN int asn1PD_QosFlowListWithCause (OSCTXT* pctxt, QosFlowListWithCause* pvalue);

EXTERN void asn1Print_QosFlowListWithCause 
   (const char* name, const QosFlowListWithCause* pvalue);

EXTERN int asn1PrtToStr_QosFlowListWithCause (const char* name, 
   QosFlowListWithCause* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowListWithCause (OSCTXT *pctxt, 
   const char* name, const QosFlowListWithCause* pvalue);

EXTERN int asn1Init_QosFlowListWithCause (QosFlowListWithCause* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledgeTransfer_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequestAcknowledgeTransfer'
*/
typedef struct EXTERN HandoverRequestAcknowledgeTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      HandoverRequestAcknowledgeTransfer_ExtIEs_TVALUE t;

      /**
       * HandoverRequestAcknowledgeTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-AdditionalDLUPTNLInformationForHOList
          * criticality: ignore
          * presence: optional
          */
         AdditionalDLUPTNLInformationForHOList *_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalDLUPTNLInformationForHOList;
         /**
          * id: id-ULForwardingUP-TNLInformation
          * criticality: reject
          * presence: optional
          */
         UPTransportLayerInformation *_HandoverRequestAcknowledgeTransfer_ExtIEs_id_ULForwardingUP_TNLInformation;
         /**
          * id: id-AdditionalULForwardingUPTNLInformation
          * criticality: reject
          * presence: optional
          */
         UPTransportLayerInformationList *_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} HandoverRequestAcknowledgeTransfer_iE_Extensions_element;

EXTERN int asn1PE_HandoverRequestAcknowledgeTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_HandoverRequestAcknowledgeTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_HandoverRequestAcknowledgeTransfer_iE_Extensions_element 
   (const char* name, const HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_HandoverRequestAcknowledgeTransfer_iE_Extensions_element (
   const char* name, 
   HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequestAcknowledgeTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_HandoverRequestAcknowledgeTransfer_iE_Extensions_element_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalDLUPTNLInformationForHOList
   (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pElem
   , AdditionalDLUPTNLInformationForHOList *pvalue);

EXTERN void asn1SetTC_HandoverRequestAcknowledgeTransfer_iE_Extensions_element_HandoverRequestAcknowledgeTransfer_ExtIEs_id_ULForwardingUP_TNLInformation
   (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pElem
   , UPTransportLayerInformation *pvalue);

EXTERN void asn1SetTC_HandoverRequestAcknowledgeTransfer_iE_Extensions_element_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation
   (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pElem
   , UPTransportLayerInformationList *pvalue);

EXTERN int asn1Init_HandoverRequestAcknowledgeTransfer_iE_Extensions_element (
   HandoverRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledgeTransfer_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequestAcknowledgeTransfer'
*/
/* List of HandoverRequestAcknowledgeTransfer_iE_Extensions_element */
typedef OSRTDList HandoverRequestAcknowledgeTransfer_iE_Extensions;

EXTERN int asn1PE_HandoverRequestAcknowledgeTransfer_iE_Extensions (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_HandoverRequestAcknowledgeTransfer_iE_Extensions (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_HandoverRequestAcknowledgeTransfer_iE_Extensions 
   (const char* name, const HandoverRequestAcknowledgeTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_HandoverRequestAcknowledgeTransfer_iE_Extensions (
   const char* name, HandoverRequestAcknowledgeTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequestAcknowledgeTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const HandoverRequestAcknowledgeTransfer_iE_Extensions* pvalue);

/* Append IE with value type AdditionalDLUPTNLInformationForHOList to list */
EXTERN int asn1Append_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalDLUPTNLInformationForHOList
   (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions* plist, 
   AdditionalDLUPTNLInformationForHOList *pvalue);

/* Append IE with value type UPTransportLayerInformation to list */
struct UPTransportLayerInformation ;
EXTERN int asn1Append_HandoverRequestAcknowledgeTransfer_ExtIEs_id_ULForwardingUP_TNLInformation
   (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions* plist, 
   struct UPTransportLayerInformation *pvalue);

/* Append IE with value type UPTransportLayerInformationList to list */
EXTERN int asn1Append_HandoverRequestAcknowledgeTransfer_ExtIEs_id_AdditionalULForwardingUPTNLInformation
   (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer_iE_Extensions* plist, 
   UPTransportLayerInformationList *pvalue);

/* Get IE using id key value */
EXTERN struct HandoverRequestAcknowledgeTransfer_iE_Extensions_element* 
   asn1Get_HandoverRequestAcknowledgeTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   HandoverRequestAcknowledgeTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverRequestAcknowledgeTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   HandoverRequestAcknowledgeTransfer_iE_Extensions* plist, 
   HandoverRequestAcknowledgeTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_HandoverRequestAcknowledgeTransfer_iE_Extensions (
   HandoverRequestAcknowledgeTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequestAcknowledgeTransfer                        */
/*                                                            */
/**************************************************************/
/*
HandoverRequestAcknowledgeTransfer ::= SEQUENCE {
   dL-NGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation,
   dLForwardingUP-TNLInformation [1] EXPLICIT UPTransportLayerInformation OPTIONAL,
   securityResult [2] SecurityResult OPTIONAL,
   qosFlowSetupResponseList [3] QosFlowListWithDataForwarding,
   qosFlowFailedToSetupList [4] QosFlowListWithCause OPTIONAL,
   dataForwardingResponseDRBList [5] DataForwardingResponseDRBList OPTIONAL,
   iE-Extensions [6] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({HandoverRequestAcknowledgeTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({HandoverRequestAcknowledgeTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({HandoverRequestAcknowledgeTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN HandoverRequestAcknowledgeTransfer {
   struct {
      unsigned dLForwardingUP_TNLInformationPresent : 1;
      unsigned securityResultPresent : 1;
      unsigned qosFlowFailedToSetupListPresent : 1;
      unsigned dataForwardingResponseDRBListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation dL_NGU_UP_TNLInformation;
   UPTransportLayerInformation dLForwardingUP_TNLInformation;
   SecurityResult securityResult;
   QosFlowListWithDataForwarding qosFlowSetupResponseList;
   QosFlowListWithCause qosFlowFailedToSetupList;
   DataForwardingResponseDRBList dataForwardingResponseDRBList;
   HandoverRequestAcknowledgeTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} HandoverRequestAcknowledgeTransfer;

EXTERN int asn1PE_HandoverRequestAcknowledgeTransfer (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer* pvalue);

EXTERN int asn1PD_HandoverRequestAcknowledgeTransfer (OSCTXT* pctxt, HandoverRequestAcknowledgeTransfer* pvalue);

EXTERN void asn1Print_HandoverRequestAcknowledgeTransfer 
   (const char* name, const HandoverRequestAcknowledgeTransfer* pvalue);

EXTERN int asn1PrtToStr_HandoverRequestAcknowledgeTransfer (const char* name, 
   HandoverRequestAcknowledgeTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequestAcknowledgeTransfer (OSCTXT *pctxt, 
   const char* name, const HandoverRequestAcknowledgeTransfer* pvalue);

EXTERN int asn1Init_HandoverRequestAcknowledgeTransfer (
   HandoverRequestAcknowledgeTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequiredTransfer_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequiredTransfer'
*/
typedef struct EXTERN HandoverRequiredTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} HandoverRequiredTransfer_iE_Extensions_element;

EXTERN int asn1PE_HandoverRequiredTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverRequiredTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_HandoverRequiredTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverRequiredTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_HandoverRequiredTransfer_iE_Extensions_element 
   (const char* name, const HandoverRequiredTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_HandoverRequiredTransfer_iE_Extensions_element (
   const char* name, HandoverRequiredTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequiredTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const HandoverRequiredTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_HandoverRequiredTransfer_iE_Extensions_element (
   HandoverRequiredTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequiredTransfer_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverRequiredTransfer'
*/
/* List of HandoverRequiredTransfer_iE_Extensions_element */
typedef OSRTDList HandoverRequiredTransfer_iE_Extensions;

EXTERN int asn1PE_HandoverRequiredTransfer_iE_Extensions (OSCTXT* pctxt, HandoverRequiredTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_HandoverRequiredTransfer_iE_Extensions (OSCTXT* pctxt, HandoverRequiredTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_HandoverRequiredTransfer_iE_Extensions 
   (const char* name, const HandoverRequiredTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_HandoverRequiredTransfer_iE_Extensions (const char* name, 
   HandoverRequiredTransfer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequiredTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const HandoverRequiredTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct HandoverRequiredTransfer_iE_Extensions_element* 
   asn1Get_HandoverRequiredTransfer_iE_Extensions (ProtocolExtensionID id, 
   HandoverRequiredTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_HandoverRequiredTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   HandoverRequiredTransfer_iE_Extensions* plist, 
   HandoverRequiredTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_HandoverRequiredTransfer_iE_Extensions (
   HandoverRequiredTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverRequiredTransfer                                  */
/*                                                            */
/**************************************************************/
/*
HandoverRequiredTransfer ::= SEQUENCE {
   directForwardingPathAvailability [0] DirectForwardingPathAvailability OPTIONAL,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({HandoverRequiredTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({HandoverRequiredTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({HandoverRequiredTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN HandoverRequiredTransfer {
   struct {
      unsigned directForwardingPathAvailabilityPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DirectForwardingPathAvailability directForwardingPathAvailability;
   HandoverRequiredTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} HandoverRequiredTransfer;

EXTERN int asn1PE_HandoverRequiredTransfer (OSCTXT* pctxt, HandoverRequiredTransfer* pvalue);

EXTERN int asn1PD_HandoverRequiredTransfer (OSCTXT* pctxt, HandoverRequiredTransfer* pvalue);

EXTERN void asn1Print_HandoverRequiredTransfer 
   (const char* name, const HandoverRequiredTransfer* pvalue);

EXTERN int asn1PrtToStr_HandoverRequiredTransfer (const char* name, 
   HandoverRequiredTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverRequiredTransfer (OSCTXT *pctxt, 
   const char* name, const HandoverRequiredTransfer* pvalue);

EXTERN int asn1Init_HandoverRequiredTransfer (HandoverRequiredTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverResourceAllocationUnsuccessfulTransfer_iE_Extens  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverResourceAllocationUnsuccessfulTransfer'
*/
typedef struct EXTERN HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element;

EXTERN int asn1PE_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element 
   (const char* name, const HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element (
   const char* name, 
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element (
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverResourceAllocationUnsuccessfulTransfer_iE_Extens  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'HandoverResourceAllocationUnsuccessfulTransfer'
*/
/* List of HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element */
typedef OSRTDList HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions;

EXTERN int asn1PE_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions 
   (const char* name, const HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions (
   const char* name, 
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions_element* 
   asn1Get_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int 
   asn1GetAll_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* plist, 
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions (
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  HandoverResourceAllocationUnsuccessfulTransfer            */
/*                                                            */
/**************************************************************/
/*
HandoverResourceAllocationUnsuccessfulTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   criticalityDiagnostics [1] CriticalityDiagnostics OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({HandoverResourceAllocationUnsuccessfulTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({HandoverResourceAllocationUnsuccessfulTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({HandoverResourceAllocationUnsuccessfulTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN HandoverResourceAllocationUnsuccessfulTransfer {
   struct {
      unsigned criticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   CriticalityDiagnostics criticalityDiagnostics;
   HandoverResourceAllocationUnsuccessfulTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} HandoverResourceAllocationUnsuccessfulTransfer;

EXTERN int asn1PE_HandoverResourceAllocationUnsuccessfulTransfer (OSCTXT* pctxt, HandoverResourceAllocationUnsuccessfulTransfer* pvalue);

EXTERN int asn1PD_HandoverResourceAllocationUnsuccessfulTransfer (OSCTXT* pctxt, HandoverResourceAllocationUnsuccessfulTransfer* pvalue);

EXTERN void asn1Print_HandoverResourceAllocationUnsuccessfulTransfer 
   (const char* name, const HandoverResourceAllocationUnsuccessfulTransfer* pvalue);

EXTERN int asn1PrtToStr_HandoverResourceAllocationUnsuccessfulTransfer (
   const char* name, HandoverResourceAllocationUnsuccessfulTransfer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HandoverResourceAllocationUnsuccessfulTransfer (OSCTXT *pctxt, 
   const char* name, const HandoverResourceAllocationUnsuccessfulTransfer* pvalue);

EXTERN int asn1Init_HandoverResourceAllocationUnsuccessfulTransfer (
   HandoverResourceAllocationUnsuccessfulTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedRANNodeItem_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedRANNodeItem'
*/
typedef struct EXTERN RecommendedRANNodeItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} RecommendedRANNodeItem_iE_Extensions_element;

EXTERN int asn1PE_RecommendedRANNodeItem_iE_Extensions_element (OSCTXT* pctxt, RecommendedRANNodeItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RecommendedRANNodeItem_iE_Extensions_element (OSCTXT* pctxt, RecommendedRANNodeItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_RecommendedRANNodeItem_iE_Extensions_element 
   (const char* name, const RecommendedRANNodeItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_RecommendedRANNodeItem_iE_Extensions_element (
   const char* name, RecommendedRANNodeItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedRANNodeItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const RecommendedRANNodeItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_RecommendedRANNodeItem_iE_Extensions_element (
   RecommendedRANNodeItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedRANNodeItem_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedRANNodeItem'
*/
/* List of RecommendedRANNodeItem_iE_Extensions_element */
typedef OSRTDList RecommendedRANNodeItem_iE_Extensions;

EXTERN int asn1PE_RecommendedRANNodeItem_iE_Extensions (OSCTXT* pctxt, RecommendedRANNodeItem_iE_Extensions* pvalue);

EXTERN int asn1PD_RecommendedRANNodeItem_iE_Extensions (OSCTXT* pctxt, RecommendedRANNodeItem_iE_Extensions* pvalue);

EXTERN void asn1Print_RecommendedRANNodeItem_iE_Extensions 
   (const char* name, const RecommendedRANNodeItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_RecommendedRANNodeItem_iE_Extensions (const char* name, 
   RecommendedRANNodeItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedRANNodeItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const RecommendedRANNodeItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct RecommendedRANNodeItem_iE_Extensions_element* 
   asn1Get_RecommendedRANNodeItem_iE_Extensions (ProtocolExtensionID id, 
   RecommendedRANNodeItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RecommendedRANNodeItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   RecommendedRANNodeItem_iE_Extensions* plist, 
   RecommendedRANNodeItem_iE_Extensions* pmatches);

EXTERN int asn1Init_RecommendedRANNodeItem_iE_Extensions (
   RecommendedRANNodeItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedRANNodeItem                                    */
/*                                                            */
/**************************************************************/
/*
RecommendedRANNodeItem ::= SEQUENCE {
   aMFPagingTarget [0] EXPLICIT AMFPagingTarget,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({RecommendedRANNodeItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({RecommendedRANNodeItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({RecommendedRANNodeItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN RecommendedRANNodeItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AMFPagingTarget aMFPagingTarget;
   RecommendedRANNodeItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} RecommendedRANNodeItem;

EXTERN int asn1PE_RecommendedRANNodeItem (OSCTXT* pctxt, RecommendedRANNodeItem* pvalue);

EXTERN int asn1PD_RecommendedRANNodeItem (OSCTXT* pctxt, RecommendedRANNodeItem* pvalue);

EXTERN void asn1Print_RecommendedRANNodeItem 
   (const char* name, const RecommendedRANNodeItem* pvalue);

EXTERN int asn1PrtToStr_RecommendedRANNodeItem (const char* name, 
   RecommendedRANNodeItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedRANNodeItem (OSCTXT *pctxt, 
   const char* name, const RecommendedRANNodeItem* pvalue);

EXTERN int asn1Init_RecommendedRANNodeItem (RecommendedRANNodeItem* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedRANNodeList                                    */
/*                                                            */
/**************************************************************/
/*
RecommendedRANNodeList ::= SEQUENCE (SIZE (1..maxnoofRecommendedRANNodes)) OF RecommendedRANNodeItem
*/
/* List of RecommendedRANNodeItem */
typedef OSRTDList RecommendedRANNodeList;

EXTERN int asn1PE_RecommendedRANNodeList (OSCTXT* pctxt, RecommendedRANNodeList* pvalue);

EXTERN int asn1PD_RecommendedRANNodeList (OSCTXT* pctxt, RecommendedRANNodeList* pvalue);

EXTERN void asn1Print_RecommendedRANNodeList 
   (const char* name, const RecommendedRANNodeList* pvalue);

EXTERN int asn1PrtToStr_RecommendedRANNodeList (const char* name, 
   RecommendedRANNodeList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedRANNodeList (OSCTXT *pctxt, 
   const char* name, const RecommendedRANNodeList* pvalue);

EXTERN int asn1Init_RecommendedRANNodeList (RecommendedRANNodeList* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedRANNodesForPaging_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedRANNodesForPaging'
*/
typedef struct EXTERN RecommendedRANNodesForPaging_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} RecommendedRANNodesForPaging_iE_Extensions_element;

EXTERN int asn1PE_RecommendedRANNodesForPaging_iE_Extensions_element (OSCTXT* pctxt, RecommendedRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RecommendedRANNodesForPaging_iE_Extensions_element (OSCTXT* pctxt, RecommendedRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_RecommendedRANNodesForPaging_iE_Extensions_element 
   (const char* name, const RecommendedRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_RecommendedRANNodesForPaging_iE_Extensions_element (
   const char* name, 
   RecommendedRANNodesForPaging_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedRANNodesForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const RecommendedRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1Init_RecommendedRANNodesForPaging_iE_Extensions_element (
   RecommendedRANNodesForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedRANNodesForPaging_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RecommendedRANNodesForPaging'
*/
/* List of RecommendedRANNodesForPaging_iE_Extensions_element */
typedef OSRTDList RecommendedRANNodesForPaging_iE_Extensions;

EXTERN int asn1PE_RecommendedRANNodesForPaging_iE_Extensions (OSCTXT* pctxt, RecommendedRANNodesForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_RecommendedRANNodesForPaging_iE_Extensions (OSCTXT* pctxt, RecommendedRANNodesForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_RecommendedRANNodesForPaging_iE_Extensions 
   (const char* name, const RecommendedRANNodesForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_RecommendedRANNodesForPaging_iE_Extensions (const char* name, 
   RecommendedRANNodesForPaging_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedRANNodesForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const RecommendedRANNodesForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct RecommendedRANNodesForPaging_iE_Extensions_element* 
   asn1Get_RecommendedRANNodesForPaging_iE_Extensions (ProtocolExtensionID id, 
   RecommendedRANNodesForPaging_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RecommendedRANNodesForPaging_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   RecommendedRANNodesForPaging_iE_Extensions* plist, 
   RecommendedRANNodesForPaging_iE_Extensions* pmatches);

EXTERN int asn1Init_RecommendedRANNodesForPaging_iE_Extensions (
   RecommendedRANNodesForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RecommendedRANNodesForPaging                              */
/*                                                            */
/**************************************************************/
/*
RecommendedRANNodesForPaging ::= SEQUENCE {
   recommendedRANNodeList [0] RecommendedRANNodeList,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({RecommendedRANNodesForPaging-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({RecommendedRANNodesForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({RecommendedRANNodesForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN RecommendedRANNodesForPaging {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RecommendedRANNodeList recommendedRANNodeList;
   RecommendedRANNodesForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} RecommendedRANNodesForPaging;

EXTERN int asn1PE_RecommendedRANNodesForPaging (OSCTXT* pctxt, RecommendedRANNodesForPaging* pvalue);

EXTERN int asn1PD_RecommendedRANNodesForPaging (OSCTXT* pctxt, RecommendedRANNodesForPaging* pvalue);

EXTERN void asn1Print_RecommendedRANNodesForPaging 
   (const char* name, const RecommendedRANNodesForPaging* pvalue);

EXTERN int asn1PrtToStr_RecommendedRANNodesForPaging (const char* name, 
   RecommendedRANNodesForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RecommendedRANNodesForPaging (OSCTXT *pctxt, 
   const char* name, const RecommendedRANNodesForPaging* pvalue);

EXTERN int asn1Init_RecommendedRANNodesForPaging (
   RecommendedRANNodesForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InfoOnRecommendedCellsAndRANNodesForPaging'
*/
typedef struct EXTERN InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element;

EXTERN int asn1PE_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element (OSCTXT* pctxt, InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element (OSCTXT* pctxt, InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element 
   (const char* name, const InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element (
   const char* name, 
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1Init_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element (
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'InfoOnRecommendedCellsAndRANNodesForPaging'
*/
/* List of InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element */
typedef OSRTDList InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions;

EXTERN int asn1PE_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions (OSCTXT* pctxt, InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions (OSCTXT* pctxt, InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions 
   (const char* name, const InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions (
   const char* name, 
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions_element* 
   asn1Get_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions 
   (ProtocolExtensionID id, 
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* plist, 
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* pmatches);

EXTERN int asn1Init_InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions (
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  InfoOnRecommendedCellsAndRANNodesForPaging                */
/*                                                            */
/**************************************************************/
/*
InfoOnRecommendedCellsAndRANNodesForPaging ::= SEQUENCE {
   recommendedCellsForPaging [0] RecommendedCellsForPaging,
   recommendRANNodesForPaging [1] RecommendedRANNodesForPaging,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({InfoOnRecommendedCellsAndRANNodesForPaging-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({InfoOnRecommendedCellsAndRANNodesForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({InfoOnRecommendedCellsAndRANNodesForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN InfoOnRecommendedCellsAndRANNodesForPaging {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RecommendedCellsForPaging recommendedCellsForPaging;
   RecommendedRANNodesForPaging recommendRANNodesForPaging;
   InfoOnRecommendedCellsAndRANNodesForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} InfoOnRecommendedCellsAndRANNodesForPaging;

EXTERN int asn1PE_InfoOnRecommendedCellsAndRANNodesForPaging (OSCTXT* pctxt, InfoOnRecommendedCellsAndRANNodesForPaging* pvalue);

EXTERN int asn1PD_InfoOnRecommendedCellsAndRANNodesForPaging (OSCTXT* pctxt, InfoOnRecommendedCellsAndRANNodesForPaging* pvalue);

EXTERN void asn1Print_InfoOnRecommendedCellsAndRANNodesForPaging 
   (const char* name, const InfoOnRecommendedCellsAndRANNodesForPaging* pvalue);

EXTERN int asn1PrtToStr_InfoOnRecommendedCellsAndRANNodesForPaging (const char* name, 
   InfoOnRecommendedCellsAndRANNodesForPaging* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_InfoOnRecommendedCellsAndRANNodesForPaging (OSCTXT *pctxt, 
   const char* name, const InfoOnRecommendedCellsAndRANNodesForPaging* pvalue);

EXTERN int asn1Init_InfoOnRecommendedCellsAndRANNodesForPaging (
   InfoOnRecommendedCellsAndRANNodesForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedNGRANCellInformation_iE_Extensions_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LastVisitedNGRANCellInformation'
*/
typedef struct EXTERN LastVisitedNGRANCellInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} LastVisitedNGRANCellInformation_iE_Extensions_element;

EXTERN int asn1PE_LastVisitedNGRANCellInformation_iE_Extensions_element (OSCTXT* pctxt, LastVisitedNGRANCellInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_LastVisitedNGRANCellInformation_iE_Extensions_element (OSCTXT* pctxt, LastVisitedNGRANCellInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_LastVisitedNGRANCellInformation_iE_Extensions_element 
   (const char* name, const LastVisitedNGRANCellInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_LastVisitedNGRANCellInformation_iE_Extensions_element (
   const char* name, 
   LastVisitedNGRANCellInformation_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedNGRANCellInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const LastVisitedNGRANCellInformation_iE_Extensions_element* pvalue);

EXTERN int asn1Init_LastVisitedNGRANCellInformation_iE_Extensions_element (
   LastVisitedNGRANCellInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedNGRANCellInformation_iE_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LastVisitedNGRANCellInformation'
*/
/* List of LastVisitedNGRANCellInformation_iE_Extensions_element */
typedef OSRTDList LastVisitedNGRANCellInformation_iE_Extensions;

EXTERN int asn1PE_LastVisitedNGRANCellInformation_iE_Extensions (OSCTXT* pctxt, LastVisitedNGRANCellInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_LastVisitedNGRANCellInformation_iE_Extensions (OSCTXT* pctxt, LastVisitedNGRANCellInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_LastVisitedNGRANCellInformation_iE_Extensions 
   (const char* name, const LastVisitedNGRANCellInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_LastVisitedNGRANCellInformation_iE_Extensions (
   const char* name, LastVisitedNGRANCellInformation_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedNGRANCellInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const LastVisitedNGRANCellInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct LastVisitedNGRANCellInformation_iE_Extensions_element* 
   asn1Get_LastVisitedNGRANCellInformation_iE_Extensions 
   (ProtocolExtensionID id, 
   LastVisitedNGRANCellInformation_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_LastVisitedNGRANCellInformation_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   LastVisitedNGRANCellInformation_iE_Extensions* plist, 
   LastVisitedNGRANCellInformation_iE_Extensions* pmatches);

EXTERN int asn1Init_LastVisitedNGRANCellInformation_iE_Extensions (
   LastVisitedNGRANCellInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedNGRANCellInformation                           */
/*                                                            */
/**************************************************************/
/*
LastVisitedNGRANCellInformation ::= SEQUENCE {
   globalCellID [0] EXPLICIT NGRAN-CGI,
   cellType [1] CellType,
   timeUEStayedInCell [2] TimeUEStayedInCell,
   timeUEStayedInCellEnhancedGranularity [3] TimeUEStayedInCellEnhancedGranularity OPTIONAL,
   hOCauseValue [4] EXPLICIT Cause OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({LastVisitedNGRANCellInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({LastVisitedNGRANCellInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({LastVisitedNGRANCellInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN LastVisitedNGRANCellInformation {
   struct {
      unsigned timeUEStayedInCellEnhancedGranularityPresent : 1;
      unsigned hOCauseValuePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NGRAN_CGI globalCellID;
   CellType cellType;
   TimeUEStayedInCell timeUEStayedInCell;
   TimeUEStayedInCellEnhancedGranularity timeUEStayedInCellEnhancedGranularity;
   Cause hOCauseValue;
   LastVisitedNGRANCellInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} LastVisitedNGRANCellInformation;

EXTERN int asn1PE_LastVisitedNGRANCellInformation (OSCTXT* pctxt, LastVisitedNGRANCellInformation* pvalue);

EXTERN int asn1PD_LastVisitedNGRANCellInformation (OSCTXT* pctxt, LastVisitedNGRANCellInformation* pvalue);

EXTERN void asn1Print_LastVisitedNGRANCellInformation 
   (const char* name, const LastVisitedNGRANCellInformation* pvalue);

EXTERN int asn1PrtToStr_LastVisitedNGRANCellInformation (const char* name, 
   LastVisitedNGRANCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedNGRANCellInformation (OSCTXT *pctxt, 
   const char* name, const LastVisitedNGRANCellInformation* pvalue);

EXTERN int asn1Init_LastVisitedNGRANCellInformation (
   LastVisitedNGRANCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedCellInformation_choice_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LastVisitedCellInformation'
*/
typedef struct EXTERN LastVisitedCellInformation_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} LastVisitedCellInformation_choice_Extensions;

EXTERN int asn1PE_LastVisitedCellInformation_choice_Extensions (OSCTXT* pctxt, LastVisitedCellInformation_choice_Extensions* pvalue);

EXTERN int asn1PD_LastVisitedCellInformation_choice_Extensions (OSCTXT* pctxt, LastVisitedCellInformation_choice_Extensions* pvalue);

EXTERN void asn1Print_LastVisitedCellInformation_choice_Extensions 
   (const char* name, const LastVisitedCellInformation_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_LastVisitedCellInformation_choice_Extensions (
   const char* name, LastVisitedCellInformation_choice_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedCellInformation_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const LastVisitedCellInformation_choice_Extensions* pvalue);

EXTERN int asn1Init_LastVisitedCellInformation_choice_Extensions (
   LastVisitedCellInformation_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedCellInformation                                */
/*                                                            */
/**************************************************************/
/*
 J
 K
 L
LastVisitedCellInformation ::= CHOICE {
   nGRANCell [0] LastVisitedNGRANCellInformation,
   eUTRANCell [1] LastVisitedEUTRANCellInformation,
   uTRANCell [2] LastVisitedUTRANCellInformation,
   gERANCell [3] LastVisitedGERANCellInformation,
   choice-Extensions [4] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({LastVisitedCellInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({LastVisitedCellInformation-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({LastVisitedCellInformation-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_LastVisitedCellInformation_nGRANCell 1
#define T_LastVisitedCellInformation_eUTRANCell 2
#define T_LastVisitedCellInformation_uTRANCell 3
#define T_LastVisitedCellInformation_gERANCell 4
#define T_LastVisitedCellInformation_choice_Extensions 5

typedef struct EXTERN LastVisitedCellInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      LastVisitedNGRANCellInformation *nGRANCell;
      /* t = 2 */
      LastVisitedEUTRANCellInformation *eUTRANCell;
      /* t = 3 */
      LastVisitedUTRANCellInformation *uTRANCell;
      /* t = 4 */
      LastVisitedGERANCellInformation *gERANCell;
      /* t = 5 */
      LastVisitedCellInformation_choice_Extensions *choice_Extensions;
   } u;
} LastVisitedCellInformation;

EXTERN int asn1PE_LastVisitedCellInformation (OSCTXT* pctxt, LastVisitedCellInformation* pvalue);

EXTERN int asn1PD_LastVisitedCellInformation (OSCTXT* pctxt, LastVisitedCellInformation* pvalue);

EXTERN void asn1Print_LastVisitedCellInformation 
   (const char* name, const LastVisitedCellInformation* pvalue);

EXTERN int asn1PrtToStr_LastVisitedCellInformation (const char* name, 
   LastVisitedCellInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedCellInformation (OSCTXT *pctxt, 
   const char* name, const LastVisitedCellInformation* pvalue);

EXTERN int asn1Init_LastVisitedCellInformation (LastVisitedCellInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedCellItem_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LastVisitedCellItem'
*/
typedef struct EXTERN LastVisitedCellItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} LastVisitedCellItem_iE_Extensions_element;

EXTERN int asn1PE_LastVisitedCellItem_iE_Extensions_element (OSCTXT* pctxt, LastVisitedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_LastVisitedCellItem_iE_Extensions_element (OSCTXT* pctxt, LastVisitedCellItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_LastVisitedCellItem_iE_Extensions_element 
   (const char* name, const LastVisitedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_LastVisitedCellItem_iE_Extensions_element (const char* name, 
   LastVisitedCellItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedCellItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const LastVisitedCellItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_LastVisitedCellItem_iE_Extensions_element (
   LastVisitedCellItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedCellItem_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LastVisitedCellItem'
*/
/* List of LastVisitedCellItem_iE_Extensions_element */
typedef OSRTDList LastVisitedCellItem_iE_Extensions;

EXTERN int asn1PE_LastVisitedCellItem_iE_Extensions (OSCTXT* pctxt, LastVisitedCellItem_iE_Extensions* pvalue);

EXTERN int asn1PD_LastVisitedCellItem_iE_Extensions (OSCTXT* pctxt, LastVisitedCellItem_iE_Extensions* pvalue);

EXTERN void asn1Print_LastVisitedCellItem_iE_Extensions 
   (const char* name, const LastVisitedCellItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_LastVisitedCellItem_iE_Extensions (const char* name, 
   LastVisitedCellItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedCellItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const LastVisitedCellItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct LastVisitedCellItem_iE_Extensions_element* 
   asn1Get_LastVisitedCellItem_iE_Extensions (ProtocolExtensionID id, 
   LastVisitedCellItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_LastVisitedCellItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   LastVisitedCellItem_iE_Extensions* plist, 
   LastVisitedCellItem_iE_Extensions* pmatches);

EXTERN int asn1Init_LastVisitedCellItem_iE_Extensions (
   LastVisitedCellItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LastVisitedCellItem                                       */
/*                                                            */
/**************************************************************/
/*
LastVisitedCellItem ::= SEQUENCE {
   lastVisitedCellInformation [0] EXPLICIT LastVisitedCellInformation,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({LastVisitedCellItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({LastVisitedCellItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({LastVisitedCellItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN LastVisitedCellItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   LastVisitedCellInformation lastVisitedCellInformation;
   LastVisitedCellItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} LastVisitedCellItem;

EXTERN int asn1PE_LastVisitedCellItem (OSCTXT* pctxt, LastVisitedCellItem* pvalue);

EXTERN int asn1PD_LastVisitedCellItem (OSCTXT* pctxt, LastVisitedCellItem* pvalue);

EXTERN void asn1Print_LastVisitedCellItem 
   (const char* name, const LastVisitedCellItem* pvalue);

EXTERN int asn1PrtToStr_LastVisitedCellItem (const char* name, 
   LastVisitedCellItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LastVisitedCellItem (OSCTXT *pctxt, 
   const char* name, const LastVisitedCellItem* pvalue);

EXTERN int asn1Init_LastVisitedCellItem (LastVisitedCellItem* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingRequestType_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingRequestType'
*/
typedef struct EXTERN LocationReportingRequestType_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      LocationReportingRequestType_ExtIEs_TVALUE t;

      /**
       * LocationReportingRequestType-ExtIEs information objects
       */
      union {
         /**
          * id: id-LocationReportingAdditionalInfo
          * criticality: ignore
          * presence: optional
          */
         LocationReportingAdditionalInfo _LocationReportingRequestType_ExtIEs_id_LocationReportingAdditionalInfo;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} LocationReportingRequestType_iE_Extensions_element;

EXTERN int asn1PE_LocationReportingRequestType_iE_Extensions_element (OSCTXT* pctxt, LocationReportingRequestType_iE_Extensions_element* pvalue);

EXTERN int asn1PD_LocationReportingRequestType_iE_Extensions_element (OSCTXT* pctxt, LocationReportingRequestType_iE_Extensions_element* pvalue);

EXTERN void asn1Print_LocationReportingRequestType_iE_Extensions_element 
   (const char* name, const LocationReportingRequestType_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_LocationReportingRequestType_iE_Extensions_element (
   const char* name, 
   LocationReportingRequestType_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingRequestType_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const LocationReportingRequestType_iE_Extensions_element* pvalue);

EXTERN int asn1Init_LocationReportingRequestType_iE_Extensions_element (
   LocationReportingRequestType_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingRequestType_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'LocationReportingRequestType'
*/
/* List of LocationReportingRequestType_iE_Extensions_element */
typedef OSRTDList LocationReportingRequestType_iE_Extensions;

EXTERN int asn1PE_LocationReportingRequestType_iE_Extensions (OSCTXT* pctxt, LocationReportingRequestType_iE_Extensions* pvalue);

EXTERN int asn1PD_LocationReportingRequestType_iE_Extensions (OSCTXT* pctxt, LocationReportingRequestType_iE_Extensions* pvalue);

EXTERN void asn1Print_LocationReportingRequestType_iE_Extensions 
   (const char* name, const LocationReportingRequestType_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_LocationReportingRequestType_iE_Extensions (const char* name, 
   LocationReportingRequestType_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingRequestType_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const LocationReportingRequestType_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct LocationReportingRequestType_iE_Extensions_element* 
   asn1Get_LocationReportingRequestType_iE_Extensions (ProtocolExtensionID id, 
   LocationReportingRequestType_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_LocationReportingRequestType_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   LocationReportingRequestType_iE_Extensions* plist, 
   LocationReportingRequestType_iE_Extensions* pmatches);

EXTERN int asn1Init_LocationReportingRequestType_iE_Extensions (
   LocationReportingRequestType_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  LocationReportingRequestType                              */
/*                                                            */
/**************************************************************/
/*
LocationReportingRequestType ::= SEQUENCE {
   eventType [0] EventType,
   reportArea [1] ReportArea,
   areaOfInterestList [2] AreaOfInterestList OPTIONAL,
   locationReportingReferenceIDToBeCancelled [3] LocationReportingReferenceID OPTIONAL,
--The above IE shall be present if the event type is set to “stop reporting UE presence in the area of interest”
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({LocationReportingRequestType-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({LocationReportingRequestType-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({LocationReportingRequestType-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN LocationReportingRequestType {
   struct {
      unsigned areaOfInterestListPresent : 1;
      unsigned locationReportingReferenceIDToBeCancelledPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EventType eventType;
   ReportArea reportArea;
   AreaOfInterestList areaOfInterestList;
   LocationReportingReferenceID locationReportingReferenceIDToBeCancelled;
   LocationReportingRequestType_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} LocationReportingRequestType;

EXTERN int asn1PE_LocationReportingRequestType (OSCTXT* pctxt, LocationReportingRequestType* pvalue);

EXTERN int asn1PD_LocationReportingRequestType (OSCTXT* pctxt, LocationReportingRequestType* pvalue);

EXTERN void asn1Print_LocationReportingRequestType 
   (const char* name, const LocationReportingRequestType* pvalue);

EXTERN int asn1PrtToStr_LocationReportingRequestType (const char* name, 
   LocationReportingRequestType* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_LocationReportingRequestType (OSCTXT *pctxt, 
   const char* name, const LocationReportingRequestType* pvalue);

EXTERN int asn1Init_LocationReportingRequestType (
   LocationReportingRequestType* pvalue);

/**************************************************************/
/*                                                            */
/*  RATRestrictions_Item_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RATRestrictions-Item'
*/
typedef struct EXTERN RATRestrictions_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} RATRestrictions_Item_iE_Extensions_element;

EXTERN int asn1PE_RATRestrictions_Item_iE_Extensions_element (OSCTXT* pctxt, RATRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RATRestrictions_Item_iE_Extensions_element (OSCTXT* pctxt, RATRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_RATRestrictions_Item_iE_Extensions_element 
   (const char* name, const RATRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_RATRestrictions_Item_iE_Extensions_element (const char* name, 
   RATRestrictions_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RATRestrictions_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const RATRestrictions_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_RATRestrictions_Item_iE_Extensions_element (
   RATRestrictions_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RATRestrictions_Item_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RATRestrictions-Item'
*/
/* List of RATRestrictions_Item_iE_Extensions_element */
typedef OSRTDList RATRestrictions_Item_iE_Extensions;

EXTERN int asn1PE_RATRestrictions_Item_iE_Extensions (OSCTXT* pctxt, RATRestrictions_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_RATRestrictions_Item_iE_Extensions (OSCTXT* pctxt, RATRestrictions_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_RATRestrictions_Item_iE_Extensions 
   (const char* name, const RATRestrictions_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_RATRestrictions_Item_iE_Extensions (const char* name, 
   RATRestrictions_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RATRestrictions_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const RATRestrictions_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct RATRestrictions_Item_iE_Extensions_element* 
   asn1Get_RATRestrictions_Item_iE_Extensions (ProtocolExtensionID id, 
   RATRestrictions_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RATRestrictions_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   RATRestrictions_Item_iE_Extensions* plist, 
   RATRestrictions_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_RATRestrictions_Item_iE_Extensions (
   RATRestrictions_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RATRestrictions_Item                                      */
/*                                                            */
/**************************************************************/
/*
RATRestrictions-Item ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   rATRestrictionInformation [1] RATRestrictionInformation,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({RATRestrictions-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({RATRestrictions-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({RATRestrictions-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN RATRestrictions_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   RATRestrictionInformation rATRestrictionInformation;
   RATRestrictions_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} RATRestrictions_Item;

EXTERN int asn1PE_RATRestrictions_Item (OSCTXT* pctxt, RATRestrictions_Item* pvalue);

EXTERN int asn1PD_RATRestrictions_Item (OSCTXT* pctxt, RATRestrictions_Item* pvalue);

EXTERN void asn1Print_RATRestrictions_Item 
   (const char* name, const RATRestrictions_Item* pvalue);

EXTERN int asn1PrtToStr_RATRestrictions_Item (const char* name, 
   RATRestrictions_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RATRestrictions_Item (OSCTXT *pctxt, 
   const char* name, const RATRestrictions_Item* pvalue);

EXTERN int asn1Init_RATRestrictions_Item (RATRestrictions_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  RATRestrictions                                           */
/*                                                            */
/**************************************************************/
/*
RATRestrictions ::= SEQUENCE (SIZE (1..maxnoofEPLMNsPlusOne)) OF RATRestrictions-Item
*/
/* List of RATRestrictions_Item */
typedef OSRTDList RATRestrictions;

EXTERN int asn1PE_RATRestrictions (OSCTXT* pctxt, RATRestrictions* pvalue);

EXTERN int asn1PD_RATRestrictions (OSCTXT* pctxt, RATRestrictions* pvalue);

EXTERN void asn1Print_RATRestrictions 
   (const char* name, const RATRestrictions* pvalue);

EXTERN int asn1PrtToStr_RATRestrictions (const char* name, RATRestrictions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RATRestrictions (OSCTXT *pctxt, 
   const char* name, const RATRestrictions* pvalue);

EXTERN int asn1Init_RATRestrictions (RATRestrictions* pvalue);

/**************************************************************/
/*                                                            */
/*  NotAllowedTACs                                            */
/*                                                            */
/**************************************************************/
/*
NotAllowedTACs ::= SEQUENCE (SIZE (1..maxnoofAllowedAreas)) OF TAC
*/
typedef struct EXTERN NotAllowedTACs {
   OSUINT8 n;
   TAC elem[16];
} NotAllowedTACs;

EXTERN int asn1PE_NotAllowedTACs (OSCTXT* pctxt, NotAllowedTACs* pvalue);

EXTERN int asn1PD_NotAllowedTACs (OSCTXT* pctxt, NotAllowedTACs* pvalue);

EXTERN void asn1Print_NotAllowedTACs (const char* name, const NotAllowedTACs* pvalue);

EXTERN int asn1PrtToStr_NotAllowedTACs (const char* name, NotAllowedTACs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NotAllowedTACs (OSCTXT *pctxt, 
   const char* name, const NotAllowedTACs* pvalue);

EXTERN int asn1Init_NotAllowedTACs (NotAllowedTACs* pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceAreaInformation_Item_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServiceAreaInformation-Item'
*/
typedef struct EXTERN ServiceAreaInformation_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} ServiceAreaInformation_Item_iE_Extensions_element;

EXTERN int asn1PE_ServiceAreaInformation_Item_iE_Extensions_element (OSCTXT* pctxt, ServiceAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_ServiceAreaInformation_Item_iE_Extensions_element (OSCTXT* pctxt, ServiceAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_ServiceAreaInformation_Item_iE_Extensions_element 
   (const char* name, const ServiceAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_ServiceAreaInformation_Item_iE_Extensions_element (
   const char* name, 
   ServiceAreaInformation_Item_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServiceAreaInformation_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const ServiceAreaInformation_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_ServiceAreaInformation_Item_iE_Extensions_element (
   ServiceAreaInformation_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceAreaInformation_Item_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServiceAreaInformation-Item'
*/
/* List of ServiceAreaInformation_Item_iE_Extensions_element */
typedef OSRTDList ServiceAreaInformation_Item_iE_Extensions;

EXTERN int asn1PE_ServiceAreaInformation_Item_iE_Extensions (OSCTXT* pctxt, ServiceAreaInformation_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_ServiceAreaInformation_Item_iE_Extensions (OSCTXT* pctxt, ServiceAreaInformation_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_ServiceAreaInformation_Item_iE_Extensions 
   (const char* name, const ServiceAreaInformation_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_ServiceAreaInformation_Item_iE_Extensions (const char* name, 
   ServiceAreaInformation_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServiceAreaInformation_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const ServiceAreaInformation_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct ServiceAreaInformation_Item_iE_Extensions_element* 
   asn1Get_ServiceAreaInformation_Item_iE_Extensions (ProtocolExtensionID id, 
   ServiceAreaInformation_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_ServiceAreaInformation_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   ServiceAreaInformation_Item_iE_Extensions* plist, 
   ServiceAreaInformation_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_ServiceAreaInformation_Item_iE_Extensions (
   ServiceAreaInformation_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceAreaInformation_Item                               */
/*                                                            */
/**************************************************************/
/*
ServiceAreaInformation-Item ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   allowedTACs [1] AllowedTACs OPTIONAL,
   notAllowedTACs [2] NotAllowedTACs OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({ServiceAreaInformation-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({ServiceAreaInformation-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({ServiceAreaInformation-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN ServiceAreaInformation_Item {
   struct {
      unsigned allowedTACsPresent : 1;
      unsigned notAllowedTACsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   AllowedTACs allowedTACs;
   NotAllowedTACs notAllowedTACs;
   ServiceAreaInformation_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} ServiceAreaInformation_Item;

EXTERN int asn1PE_ServiceAreaInformation_Item (OSCTXT* pctxt, ServiceAreaInformation_Item* pvalue);

EXTERN int asn1PD_ServiceAreaInformation_Item (OSCTXT* pctxt, ServiceAreaInformation_Item* pvalue);

EXTERN void asn1Print_ServiceAreaInformation_Item 
   (const char* name, const ServiceAreaInformation_Item* pvalue);

EXTERN int asn1PrtToStr_ServiceAreaInformation_Item (const char* name, 
   ServiceAreaInformation_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServiceAreaInformation_Item (OSCTXT *pctxt, 
   const char* name, const ServiceAreaInformation_Item* pvalue);

EXTERN int asn1Init_ServiceAreaInformation_Item (ServiceAreaInformation_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceAreaInformation                                    */
/*                                                            */
/**************************************************************/
/*
ServiceAreaInformation ::= SEQUENCE (SIZE (1..maxnoofEPLMNsPlusOne)) OF ServiceAreaInformation-Item
*/
/* List of ServiceAreaInformation_Item */
typedef OSRTDList ServiceAreaInformation;

EXTERN int asn1PE_ServiceAreaInformation (OSCTXT* pctxt, ServiceAreaInformation* pvalue);

EXTERN int asn1PD_ServiceAreaInformation (OSCTXT* pctxt, ServiceAreaInformation* pvalue);

EXTERN void asn1Print_ServiceAreaInformation 
   (const char* name, const ServiceAreaInformation* pvalue);

EXTERN int asn1PrtToStr_ServiceAreaInformation (const char* name, 
   ServiceAreaInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServiceAreaInformation (OSCTXT *pctxt, 
   const char* name, const ServiceAreaInformation* pvalue);

EXTERN int asn1Init_ServiceAreaInformation (ServiceAreaInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  MobilityRestrictionList_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MobilityRestrictionList'
*/
typedef struct EXTERN MobilityRestrictionList_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      MobilityRestrictionList_ExtIEs_TVALUE t;

      /**
       * MobilityRestrictionList-ExtIEs information objects
       */
      union {
         /**
          * id: id-LastEUTRAN-PLMNIdentity
          * criticality: ignore
          * presence: optional
          */
         PLMNIdentity *_MobilityRestrictionList_ExtIEs_id_LastEUTRAN_PLMNIdentity;
         /**
          * id: id-CNTypeRestrictionsForServing
          * criticality: ignore
          * presence: optional
          */
         CNTypeRestrictionsForServing _MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForServing;
         /**
          * id: id-CNTypeRestrictionsForEquivalent
          * criticality: ignore
          * presence: optional
          */
         CNTypeRestrictionsForEquivalent *_MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForEquivalent;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} MobilityRestrictionList_iE_Extensions_element;

EXTERN int asn1PE_MobilityRestrictionList_iE_Extensions_element (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions_element* pvalue);

EXTERN int asn1PD_MobilityRestrictionList_iE_Extensions_element (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions_element* pvalue);

EXTERN void asn1Print_MobilityRestrictionList_iE_Extensions_element 
   (const char* name, const MobilityRestrictionList_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_MobilityRestrictionList_iE_Extensions_element (
   const char* name, MobilityRestrictionList_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MobilityRestrictionList_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const MobilityRestrictionList_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_MobilityRestrictionList_iE_Extensions_element_MobilityRestrictionList_ExtIEs_id_LastEUTRAN_PLMNIdentity
   (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions_element* pElem, 
   PLMNIdentity *pvalue);

EXTERN void asn1SetTC_MobilityRestrictionList_iE_Extensions_element_MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForServing
   (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions_element* pElem, 
   CNTypeRestrictionsForServing value);

EXTERN void asn1SetTC_MobilityRestrictionList_iE_Extensions_element_MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForEquivalent
   (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions_element* pElem, 
   CNTypeRestrictionsForEquivalent *pvalue);

EXTERN int asn1Init_MobilityRestrictionList_iE_Extensions_element (
   MobilityRestrictionList_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MobilityRestrictionList_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MobilityRestrictionList'
*/
/* List of MobilityRestrictionList_iE_Extensions_element */
typedef OSRTDList MobilityRestrictionList_iE_Extensions;

EXTERN int asn1PE_MobilityRestrictionList_iE_Extensions (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions* pvalue);

EXTERN int asn1PD_MobilityRestrictionList_iE_Extensions (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions* pvalue);

EXTERN void asn1Print_MobilityRestrictionList_iE_Extensions 
   (const char* name, const MobilityRestrictionList_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_MobilityRestrictionList_iE_Extensions (const char* name, 
   MobilityRestrictionList_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MobilityRestrictionList_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const MobilityRestrictionList_iE_Extensions* pvalue);

/* Append IE with value type PLMNIdentity to list */
struct PLMNIdentity ;
EXTERN int asn1Append_MobilityRestrictionList_ExtIEs_id_LastEUTRAN_PLMNIdentity
   (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions* plist, struct 
   PLMNIdentity *pvalue);

/* Append IE with value type CNTypeRestrictionsForServing to list */
EXTERN int asn1Append_MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForServing
   (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions* plist, 
   CNTypeRestrictionsForServing value);

/* Append IE with value type CNTypeRestrictionsForEquivalent to list */
EXTERN int asn1Append_MobilityRestrictionList_ExtIEs_id_CNTypeRestrictionsForEquivalent
   (OSCTXT* pctxt, MobilityRestrictionList_iE_Extensions* plist, 
   CNTypeRestrictionsForEquivalent *pvalue);

/* Get IE using id key value */
EXTERN struct MobilityRestrictionList_iE_Extensions_element* 
   asn1Get_MobilityRestrictionList_iE_Extensions (ProtocolExtensionID id, 
   MobilityRestrictionList_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_MobilityRestrictionList_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   MobilityRestrictionList_iE_Extensions* plist, 
   MobilityRestrictionList_iE_Extensions* pmatches);

EXTERN int asn1Init_MobilityRestrictionList_iE_Extensions (
   MobilityRestrictionList_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  MobilityRestrictionList                                   */
/*                                                            */
/**************************************************************/
/*
MobilityRestrictionList ::= SEQUENCE {
   servingPLMN [0] PLMNIdentity,
   equivalentPLMNs [1] EquivalentPLMNs OPTIONAL,
   rATRestrictions [2] RATRestrictions OPTIONAL,
   forbiddenAreaInformation [3] ForbiddenAreaInformation OPTIONAL,
   serviceAreaInformation [4] ServiceAreaInformation OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({MobilityRestrictionList-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({MobilityRestrictionList-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({MobilityRestrictionList-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN MobilityRestrictionList {
   struct {
      unsigned equivalentPLMNsPresent : 1;
      unsigned rATRestrictionsPresent : 1;
      unsigned forbiddenAreaInformationPresent : 1;
      unsigned serviceAreaInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity servingPLMN;
   EquivalentPLMNs equivalentPLMNs;
   RATRestrictions rATRestrictions;
   ForbiddenAreaInformation forbiddenAreaInformation;
   ServiceAreaInformation serviceAreaInformation;
   MobilityRestrictionList_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} MobilityRestrictionList;

EXTERN int asn1PE_MobilityRestrictionList (OSCTXT* pctxt, MobilityRestrictionList* pvalue);

EXTERN int asn1PD_MobilityRestrictionList (OSCTXT* pctxt, MobilityRestrictionList* pvalue);

EXTERN void asn1Print_MobilityRestrictionList 
   (const char* name, const MobilityRestrictionList* pvalue);

EXTERN int asn1PrtToStr_MobilityRestrictionList (const char* name, 
   MobilityRestrictionList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MobilityRestrictionList (OSCTXT *pctxt, 
   const char* name, const MobilityRestrictionList* pvalue);

EXTERN int asn1Init_MobilityRestrictionList (MobilityRestrictionList* pvalue);

/**************************************************************/
/*                                                            */
/*  NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGRAN-TNLAssociationToRemoveItem'
*/
typedef struct EXTERN NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element;

EXTERN int asn1PE_NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element 
   (const char* name, const NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element (
   const char* name, 
   NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element (
   NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NGRAN_TNLAssociationToRemoveItem_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NGRAN-TNLAssociationToRemoveItem'
*/
/* List of NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element */
typedef OSRTDList NGRAN_TNLAssociationToRemoveItem_iE_Extensions;

EXTERN int asn1PE_NGRAN_TNLAssociationToRemoveItem_iE_Extensions (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

EXTERN int asn1PD_NGRAN_TNLAssociationToRemoveItem_iE_Extensions (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

EXTERN void asn1Print_NGRAN_TNLAssociationToRemoveItem_iE_Extensions 
   (const char* name, const NGRAN_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_NGRAN_TNLAssociationToRemoveItem_iE_Extensions (
   const char* name, NGRAN_TNLAssociationToRemoveItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGRAN_TNLAssociationToRemoveItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const NGRAN_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct NGRAN_TNLAssociationToRemoveItem_iE_Extensions_element* 
   asn1Get_NGRAN_TNLAssociationToRemoveItem_iE_Extensions 
   (ProtocolExtensionID id, 
   NGRAN_TNLAssociationToRemoveItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NGRAN_TNLAssociationToRemoveItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   NGRAN_TNLAssociationToRemoveItem_iE_Extensions* plist, 
   NGRAN_TNLAssociationToRemoveItem_iE_Extensions* pmatches);

EXTERN int asn1Init_NGRAN_TNLAssociationToRemoveItem_iE_Extensions (
   NGRAN_TNLAssociationToRemoveItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NGRAN_TNLAssociationToRemoveItem                          */
/*                                                            */
/**************************************************************/
/*
NGRAN-TNLAssociationToRemoveItem ::= SEQUENCE {
   tNLAssociationTransportLayerAddress [0] EXPLICIT CPTransportLayerInformation,
   tNLAssociationTransportLayerAddressAMF [1] EXPLICIT CPTransportLayerInformation OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({NGRAN-TNLAssociationToRemoveItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({NGRAN-TNLAssociationToRemoveItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({NGRAN-TNLAssociationToRemoveItem-ExtIEs}{@id})
   } OPTIONAL
}
*/
typedef struct EXTERN NGRAN_TNLAssociationToRemoveItem {
   struct {
      unsigned tNLAssociationTransportLayerAddressAMFPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CPTransportLayerInformation tNLAssociationTransportLayerAddress;
   CPTransportLayerInformation tNLAssociationTransportLayerAddressAMF;
   NGRAN_TNLAssociationToRemoveItem_iE_Extensions iE_Extensions;
} NGRAN_TNLAssociationToRemoveItem;

EXTERN int asn1PE_NGRAN_TNLAssociationToRemoveItem (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveItem* pvalue);

EXTERN int asn1PD_NGRAN_TNLAssociationToRemoveItem (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveItem* pvalue);

EXTERN void asn1Print_NGRAN_TNLAssociationToRemoveItem 
   (const char* name, const NGRAN_TNLAssociationToRemoveItem* pvalue);

EXTERN int asn1PrtToStr_NGRAN_TNLAssociationToRemoveItem (const char* name, 
   NGRAN_TNLAssociationToRemoveItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGRAN_TNLAssociationToRemoveItem (OSCTXT *pctxt, 
   const char* name, const NGRAN_TNLAssociationToRemoveItem* pvalue);

EXTERN int asn1Init_NGRAN_TNLAssociationToRemoveItem (
   NGRAN_TNLAssociationToRemoveItem* pvalue);

/**************************************************************/
/*                                                            */
/*  NGRAN_TNLAssociationToRemoveList                          */
/*                                                            */
/**************************************************************/
/*
NGRAN-TNLAssociationToRemoveList ::= SEQUENCE (SIZE (1..maxnoofTNLAssociations)) OF NGRAN-TNLAssociationToRemoveItem
*/
/* List of NGRAN_TNLAssociationToRemoveItem */
typedef OSRTDList NGRAN_TNLAssociationToRemoveList;

EXTERN int asn1PE_NGRAN_TNLAssociationToRemoveList (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveList* pvalue);

EXTERN int asn1PD_NGRAN_TNLAssociationToRemoveList (OSCTXT* pctxt, NGRAN_TNLAssociationToRemoveList* pvalue);

EXTERN void asn1Print_NGRAN_TNLAssociationToRemoveList 
   (const char* name, const NGRAN_TNLAssociationToRemoveList* pvalue);

EXTERN int asn1PrtToStr_NGRAN_TNLAssociationToRemoveList (const char* name, 
   NGRAN_TNLAssociationToRemoveList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NGRAN_TNLAssociationToRemoveList (OSCTXT *pctxt, 
   const char* name, const NGRAN_TNLAssociationToRemoveList* pvalue);

EXTERN int asn1Init_NGRAN_TNLAssociationToRemoveList (
   NGRAN_TNLAssociationToRemoveList* pvalue);

/**************************************************************/
/*                                                            */
/*  NonDynamic5QIDescriptor_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NonDynamic5QIDescriptor'
*/
typedef struct EXTERN NonDynamic5QIDescriptor_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} NonDynamic5QIDescriptor_iE_Extensions_element;

EXTERN int asn1PE_NonDynamic5QIDescriptor_iE_Extensions_element (OSCTXT* pctxt, NonDynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN int asn1PD_NonDynamic5QIDescriptor_iE_Extensions_element (OSCTXT* pctxt, NonDynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN void asn1Print_NonDynamic5QIDescriptor_iE_Extensions_element 
   (const char* name, const NonDynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_NonDynamic5QIDescriptor_iE_Extensions_element (
   const char* name, NonDynamic5QIDescriptor_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NonDynamic5QIDescriptor_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const NonDynamic5QIDescriptor_iE_Extensions_element* pvalue);

EXTERN int asn1Init_NonDynamic5QIDescriptor_iE_Extensions_element (
   NonDynamic5QIDescriptor_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  NonDynamic5QIDescriptor_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NonDynamic5QIDescriptor'
*/
/* List of NonDynamic5QIDescriptor_iE_Extensions_element */
typedef OSRTDList NonDynamic5QIDescriptor_iE_Extensions;

EXTERN int asn1PE_NonDynamic5QIDescriptor_iE_Extensions (OSCTXT* pctxt, NonDynamic5QIDescriptor_iE_Extensions* pvalue);

EXTERN int asn1PD_NonDynamic5QIDescriptor_iE_Extensions (OSCTXT* pctxt, NonDynamic5QIDescriptor_iE_Extensions* pvalue);

EXTERN void asn1Print_NonDynamic5QIDescriptor_iE_Extensions 
   (const char* name, const NonDynamic5QIDescriptor_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_NonDynamic5QIDescriptor_iE_Extensions (const char* name, 
   NonDynamic5QIDescriptor_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NonDynamic5QIDescriptor_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const NonDynamic5QIDescriptor_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct NonDynamic5QIDescriptor_iE_Extensions_element* 
   asn1Get_NonDynamic5QIDescriptor_iE_Extensions (ProtocolExtensionID id, 
   NonDynamic5QIDescriptor_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_NonDynamic5QIDescriptor_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   NonDynamic5QIDescriptor_iE_Extensions* plist, 
   NonDynamic5QIDescriptor_iE_Extensions* pmatches);

EXTERN int asn1Init_NonDynamic5QIDescriptor_iE_Extensions (
   NonDynamic5QIDescriptor_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  NonDynamic5QIDescriptor                                   */
/*                                                            */
/**************************************************************/
/*
NonDynamic5QIDescriptor ::= SEQUENCE {
   fiveQI [0] FiveQI,
   priorityLevelQos [1] PriorityLevelQos OPTIONAL,
   averagingWindow [2] AveragingWindow OPTIONAL,
   maximumDataBurstVolume [3] MaximumDataBurstVolume OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({NonDynamic5QIDescriptor-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({NonDynamic5QIDescriptor-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({NonDynamic5QIDescriptor-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN NonDynamic5QIDescriptor {
   struct {
      unsigned priorityLevelQosPresent : 1;
      unsigned averagingWindowPresent : 1;
      unsigned maximumDataBurstVolumePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   FiveQI fiveQI;
   PriorityLevelQos priorityLevelQos;
   AveragingWindow averagingWindow;
   MaximumDataBurstVolume maximumDataBurstVolume;
   NonDynamic5QIDescriptor_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} NonDynamic5QIDescriptor;

EXTERN int asn1PE_NonDynamic5QIDescriptor (OSCTXT* pctxt, NonDynamic5QIDescriptor* pvalue);

EXTERN int asn1PD_NonDynamic5QIDescriptor (OSCTXT* pctxt, NonDynamic5QIDescriptor* pvalue);

EXTERN void asn1Print_NonDynamic5QIDescriptor 
   (const char* name, const NonDynamic5QIDescriptor* pvalue);

EXTERN int asn1PrtToStr_NonDynamic5QIDescriptor (const char* name, 
   NonDynamic5QIDescriptor* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NonDynamic5QIDescriptor (OSCTXT *pctxt, 
   const char* name, const NonDynamic5QIDescriptor* pvalue);

EXTERN int asn1Init_NonDynamic5QIDescriptor (NonDynamic5QIDescriptor* pvalue);

/**************************************************************/
/*                                                            */
/*  NR_CGIListForWarning                                      */
/*                                                            */
/**************************************************************/
/*
NR-CGIListForWarning ::= SEQUENCE (SIZE (1..maxnoofCellIDforWarning)) OF NR-CGI
*/
/* List of NR_CGI */
typedef OSRTDList NR_CGIListForWarning;

EXTERN int asn1PE_NR_CGIListForWarning (OSCTXT* pctxt, NR_CGIListForWarning* pvalue);

EXTERN int asn1PD_NR_CGIListForWarning (OSCTXT* pctxt, NR_CGIListForWarning* pvalue);

EXTERN void asn1Print_NR_CGIListForWarning 
   (const char* name, const NR_CGIListForWarning* pvalue);

EXTERN int asn1PrtToStr_NR_CGIListForWarning (const char* name, 
   NR_CGIListForWarning* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_NR_CGIListForWarning (OSCTXT *pctxt, 
   const char* name, const NR_CGIListForWarning* pvalue);

EXTERN int asn1Init_NR_CGIListForWarning (NR_CGIListForWarning* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadResponse_choice_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadResponse'
*/
typedef struct EXTERN OverloadResponse_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} OverloadResponse_choice_Extensions;

EXTERN int asn1PE_OverloadResponse_choice_Extensions (OSCTXT* pctxt, OverloadResponse_choice_Extensions* pvalue);

EXTERN int asn1PD_OverloadResponse_choice_Extensions (OSCTXT* pctxt, OverloadResponse_choice_Extensions* pvalue);

EXTERN void asn1Print_OverloadResponse_choice_Extensions 
   (const char* name, const OverloadResponse_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_OverloadResponse_choice_Extensions (const char* name, 
   OverloadResponse_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadResponse_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const OverloadResponse_choice_Extensions* pvalue);

EXTERN int asn1Init_OverloadResponse_choice_Extensions (
   OverloadResponse_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadResponse                                          */
/*                                                            */
/**************************************************************/
/*
OverloadResponse ::= CHOICE {
   overloadAction [0] OverloadAction,
   choice-Extensions [1] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({OverloadResponse-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({OverloadResponse-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({OverloadResponse-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_OverloadResponse_overloadAction 1
#define T_OverloadResponse_choice_Extensions 2

typedef struct EXTERN OverloadResponse {
   OSINT32 t;
   union {
      /* t = 1 */
      OverloadAction overloadAction;
      /* t = 2 */
      OverloadResponse_choice_Extensions *choice_Extensions;
   } u;
} OverloadResponse;

EXTERN int asn1PE_OverloadResponse (OSCTXT* pctxt, OverloadResponse* pvalue);

EXTERN int asn1PD_OverloadResponse (OSCTXT* pctxt, OverloadResponse* pvalue);

EXTERN void asn1Print_OverloadResponse 
   (const char* name, const OverloadResponse* pvalue);

EXTERN int asn1PrtToStr_OverloadResponse (const char* name, OverloadResponse* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadResponse (OSCTXT *pctxt, 
   const char* name, const OverloadResponse* pvalue);

EXTERN int asn1Init_OverloadResponse (OverloadResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceOverloadItem_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SliceOverloadItem'
*/
typedef struct EXTERN SliceOverloadItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SliceOverloadItem_iE_Extensions_element;

EXTERN int asn1PE_SliceOverloadItem_iE_Extensions_element (OSCTXT* pctxt, SliceOverloadItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SliceOverloadItem_iE_Extensions_element (OSCTXT* pctxt, SliceOverloadItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SliceOverloadItem_iE_Extensions_element 
   (const char* name, const SliceOverloadItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SliceOverloadItem_iE_Extensions_element (const char* name, 
   SliceOverloadItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceOverloadItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SliceOverloadItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SliceOverloadItem_iE_Extensions_element (
   SliceOverloadItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceOverloadItem_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SliceOverloadItem'
*/
/* List of SliceOverloadItem_iE_Extensions_element */
typedef OSRTDList SliceOverloadItem_iE_Extensions;

EXTERN int asn1PE_SliceOverloadItem_iE_Extensions (OSCTXT* pctxt, SliceOverloadItem_iE_Extensions* pvalue);

EXTERN int asn1PD_SliceOverloadItem_iE_Extensions (OSCTXT* pctxt, SliceOverloadItem_iE_Extensions* pvalue);

EXTERN void asn1Print_SliceOverloadItem_iE_Extensions 
   (const char* name, const SliceOverloadItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SliceOverloadItem_iE_Extensions (const char* name, 
   SliceOverloadItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceOverloadItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SliceOverloadItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SliceOverloadItem_iE_Extensions_element* 
   asn1Get_SliceOverloadItem_iE_Extensions (ProtocolExtensionID id, 
   SliceOverloadItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SliceOverloadItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SliceOverloadItem_iE_Extensions* plist, 
   SliceOverloadItem_iE_Extensions* pmatches);

EXTERN int asn1Init_SliceOverloadItem_iE_Extensions (
   SliceOverloadItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceOverloadItem                                         */
/*                                                            */
/**************************************************************/
/*
SliceOverloadItem ::= SEQUENCE {
   s-NSSAI [0] S-NSSAI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SliceOverloadItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SliceOverloadItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SliceOverloadItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SliceOverloadItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   S_NSSAI s_NSSAI;
   SliceOverloadItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SliceOverloadItem;

EXTERN int asn1PE_SliceOverloadItem (OSCTXT* pctxt, SliceOverloadItem* pvalue);

EXTERN int asn1PD_SliceOverloadItem (OSCTXT* pctxt, SliceOverloadItem* pvalue);

EXTERN void asn1Print_SliceOverloadItem 
   (const char* name, const SliceOverloadItem* pvalue);

EXTERN int asn1PrtToStr_SliceOverloadItem (const char* name, 
   SliceOverloadItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceOverloadItem (OSCTXT *pctxt, 
   const char* name, const SliceOverloadItem* pvalue);

EXTERN int asn1Init_SliceOverloadItem (SliceOverloadItem* pvalue);

/**************************************************************/
/*                                                            */
/*  SliceOverloadList                                         */
/*                                                            */
/**************************************************************/
/*
SliceOverloadList ::= SEQUENCE (SIZE (1..maxnoofSliceItems)) OF SliceOverloadItem
*/
/* List of SliceOverloadItem */
typedef OSRTDList SliceOverloadList;

EXTERN int asn1PE_SliceOverloadList (OSCTXT* pctxt, SliceOverloadList* pvalue);

EXTERN int asn1PD_SliceOverloadList (OSCTXT* pctxt, SliceOverloadList* pvalue);

EXTERN void asn1Print_SliceOverloadList 
   (const char* name, const SliceOverloadList* pvalue);

EXTERN int asn1PrtToStr_SliceOverloadList (const char* name, 
   SliceOverloadList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SliceOverloadList (OSCTXT *pctxt, 
   const char* name, const SliceOverloadList* pvalue);

EXTERN int asn1Init_SliceOverloadList (SliceOverloadList* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStartNSSAIItem_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStartNSSAIItem'
*/
typedef struct EXTERN OverloadStartNSSAIItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} OverloadStartNSSAIItem_iE_Extensions_element;

EXTERN int asn1PE_OverloadStartNSSAIItem_iE_Extensions_element (OSCTXT* pctxt, OverloadStartNSSAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_OverloadStartNSSAIItem_iE_Extensions_element (OSCTXT* pctxt, OverloadStartNSSAIItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_OverloadStartNSSAIItem_iE_Extensions_element 
   (const char* name, const OverloadStartNSSAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_OverloadStartNSSAIItem_iE_Extensions_element (
   const char* name, OverloadStartNSSAIItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStartNSSAIItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const OverloadStartNSSAIItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_OverloadStartNSSAIItem_iE_Extensions_element (
   OverloadStartNSSAIItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStartNSSAIItem_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'OverloadStartNSSAIItem'
*/
/* List of OverloadStartNSSAIItem_iE_Extensions_element */
typedef OSRTDList OverloadStartNSSAIItem_iE_Extensions;

EXTERN int asn1PE_OverloadStartNSSAIItem_iE_Extensions (OSCTXT* pctxt, OverloadStartNSSAIItem_iE_Extensions* pvalue);

EXTERN int asn1PD_OverloadStartNSSAIItem_iE_Extensions (OSCTXT* pctxt, OverloadStartNSSAIItem_iE_Extensions* pvalue);

EXTERN void asn1Print_OverloadStartNSSAIItem_iE_Extensions 
   (const char* name, const OverloadStartNSSAIItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_OverloadStartNSSAIItem_iE_Extensions (const char* name, 
   OverloadStartNSSAIItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStartNSSAIItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const OverloadStartNSSAIItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct OverloadStartNSSAIItem_iE_Extensions_element* 
   asn1Get_OverloadStartNSSAIItem_iE_Extensions (ProtocolExtensionID id, 
   OverloadStartNSSAIItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_OverloadStartNSSAIItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   OverloadStartNSSAIItem_iE_Extensions* plist, 
   OverloadStartNSSAIItem_iE_Extensions* pmatches);

EXTERN int asn1Init_OverloadStartNSSAIItem_iE_Extensions (
   OverloadStartNSSAIItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStartNSSAIItem                                    */
/*                                                            */
/**************************************************************/
/*
OverloadStartNSSAIItem ::= SEQUENCE {
   sliceOverloadList [0] SliceOverloadList,
   sliceOverloadResponse [1] EXPLICIT OverloadResponse OPTIONAL,
   sliceTrafficLoadReductionIndication [2] TrafficLoadReductionIndication OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({OverloadStartNSSAIItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({OverloadStartNSSAIItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({OverloadStartNSSAIItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN OverloadStartNSSAIItem {
   struct {
      unsigned sliceOverloadResponsePresent : 1;
      unsigned sliceTrafficLoadReductionIndicationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SliceOverloadList sliceOverloadList;
   OverloadResponse sliceOverloadResponse;
   TrafficLoadReductionIndication sliceTrafficLoadReductionIndication;
   OverloadStartNSSAIItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} OverloadStartNSSAIItem;

EXTERN int asn1PE_OverloadStartNSSAIItem (OSCTXT* pctxt, OverloadStartNSSAIItem* pvalue);

EXTERN int asn1PD_OverloadStartNSSAIItem (OSCTXT* pctxt, OverloadStartNSSAIItem* pvalue);

EXTERN void asn1Print_OverloadStartNSSAIItem 
   (const char* name, const OverloadStartNSSAIItem* pvalue);

EXTERN int asn1PrtToStr_OverloadStartNSSAIItem (const char* name, 
   OverloadStartNSSAIItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStartNSSAIItem (OSCTXT *pctxt, 
   const char* name, const OverloadStartNSSAIItem* pvalue);

EXTERN int asn1Init_OverloadStartNSSAIItem (OverloadStartNSSAIItem* pvalue);

/**************************************************************/
/*                                                            */
/*  OverloadStartNSSAIList                                    */
/*                                                            */
/**************************************************************/
/*
OverloadStartNSSAIList ::= SEQUENCE (SIZE (1..maxnoofSliceItems)) OF OverloadStartNSSAIItem
*/
/* List of OverloadStartNSSAIItem */
typedef OSRTDList OverloadStartNSSAIList;

EXTERN int asn1PE_OverloadStartNSSAIList (OSCTXT* pctxt, OverloadStartNSSAIList* pvalue);

EXTERN int asn1PD_OverloadStartNSSAIList (OSCTXT* pctxt, OverloadStartNSSAIList* pvalue);

EXTERN void asn1Print_OverloadStartNSSAIList 
   (const char* name, const OverloadStartNSSAIList* pvalue);

EXTERN int asn1PrtToStr_OverloadStartNSSAIList (const char* name, 
   OverloadStartNSSAIList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_OverloadStartNSSAIList (OSCTXT *pctxt, 
   const char* name, const OverloadStartNSSAIList* pvalue);

EXTERN int asn1Init_OverloadStartNSSAIList (OverloadStartNSSAIList* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityIndication_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityIndication'
*/
typedef struct EXTERN SecurityIndication_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      SecurityIndication_ExtIEs_TVALUE t;

      /**
       * SecurityIndication-ExtIEs information objects
       */
      union {
         /**
          * id: id-MaximumIntegrityProtectedDataRate-DL
          * criticality: ignore
          * presence: optional
          */
         MaximumIntegrityProtectedDataRate _SecurityIndication_ExtIEs_id_MaximumIntegrityProtectedDataRate_DL;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} SecurityIndication_iE_Extensions_element;

EXTERN int asn1PE_SecurityIndication_iE_Extensions_element (OSCTXT* pctxt, SecurityIndication_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SecurityIndication_iE_Extensions_element (OSCTXT* pctxt, SecurityIndication_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SecurityIndication_iE_Extensions_element 
   (const char* name, const SecurityIndication_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SecurityIndication_iE_Extensions_element (const char* name, 
   SecurityIndication_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityIndication_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SecurityIndication_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SecurityIndication_iE_Extensions_element (
   SecurityIndication_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityIndication_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityIndication'
*/
/* List of SecurityIndication_iE_Extensions_element */
typedef OSRTDList SecurityIndication_iE_Extensions;

EXTERN int asn1PE_SecurityIndication_iE_Extensions (OSCTXT* pctxt, SecurityIndication_iE_Extensions* pvalue);

EXTERN int asn1PD_SecurityIndication_iE_Extensions (OSCTXT* pctxt, SecurityIndication_iE_Extensions* pvalue);

EXTERN void asn1Print_SecurityIndication_iE_Extensions 
   (const char* name, const SecurityIndication_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SecurityIndication_iE_Extensions (const char* name, 
   SecurityIndication_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityIndication_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SecurityIndication_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SecurityIndication_iE_Extensions_element* 
   asn1Get_SecurityIndication_iE_Extensions (ProtocolExtensionID id, 
   SecurityIndication_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SecurityIndication_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SecurityIndication_iE_Extensions* plist, 
   SecurityIndication_iE_Extensions* pmatches);

EXTERN int asn1Init_SecurityIndication_iE_Extensions (
   SecurityIndication_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityIndication                                        */
/*                                                            */
/**************************************************************/
/*
SecurityIndication ::= SEQUENCE {
   integrityProtectionIndication [0] IntegrityProtectionIndication,
   confidentialityProtectionIndication [1] ConfidentialityProtectionIndication,
   maximumIntegrityProtectedDataRate-UL [2] MaximumIntegrityProtectedDataRate OPTIONAL,
--The above IE shall be present if integrity protection is required or preferred
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SecurityIndication-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SecurityIndication-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SecurityIndication-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SecurityIndication {
   struct {
      unsigned maximumIntegrityProtectedDataRate_ULPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   IntegrityProtectionIndication integrityProtectionIndication;
   ConfidentialityProtectionIndication confidentialityProtectionIndication;
   MaximumIntegrityProtectedDataRate maximumIntegrityProtectedDataRate_UL;
   SecurityIndication_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SecurityIndication;

EXTERN int asn1PE_SecurityIndication (OSCTXT* pctxt, SecurityIndication* pvalue);

EXTERN int asn1PD_SecurityIndication (OSCTXT* pctxt, SecurityIndication* pvalue);

EXTERN void asn1Print_SecurityIndication 
   (const char* name, const SecurityIndication* pvalue);

EXTERN int asn1PrtToStr_SecurityIndication (const char* name, 
   SecurityIndication* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityIndication (OSCTXT *pctxt, 
   const char* name, const SecurityIndication* pvalue);

EXTERN int asn1Init_SecurityIndication (SecurityIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationPairItem_iE_Extensions_elemen  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UPTransportLayerInformationPairItem'
*/
typedef struct EXTERN UPTransportLayerInformationPairItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UPTransportLayerInformationPairItem_iE_Extensions_element;

EXTERN int asn1PE_UPTransportLayerInformationPairItem_iE_Extensions_element (OSCTXT* pctxt, UPTransportLayerInformationPairItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationPairItem_iE_Extensions_element (OSCTXT* pctxt, UPTransportLayerInformationPairItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationPairItem_iE_Extensions_element 
   (const char* name, const UPTransportLayerInformationPairItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationPairItem_iE_Extensions_element (
   const char* name, 
   UPTransportLayerInformationPairItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationPairItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationPairItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UPTransportLayerInformationPairItem_iE_Extensions_element (
   UPTransportLayerInformationPairItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationPairItem_iE_Extensions         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UPTransportLayerInformationPairItem'
*/
/* List of UPTransportLayerInformationPairItem_iE_Extensions_element */
typedef OSRTDList UPTransportLayerInformationPairItem_iE_Extensions;

EXTERN int asn1PE_UPTransportLayerInformationPairItem_iE_Extensions (OSCTXT* pctxt, UPTransportLayerInformationPairItem_iE_Extensions* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationPairItem_iE_Extensions (OSCTXT* pctxt, UPTransportLayerInformationPairItem_iE_Extensions* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationPairItem_iE_Extensions 
   (const char* name, const UPTransportLayerInformationPairItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationPairItem_iE_Extensions (
   const char* name, 
   UPTransportLayerInformationPairItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationPairItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationPairItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UPTransportLayerInformationPairItem_iE_Extensions_element* 
   asn1Get_UPTransportLayerInformationPairItem_iE_Extensions 
   (ProtocolExtensionID id, 
   UPTransportLayerInformationPairItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UPTransportLayerInformationPairItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UPTransportLayerInformationPairItem_iE_Extensions* plist, 
   UPTransportLayerInformationPairItem_iE_Extensions* pmatches);

EXTERN int asn1Init_UPTransportLayerInformationPairItem_iE_Extensions (
   UPTransportLayerInformationPairItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationPairItem                       */
/*                                                            */
/**************************************************************/
/*
UPTransportLayerInformationPairItem ::= SEQUENCE {
   uL-NGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation,
   dL-NGU-UP-TNLInformation [1] EXPLICIT UPTransportLayerInformation,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UPTransportLayerInformationPairItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UPTransportLayerInformationPairItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UPTransportLayerInformationPairItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UPTransportLayerInformationPairItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation uL_NGU_UP_TNLInformation;
   UPTransportLayerInformation dL_NGU_UP_TNLInformation;
   UPTransportLayerInformationPairItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UPTransportLayerInformationPairItem;

EXTERN int asn1PE_UPTransportLayerInformationPairItem (OSCTXT* pctxt, UPTransportLayerInformationPairItem* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationPairItem (OSCTXT* pctxt, UPTransportLayerInformationPairItem* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationPairItem 
   (const char* name, const UPTransportLayerInformationPairItem* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationPairItem (const char* name, 
   UPTransportLayerInformationPairItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationPairItem (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationPairItem* pvalue);

EXTERN int asn1Init_UPTransportLayerInformationPairItem (
   UPTransportLayerInformationPairItem* pvalue);

/**************************************************************/
/*                                                            */
/*  UPTransportLayerInformationPairList                       */
/*                                                            */
/**************************************************************/
/*
UPTransportLayerInformationPairList ::= SEQUENCE (SIZE (1..maxnoofMultiConnectivityMinusOne)) OF UPTransportLayerInformationPairItem
*/
/* List of UPTransportLayerInformationPairItem */
typedef OSRTDList UPTransportLayerInformationPairList;

EXTERN int asn1PE_UPTransportLayerInformationPairList (OSCTXT* pctxt, UPTransportLayerInformationPairList* pvalue);

EXTERN int asn1PD_UPTransportLayerInformationPairList (OSCTXT* pctxt, UPTransportLayerInformationPairList* pvalue);

EXTERN void asn1Print_UPTransportLayerInformationPairList 
   (const char* name, const UPTransportLayerInformationPairList* pvalue);

EXTERN int asn1PrtToStr_UPTransportLayerInformationPairList (const char* name, 
   UPTransportLayerInformationPairList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UPTransportLayerInformationPairList (OSCTXT *pctxt, 
   const char* name, const UPTransportLayerInformationPairList* pvalue);

EXTERN int asn1Init_UPTransportLayerInformationPairList (
   UPTransportLayerInformationPairList* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledgeTransfer_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestAcknowledgeTransfer'
*/
typedef struct EXTERN PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PathSwitchRequestAcknowledgeTransfer_ExtIEs_TVALUE t;

      /**
       * PathSwitchRequestAcknowledgeTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-AdditionalNGU-UP-TNLInformation
          * criticality: ignore
          * presence: optional
          */
         UPTransportLayerInformationPairList *_PathSwitchRequestAcknowledgeTransfer_ExtIEs_id_AdditionalNGU_UP_TNLInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element;

EXTERN int asn1PE_PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element 
   (const char* name, const PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element (
   const char* name, 
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element (
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledgeTransfer_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestAcknowledgeTransfer'
*/
/* List of PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element */
typedef OSRTDList PathSwitchRequestAcknowledgeTransfer_iE_Extensions;

EXTERN int asn1PE_PathSwitchRequestAcknowledgeTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestAcknowledgeTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PathSwitchRequestAcknowledgeTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestAcknowledgeTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PathSwitchRequestAcknowledgeTransfer_iE_Extensions 
   (const char* name, const PathSwitchRequestAcknowledgeTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestAcknowledgeTransfer_iE_Extensions (
   const char* name, 
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestAcknowledgeTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestAcknowledgeTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PathSwitchRequestAcknowledgeTransfer_iE_Extensions_element* 
   asn1Get_PathSwitchRequestAcknowledgeTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PathSwitchRequestAcknowledgeTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions* plist, 
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PathSwitchRequestAcknowledgeTransfer_iE_Extensions (
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestAcknowledgeTransfer                      */
/*                                                            */
/**************************************************************/
/*
PathSwitchRequestAcknowledgeTransfer ::= SEQUENCE {
   uL-NGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation OPTIONAL,
   securityIndication [1] SecurityIndication OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PathSwitchRequestAcknowledgeTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PathSwitchRequestAcknowledgeTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PathSwitchRequestAcknowledgeTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PathSwitchRequestAcknowledgeTransfer {
   struct {
      unsigned uL_NGU_UP_TNLInformationPresent : 1;
      unsigned securityIndicationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation uL_NGU_UP_TNLInformation;
   SecurityIndication securityIndication;
   PathSwitchRequestAcknowledgeTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PathSwitchRequestAcknowledgeTransfer;

EXTERN int asn1PE_PathSwitchRequestAcknowledgeTransfer (OSCTXT* pctxt, PathSwitchRequestAcknowledgeTransfer* pvalue);

EXTERN int asn1PD_PathSwitchRequestAcknowledgeTransfer (OSCTXT* pctxt, PathSwitchRequestAcknowledgeTransfer* pvalue);

EXTERN void asn1Print_PathSwitchRequestAcknowledgeTransfer 
   (const char* name, const PathSwitchRequestAcknowledgeTransfer* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestAcknowledgeTransfer (const char* name, 
   PathSwitchRequestAcknowledgeTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestAcknowledgeTransfer (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestAcknowledgeTransfer* pvalue);

EXTERN int asn1Init_PathSwitchRequestAcknowledgeTransfer (
   PathSwitchRequestAcknowledgeTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestSetupFailedTransfer_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestSetupFailedTransfer'
*/
typedef struct EXTERN PathSwitchRequestSetupFailedTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PathSwitchRequestSetupFailedTransfer_iE_Extensions_element;

EXTERN int asn1PE_PathSwitchRequestSetupFailedTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestSetupFailedTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PathSwitchRequestSetupFailedTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestSetupFailedTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PathSwitchRequestSetupFailedTransfer_iE_Extensions_element 
   (const char* name, const PathSwitchRequestSetupFailedTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestSetupFailedTransfer_iE_Extensions_element (
   const char* name, 
   PathSwitchRequestSetupFailedTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestSetupFailedTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestSetupFailedTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PathSwitchRequestSetupFailedTransfer_iE_Extensions_element (
   PathSwitchRequestSetupFailedTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestSetupFailedTransfer_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestSetupFailedTransfer'
*/
/* List of PathSwitchRequestSetupFailedTransfer_iE_Extensions_element */
typedef OSRTDList PathSwitchRequestSetupFailedTransfer_iE_Extensions;

EXTERN int asn1PE_PathSwitchRequestSetupFailedTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestSetupFailedTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PathSwitchRequestSetupFailedTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestSetupFailedTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PathSwitchRequestSetupFailedTransfer_iE_Extensions 
   (const char* name, const PathSwitchRequestSetupFailedTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestSetupFailedTransfer_iE_Extensions (
   const char* name, 
   PathSwitchRequestSetupFailedTransfer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestSetupFailedTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestSetupFailedTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PathSwitchRequestSetupFailedTransfer_iE_Extensions_element* 
   asn1Get_PathSwitchRequestSetupFailedTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PathSwitchRequestSetupFailedTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PathSwitchRequestSetupFailedTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PathSwitchRequestSetupFailedTransfer_iE_Extensions* plist, 
   PathSwitchRequestSetupFailedTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PathSwitchRequestSetupFailedTransfer_iE_Extensions (
   PathSwitchRequestSetupFailedTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestSetupFailedTransfer                      */
/*                                                            */
/**************************************************************/
/*
PathSwitchRequestSetupFailedTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PathSwitchRequestSetupFailedTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PathSwitchRequestSetupFailedTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PathSwitchRequestSetupFailedTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PathSwitchRequestSetupFailedTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   PathSwitchRequestSetupFailedTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PathSwitchRequestSetupFailedTransfer;

EXTERN int asn1PE_PathSwitchRequestSetupFailedTransfer (OSCTXT* pctxt, PathSwitchRequestSetupFailedTransfer* pvalue);

EXTERN int asn1PD_PathSwitchRequestSetupFailedTransfer (OSCTXT* pctxt, PathSwitchRequestSetupFailedTransfer* pvalue);

EXTERN void asn1Print_PathSwitchRequestSetupFailedTransfer 
   (const char* name, const PathSwitchRequestSetupFailedTransfer* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestSetupFailedTransfer (const char* name, 
   PathSwitchRequestSetupFailedTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestSetupFailedTransfer (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestSetupFailedTransfer* pvalue);

EXTERN int asn1Init_PathSwitchRequestSetupFailedTransfer (
   PathSwitchRequestSetupFailedTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  UserPlaneSecurityInformation_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserPlaneSecurityInformation'
*/
typedef struct EXTERN UserPlaneSecurityInformation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UserPlaneSecurityInformation_iE_Extensions_element;

EXTERN int asn1PE_UserPlaneSecurityInformation_iE_Extensions_element (OSCTXT* pctxt, UserPlaneSecurityInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UserPlaneSecurityInformation_iE_Extensions_element (OSCTXT* pctxt, UserPlaneSecurityInformation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UserPlaneSecurityInformation_iE_Extensions_element 
   (const char* name, const UserPlaneSecurityInformation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UserPlaneSecurityInformation_iE_Extensions_element (
   const char* name, 
   UserPlaneSecurityInformation_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserPlaneSecurityInformation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UserPlaneSecurityInformation_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UserPlaneSecurityInformation_iE_Extensions_element (
   UserPlaneSecurityInformation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UserPlaneSecurityInformation_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserPlaneSecurityInformation'
*/
/* List of UserPlaneSecurityInformation_iE_Extensions_element */
typedef OSRTDList UserPlaneSecurityInformation_iE_Extensions;

EXTERN int asn1PE_UserPlaneSecurityInformation_iE_Extensions (OSCTXT* pctxt, UserPlaneSecurityInformation_iE_Extensions* pvalue);

EXTERN int asn1PD_UserPlaneSecurityInformation_iE_Extensions (OSCTXT* pctxt, UserPlaneSecurityInformation_iE_Extensions* pvalue);

EXTERN void asn1Print_UserPlaneSecurityInformation_iE_Extensions 
   (const char* name, const UserPlaneSecurityInformation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UserPlaneSecurityInformation_iE_Extensions (const char* name, 
   UserPlaneSecurityInformation_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserPlaneSecurityInformation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UserPlaneSecurityInformation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UserPlaneSecurityInformation_iE_Extensions_element* 
   asn1Get_UserPlaneSecurityInformation_iE_Extensions (ProtocolExtensionID id, 
   UserPlaneSecurityInformation_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UserPlaneSecurityInformation_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UserPlaneSecurityInformation_iE_Extensions* plist, 
   UserPlaneSecurityInformation_iE_Extensions* pmatches);

EXTERN int asn1Init_UserPlaneSecurityInformation_iE_Extensions (
   UserPlaneSecurityInformation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UserPlaneSecurityInformation                              */
/*                                                            */
/**************************************************************/
/*
UserPlaneSecurityInformation ::= SEQUENCE {
   securityResult [0] SecurityResult,
   securityIndication [1] SecurityIndication,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UserPlaneSecurityInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UserPlaneSecurityInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UserPlaneSecurityInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UserPlaneSecurityInformation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SecurityResult securityResult;
   SecurityIndication securityIndication;
   UserPlaneSecurityInformation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UserPlaneSecurityInformation;

EXTERN int asn1PE_UserPlaneSecurityInformation (OSCTXT* pctxt, UserPlaneSecurityInformation* pvalue);

EXTERN int asn1PD_UserPlaneSecurityInformation (OSCTXT* pctxt, UserPlaneSecurityInformation* pvalue);

EXTERN void asn1Print_UserPlaneSecurityInformation 
   (const char* name, const UserPlaneSecurityInformation* pvalue);

EXTERN int asn1PrtToStr_UserPlaneSecurityInformation (const char* name, 
   UserPlaneSecurityInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserPlaneSecurityInformation (OSCTXT *pctxt, 
   const char* name, const UserPlaneSecurityInformation* pvalue);

EXTERN int asn1Init_UserPlaneSecurityInformation (
   UserPlaneSecurityInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAcceptedItem_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowAcceptedItem'
*/
typedef struct EXTERN QosFlowAcceptedItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowAcceptedItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowAcceptedItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowAcceptedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowAcceptedItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowAcceptedItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowAcceptedItem_iE_Extensions_element 
   (const char* name, const QosFlowAcceptedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowAcceptedItem_iE_Extensions_element (const char* name, 
   QosFlowAcceptedItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAcceptedItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowAcceptedItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowAcceptedItem_iE_Extensions_element (
   QosFlowAcceptedItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAcceptedItem_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowAcceptedItem'
*/
/* List of QosFlowAcceptedItem_iE_Extensions_element */
typedef OSRTDList QosFlowAcceptedItem_iE_Extensions;

EXTERN int asn1PE_QosFlowAcceptedItem_iE_Extensions (OSCTXT* pctxt, QosFlowAcceptedItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowAcceptedItem_iE_Extensions (OSCTXT* pctxt, QosFlowAcceptedItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowAcceptedItem_iE_Extensions 
   (const char* name, const QosFlowAcceptedItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowAcceptedItem_iE_Extensions (const char* name, 
   QosFlowAcceptedItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAcceptedItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowAcceptedItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowAcceptedItem_iE_Extensions_element* 
   asn1Get_QosFlowAcceptedItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowAcceptedItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowAcceptedItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowAcceptedItem_iE_Extensions* plist, 
   QosFlowAcceptedItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowAcceptedItem_iE_Extensions (
   QosFlowAcceptedItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAcceptedItem                                       */
/*                                                            */
/**************************************************************/
/*
QosFlowAcceptedItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowAcceptedItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowAcceptedItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowAcceptedItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowAcceptedItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QosFlowAcceptedItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowAcceptedItem;

EXTERN int asn1PE_QosFlowAcceptedItem (OSCTXT* pctxt, QosFlowAcceptedItem* pvalue);

EXTERN int asn1PD_QosFlowAcceptedItem (OSCTXT* pctxt, QosFlowAcceptedItem* pvalue);

EXTERN void asn1Print_QosFlowAcceptedItem 
   (const char* name, const QosFlowAcceptedItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowAcceptedItem (const char* name, 
   QosFlowAcceptedItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAcceptedItem (OSCTXT *pctxt, 
   const char* name, const QosFlowAcceptedItem* pvalue);

EXTERN int asn1Init_QosFlowAcceptedItem (QosFlowAcceptedItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAcceptedList                                       */
/*                                                            */
/**************************************************************/
/*
QosFlowAcceptedList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowAcceptedItem
*/
/* List of QosFlowAcceptedItem */
typedef OSRTDList QosFlowAcceptedList;

EXTERN int asn1PE_QosFlowAcceptedList (OSCTXT* pctxt, QosFlowAcceptedList* pvalue);

EXTERN int asn1PD_QosFlowAcceptedList (OSCTXT* pctxt, QosFlowAcceptedList* pvalue);

EXTERN void asn1Print_QosFlowAcceptedList 
   (const char* name, const QosFlowAcceptedList* pvalue);

EXTERN int asn1PrtToStr_QosFlowAcceptedList (const char* name, 
   QosFlowAcceptedList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAcceptedList (OSCTXT *pctxt, 
   const char* name, const QosFlowAcceptedList* pvalue);

EXTERN int asn1Init_QosFlowAcceptedList (QosFlowAcceptedList* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestTransfer_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestTransfer'
*/
typedef struct EXTERN PathSwitchRequestTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PathSwitchRequestTransfer_ExtIEs_TVALUE t;

      /**
       * PathSwitchRequestTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-AdditionalDLQosFlowPerTNLInformation
          * criticality: ignore
          * presence: optional
          */
         QosFlowPerTNLInformationList *_PathSwitchRequestTransfer_ExtIEs_id_AdditionalDLQosFlowPerTNLInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PathSwitchRequestTransfer_iE_Extensions_element;

EXTERN int asn1PE_PathSwitchRequestTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PathSwitchRequestTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PathSwitchRequestTransfer_iE_Extensions_element 
   (const char* name, const PathSwitchRequestTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestTransfer_iE_Extensions_element (
   const char* name, PathSwitchRequestTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PathSwitchRequestTransfer_iE_Extensions_element (
   PathSwitchRequestTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestTransfer_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestTransfer'
*/
/* List of PathSwitchRequestTransfer_iE_Extensions_element */
typedef OSRTDList PathSwitchRequestTransfer_iE_Extensions;

EXTERN int asn1PE_PathSwitchRequestTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PathSwitchRequestTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PathSwitchRequestTransfer_iE_Extensions 
   (const char* name, const PathSwitchRequestTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestTransfer_iE_Extensions (const char* name, 
   PathSwitchRequestTransfer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PathSwitchRequestTransfer_iE_Extensions_element* 
   asn1Get_PathSwitchRequestTransfer_iE_Extensions (ProtocolExtensionID id, 
   PathSwitchRequestTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PathSwitchRequestTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PathSwitchRequestTransfer_iE_Extensions* plist, 
   PathSwitchRequestTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PathSwitchRequestTransfer_iE_Extensions (
   PathSwitchRequestTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestTransfer                                 */
/*                                                            */
/**************************************************************/
/*
PathSwitchRequestTransfer ::= SEQUENCE {
   dL-NGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation,
   dL-NGU-TNLInformationReused [1] DL-NGU-TNLInformationReused OPTIONAL,
   userPlaneSecurityInformation [2] UserPlaneSecurityInformation OPTIONAL,
   qosFlowAcceptedList [3] QosFlowAcceptedList,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PathSwitchRequestTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PathSwitchRequestTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PathSwitchRequestTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PathSwitchRequestTransfer {
   struct {
      unsigned dL_NGU_TNLInformationReusedPresent : 1;
      unsigned userPlaneSecurityInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation dL_NGU_UP_TNLInformation;
   DL_NGU_TNLInformationReused dL_NGU_TNLInformationReused;
   UserPlaneSecurityInformation userPlaneSecurityInformation;
   QosFlowAcceptedList qosFlowAcceptedList;
   PathSwitchRequestTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PathSwitchRequestTransfer;

EXTERN int asn1PE_PathSwitchRequestTransfer (OSCTXT* pctxt, PathSwitchRequestTransfer* pvalue);

EXTERN int asn1PD_PathSwitchRequestTransfer (OSCTXT* pctxt, PathSwitchRequestTransfer* pvalue);

EXTERN void asn1Print_PathSwitchRequestTransfer 
   (const char* name, const PathSwitchRequestTransfer* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestTransfer (const char* name, 
   PathSwitchRequestTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestTransfer (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestTransfer* pvalue);

EXTERN int asn1Init_PathSwitchRequestTransfer (PathSwitchRequestTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_elem  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestUnsuccessfulTransfer'
*/
typedef struct EXTERN PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element;

EXTERN int asn1PE_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element 
   (const char* name, const PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element (
   const char* name, 
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element (
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestUnsuccessfulTransfer_iE_Extensions       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PathSwitchRequestUnsuccessfulTransfer'
*/
/* List of PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element */
typedef OSRTDList PathSwitchRequestUnsuccessfulTransfer_iE_Extensions;

EXTERN int asn1PE_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions 
   (const char* name, const PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions (
   const char* name, 
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PathSwitchRequestUnsuccessfulTransfer_iE_Extensions_element* 
   asn1Get_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* plist, 
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PathSwitchRequestUnsuccessfulTransfer_iE_Extensions (
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PathSwitchRequestUnsuccessfulTransfer                     */
/*                                                            */
/**************************************************************/
/*
PathSwitchRequestUnsuccessfulTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PathSwitchRequestUnsuccessfulTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PathSwitchRequestUnsuccessfulTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PathSwitchRequestUnsuccessfulTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PathSwitchRequestUnsuccessfulTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   PathSwitchRequestUnsuccessfulTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PathSwitchRequestUnsuccessfulTransfer;

EXTERN int asn1PE_PathSwitchRequestUnsuccessfulTransfer (OSCTXT* pctxt, PathSwitchRequestUnsuccessfulTransfer* pvalue);

EXTERN int asn1PD_PathSwitchRequestUnsuccessfulTransfer (OSCTXT* pctxt, PathSwitchRequestUnsuccessfulTransfer* pvalue);

EXTERN void asn1Print_PathSwitchRequestUnsuccessfulTransfer 
   (const char* name, const PathSwitchRequestUnsuccessfulTransfer* pvalue);

EXTERN int asn1PrtToStr_PathSwitchRequestUnsuccessfulTransfer (const char* name, 
   PathSwitchRequestUnsuccessfulTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PathSwitchRequestUnsuccessfulTransfer (OSCTXT *pctxt, 
   const char* name, const PathSwitchRequestUnsuccessfulTransfer* pvalue);

EXTERN int asn1Init_PathSwitchRequestUnsuccessfulTransfer (
   PathSwitchRequestUnsuccessfulTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionAggregateMaximumBitRate_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionAggregateMaximumBitRate'
*/
typedef struct EXTERN PDUSessionAggregateMaximumBitRate_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionAggregateMaximumBitRate_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionAggregateMaximumBitRate_iE_Extensions_element (OSCTXT* pctxt, PDUSessionAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionAggregateMaximumBitRate_iE_Extensions_element (OSCTXT* pctxt, PDUSessionAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionAggregateMaximumBitRate_iE_Extensions_element 
   (const char* name, const PDUSessionAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionAggregateMaximumBitRate_iE_Extensions_element (
   const char* name, 
   PDUSessionAggregateMaximumBitRate_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionAggregateMaximumBitRate_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionAggregateMaximumBitRate_iE_Extensions_element (
   PDUSessionAggregateMaximumBitRate_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionAggregateMaximumBitRate_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionAggregateMaximumBitRate'
*/
/* List of PDUSessionAggregateMaximumBitRate_iE_Extensions_element */
typedef OSRTDList PDUSessionAggregateMaximumBitRate_iE_Extensions;

EXTERN int asn1PE_PDUSessionAggregateMaximumBitRate_iE_Extensions (OSCTXT* pctxt, PDUSessionAggregateMaximumBitRate_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionAggregateMaximumBitRate_iE_Extensions (OSCTXT* pctxt, PDUSessionAggregateMaximumBitRate_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionAggregateMaximumBitRate_iE_Extensions 
   (const char* name, const PDUSessionAggregateMaximumBitRate_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionAggregateMaximumBitRate_iE_Extensions (
   const char* name, PDUSessionAggregateMaximumBitRate_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionAggregateMaximumBitRate_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionAggregateMaximumBitRate_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionAggregateMaximumBitRate_iE_Extensions_element* 
   asn1Get_PDUSessionAggregateMaximumBitRate_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionAggregateMaximumBitRate_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionAggregateMaximumBitRate_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionAggregateMaximumBitRate_iE_Extensions* plist, 
   PDUSessionAggregateMaximumBitRate_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionAggregateMaximumBitRate_iE_Extensions (
   PDUSessionAggregateMaximumBitRate_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionAggregateMaximumBitRate                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionAggregateMaximumBitRate ::= SEQUENCE {
   pDUSessionAggregateMaximumBitRateDL [0] BitRate,
   pDUSessionAggregateMaximumBitRateUL [1] BitRate,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionAggregateMaximumBitRate-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionAggregateMaximumBitRate-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionAggregateMaximumBitRate-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionAggregateMaximumBitRate {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   BitRate pDUSessionAggregateMaximumBitRateDL;
   BitRate pDUSessionAggregateMaximumBitRateUL;
   PDUSessionAggregateMaximumBitRate_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionAggregateMaximumBitRate;

EXTERN int asn1PE_PDUSessionAggregateMaximumBitRate (OSCTXT* pctxt, PDUSessionAggregateMaximumBitRate* pvalue);

EXTERN int asn1PD_PDUSessionAggregateMaximumBitRate (OSCTXT* pctxt, PDUSessionAggregateMaximumBitRate* pvalue);

EXTERN void asn1Print_PDUSessionAggregateMaximumBitRate 
   (const char* name, const PDUSessionAggregateMaximumBitRate* pvalue);

EXTERN int asn1PrtToStr_PDUSessionAggregateMaximumBitRate (const char* name, 
   PDUSessionAggregateMaximumBitRate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionAggregateMaximumBitRate (OSCTXT *pctxt, 
   const char* name, const PDUSessionAggregateMaximumBitRate* pvalue);

EXTERN int asn1Init_PDUSessionAggregateMaximumBitRate (
   PDUSessionAggregateMaximumBitRate* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceAdmittedItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceAdmittedItem'
*/
typedef struct EXTERN PDUSessionResourceAdmittedItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceAdmittedItem_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceAdmittedItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceAdmittedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceAdmittedItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceAdmittedItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceAdmittedItem_iE_Extensions_element 
   (const char* name, const PDUSessionResourceAdmittedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceAdmittedItem_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceAdmittedItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceAdmittedItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceAdmittedItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceAdmittedItem_iE_Extensions_element (
   PDUSessionResourceAdmittedItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceAdmittedItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceAdmittedItem'
*/
/* List of PDUSessionResourceAdmittedItem_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceAdmittedItem_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceAdmittedItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceAdmittedItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceAdmittedItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceAdmittedItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceAdmittedItem_iE_Extensions 
   (const char* name, const PDUSessionResourceAdmittedItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceAdmittedItem_iE_Extensions (
   const char* name, PDUSessionResourceAdmittedItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceAdmittedItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceAdmittedItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceAdmittedItem_iE_Extensions_element* 
   asn1Get_PDUSessionResourceAdmittedItem_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceAdmittedItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceAdmittedItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceAdmittedItem_iE_Extensions* plist, 
   PDUSessionResourceAdmittedItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceAdmittedItem_iE_Extensions (
   PDUSessionResourceAdmittedItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceAdmittedItem                            */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceAdmittedItem ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   handoverRequestAcknowledgeTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceAdmittedItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceAdmittedItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceAdmittedItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceAdmittedItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr handoverRequestAcknowledgeTransfer;
   PDUSessionResourceAdmittedItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceAdmittedItem;

EXTERN int asn1PE_PDUSessionResourceAdmittedItem (OSCTXT* pctxt, PDUSessionResourceAdmittedItem* pvalue);

EXTERN int asn1PD_PDUSessionResourceAdmittedItem (OSCTXT* pctxt, PDUSessionResourceAdmittedItem* pvalue);

EXTERN void asn1Print_PDUSessionResourceAdmittedItem 
   (const char* name, const PDUSessionResourceAdmittedItem* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceAdmittedItem (const char* name, 
   PDUSessionResourceAdmittedItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceAdmittedItem (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceAdmittedItem* pvalue);

EXTERN int asn1Init_PDUSessionResourceAdmittedItem (
   PDUSessionResourceAdmittedItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceAdmittedList                            */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceAdmittedList ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceAdmittedItem
*/
/* List of PDUSessionResourceAdmittedItem */
typedef OSRTDList PDUSessionResourceAdmittedList;

EXTERN int asn1PE_PDUSessionResourceAdmittedList (OSCTXT* pctxt, PDUSessionResourceAdmittedList* pvalue);

EXTERN int asn1PD_PDUSessionResourceAdmittedList (OSCTXT* pctxt, PDUSessionResourceAdmittedList* pvalue);

EXTERN void asn1Print_PDUSessionResourceAdmittedList 
   (const char* name, const PDUSessionResourceAdmittedList* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceAdmittedList (const char* name, 
   PDUSessionResourceAdmittedList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceAdmittedList (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceAdmittedList* pvalue);

EXTERN int asn1Init_PDUSessionResourceAdmittedList (
   PDUSessionResourceAdmittedList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToModifyItemModCfm'
*/
typedef struct EXTERN PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element 
   (const char* name, const PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element (
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToModifyItemModCfm'
*/
/* List of PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions 
   (const char* name, const PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions (
   const char* name, 
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions_element* 
   asn1Get_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* plist, 
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions (
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyItemModCfm                */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToModifyItemModCfm ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceModifyIndicationUnsuccessfulTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceFailedToModifyItemModCfm-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceFailedToModifyItemModCfm-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceFailedToModifyItemModCfm-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceFailedToModifyItemModCfm {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceModifyIndicationUnsuccessfulTransfer;
   PDUSessionResourceFailedToModifyItemModCfm_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceFailedToModifyItemModCfm;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyItemModCfm (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModCfm* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyItemModCfm (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModCfm* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyItemModCfm 
   (const char* name, const PDUSessionResourceFailedToModifyItemModCfm* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyItemModCfm (const char* name, 
   PDUSessionResourceFailedToModifyItemModCfm* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyItemModCfm (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyItemModCfm* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyItemModCfm (
   PDUSessionResourceFailedToModifyItemModCfm* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyListModCfm                */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToModifyListModCfm ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceFailedToModifyItemModCfm
*/
/* List of PDUSessionResourceFailedToModifyItemModCfm */
typedef OSRTDList PDUSessionResourceFailedToModifyListModCfm;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyListModCfm (OSCTXT* pctxt, PDUSessionResourceFailedToModifyListModCfm* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyListModCfm (OSCTXT* pctxt, PDUSessionResourceFailedToModifyListModCfm* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyListModCfm 
   (const char* name, const PDUSessionResourceFailedToModifyListModCfm* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyListModCfm (const char* name, 
   PDUSessionResourceFailedToModifyListModCfm* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyListModCfm (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyListModCfm* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyListModCfm (
   PDUSessionResourceFailedToModifyListModCfm* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyItemModRes_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToModifyItemModRes'
*/
typedef struct EXTERN PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element 
   (const char* name, const PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element (
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyItemModRes_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToModifyItemModRes'
*/
/* List of PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceFailedToModifyItemModRes_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions 
   (const char* name, const PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions (
   const char* name, 
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceFailedToModifyItemModRes_iE_Extensions_element* 
   asn1Get_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* plist, 
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyItemModRes_iE_Extensions (
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyItemModRes                */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToModifyItemModRes ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceModifyUnsuccessfulTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceFailedToModifyItemModRes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceFailedToModifyItemModRes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceFailedToModifyItemModRes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceFailedToModifyItemModRes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceModifyUnsuccessfulTransfer;
   PDUSessionResourceFailedToModifyItemModRes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceFailedToModifyItemModRes;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyItemModRes (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyItemModRes (OSCTXT* pctxt, PDUSessionResourceFailedToModifyItemModRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyItemModRes 
   (const char* name, const PDUSessionResourceFailedToModifyItemModRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyItemModRes (const char* name, 
   PDUSessionResourceFailedToModifyItemModRes* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyItemModRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyItemModRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyItemModRes (
   PDUSessionResourceFailedToModifyItemModRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToModifyListModRes                */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToModifyListModRes ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceFailedToModifyItemModRes
*/
/* List of PDUSessionResourceFailedToModifyItemModRes */
typedef OSRTDList PDUSessionResourceFailedToModifyListModRes;

EXTERN int asn1PE_PDUSessionResourceFailedToModifyListModRes (OSCTXT* pctxt, PDUSessionResourceFailedToModifyListModRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToModifyListModRes (OSCTXT* pctxt, PDUSessionResourceFailedToModifyListModRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToModifyListModRes 
   (const char* name, const PDUSessionResourceFailedToModifyListModRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToModifyListModRes (const char* name, 
   PDUSessionResourceFailedToModifyListModRes* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToModifyListModRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToModifyListModRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToModifyListModRes (
   PDUSessionResourceFailedToModifyListModRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extension  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupUnsuccessfulTransfer'
*/
typedef struct EXTERN PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element (
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extension  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupUnsuccessfulTransfer'
*/
/* List of PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int 
   asn1GetAll_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* plist, 
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions (
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupUnsuccessfulTransfer               */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupUnsuccessfulTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   criticalityDiagnostics [1] CriticalityDiagnostics OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSetupUnsuccessfulTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSetupUnsuccessfulTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSetupUnsuccessfulTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupUnsuccessfulTransfer {
   struct {
      unsigned criticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   CriticalityDiagnostics criticalityDiagnostics;
   PDUSessionResourceSetupUnsuccessfulTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSetupUnsuccessfulTransfer;

EXTERN int asn1PE_PDUSessionResourceSetupUnsuccessfulTransfer (OSCTXT* pctxt, PDUSessionResourceSetupUnsuccessfulTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupUnsuccessfulTransfer (OSCTXT* pctxt, PDUSessionResourceSetupUnsuccessfulTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupUnsuccessfulTransfer 
   (const char* name, const PDUSessionResourceSetupUnsuccessfulTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupUnsuccessfulTransfer (
   const char* name, PDUSessionResourceSetupUnsuccessfulTransfer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupUnsuccessfulTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupUnsuccessfulTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupUnsuccessfulTransfer (
   PDUSessionResourceSetupUnsuccessfulTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemCxtFail'
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element 
   (const char* name, const PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element (
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemCxtFail'
*/
/* List of PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions 
   (const char* name, const PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions (
   const char* name, 
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions_element* 
   asn1Get_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* plist, 
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions (
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemCxtFail                */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupItemCxtFail ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceSetupUnsuccessfulTransfer [1] OCTET STRING (CONTAINING PDUSessionResourceSetupUnsuccessfulTransfer),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceFailedToSetupItemCxtFail-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceFailedToSetupItemCxtFail-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceFailedToSetupItemCxtFail-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemCxtFail {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceSetupUnsuccessfulTransfer;
   //PDUSessionResourceSetupUnsuccessfulTransfer pDUSessionResourceSetupUnsuccessfulTransfer;
   PDUSessionResourceFailedToSetupItemCxtFail_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceFailedToSetupItemCxtFail;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemCxtFail (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtFail* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemCxtFail (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtFail* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemCxtFail 
   (const char* name, const PDUSessionResourceFailedToSetupItemCxtFail* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemCxtFail (const char* name, 
   PDUSessionResourceFailedToSetupItemCxtFail* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemCxtFail (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemCxtFail* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemCxtFail (
   PDUSessionResourceFailedToSetupItemCxtFail* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupListCxtFail                */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupListCxtFail ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceFailedToSetupItemCxtFail
*/
/* List of PDUSessionResourceFailedToSetupItemCxtFail */
typedef OSRTDList PDUSessionResourceFailedToSetupListCxtFail;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupListCxtFail (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListCxtFail* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupListCxtFail (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListCxtFail* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupListCxtFail 
   (const char* name, const PDUSessionResourceFailedToSetupListCxtFail* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupListCxtFail (const char* name, 
   PDUSessionResourceFailedToSetupListCxtFail* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupListCxtFail (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupListCxtFail* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupListCxtFail (
   PDUSessionResourceFailedToSetupListCxtFail* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemCxtRes'
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element 
   (const char* name, const PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element (
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemCxtRes'
*/
/* List of PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions 
   (const char* name, const PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions (
   const char* name, 
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions_element* 
   asn1Get_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* plist, 
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions (
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemCxtRes                 */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupItemCxtRes ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceSetupUnsuccessfulTransfer [1] OCTET STRING (CONTAINING PDUSessionResourceSetupUnsuccessfulTransfer),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceFailedToSetupItemCxtRes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceFailedToSetupItemCxtRes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceFailedToSetupItemCxtRes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemCxtRes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceSetupUnsuccessfulTransfer;
 //  PDUSessionResourceSetupUnsuccessfulTransfer pDUSessionResourceSetupUnsuccessfulTransfer;
   PDUSessionResourceFailedToSetupItemCxtRes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceFailedToSetupItemCxtRes;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemCxtRes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemCxtRes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemCxtRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemCxtRes 
   (const char* name, const PDUSessionResourceFailedToSetupItemCxtRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemCxtRes (const char* name, 
   PDUSessionResourceFailedToSetupItemCxtRes* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemCxtRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemCxtRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemCxtRes (
   PDUSessionResourceFailedToSetupItemCxtRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupListCxtRes                 */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupListCxtRes ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceFailedToSetupItemCxtRes
*/
/* List of PDUSessionResourceFailedToSetupItemCxtRes */
typedef OSRTDList PDUSessionResourceFailedToSetupListCxtRes;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupListCxtRes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListCxtRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupListCxtRes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListCxtRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupListCxtRes 
   (const char* name, const PDUSessionResourceFailedToSetupListCxtRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupListCxtRes (const char* name, 
   PDUSessionResourceFailedToSetupListCxtRes* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupListCxtRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupListCxtRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupListCxtRes (
   PDUSessionResourceFailedToSetupListCxtRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_e  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemHOAck'
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element 
   (const char* name, const PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element (
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemHOAck'
*/
/* List of PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions 
   (const char* name, const PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions (
   const char* name, 
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions_element* 
   asn1Get_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* plist, 
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions (
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemHOAck                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupItemHOAck ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   handoverResourceAllocationUnsuccessfulTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceFailedToSetupItemHOAck-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceFailedToSetupItemHOAck-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceFailedToSetupItemHOAck-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemHOAck {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr handoverResourceAllocationUnsuccessfulTransfer;
   PDUSessionResourceFailedToSetupItemHOAck_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceFailedToSetupItemHOAck;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemHOAck (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemHOAck* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemHOAck (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemHOAck* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemHOAck 
   (const char* name, const PDUSessionResourceFailedToSetupItemHOAck* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemHOAck (const char* name, 
   PDUSessionResourceFailedToSetupItemHOAck* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemHOAck (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemHOAck* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemHOAck (
   PDUSessionResourceFailedToSetupItemHOAck* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupListHOAck                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupListHOAck ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceFailedToSetupItemHOAck
*/
/* List of PDUSessionResourceFailedToSetupItemHOAck */
typedef OSRTDList PDUSessionResourceFailedToSetupListHOAck;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupListHOAck (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListHOAck* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupListHOAck (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListHOAck* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupListHOAck 
   (const char* name, const PDUSessionResourceFailedToSetupListHOAck* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupListHOAck (const char* name, 
   PDUSessionResourceFailedToSetupListHOAck* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupListHOAck (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupListHOAck* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupListHOAck (
   PDUSessionResourceFailedToSetupListHOAck* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_e  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemPSReq'
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element 
   (const char* name, const PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element (
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemPSReq'
*/
/* List of PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions 
   (const char* name, const PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions (
   const char* name, 
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions_element* 
   asn1Get_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* plist, 
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions (
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemPSReq                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupItemPSReq ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pathSwitchRequestSetupFailedTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceFailedToSetupItemPSReq-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceFailedToSetupItemPSReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceFailedToSetupItemPSReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemPSReq {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pathSwitchRequestSetupFailedTransfer;
   PDUSessionResourceFailedToSetupItemPSReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceFailedToSetupItemPSReq;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemPSReq (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemPSReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemPSReq (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemPSReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemPSReq 
   (const char* name, const PDUSessionResourceFailedToSetupItemPSReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemPSReq (const char* name, 
   PDUSessionResourceFailedToSetupItemPSReq* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemPSReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemPSReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemPSReq (
   PDUSessionResourceFailedToSetupItemPSReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupListPSReq                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupListPSReq ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceFailedToSetupItemPSReq
*/
/* List of PDUSessionResourceFailedToSetupItemPSReq */
typedef OSRTDList PDUSessionResourceFailedToSetupListPSReq;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupListPSReq (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListPSReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupListPSReq (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListPSReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupListPSReq 
   (const char* name, const PDUSessionResourceFailedToSetupListPSReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupListPSReq (const char* name, 
   PDUSessionResourceFailedToSetupListPSReq* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupListPSReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupListPSReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupListPSReq (
   PDUSessionResourceFailedToSetupListPSReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_e  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemSURes'
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element 
   (const char* name, const PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element (
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemSURes_iE_Extensions    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceFailedToSetupItemSURes'
*/
/* List of PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceFailedToSetupItemSURes_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions 
   (const char* name, const PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions (
   const char* name, 
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceFailedToSetupItemSURes_iE_Extensions_element* 
   asn1Get_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* plist, 
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemSURes_iE_Extensions (
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupItemSURes                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupItemSURes ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceSetupUnsuccessfulTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceFailedToSetupItemSURes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceFailedToSetupItemSURes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceFailedToSetupItemSURes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceFailedToSetupItemSURes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceSetupUnsuccessfulTransfer;
   PDUSessionResourceFailedToSetupItemSURes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceFailedToSetupItemSURes;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupItemSURes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemSURes* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupItemSURes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupItemSURes* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupItemSURes 
   (const char* name, const PDUSessionResourceFailedToSetupItemSURes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupItemSURes (const char* name, 
   PDUSessionResourceFailedToSetupItemSURes* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupItemSURes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupItemSURes* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupItemSURes (
   PDUSessionResourceFailedToSetupItemSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceFailedToSetupListSURes                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceFailedToSetupListSURes ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceFailedToSetupItemSURes
*/
/* List of PDUSessionResourceFailedToSetupItemSURes */
typedef OSRTDList PDUSessionResourceFailedToSetupListSURes;

EXTERN int asn1PE_PDUSessionResourceFailedToSetupListSURes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListSURes* pvalue);

EXTERN int asn1PD_PDUSessionResourceFailedToSetupListSURes (OSCTXT* pctxt, PDUSessionResourceFailedToSetupListSURes* pvalue);

EXTERN void asn1Print_PDUSessionResourceFailedToSetupListSURes 
   (const char* name, const PDUSessionResourceFailedToSetupListSURes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceFailedToSetupListSURes (const char* name, 
   PDUSessionResourceFailedToSetupListSURes* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceFailedToSetupListSURes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceFailedToSetupListSURes* pvalue);

EXTERN int asn1Init_PDUSessionResourceFailedToSetupListSURes (
   PDUSessionResourceFailedToSetupListSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceHandoverItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceHandoverItem'
*/
typedef struct EXTERN PDUSessionResourceHandoverItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceHandoverItem_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceHandoverItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceHandoverItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceHandoverItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceHandoverItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceHandoverItem_iE_Extensions_element 
   (const char* name, const PDUSessionResourceHandoverItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceHandoverItem_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceHandoverItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceHandoverItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceHandoverItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceHandoverItem_iE_Extensions_element (
   PDUSessionResourceHandoverItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceHandoverItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceHandoverItem'
*/
/* List of PDUSessionResourceHandoverItem_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceHandoverItem_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceHandoverItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceHandoverItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceHandoverItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceHandoverItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceHandoverItem_iE_Extensions 
   (const char* name, const PDUSessionResourceHandoverItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceHandoverItem_iE_Extensions (
   const char* name, PDUSessionResourceHandoverItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceHandoverItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceHandoverItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceHandoverItem_iE_Extensions_element* 
   asn1Get_PDUSessionResourceHandoverItem_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceHandoverItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceHandoverItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceHandoverItem_iE_Extensions* plist, 
   PDUSessionResourceHandoverItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceHandoverItem_iE_Extensions (
   PDUSessionResourceHandoverItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceHandoverItem                            */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceHandoverItem ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   handoverCommandTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceHandoverItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceHandoverItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceHandoverItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceHandoverItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr handoverCommandTransfer;
   PDUSessionResourceHandoverItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceHandoverItem;

EXTERN int asn1PE_PDUSessionResourceHandoverItem (OSCTXT* pctxt, PDUSessionResourceHandoverItem* pvalue);

EXTERN int asn1PD_PDUSessionResourceHandoverItem (OSCTXT* pctxt, PDUSessionResourceHandoverItem* pvalue);

EXTERN void asn1Print_PDUSessionResourceHandoverItem 
   (const char* name, const PDUSessionResourceHandoverItem* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceHandoverItem (const char* name, 
   PDUSessionResourceHandoverItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceHandoverItem (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceHandoverItem* pvalue);

EXTERN int asn1Init_PDUSessionResourceHandoverItem (
   PDUSessionResourceHandoverItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceHandoverList                            */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceHandoverList ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceHandoverItem
*/
/* List of PDUSessionResourceHandoverItem */
typedef OSRTDList PDUSessionResourceHandoverList;

EXTERN int asn1PE_PDUSessionResourceHandoverList (OSCTXT* pctxt, PDUSessionResourceHandoverList* pvalue);

EXTERN int asn1PD_PDUSessionResourceHandoverList (OSCTXT* pctxt, PDUSessionResourceHandoverList* pvalue);

EXTERN void asn1Print_PDUSessionResourceHandoverList 
   (const char* name, const PDUSessionResourceHandoverList* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceHandoverList (const char* name, 
   PDUSessionResourceHandoverList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceHandoverList (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceHandoverList* pvalue);

EXTERN int asn1Init_PDUSessionResourceHandoverList (
   PDUSessionResourceHandoverList* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowInformationItem_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowInformationItem'
*/
typedef struct EXTERN QosFlowInformationItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      QosFlowInformationItem_ExtIEs_TVALUE t;

      /**
       * QosFlowInformationItem-ExtIEs information objects
       */
      union {
         /**
          * id: id-ULForwarding
          * criticality: reject
          * presence: optional
          */
         ULForwarding _QosFlowInformationItem_ExtIEs_id_ULForwarding;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} QosFlowInformationItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowInformationItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowInformationItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowInformationItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowInformationItem_iE_Extensions_element 
   (const char* name, const QosFlowInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowInformationItem_iE_Extensions_element (
   const char* name, QosFlowInformationItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowInformationItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowInformationItem_iE_Extensions_element (
   QosFlowInformationItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowInformationItem_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowInformationItem'
*/
/* List of QosFlowInformationItem_iE_Extensions_element */
typedef OSRTDList QosFlowInformationItem_iE_Extensions;

EXTERN int asn1PE_QosFlowInformationItem_iE_Extensions (OSCTXT* pctxt, QosFlowInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowInformationItem_iE_Extensions (OSCTXT* pctxt, QosFlowInformationItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowInformationItem_iE_Extensions 
   (const char* name, const QosFlowInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowInformationItem_iE_Extensions (const char* name, 
   QosFlowInformationItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowInformationItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowInformationItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowInformationItem_iE_Extensions_element* 
   asn1Get_QosFlowInformationItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowInformationItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowInformationItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowInformationItem_iE_Extensions* plist, 
   QosFlowInformationItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowInformationItem_iE_Extensions (
   QosFlowInformationItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowInformationItem                                    */
/*                                                            */
/**************************************************************/
/*
QosFlowInformationItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   dLForwarding [1] DLForwarding OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowInformationItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowInformationItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowInformationItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowInformationItem {
   struct {
      unsigned dLForwardingPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   DLForwarding dLForwarding;
   QosFlowInformationItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowInformationItem;

EXTERN int asn1PE_QosFlowInformationItem (OSCTXT* pctxt, QosFlowInformationItem* pvalue);

EXTERN int asn1PD_QosFlowInformationItem (OSCTXT* pctxt, QosFlowInformationItem* pvalue);

EXTERN void asn1Print_QosFlowInformationItem 
   (const char* name, const QosFlowInformationItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowInformationItem (const char* name, 
   QosFlowInformationItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowInformationItem (OSCTXT *pctxt, 
   const char* name, const QosFlowInformationItem* pvalue);

EXTERN int asn1Init_QosFlowInformationItem (QosFlowInformationItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowInformationList                                    */
/*                                                            */
/**************************************************************/
/*
QosFlowInformationList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowInformationItem
*/
/* List of QosFlowInformationItem */
typedef OSRTDList QosFlowInformationList;

EXTERN int asn1PE_QosFlowInformationList (OSCTXT* pctxt, QosFlowInformationList* pvalue);

EXTERN int asn1PD_QosFlowInformationList (OSCTXT* pctxt, QosFlowInformationList* pvalue);

EXTERN void asn1Print_QosFlowInformationList 
   (const char* name, const QosFlowInformationList* pvalue);

EXTERN int asn1PrtToStr_QosFlowInformationList (const char* name, 
   QosFlowInformationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowInformationList (OSCTXT *pctxt, 
   const char* name, const QosFlowInformationList* pvalue);

EXTERN int asn1Init_QosFlowInformationList (QosFlowInformationList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceInformationItem_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceInformationItem'
*/
typedef struct EXTERN PDUSessionResourceInformationItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceInformationItem_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceInformationItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceInformationItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceInformationItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceInformationItem_iE_Extensions_element 
   (const char* name, const PDUSessionResourceInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceInformationItem_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceInformationItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceInformationItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceInformationItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceInformationItem_iE_Extensions_element (
   PDUSessionResourceInformationItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceInformationItem_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceInformationItem'
*/
/* List of PDUSessionResourceInformationItem_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceInformationItem_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceInformationItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceInformationItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceInformationItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceInformationItem_iE_Extensions 
   (const char* name, const PDUSessionResourceInformationItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceInformationItem_iE_Extensions (
   const char* name, PDUSessionResourceInformationItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceInformationItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceInformationItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceInformationItem_iE_Extensions_element* 
   asn1Get_PDUSessionResourceInformationItem_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceInformationItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceInformationItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceInformationItem_iE_Extensions* plist, 
   PDUSessionResourceInformationItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceInformationItem_iE_Extensions (
   PDUSessionResourceInformationItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceInformationItem                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceInformationItem ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   qosFlowInformationList [1] QosFlowInformationList,
   dRBsToQosFlowsMappingList [2] DRBsToQosFlowsMappingList OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceInformationItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceInformationItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceInformationItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceInformationItem {
   struct {
      unsigned dRBsToQosFlowsMappingListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   QosFlowInformationList qosFlowInformationList;
   DRBsToQosFlowsMappingList dRBsToQosFlowsMappingList;
   PDUSessionResourceInformationItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceInformationItem;

EXTERN int asn1PE_PDUSessionResourceInformationItem (OSCTXT* pctxt, PDUSessionResourceInformationItem* pvalue);

EXTERN int asn1PD_PDUSessionResourceInformationItem (OSCTXT* pctxt, PDUSessionResourceInformationItem* pvalue);

EXTERN void asn1Print_PDUSessionResourceInformationItem 
   (const char* name, const PDUSessionResourceInformationItem* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceInformationItem (const char* name, 
   PDUSessionResourceInformationItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceInformationItem (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceInformationItem* pvalue);

EXTERN int asn1Init_PDUSessionResourceInformationItem (
   PDUSessionResourceInformationItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceInformationList                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceInformationList ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceInformationItem
*/
/* List of PDUSessionResourceInformationItem */
typedef OSRTDList PDUSessionResourceInformationList;

EXTERN int asn1PE_PDUSessionResourceInformationList (OSCTXT* pctxt, PDUSessionResourceInformationList* pvalue);

EXTERN int asn1PD_PDUSessionResourceInformationList (OSCTXT* pctxt, PDUSessionResourceInformationList* pvalue);

EXTERN void asn1Print_PDUSessionResourceInformationList 
   (const char* name, const PDUSessionResourceInformationList* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceInformationList (const char* name, 
   PDUSessionResourceInformationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceInformationList (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceInformationList* pvalue);

EXTERN int asn1Init_PDUSessionResourceInformationList (
   PDUSessionResourceInformationList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemCxtRelCpl_iE_Extensions_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceItemCxtRelCpl'
*/
typedef struct EXTERN PDUSessionResourceItemCxtRelCpl_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceItemCxtRelCpl_ExtIEs_TVALUE t;

      /**
       * PDUSessionResourceItemCxtRelCpl-ExtIEs information objects
       */
      union {
         /**
          * id: id-PDUSessionResourceReleaseResponseTransfer
          * criticality: ignore
          * presence: optional
          */
         _PDUSessionResourceItemCxtRelCpl_ExtIEs_Extension *_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PDUSessionResourceItemCxtRelCpl_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceItemCxtRelCpl_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceItemCxtRelCpl_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemCxtRelCpl_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceItemCxtRelCpl_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemCxtRelCpl_iE_Extensions_element 
   (const char* name, const PDUSessionResourceItemCxtRelCpl_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemCxtRelCpl_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceItemCxtRelCpl_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemCxtRelCpl_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemCxtRelCpl_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceItemCxtRelCpl_iE_Extensions_element (
   PDUSessionResourceItemCxtRelCpl_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemCxtRelCpl_iE_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceItemCxtRelCpl'
*/
/* List of PDUSessionResourceItemCxtRelCpl_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceItemCxtRelCpl_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceItemCxtRelCpl_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceItemCxtRelCpl_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemCxtRelCpl_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceItemCxtRelCpl_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemCxtRelCpl_iE_Extensions 
   (const char* name, const PDUSessionResourceItemCxtRelCpl_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemCxtRelCpl_iE_Extensions (
   const char* name, PDUSessionResourceItemCxtRelCpl_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemCxtRelCpl_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemCxtRelCpl_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceItemCxtRelCpl_iE_Extensions_element* 
   asn1Get_PDUSessionResourceItemCxtRelCpl_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceItemCxtRelCpl_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceItemCxtRelCpl_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceItemCxtRelCpl_iE_Extensions* plist, 
   PDUSessionResourceItemCxtRelCpl_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceItemCxtRelCpl_iE_Extensions (
   PDUSessionResourceItemCxtRelCpl_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemCxtRelCpl                           */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceItemCxtRelCpl ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceItemCxtRelCpl-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceItemCxtRelCpl-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceItemCxtRelCpl-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceItemCxtRelCpl {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   PDUSessionResourceItemCxtRelCpl_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceItemCxtRelCpl;

EXTERN int asn1PE_PDUSessionResourceItemCxtRelCpl (OSCTXT* pctxt, PDUSessionResourceItemCxtRelCpl* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemCxtRelCpl (OSCTXT* pctxt, PDUSessionResourceItemCxtRelCpl* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemCxtRelCpl 
   (const char* name, const PDUSessionResourceItemCxtRelCpl* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemCxtRelCpl (const char* name, 
   PDUSessionResourceItemCxtRelCpl* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemCxtRelCpl (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemCxtRelCpl* pvalue);

EXTERN int asn1Init_PDUSessionResourceItemCxtRelCpl (
   PDUSessionResourceItemCxtRelCpl* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceListCxtRelCpl                           */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceListCxtRelCpl ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceItemCxtRelCpl
*/
/* List of PDUSessionResourceItemCxtRelCpl */
typedef OSRTDList PDUSessionResourceListCxtRelCpl;

EXTERN int asn1PE_PDUSessionResourceListCxtRelCpl (OSCTXT* pctxt, PDUSessionResourceListCxtRelCpl* pvalue);

EXTERN int asn1PD_PDUSessionResourceListCxtRelCpl (OSCTXT* pctxt, PDUSessionResourceListCxtRelCpl* pvalue);

EXTERN void asn1Print_PDUSessionResourceListCxtRelCpl 
   (const char* name, const PDUSessionResourceListCxtRelCpl* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceListCxtRelCpl (const char* name, 
   PDUSessionResourceListCxtRelCpl* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceListCxtRelCpl (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceListCxtRelCpl* pvalue);

EXTERN int asn1Init_PDUSessionResourceListCxtRelCpl (
   PDUSessionResourceListCxtRelCpl* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemCxtRelReq_iE_Extensions_element     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceItemCxtRelReq'
*/
typedef struct EXTERN PDUSessionResourceItemCxtRelReq_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceItemCxtRelReq_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceItemCxtRelReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceItemCxtRelReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemCxtRelReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceItemCxtRelReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemCxtRelReq_iE_Extensions_element 
   (const char* name, const PDUSessionResourceItemCxtRelReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemCxtRelReq_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceItemCxtRelReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemCxtRelReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemCxtRelReq_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceItemCxtRelReq_iE_Extensions_element (
   PDUSessionResourceItemCxtRelReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemCxtRelReq_iE_Extensions             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceItemCxtRelReq'
*/
/* List of PDUSessionResourceItemCxtRelReq_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceItemCxtRelReq_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceItemCxtRelReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceItemCxtRelReq_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemCxtRelReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceItemCxtRelReq_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemCxtRelReq_iE_Extensions 
   (const char* name, const PDUSessionResourceItemCxtRelReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemCxtRelReq_iE_Extensions (
   const char* name, PDUSessionResourceItemCxtRelReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemCxtRelReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemCxtRelReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceItemCxtRelReq_iE_Extensions_element* 
   asn1Get_PDUSessionResourceItemCxtRelReq_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceItemCxtRelReq_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceItemCxtRelReq_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceItemCxtRelReq_iE_Extensions* plist, 
   PDUSessionResourceItemCxtRelReq_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceItemCxtRelReq_iE_Extensions (
   PDUSessionResourceItemCxtRelReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemCxtRelReq                           */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceItemCxtRelReq ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceItemCxtRelReq-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceItemCxtRelReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceItemCxtRelReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceItemCxtRelReq {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   PDUSessionResourceItemCxtRelReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceItemCxtRelReq;

EXTERN int asn1PE_PDUSessionResourceItemCxtRelReq (OSCTXT* pctxt, PDUSessionResourceItemCxtRelReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemCxtRelReq (OSCTXT* pctxt, PDUSessionResourceItemCxtRelReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemCxtRelReq 
   (const char* name, const PDUSessionResourceItemCxtRelReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemCxtRelReq (const char* name, 
   PDUSessionResourceItemCxtRelReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemCxtRelReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemCxtRelReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceItemCxtRelReq (
   PDUSessionResourceItemCxtRelReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceListCxtRelReq                           */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceListCxtRelReq ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceItemCxtRelReq
*/
/* List of PDUSessionResourceItemCxtRelReq */
typedef OSRTDList PDUSessionResourceListCxtRelReq;

EXTERN int asn1PE_PDUSessionResourceListCxtRelReq (OSCTXT* pctxt, PDUSessionResourceListCxtRelReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceListCxtRelReq (OSCTXT* pctxt, PDUSessionResourceListCxtRelReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceListCxtRelReq 
   (const char* name, const PDUSessionResourceListCxtRelReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceListCxtRelReq (const char* name, 
   PDUSessionResourceListCxtRelReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceListCxtRelReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceListCxtRelReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceListCxtRelReq (
   PDUSessionResourceListCxtRelReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemHORqd_iE_Extensions_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceItemHORqd'
*/
typedef struct EXTERN PDUSessionResourceItemHORqd_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceItemHORqd_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceItemHORqd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceItemHORqd_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemHORqd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceItemHORqd_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemHORqd_iE_Extensions_element 
   (const char* name, const PDUSessionResourceItemHORqd_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemHORqd_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceItemHORqd_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemHORqd_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemHORqd_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceItemHORqd_iE_Extensions_element (
   PDUSessionResourceItemHORqd_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemHORqd_iE_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceItemHORqd'
*/
/* List of PDUSessionResourceItemHORqd_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceItemHORqd_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceItemHORqd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceItemHORqd_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemHORqd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceItemHORqd_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemHORqd_iE_Extensions 
   (const char* name, const PDUSessionResourceItemHORqd_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemHORqd_iE_Extensions (const char* name, 
   PDUSessionResourceItemHORqd_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemHORqd_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemHORqd_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceItemHORqd_iE_Extensions_element* 
   asn1Get_PDUSessionResourceItemHORqd_iE_Extensions (ProtocolExtensionID id, 
   PDUSessionResourceItemHORqd_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceItemHORqd_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceItemHORqd_iE_Extensions* plist, 
   PDUSessionResourceItemHORqd_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceItemHORqd_iE_Extensions (
   PDUSessionResourceItemHORqd_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceItemHORqd                               */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceItemHORqd ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   handoverRequiredTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceItemHORqd-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceItemHORqd-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceItemHORqd-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceItemHORqd {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr handoverRequiredTransfer;
   PDUSessionResourceItemHORqd_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceItemHORqd;

EXTERN int asn1PE_PDUSessionResourceItemHORqd (OSCTXT* pctxt, PDUSessionResourceItemHORqd* pvalue);

EXTERN int asn1PD_PDUSessionResourceItemHORqd (OSCTXT* pctxt, PDUSessionResourceItemHORqd* pvalue);

EXTERN void asn1Print_PDUSessionResourceItemHORqd 
   (const char* name, const PDUSessionResourceItemHORqd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceItemHORqd (const char* name, 
   PDUSessionResourceItemHORqd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceItemHORqd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceItemHORqd* pvalue);

EXTERN int asn1Init_PDUSessionResourceItemHORqd (PDUSessionResourceItemHORqd* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceListHORqd                               */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceListHORqd ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceItemHORqd
*/
/* List of PDUSessionResourceItemHORqd */
typedef OSRTDList PDUSessionResourceListHORqd;

EXTERN int asn1PE_PDUSessionResourceListHORqd (OSCTXT* pctxt, PDUSessionResourceListHORqd* pvalue);

EXTERN int asn1PD_PDUSessionResourceListHORqd (OSCTXT* pctxt, PDUSessionResourceListHORqd* pvalue);

EXTERN void asn1Print_PDUSessionResourceListHORqd 
   (const char* name, const PDUSessionResourceListHORqd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceListHORqd (const char* name, 
   PDUSessionResourceListHORqd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceListHORqd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceListHORqd* pvalue);

EXTERN int asn1Init_PDUSessionResourceListHORqd (PDUSessionResourceListHORqd* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowModifyConfirmItem_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowModifyConfirmItem'
*/
typedef struct EXTERN QosFlowModifyConfirmItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowModifyConfirmItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowModifyConfirmItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowModifyConfirmItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowModifyConfirmItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowModifyConfirmItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowModifyConfirmItem_iE_Extensions_element 
   (const char* name, const QosFlowModifyConfirmItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowModifyConfirmItem_iE_Extensions_element (
   const char* name, QosFlowModifyConfirmItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowModifyConfirmItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowModifyConfirmItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowModifyConfirmItem_iE_Extensions_element (
   QosFlowModifyConfirmItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowModifyConfirmItem_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowModifyConfirmItem'
*/
/* List of QosFlowModifyConfirmItem_iE_Extensions_element */
typedef OSRTDList QosFlowModifyConfirmItem_iE_Extensions;

EXTERN int asn1PE_QosFlowModifyConfirmItem_iE_Extensions (OSCTXT* pctxt, QosFlowModifyConfirmItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowModifyConfirmItem_iE_Extensions (OSCTXT* pctxt, QosFlowModifyConfirmItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowModifyConfirmItem_iE_Extensions 
   (const char* name, const QosFlowModifyConfirmItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowModifyConfirmItem_iE_Extensions (const char* name, 
   QosFlowModifyConfirmItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowModifyConfirmItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowModifyConfirmItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowModifyConfirmItem_iE_Extensions_element* 
   asn1Get_QosFlowModifyConfirmItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowModifyConfirmItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowModifyConfirmItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowModifyConfirmItem_iE_Extensions* plist, 
   QosFlowModifyConfirmItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowModifyConfirmItem_iE_Extensions (
   QosFlowModifyConfirmItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowModifyConfirmItem                                  */
/*                                                            */
/**************************************************************/
/*
QosFlowModifyConfirmItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowModifyConfirmItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowModifyConfirmItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowModifyConfirmItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowModifyConfirmItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QosFlowModifyConfirmItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowModifyConfirmItem;

EXTERN int asn1PE_QosFlowModifyConfirmItem (OSCTXT* pctxt, QosFlowModifyConfirmItem* pvalue);

EXTERN int asn1PD_QosFlowModifyConfirmItem (OSCTXT* pctxt, QosFlowModifyConfirmItem* pvalue);

EXTERN void asn1Print_QosFlowModifyConfirmItem 
   (const char* name, const QosFlowModifyConfirmItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowModifyConfirmItem (const char* name, 
   QosFlowModifyConfirmItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowModifyConfirmItem (OSCTXT *pctxt, 
   const char* name, const QosFlowModifyConfirmItem* pvalue);

EXTERN int asn1Init_QosFlowModifyConfirmItem (QosFlowModifyConfirmItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowModifyConfirmList                                  */
/*                                                            */
/**************************************************************/
/*
QosFlowModifyConfirmList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowModifyConfirmItem
*/
/* List of QosFlowModifyConfirmItem */
typedef OSRTDList QosFlowModifyConfirmList;

EXTERN int asn1PE_QosFlowModifyConfirmList (OSCTXT* pctxt, QosFlowModifyConfirmList* pvalue);

EXTERN int asn1PD_QosFlowModifyConfirmList (OSCTXT* pctxt, QosFlowModifyConfirmList* pvalue);

EXTERN void asn1Print_QosFlowModifyConfirmList 
   (const char* name, const QosFlowModifyConfirmList* pvalue);

EXTERN int asn1PrtToStr_QosFlowModifyConfirmList (const char* name, 
   QosFlowModifyConfirmList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowModifyConfirmList (OSCTXT *pctxt, 
   const char* name, const QosFlowModifyConfirmList* pvalue);

EXTERN int asn1Init_QosFlowModifyConfirmList (QosFlowModifyConfirmList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyConfirmTransfer_iE_Extensions_el  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyConfirmTransfer'
*/
typedef struct EXTERN PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element (
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyConfirmTransfer_iE_Extensions     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyConfirmTransfer'
*/
/* List of PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyConfirmTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyConfirmTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyConfirmTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyConfirmTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyConfirmTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyConfirmTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyConfirmTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyConfirmTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyConfirmTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyConfirmTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyConfirmTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyConfirmTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyConfirmTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions* plist, 
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyConfirmTransfer_iE_Extensions (
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyConfirmTransfer                   */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyConfirmTransfer ::= SEQUENCE {
   qosFlowModifyConfirmList [0] QosFlowModifyConfirmList,
   uLNGU-UP-TNLInformation [1] EXPLICIT UPTransportLayerInformation,
   additionalNG-UUPTNLInformation [2] UPTransportLayerInformationPairList OPTIONAL,
   qosFlowFailedToModifyList [3] QosFlowListWithCause OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyConfirmTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyConfirmTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyConfirmTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyConfirmTransfer {
   struct {
      unsigned additionalNG_UUPTNLInformationPresent : 1;
      unsigned qosFlowFailedToModifyListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowModifyConfirmList qosFlowModifyConfirmList;
   UPTransportLayerInformation uLNGU_UP_TNLInformation;
   UPTransportLayerInformationPairList additionalNG_UUPTNLInformation;
   QosFlowListWithCause qosFlowFailedToModifyList;
   PDUSessionResourceModifyConfirmTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyConfirmTransfer;

EXTERN int asn1PE_PDUSessionResourceModifyConfirmTransfer (OSCTXT* pctxt, PDUSessionResourceModifyConfirmTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyConfirmTransfer (OSCTXT* pctxt, PDUSessionResourceModifyConfirmTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyConfirmTransfer 
   (const char* name, const PDUSessionResourceModifyConfirmTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyConfirmTransfer (const char* name, 
   PDUSessionResourceModifyConfirmTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyConfirmTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyConfirmTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyConfirmTransfer (
   PDUSessionResourceModifyConfirmTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndicationUnsuccessfulTransfer_i  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyIndicationUnsuccessfulTransfer'
*/
typedef struct EXTERN PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element (
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndicationUnsuccessfulTransfer_i  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyIndicationUnsuccessfulTransfer'
*/
/* List of PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int 
   asn1GetAll_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* plist, 
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions (
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndicationUnsuccessfulTransfer    */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyIndicationUnsuccessfulTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyIndicationUnsuccessfulTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyIndicationUnsuccessfulTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyIndicationUnsuccessfulTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyIndicationUnsuccessfulTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyIndicationUnsuccessfulTransfer;

EXTERN int asn1PE_PDUSessionResourceModifyIndicationUnsuccessfulTransfer (OSCTXT* pctxt, PDUSessionResourceModifyIndicationUnsuccessfulTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndicationUnsuccessfulTransfer (OSCTXT* pctxt, PDUSessionResourceModifyIndicationUnsuccessfulTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndicationUnsuccessfulTransfer 
   (const char* name, const PDUSessionResourceModifyIndicationUnsuccessfulTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndicationUnsuccessfulTransfer (
   const char* name, 
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndicationUnsuccessfulTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndicationUnsuccessfulTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyIndicationUnsuccessfulTransfer (
   PDUSessionResourceModifyIndicationUnsuccessfulTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_NGU_UP_TNLModifyItem_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UL-NGU-UP-TNLModifyItem'
*/
typedef struct EXTERN UL_NGU_UP_TNLModifyItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UL_NGU_UP_TNLModifyItem_iE_Extensions_element;

EXTERN int asn1PE_UL_NGU_UP_TNLModifyItem_iE_Extensions_element (OSCTXT* pctxt, UL_NGU_UP_TNLModifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UL_NGU_UP_TNLModifyItem_iE_Extensions_element (OSCTXT* pctxt, UL_NGU_UP_TNLModifyItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UL_NGU_UP_TNLModifyItem_iE_Extensions_element 
   (const char* name, const UL_NGU_UP_TNLModifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UL_NGU_UP_TNLModifyItem_iE_Extensions_element (
   const char* name, UL_NGU_UP_TNLModifyItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UL_NGU_UP_TNLModifyItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UL_NGU_UP_TNLModifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UL_NGU_UP_TNLModifyItem_iE_Extensions_element (
   UL_NGU_UP_TNLModifyItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_NGU_UP_TNLModifyItem_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UL-NGU-UP-TNLModifyItem'
*/
/* List of UL_NGU_UP_TNLModifyItem_iE_Extensions_element */
typedef OSRTDList UL_NGU_UP_TNLModifyItem_iE_Extensions;

EXTERN int asn1PE_UL_NGU_UP_TNLModifyItem_iE_Extensions (OSCTXT* pctxt, UL_NGU_UP_TNLModifyItem_iE_Extensions* pvalue);

EXTERN int asn1PD_UL_NGU_UP_TNLModifyItem_iE_Extensions (OSCTXT* pctxt, UL_NGU_UP_TNLModifyItem_iE_Extensions* pvalue);

EXTERN void asn1Print_UL_NGU_UP_TNLModifyItem_iE_Extensions 
   (const char* name, const UL_NGU_UP_TNLModifyItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UL_NGU_UP_TNLModifyItem_iE_Extensions (const char* name, 
   UL_NGU_UP_TNLModifyItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UL_NGU_UP_TNLModifyItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UL_NGU_UP_TNLModifyItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UL_NGU_UP_TNLModifyItem_iE_Extensions_element* 
   asn1Get_UL_NGU_UP_TNLModifyItem_iE_Extensions (ProtocolExtensionID id, 
   UL_NGU_UP_TNLModifyItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UL_NGU_UP_TNLModifyItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UL_NGU_UP_TNLModifyItem_iE_Extensions* plist, 
   UL_NGU_UP_TNLModifyItem_iE_Extensions* pmatches);

EXTERN int asn1Init_UL_NGU_UP_TNLModifyItem_iE_Extensions (
   UL_NGU_UP_TNLModifyItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_NGU_UP_TNLModifyItem                                   */
/*                                                            */
/**************************************************************/
/*
UL-NGU-UP-TNLModifyItem ::= SEQUENCE {
   uL-NGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation,
   dL-NGU-UP-TNLInformation [1] EXPLICIT UPTransportLayerInformation,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UL-NGU-UP-TNLModifyItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UL-NGU-UP-TNLModifyItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UL-NGU-UP-TNLModifyItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UL_NGU_UP_TNLModifyItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation uL_NGU_UP_TNLInformation;
   UPTransportLayerInformation dL_NGU_UP_TNLInformation;
   UL_NGU_UP_TNLModifyItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UL_NGU_UP_TNLModifyItem;

EXTERN int asn1PE_UL_NGU_UP_TNLModifyItem (OSCTXT* pctxt, UL_NGU_UP_TNLModifyItem* pvalue);

EXTERN int asn1PD_UL_NGU_UP_TNLModifyItem (OSCTXT* pctxt, UL_NGU_UP_TNLModifyItem* pvalue);

EXTERN void asn1Print_UL_NGU_UP_TNLModifyItem 
   (const char* name, const UL_NGU_UP_TNLModifyItem* pvalue);

EXTERN int asn1PrtToStr_UL_NGU_UP_TNLModifyItem (const char* name, 
   UL_NGU_UP_TNLModifyItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UL_NGU_UP_TNLModifyItem (OSCTXT *pctxt, 
   const char* name, const UL_NGU_UP_TNLModifyItem* pvalue);

EXTERN int asn1Init_UL_NGU_UP_TNLModifyItem (UL_NGU_UP_TNLModifyItem* pvalue);

/**************************************************************/
/*                                                            */
/*  UL_NGU_UP_TNLModifyList                                   */
/*                                                            */
/**************************************************************/
/*
UL-NGU-UP-TNLModifyList ::= SEQUENCE (SIZE (1..maxnoofMultiConnectivity)) OF UL-NGU-UP-TNLModifyItem
*/
/* List of UL_NGU_UP_TNLModifyItem */
typedef OSRTDList UL_NGU_UP_TNLModifyList;

EXTERN int asn1PE_UL_NGU_UP_TNLModifyList (OSCTXT* pctxt, UL_NGU_UP_TNLModifyList* pvalue);

EXTERN int asn1PD_UL_NGU_UP_TNLModifyList (OSCTXT* pctxt, UL_NGU_UP_TNLModifyList* pvalue);

EXTERN void asn1Print_UL_NGU_UP_TNLModifyList 
   (const char* name, const UL_NGU_UP_TNLModifyList* pvalue);

EXTERN int asn1PrtToStr_UL_NGU_UP_TNLModifyList (const char* name, 
   UL_NGU_UP_TNLModifyList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UL_NGU_UP_TNLModifyList (OSCTXT *pctxt, 
   const char* name, const UL_NGU_UP_TNLModifyList* pvalue);

EXTERN int asn1Init_UL_NGU_UP_TNLModifyList (UL_NGU_UP_TNLModifyList* pvalue);

/**************************************************************/
/*                                                            */
/*  QosCharacteristics_choice_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosCharacteristics'
*/
typedef struct EXTERN QosCharacteristics_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} QosCharacteristics_choice_Extensions;

EXTERN int asn1PE_QosCharacteristics_choice_Extensions (OSCTXT* pctxt, QosCharacteristics_choice_Extensions* pvalue);

EXTERN int asn1PD_QosCharacteristics_choice_Extensions (OSCTXT* pctxt, QosCharacteristics_choice_Extensions* pvalue);

EXTERN void asn1Print_QosCharacteristics_choice_Extensions 
   (const char* name, const QosCharacteristics_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosCharacteristics_choice_Extensions (const char* name, 
   QosCharacteristics_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosCharacteristics_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const QosCharacteristics_choice_Extensions* pvalue);

EXTERN int asn1Init_QosCharacteristics_choice_Extensions (
   QosCharacteristics_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosCharacteristics                                        */
/*                                                            */
/**************************************************************/
/*
 Q
QosCharacteristics ::= CHOICE {
   nonDynamic5QI [0] NonDynamic5QIDescriptor,
   dynamic5QI [1] Dynamic5QIDescriptor,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({QosCharacteristics-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({QosCharacteristics-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({QosCharacteristics-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_QosCharacteristics_nonDynamic5QI 1
#define T_QosCharacteristics_dynamic5QI 2
#define T_QosCharacteristics_choice_Extensions 3

typedef struct EXTERN QosCharacteristics {
   OSINT32 t;
   union {
      /* t = 1 */
      NonDynamic5QIDescriptor *nonDynamic5QI;
      /* t = 2 */
      Dynamic5QIDescriptor *dynamic5QI;
      /* t = 3 */
      QosCharacteristics_choice_Extensions *choice_Extensions;
   } u;
} QosCharacteristics;

EXTERN int asn1PE_QosCharacteristics (OSCTXT* pctxt, QosCharacteristics* pvalue);

EXTERN int asn1PD_QosCharacteristics (OSCTXT* pctxt, QosCharacteristics* pvalue);

EXTERN void asn1Print_QosCharacteristics 
   (const char* name, const QosCharacteristics* pvalue);

EXTERN int asn1PrtToStr_QosCharacteristics (const char* name, 
   QosCharacteristics* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosCharacteristics (OSCTXT *pctxt, 
   const char* name, const QosCharacteristics* pvalue);

EXTERN int asn1Init_QosCharacteristics (QosCharacteristics* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowLevelQosParameters_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowLevelQosParameters'
*/
typedef struct EXTERN QosFlowLevelQosParameters_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowLevelQosParameters_iE_Extensions_element;

EXTERN int asn1PE_QosFlowLevelQosParameters_iE_Extensions_element (OSCTXT* pctxt, QosFlowLevelQosParameters_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowLevelQosParameters_iE_Extensions_element (OSCTXT* pctxt, QosFlowLevelQosParameters_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowLevelQosParameters_iE_Extensions_element 
   (const char* name, const QosFlowLevelQosParameters_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowLevelQosParameters_iE_Extensions_element (
   const char* name, QosFlowLevelQosParameters_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowLevelQosParameters_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowLevelQosParameters_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowLevelQosParameters_iE_Extensions_element (
   QosFlowLevelQosParameters_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowLevelQosParameters_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowLevelQosParameters'
*/
/* List of QosFlowLevelQosParameters_iE_Extensions_element */
typedef OSRTDList QosFlowLevelQosParameters_iE_Extensions;

EXTERN int asn1PE_QosFlowLevelQosParameters_iE_Extensions (OSCTXT* pctxt, QosFlowLevelQosParameters_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowLevelQosParameters_iE_Extensions (OSCTXT* pctxt, QosFlowLevelQosParameters_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowLevelQosParameters_iE_Extensions 
   (const char* name, const QosFlowLevelQosParameters_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowLevelQosParameters_iE_Extensions (const char* name, 
   QosFlowLevelQosParameters_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowLevelQosParameters_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowLevelQosParameters_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowLevelQosParameters_iE_Extensions_element* 
   asn1Get_QosFlowLevelQosParameters_iE_Extensions (ProtocolExtensionID id, 
   QosFlowLevelQosParameters_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowLevelQosParameters_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowLevelQosParameters_iE_Extensions* plist, 
   QosFlowLevelQosParameters_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowLevelQosParameters_iE_Extensions (
   QosFlowLevelQosParameters_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowLevelQosParameters                                 */
/*                                                            */
/**************************************************************/
/*
QosFlowLevelQosParameters ::= SEQUENCE {
   qosCharacteristics [0] EXPLICIT QosCharacteristics,
   allocationAndRetentionPriority [1] AllocationAndRetentionPriority,
   gBR-QosInformation [2] GBR-QosInformation OPTIONAL,
   reflectiveQosAttribute [3] ReflectiveQosAttribute OPTIONAL,
   additionalQosFlowInformation [4] AdditionalQosFlowInformation OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowLevelQosParameters-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowLevelQosParameters-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowLevelQosParameters-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowLevelQosParameters {
   struct {
      unsigned gBR_QosInformationPresent : 1;
      unsigned reflectiveQosAttributePresent : 1;
      unsigned additionalQosFlowInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosCharacteristics qosCharacteristics;
   AllocationAndRetentionPriority allocationAndRetentionPriority;
   GBR_QosInformation gBR_QosInformation;
   ReflectiveQosAttribute reflectiveQosAttribute;
   AdditionalQosFlowInformation additionalQosFlowInformation;
   QosFlowLevelQosParameters_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowLevelQosParameters;

EXTERN int asn1PE_QosFlowLevelQosParameters (OSCTXT* pctxt, QosFlowLevelQosParameters* pvalue);

EXTERN int asn1PD_QosFlowLevelQosParameters (OSCTXT* pctxt, QosFlowLevelQosParameters* pvalue);

EXTERN void asn1Print_QosFlowLevelQosParameters 
   (const char* name, const QosFlowLevelQosParameters* pvalue);

EXTERN int asn1PrtToStr_QosFlowLevelQosParameters (const char* name, 
   QosFlowLevelQosParameters* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowLevelQosParameters (OSCTXT *pctxt, 
   const char* name, const QosFlowLevelQosParameters* pvalue);

EXTERN int asn1Init_QosFlowLevelQosParameters (QosFlowLevelQosParameters* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyRequestItem_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowAddOrModifyRequestItem'
*/
typedef struct EXTERN QosFlowAddOrModifyRequestItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowAddOrModifyRequestItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowAddOrModifyRequestItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowAddOrModifyRequestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyRequestItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowAddOrModifyRequestItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyRequestItem_iE_Extensions_element 
   (const char* name, const QosFlowAddOrModifyRequestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyRequestItem_iE_Extensions_element (
   const char* name, 
   QosFlowAddOrModifyRequestItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyRequestItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyRequestItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowAddOrModifyRequestItem_iE_Extensions_element (
   QosFlowAddOrModifyRequestItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyRequestItem_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowAddOrModifyRequestItem'
*/
/* List of QosFlowAddOrModifyRequestItem_iE_Extensions_element */
typedef OSRTDList QosFlowAddOrModifyRequestItem_iE_Extensions;

EXTERN int asn1PE_QosFlowAddOrModifyRequestItem_iE_Extensions (OSCTXT* pctxt, QosFlowAddOrModifyRequestItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyRequestItem_iE_Extensions (OSCTXT* pctxt, QosFlowAddOrModifyRequestItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyRequestItem_iE_Extensions 
   (const char* name, const QosFlowAddOrModifyRequestItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyRequestItem_iE_Extensions (
   const char* name, QosFlowAddOrModifyRequestItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyRequestItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyRequestItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowAddOrModifyRequestItem_iE_Extensions_element* 
   asn1Get_QosFlowAddOrModifyRequestItem_iE_Extensions 
   (ProtocolExtensionID id, 
   QosFlowAddOrModifyRequestItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowAddOrModifyRequestItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowAddOrModifyRequestItem_iE_Extensions* plist, 
   QosFlowAddOrModifyRequestItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowAddOrModifyRequestItem_iE_Extensions (
   QosFlowAddOrModifyRequestItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyRequestItem                             */
/*                                                            */
/**************************************************************/
/*
QosFlowAddOrModifyRequestItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   qosFlowLevelQosParameters [1] QosFlowLevelQosParameters OPTIONAL,
   e-RAB-ID [2] E-RAB-ID OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowAddOrModifyRequestItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowAddOrModifyRequestItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowAddOrModifyRequestItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowAddOrModifyRequestItem {
   struct {
      unsigned qosFlowLevelQosParametersPresent : 1;
      unsigned e_RAB_IDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QosFlowLevelQosParameters qosFlowLevelQosParameters;
   E_RAB_ID e_RAB_ID;
   QosFlowAddOrModifyRequestItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowAddOrModifyRequestItem;

EXTERN int asn1PE_QosFlowAddOrModifyRequestItem (OSCTXT* pctxt, QosFlowAddOrModifyRequestItem* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyRequestItem (OSCTXT* pctxt, QosFlowAddOrModifyRequestItem* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyRequestItem 
   (const char* name, const QosFlowAddOrModifyRequestItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyRequestItem (const char* name, 
   QosFlowAddOrModifyRequestItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyRequestItem (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyRequestItem* pvalue);

EXTERN int asn1Init_QosFlowAddOrModifyRequestItem (
   QosFlowAddOrModifyRequestItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyRequestList                             */
/*                                                            */
/**************************************************************/
/*
QosFlowAddOrModifyRequestList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowAddOrModifyRequestItem
*/
/* List of QosFlowAddOrModifyRequestItem */
typedef OSRTDList QosFlowAddOrModifyRequestList;

EXTERN int asn1PE_QosFlowAddOrModifyRequestList (OSCTXT* pctxt, QosFlowAddOrModifyRequestList* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyRequestList (OSCTXT* pctxt, QosFlowAddOrModifyRequestList* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyRequestList 
   (const char* name, const QosFlowAddOrModifyRequestList* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyRequestList (const char* name, 
   QosFlowAddOrModifyRequestList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyRequestList (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyRequestList* pvalue);

EXTERN int asn1Init_QosFlowAddOrModifyRequestList (
   QosFlowAddOrModifyRequestList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyRequestTransfer_protocolIEs_elem  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyRequestTransfer'
*/
typedef struct EXTERN PDUSessionResourceModifyRequestTransfer_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyRequestTransferIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyRequestTransferIEs information objects
       */
      union {
         /**
          * id: id-PDUSessionAggregateMaximumBitRate
          * criticality: reject
          * presence: optional
          */
         PDUSessionAggregateMaximumBitRate *_PDUSessionResourceModifyRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate;
         /**
          * id: id-UL-NGU-UP-TNLModifyList
          * criticality: reject
          * presence: optional
          */
         UL_NGU_UP_TNLModifyList *_PDUSessionResourceModifyRequestTransferIEs_id_UL_NGU_UP_TNLModifyList;
         /**
          * id: id-NetworkInstance
          * criticality: reject
          * presence: optional
          */
         NetworkInstance _PDUSessionResourceModifyRequestTransferIEs_id_NetworkInstance;
         /**
          * id: id-QosFlowAddOrModifyRequestList
          * criticality: reject
          * presence: optional
          */
         QosFlowAddOrModifyRequestList *_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowAddOrModifyRequestList;
         /**
          * id: id-QosFlowToReleaseList
          * criticality: reject
          * presence: optional
          */
         QosFlowListWithCause *_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowToReleaseList;
         /**
          * id: id-AdditionalUL-NGU-UP-TNLInformation
          * criticality: reject
          * presence: optional
          */
         UPTransportLayerInformationList *_PDUSessionResourceModifyRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation;
         /**
          * id: id-CommonNetworkInstance
          * criticality: ignore
          * presence: optional
          */
         CommonNetworkInstance *_PDUSessionResourceModifyRequestTransferIEs_id_CommonNetworkInstance;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceModifyRequestTransfer_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceModifyRequestTransfer_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyRequestTransfer_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyRequestTransfer_protocolIEs_element 
   (const char* name, const PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyRequestTransfer_protocolIEs_element (
   const char* name, 
   PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyRequestTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequestTransfer_protocolIEs_element_PDUSessionResourceModifyRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pElem
   , PDUSessionAggregateMaximumBitRate *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequestTransfer_protocolIEs_element_PDUSessionResourceModifyRequestTransferIEs_id_UL_NGU_UP_TNLModifyList
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pElem
   , UL_NGU_UP_TNLModifyList *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequestTransfer_protocolIEs_element_PDUSessionResourceModifyRequestTransferIEs_id_NetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pElem
   , NetworkInstance value);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequestTransfer_protocolIEs_element_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowAddOrModifyRequestList
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pElem
   , QosFlowAddOrModifyRequestList *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequestTransfer_protocolIEs_element_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowToReleaseList
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pElem
   , QosFlowListWithCause *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequestTransfer_protocolIEs_element_PDUSessionResourceModifyRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pElem
   , UPTransportLayerInformationList *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyRequestTransfer_protocolIEs_element_PDUSessionResourceModifyRequestTransferIEs_id_CommonNetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pElem
   , CommonNetworkInstance *pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyRequestTransfer_protocolIEs_element (
   PDUSessionResourceModifyRequestTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyRequestTransfer_protocolIEs       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyRequestTransfer'
*/
/* List of PDUSessionResourceModifyRequestTransfer_protocolIEs_element */
typedef OSRTDList PDUSessionResourceModifyRequestTransfer_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceModifyRequestTransfer_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyRequestTransfer_protocolIEs (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyRequestTransfer_protocolIEs 
   (const char* name, const PDUSessionResourceModifyRequestTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyRequestTransfer_protocolIEs (
   const char* name, 
   PDUSessionResourceModifyRequestTransfer_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyRequestTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyRequestTransfer_protocolIEs* pvalue);

/* Append IE with value type PDUSessionAggregateMaximumBitRate to list */
struct PDUSessionAggregateMaximumBitRate ;
EXTERN int asn1Append_PDUSessionResourceModifyRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   struct PDUSessionAggregateMaximumBitRate *pvalue);

/* Append IE with value type UL_NGU_UP_TNLModifyList to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestTransferIEs_id_UL_NGU_UP_TNLModifyList
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   UL_NGU_UP_TNLModifyList *pvalue);

/* Append IE with value type NetworkInstance to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestTransferIEs_id_NetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   NetworkInstance value);

/* Append IE with value type QosFlowAddOrModifyRequestList to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowAddOrModifyRequestList
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   QosFlowAddOrModifyRequestList *pvalue);

/* Append IE with value type QosFlowListWithCause to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestTransferIEs_id_QosFlowToReleaseList
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   QosFlowListWithCause *pvalue);

/* Append IE with value type UPTransportLayerInformationList to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   UPTransportLayerInformationList *pvalue);

/* Append IE with value type CommonNetworkInstance to list */
EXTERN int asn1Append_PDUSessionResourceModifyRequestTransferIEs_id_CommonNetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   CommonNetworkInstance *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyRequestTransfer_protocolIEs_element* 
   asn1Get_PDUSessionResourceModifyRequestTransfer_protocolIEs 
   (ProtocolIE_ID id, 
   PDUSessionResourceModifyRequestTransfer_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyRequestTransfer_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceModifyRequestTransfer_protocolIEs* plist, 
   PDUSessionResourceModifyRequestTransfer_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyRequestTransfer_protocolIEs (
   PDUSessionResourceModifyRequestTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyRequestTransfer                   */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyRequestTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceModifyRequestTransferIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceModifyRequestTransferIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceModifyRequestTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyRequestTransfer {
   PDUSessionResourceModifyRequestTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceModifyRequestTransfer;

EXTERN int asn1PE_PDUSessionResourceModifyRequestTransfer (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyRequestTransfer (OSCTXT* pctxt, PDUSessionResourceModifyRequestTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyRequestTransfer 
   (const char* name, const PDUSessionResourceModifyRequestTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyRequestTransfer (const char* name, 
   PDUSessionResourceModifyRequestTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyRequestTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyRequestTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyRequestTransfer (
   PDUSessionResourceModifyRequestTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyResponseItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowAddOrModifyResponseItem'
*/
typedef struct EXTERN QosFlowAddOrModifyResponseItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowAddOrModifyResponseItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowAddOrModifyResponseItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowAddOrModifyResponseItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyResponseItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowAddOrModifyResponseItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyResponseItem_iE_Extensions_element 
   (const char* name, const QosFlowAddOrModifyResponseItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyResponseItem_iE_Extensions_element (
   const char* name, 
   QosFlowAddOrModifyResponseItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyResponseItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyResponseItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowAddOrModifyResponseItem_iE_Extensions_element (
   QosFlowAddOrModifyResponseItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyResponseItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowAddOrModifyResponseItem'
*/
/* List of QosFlowAddOrModifyResponseItem_iE_Extensions_element */
typedef OSRTDList QosFlowAddOrModifyResponseItem_iE_Extensions;

EXTERN int asn1PE_QosFlowAddOrModifyResponseItem_iE_Extensions (OSCTXT* pctxt, QosFlowAddOrModifyResponseItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyResponseItem_iE_Extensions (OSCTXT* pctxt, QosFlowAddOrModifyResponseItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyResponseItem_iE_Extensions 
   (const char* name, const QosFlowAddOrModifyResponseItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyResponseItem_iE_Extensions (
   const char* name, QosFlowAddOrModifyResponseItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyResponseItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyResponseItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowAddOrModifyResponseItem_iE_Extensions_element* 
   asn1Get_QosFlowAddOrModifyResponseItem_iE_Extensions 
   (ProtocolExtensionID id, 
   QosFlowAddOrModifyResponseItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowAddOrModifyResponseItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowAddOrModifyResponseItem_iE_Extensions* plist, 
   QosFlowAddOrModifyResponseItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowAddOrModifyResponseItem_iE_Extensions (
   QosFlowAddOrModifyResponseItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyResponseItem                            */
/*                                                            */
/**************************************************************/
/*
QosFlowAddOrModifyResponseItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowAddOrModifyResponseItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowAddOrModifyResponseItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowAddOrModifyResponseItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowAddOrModifyResponseItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QosFlowAddOrModifyResponseItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowAddOrModifyResponseItem;

EXTERN int asn1PE_QosFlowAddOrModifyResponseItem (OSCTXT* pctxt, QosFlowAddOrModifyResponseItem* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyResponseItem (OSCTXT* pctxt, QosFlowAddOrModifyResponseItem* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyResponseItem 
   (const char* name, const QosFlowAddOrModifyResponseItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyResponseItem (const char* name, 
   QosFlowAddOrModifyResponseItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyResponseItem (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyResponseItem* pvalue);

EXTERN int asn1Init_QosFlowAddOrModifyResponseItem (
   QosFlowAddOrModifyResponseItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowAddOrModifyResponseList                            */
/*                                                            */
/**************************************************************/
/*
QosFlowAddOrModifyResponseList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowAddOrModifyResponseItem
*/
/* List of QosFlowAddOrModifyResponseItem */
typedef OSRTDList QosFlowAddOrModifyResponseList;

EXTERN int asn1PE_QosFlowAddOrModifyResponseList (OSCTXT* pctxt, QosFlowAddOrModifyResponseList* pvalue);

EXTERN int asn1PD_QosFlowAddOrModifyResponseList (OSCTXT* pctxt, QosFlowAddOrModifyResponseList* pvalue);

EXTERN void asn1Print_QosFlowAddOrModifyResponseList 
   (const char* name, const QosFlowAddOrModifyResponseList* pvalue);

EXTERN int asn1PrtToStr_QosFlowAddOrModifyResponseList (const char* name, 
   QosFlowAddOrModifyResponseList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowAddOrModifyResponseList (OSCTXT *pctxt, 
   const char* name, const QosFlowAddOrModifyResponseList* pvalue);

EXTERN int asn1Init_QosFlowAddOrModifyResponseList (
   QosFlowAddOrModifyResponseList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyResponseTransfer_iE_Extensions_e  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyResponseTransfer'
*/
typedef struct EXTERN PDUSessionResourceModifyResponseTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyResponseTransfer_ExtIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyResponseTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-AdditionalNGU-UP-TNLInformation
          * criticality: ignore
          * presence: optional
          */
         UPTransportLayerInformationPairList *_PDUSessionResourceModifyResponseTransfer_ExtIEs_id_AdditionalNGU_UP_TNLInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PDUSessionResourceModifyResponseTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyResponseTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyResponseTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyResponseTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyResponseTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyResponseTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyResponseTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyResponseTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyResponseTransfer_iE_Extensions_element (
   PDUSessionResourceModifyResponseTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyResponseTransfer_iE_Extensions    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyResponseTransfer'
*/
/* List of PDUSessionResourceModifyResponseTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyResponseTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyResponseTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyResponseTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyResponseTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyResponseTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyResponseTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyResponseTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyResponseTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceModifyResponseTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyResponseTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyResponseTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyResponseTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyResponseTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyResponseTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyResponseTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyResponseTransfer_iE_Extensions* plist, 
   PDUSessionResourceModifyResponseTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyResponseTransfer_iE_Extensions (
   PDUSessionResourceModifyResponseTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyResponseTransfer                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyResponseTransfer ::= SEQUENCE {
   dL-NGU-UP-TNLInformation [0] EXPLICIT UPTransportLayerInformation OPTIONAL,
   uL-NGU-UP-TNLInformation [1] EXPLICIT UPTransportLayerInformation OPTIONAL,
   qosFlowAddOrModifyResponseList [2] QosFlowAddOrModifyResponseList OPTIONAL,
   additionalDLQosFlowPerTNLInformation [3] QosFlowPerTNLInformationList OPTIONAL,
   qosFlowFailedToAddOrModifyList [4] QosFlowListWithCause OPTIONAL,
   iE-Extensions [5] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyResponseTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyResponseTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyResponseTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyResponseTransfer {
   struct {
      unsigned dL_NGU_UP_TNLInformationPresent : 1;
      unsigned uL_NGU_UP_TNLInformationPresent : 1;
      unsigned qosFlowAddOrModifyResponseListPresent : 1;
      unsigned additionalDLQosFlowPerTNLInformationPresent : 1;
      unsigned qosFlowFailedToAddOrModifyListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UPTransportLayerInformation dL_NGU_UP_TNLInformation;
   UPTransportLayerInformation uL_NGU_UP_TNLInformation;
   QosFlowAddOrModifyResponseList qosFlowAddOrModifyResponseList;
   QosFlowPerTNLInformationList additionalDLQosFlowPerTNLInformation;
   QosFlowListWithCause qosFlowFailedToAddOrModifyList;
   PDUSessionResourceModifyResponseTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyResponseTransfer;

EXTERN int asn1PE_PDUSessionResourceModifyResponseTransfer (OSCTXT* pctxt, PDUSessionResourceModifyResponseTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyResponseTransfer (OSCTXT* pctxt, PDUSessionResourceModifyResponseTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyResponseTransfer 
   (const char* name, const PDUSessionResourceModifyResponseTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyResponseTransfer (const char* name, 
   PDUSessionResourceModifyResponseTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyResponseTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyResponseTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyResponseTransfer (
   PDUSessionResourceModifyResponseTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  VolumeTimedReport_Item_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'VolumeTimedReport-Item'
*/
typedef struct EXTERN VolumeTimedReport_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} VolumeTimedReport_Item_iE_Extensions_element;

EXTERN int asn1PE_VolumeTimedReport_Item_iE_Extensions_element (OSCTXT* pctxt, VolumeTimedReport_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_VolumeTimedReport_Item_iE_Extensions_element (OSCTXT* pctxt, VolumeTimedReport_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_VolumeTimedReport_Item_iE_Extensions_element 
   (const char* name, const VolumeTimedReport_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_VolumeTimedReport_Item_iE_Extensions_element (
   const char* name, VolumeTimedReport_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_VolumeTimedReport_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const VolumeTimedReport_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_VolumeTimedReport_Item_iE_Extensions_element (
   VolumeTimedReport_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  VolumeTimedReport_Item_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'VolumeTimedReport-Item'
*/
/* List of VolumeTimedReport_Item_iE_Extensions_element */
typedef OSRTDList VolumeTimedReport_Item_iE_Extensions;

EXTERN int asn1PE_VolumeTimedReport_Item_iE_Extensions (OSCTXT* pctxt, VolumeTimedReport_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_VolumeTimedReport_Item_iE_Extensions (OSCTXT* pctxt, VolumeTimedReport_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_VolumeTimedReport_Item_iE_Extensions 
   (const char* name, const VolumeTimedReport_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_VolumeTimedReport_Item_iE_Extensions (const char* name, 
   VolumeTimedReport_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_VolumeTimedReport_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const VolumeTimedReport_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct VolumeTimedReport_Item_iE_Extensions_element* 
   asn1Get_VolumeTimedReport_Item_iE_Extensions (ProtocolExtensionID id, 
   VolumeTimedReport_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_VolumeTimedReport_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   VolumeTimedReport_Item_iE_Extensions* plist, 
   VolumeTimedReport_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_VolumeTimedReport_Item_iE_Extensions (
   VolumeTimedReport_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  VolumeTimedReport_Item                                    */
/*                                                            */
/**************************************************************/
/*
VolumeTimedReport-Item ::= SEQUENCE {
   startTimeStamp [0] OCTET STRING (SIZE (4)),
   endTimeStamp [1] OCTET STRING (SIZE (4)),
   usageCountUL [2] INTEGER (0..18446744073709551615),
   usageCountDL [3] INTEGER (0..18446744073709551615),
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({VolumeTimedReport-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({VolumeTimedReport-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({VolumeTimedReport-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN VolumeTimedReport_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   OSOCTET startTimeStamp[4];
   OSOCTET endTimeStamp[4];
   OSUINT64 usageCountUL;
   OSUINT64 usageCountDL;
   VolumeTimedReport_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} VolumeTimedReport_Item;

EXTERN int asn1PE_VolumeTimedReport_Item (OSCTXT* pctxt, VolumeTimedReport_Item* pvalue);

EXTERN int asn1PD_VolumeTimedReport_Item (OSCTXT* pctxt, VolumeTimedReport_Item* pvalue);

EXTERN void asn1Print_VolumeTimedReport_Item 
   (const char* name, const VolumeTimedReport_Item* pvalue);

EXTERN int asn1PrtToStr_VolumeTimedReport_Item (const char* name, 
   VolumeTimedReport_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_VolumeTimedReport_Item (OSCTXT *pctxt, 
   const char* name, const VolumeTimedReport_Item* pvalue);

EXTERN int asn1Init_VolumeTimedReport_Item (VolumeTimedReport_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  VolumeTimedReportList                                     */
/*                                                            */
/**************************************************************/
/*
 V
VolumeTimedReportList ::= SEQUENCE (SIZE (1..maxnoofTimePeriods)) OF VolumeTimedReport-Item
*/
/* List of VolumeTimedReport_Item */
typedef OSRTDList VolumeTimedReportList;

EXTERN int asn1PE_VolumeTimedReportList (OSCTXT* pctxt, VolumeTimedReportList* pvalue);

EXTERN int asn1PD_VolumeTimedReportList (OSCTXT* pctxt, VolumeTimedReportList* pvalue);

EXTERN void asn1Print_VolumeTimedReportList 
   (const char* name, const VolumeTimedReportList* pvalue);

EXTERN int asn1PrtToStr_VolumeTimedReportList (const char* name, 
   VolumeTimedReportList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_VolumeTimedReportList (OSCTXT *pctxt, 
   const char* name, const VolumeTimedReportList* pvalue);

EXTERN int asn1Init_VolumeTimedReportList (VolumeTimedReportList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionUsageReport_iE_Extensions_element               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionUsageReport'
*/
typedef struct EXTERN PDUSessionUsageReport_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionUsageReport_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionUsageReport_iE_Extensions_element (OSCTXT* pctxt, PDUSessionUsageReport_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionUsageReport_iE_Extensions_element (OSCTXT* pctxt, PDUSessionUsageReport_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionUsageReport_iE_Extensions_element 
   (const char* name, const PDUSessionUsageReport_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionUsageReport_iE_Extensions_element (
   const char* name, PDUSessionUsageReport_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionUsageReport_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionUsageReport_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionUsageReport_iE_Extensions_element (
   PDUSessionUsageReport_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionUsageReport_iE_Extensions                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionUsageReport'
*/
/* List of PDUSessionUsageReport_iE_Extensions_element */
typedef OSRTDList PDUSessionUsageReport_iE_Extensions;

EXTERN int asn1PE_PDUSessionUsageReport_iE_Extensions (OSCTXT* pctxt, PDUSessionUsageReport_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionUsageReport_iE_Extensions (OSCTXT* pctxt, PDUSessionUsageReport_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionUsageReport_iE_Extensions 
   (const char* name, const PDUSessionUsageReport_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionUsageReport_iE_Extensions (const char* name, 
   PDUSessionUsageReport_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionUsageReport_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionUsageReport_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionUsageReport_iE_Extensions_element* 
   asn1Get_PDUSessionUsageReport_iE_Extensions (ProtocolExtensionID id, 
   PDUSessionUsageReport_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionUsageReport_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionUsageReport_iE_Extensions* plist, 
   PDUSessionUsageReport_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionUsageReport_iE_Extensions (
   PDUSessionUsageReport_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionUsageReport                                     */
/*                                                            */
/**************************************************************/
/*
PDUSessionUsageReport ::= SEQUENCE {
   rATType [0] ENUMERATED { nr(0), eutra(1), ... },
   pDUSessionTimedReportList [1] VolumeTimedReportList,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionUsageReport-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionUsageReport-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionUsageReport-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionUsageReport {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionUsageReport_rATType rATType;
   VolumeTimedReportList pDUSessionTimedReportList;
   PDUSessionUsageReport_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionUsageReport;

EXTERN int asn1PE_PDUSessionUsageReport (OSCTXT* pctxt, PDUSessionUsageReport* pvalue);

EXTERN int asn1PD_PDUSessionUsageReport (OSCTXT* pctxt, PDUSessionUsageReport* pvalue);

EXTERN void asn1Print_PDUSessionUsageReport 
   (const char* name, const PDUSessionUsageReport* pvalue);

EXTERN int asn1PrtToStr_PDUSessionUsageReport (const char* name, 
   PDUSessionUsageReport* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionUsageReport (OSCTXT *pctxt, 
   const char* name, const PDUSessionUsageReport* pvalue);

EXTERN int asn1Init_PDUSessionUsageReport (PDUSessionUsageReport* pvalue);

/**************************************************************/
/*                                                            */
/*  QoSFlowsUsageReport_Item_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QoSFlowsUsageReport-Item'
*/
typedef struct EXTERN QoSFlowsUsageReport_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QoSFlowsUsageReport_Item_iE_Extensions_element;

EXTERN int asn1PE_QoSFlowsUsageReport_Item_iE_Extensions_element (OSCTXT* pctxt, QoSFlowsUsageReport_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QoSFlowsUsageReport_Item_iE_Extensions_element (OSCTXT* pctxt, QoSFlowsUsageReport_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QoSFlowsUsageReport_Item_iE_Extensions_element 
   (const char* name, const QoSFlowsUsageReport_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QoSFlowsUsageReport_Item_iE_Extensions_element (
   const char* name, QoSFlowsUsageReport_Item_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QoSFlowsUsageReport_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QoSFlowsUsageReport_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QoSFlowsUsageReport_Item_iE_Extensions_element (
   QoSFlowsUsageReport_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QoSFlowsUsageReport_Item_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QoSFlowsUsageReport-Item'
*/
/* List of QoSFlowsUsageReport_Item_iE_Extensions_element */
typedef OSRTDList QoSFlowsUsageReport_Item_iE_Extensions;

EXTERN int asn1PE_QoSFlowsUsageReport_Item_iE_Extensions (OSCTXT* pctxt, QoSFlowsUsageReport_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_QoSFlowsUsageReport_Item_iE_Extensions (OSCTXT* pctxt, QoSFlowsUsageReport_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_QoSFlowsUsageReport_Item_iE_Extensions 
   (const char* name, const QoSFlowsUsageReport_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QoSFlowsUsageReport_Item_iE_Extensions (const char* name, 
   QoSFlowsUsageReport_Item_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QoSFlowsUsageReport_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QoSFlowsUsageReport_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QoSFlowsUsageReport_Item_iE_Extensions_element* 
   asn1Get_QoSFlowsUsageReport_Item_iE_Extensions (ProtocolExtensionID id, 
   QoSFlowsUsageReport_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QoSFlowsUsageReport_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QoSFlowsUsageReport_Item_iE_Extensions* plist, 
   QoSFlowsUsageReport_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_QoSFlowsUsageReport_Item_iE_Extensions (
   QoSFlowsUsageReport_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QoSFlowsUsageReport_Item                                  */
/*                                                            */
/**************************************************************/
/*
QoSFlowsUsageReport-Item ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   rATType [1] ENUMERATED { nr(0), eutra(1), ... },
   qoSFlowsTimedReportList [2] VolumeTimedReportList,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QoSFlowsUsageReport-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QoSFlowsUsageReport-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QoSFlowsUsageReport-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QoSFlowsUsageReport_Item {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QoSFlowsUsageReport_Item_rATType rATType;
   VolumeTimedReportList qoSFlowsTimedReportList;
   QoSFlowsUsageReport_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QoSFlowsUsageReport_Item;

EXTERN int asn1PE_QoSFlowsUsageReport_Item (OSCTXT* pctxt, QoSFlowsUsageReport_Item* pvalue);

EXTERN int asn1PD_QoSFlowsUsageReport_Item (OSCTXT* pctxt, QoSFlowsUsageReport_Item* pvalue);

EXTERN void asn1Print_QoSFlowsUsageReport_Item 
   (const char* name, const QoSFlowsUsageReport_Item* pvalue);

EXTERN int asn1PrtToStr_QoSFlowsUsageReport_Item (const char* name, 
   QoSFlowsUsageReport_Item* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QoSFlowsUsageReport_Item (OSCTXT *pctxt, 
   const char* name, const QoSFlowsUsageReport_Item* pvalue);

EXTERN int asn1Init_QoSFlowsUsageReport_Item (QoSFlowsUsageReport_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  QoSFlowsUsageReportList                                   */
/*                                                            */
/**************************************************************/
/*
QoSFlowsUsageReportList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QoSFlowsUsageReport-Item
*/
/* List of QoSFlowsUsageReport_Item */
typedef OSRTDList QoSFlowsUsageReportList;

EXTERN int asn1PE_QoSFlowsUsageReportList (OSCTXT* pctxt, QoSFlowsUsageReportList* pvalue);

EXTERN int asn1PD_QoSFlowsUsageReportList (OSCTXT* pctxt, QoSFlowsUsageReportList* pvalue);

EXTERN void asn1Print_QoSFlowsUsageReportList 
   (const char* name, const QoSFlowsUsageReportList* pvalue);

EXTERN int asn1PrtToStr_QoSFlowsUsageReportList (const char* name, 
   QoSFlowsUsageReportList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QoSFlowsUsageReportList (OSCTXT *pctxt, 
   const char* name, const QoSFlowsUsageReportList* pvalue);

EXTERN int asn1Init_QoSFlowsUsageReportList (QoSFlowsUsageReportList* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATUsageInformation_iE_Extension_element         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATUsageInformation'
*/
typedef struct EXTERN SecondaryRATUsageInformation_iE_Extension_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SecondaryRATUsageInformation_iE_Extension_element;

EXTERN int asn1PE_SecondaryRATUsageInformation_iE_Extension_element (OSCTXT* pctxt, SecondaryRATUsageInformation_iE_Extension_element* pvalue);

EXTERN int asn1PD_SecondaryRATUsageInformation_iE_Extension_element (OSCTXT* pctxt, SecondaryRATUsageInformation_iE_Extension_element* pvalue);

EXTERN void asn1Print_SecondaryRATUsageInformation_iE_Extension_element 
   (const char* name, const SecondaryRATUsageInformation_iE_Extension_element* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATUsageInformation_iE_Extension_element (
   const char* name, 
   SecondaryRATUsageInformation_iE_Extension_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATUsageInformation_iE_Extension_element (OSCTXT *pctxt, 
   const char* name, const SecondaryRATUsageInformation_iE_Extension_element* pvalue);

EXTERN int asn1Init_SecondaryRATUsageInformation_iE_Extension_element (
   SecondaryRATUsageInformation_iE_Extension_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATUsageInformation_iE_Extension                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATUsageInformation'
*/
/* List of SecondaryRATUsageInformation_iE_Extension_element */
typedef OSRTDList SecondaryRATUsageInformation_iE_Extension;

EXTERN int asn1PE_SecondaryRATUsageInformation_iE_Extension (OSCTXT* pctxt, SecondaryRATUsageInformation_iE_Extension* pvalue);

EXTERN int asn1PD_SecondaryRATUsageInformation_iE_Extension (OSCTXT* pctxt, SecondaryRATUsageInformation_iE_Extension* pvalue);

EXTERN void asn1Print_SecondaryRATUsageInformation_iE_Extension 
   (const char* name, const SecondaryRATUsageInformation_iE_Extension* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATUsageInformation_iE_Extension (const char* name, 
   SecondaryRATUsageInformation_iE_Extension* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATUsageInformation_iE_Extension (OSCTXT *pctxt, 
   const char* name, const SecondaryRATUsageInformation_iE_Extension* pvalue);

/* Get IE using id key value */
EXTERN struct SecondaryRATUsageInformation_iE_Extension_element* 
   asn1Get_SecondaryRATUsageInformation_iE_Extension (ProtocolExtensionID id, 
   SecondaryRATUsageInformation_iE_Extension* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SecondaryRATUsageInformation_iE_Extension 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SecondaryRATUsageInformation_iE_Extension* plist, 
   SecondaryRATUsageInformation_iE_Extension* pmatches);

EXTERN int asn1Init_SecondaryRATUsageInformation_iE_Extension (
   SecondaryRATUsageInformation_iE_Extension* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATUsageInformation                              */
/*                                                            */
/**************************************************************/
/*
SecondaryRATUsageInformation ::= SEQUENCE {
   pDUSessionUsageReport [0] PDUSessionUsageReport OPTIONAL,
   qosFlowsUsageReportList [1] QoSFlowsUsageReportList OPTIONAL,
   iE-Extension [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SecondaryRATUsageInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SecondaryRATUsageInformation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SecondaryRATUsageInformation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SecondaryRATUsageInformation {
   struct {
      unsigned pDUSessionUsageReportPresent : 1;
      unsigned qosFlowsUsageReportListPresent : 1;
      unsigned iE_ExtensionPresent : 1;
   } m;
   PDUSessionUsageReport pDUSessionUsageReport;
   QoSFlowsUsageReportList qosFlowsUsageReportList;
   SecondaryRATUsageInformation_iE_Extension iE_Extension;
   OSRTDList extElem1;
} SecondaryRATUsageInformation;

EXTERN int asn1PE_SecondaryRATUsageInformation (OSCTXT* pctxt, SecondaryRATUsageInformation* pvalue);

EXTERN int asn1PD_SecondaryRATUsageInformation (OSCTXT* pctxt, SecondaryRATUsageInformation* pvalue);

EXTERN void asn1Print_SecondaryRATUsageInformation 
   (const char* name, const SecondaryRATUsageInformation* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATUsageInformation (const char* name, 
   SecondaryRATUsageInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATUsageInformation (OSCTXT *pctxt, 
   const char* name, const SecondaryRATUsageInformation* pvalue);

EXTERN int asn1Init_SecondaryRATUsageInformation (
   SecondaryRATUsageInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndicationTransfer_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyIndicationTransfer'
*/
typedef struct EXTERN PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyIndicationTransfer_ExtIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyIndicationTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-SecondaryRATUsageInformation
          * criticality: ignore
          * presence: optional
          */
         SecondaryRATUsageInformation *_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecondaryRATUsageInformation;
         /**
          * id: id-SecurityResult
          * criticality: ignore
          * presence: optional
          */
         SecurityResult *_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecurityResult;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecondaryRATUsageInformation
   (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pElem
   , SecondaryRATUsageInformation *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecurityResult
   (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pElem
   , SecurityResult *pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element (
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndicationTransfer_iE_Extensions  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyIndicationTransfer'
*/
/* List of PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyIndicationTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyIndicationTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndicationTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndicationTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyIndicationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndicationTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndicationTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndicationTransfer_iE_Extensions* pvalue);

/* Append IE with value type SecondaryRATUsageInformation to list */
struct SecondaryRATUsageInformation ;
EXTERN int asn1Append_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecondaryRATUsageInformation
   (OSCTXT* pctxt, 
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions* plist, struct 
   SecondaryRATUsageInformation *pvalue);

/* Append IE with value type SecurityResult to list */
struct SecurityResult ;
EXTERN int asn1Append_PDUSessionResourceModifyIndicationTransfer_ExtIEs_id_SecurityResult
   (OSCTXT* pctxt, 
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions* plist, struct 
   SecurityResult *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyIndicationTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyIndicationTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyIndicationTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions* plist, 
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyIndicationTransfer_iE_Extensions (
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyIndicationTransfer                */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyIndicationTransfer ::= SEQUENCE {
   dLQosFlowPerTNLInformation [0] QosFlowPerTNLInformation,
   additionalDLQosFlowPerTNLInformation [1] QosFlowPerTNLInformationList OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyIndicationTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyIndicationTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyIndicationTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyIndicationTransfer {
   struct {
      unsigned additionalDLQosFlowPerTNLInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowPerTNLInformation dLQosFlowPerTNLInformation;
   QosFlowPerTNLInformationList additionalDLQosFlowPerTNLInformation;
   PDUSessionResourceModifyIndicationTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyIndicationTransfer;

EXTERN int asn1PE_PDUSessionResourceModifyIndicationTransfer (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyIndicationTransfer (OSCTXT* pctxt, PDUSessionResourceModifyIndicationTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyIndicationTransfer 
   (const char* name, const PDUSessionResourceModifyIndicationTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyIndicationTransfer (const char* name, 
   PDUSessionResourceModifyIndicationTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyIndicationTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyIndicationTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyIndicationTransfer (
   PDUSessionResourceModifyIndicationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModCfm_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModCfm'
*/
typedef struct EXTERN PDUSessionResourceModifyItemModCfm_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceModifyItemModCfm_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyItemModCfm_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModCfm_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModCfm_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModCfm_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyItemModCfm_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModCfm_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModCfm_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModCfm_iE_Extensions_element (
   PDUSessionResourceModifyItemModCfm_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModCfm_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModCfm'
*/
/* List of PDUSessionResourceModifyItemModCfm_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyItemModCfm_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyItemModCfm_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModCfm_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModCfm_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModCfm_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModCfm_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyItemModCfm_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModCfm_iE_Extensions (
   const char* name, PDUSessionResourceModifyItemModCfm_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModCfm_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModCfm_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyItemModCfm_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyItemModCfm_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModCfm_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyItemModCfm_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModCfm_iE_Extensions* plist, 
   PDUSessionResourceModifyItemModCfm_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyItemModCfm_iE_Extensions (
   PDUSessionResourceModifyItemModCfm_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModCfm                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyItemModCfm ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceModifyConfirmTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyItemModCfm-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyItemModCfm-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyItemModCfm-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyItemModCfm {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceModifyConfirmTransfer;
   PDUSessionResourceModifyItemModCfm_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyItemModCfm;

EXTERN int asn1PE_PDUSessionResourceModifyItemModCfm (OSCTXT* pctxt, PDUSessionResourceModifyItemModCfm* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModCfm (OSCTXT* pctxt, PDUSessionResourceModifyItemModCfm* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModCfm 
   (const char* name, const PDUSessionResourceModifyItemModCfm* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModCfm (const char* name, 
   PDUSessionResourceModifyItemModCfm* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModCfm (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModCfm* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModCfm (
   PDUSessionResourceModifyItemModCfm* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyListModCfm                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyListModCfm ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceModifyItemModCfm
*/
/* List of PDUSessionResourceModifyItemModCfm */
typedef OSRTDList PDUSessionResourceModifyListModCfm;

EXTERN int asn1PE_PDUSessionResourceModifyListModCfm (OSCTXT* pctxt, PDUSessionResourceModifyListModCfm* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyListModCfm (OSCTXT* pctxt, PDUSessionResourceModifyListModCfm* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyListModCfm 
   (const char* name, const PDUSessionResourceModifyListModCfm* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyListModCfm (const char* name, 
   PDUSessionResourceModifyListModCfm* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyListModCfm (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyListModCfm* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyListModCfm (
   PDUSessionResourceModifyListModCfm* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModInd_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModInd'
*/
typedef struct EXTERN PDUSessionResourceModifyItemModInd_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceModifyItemModInd_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyItemModInd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModInd_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModInd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModInd_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModInd_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyItemModInd_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModInd_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyItemModInd_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModInd_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModInd_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModInd_iE_Extensions_element (
   PDUSessionResourceModifyItemModInd_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModInd_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModInd'
*/
/* List of PDUSessionResourceModifyItemModInd_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyItemModInd_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyItemModInd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModInd_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModInd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModInd_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModInd_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyItemModInd_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModInd_iE_Extensions (
   const char* name, PDUSessionResourceModifyItemModInd_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModInd_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModInd_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyItemModInd_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyItemModInd_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModInd_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyItemModInd_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModInd_iE_Extensions* plist, 
   PDUSessionResourceModifyItemModInd_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyItemModInd_iE_Extensions (
   PDUSessionResourceModifyItemModInd_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModInd                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyItemModInd ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceModifyIndicationTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyItemModInd-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyItemModInd-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyItemModInd-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyItemModInd {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceModifyIndicationTransfer;
   PDUSessionResourceModifyItemModInd_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyItemModInd;

EXTERN int asn1PE_PDUSessionResourceModifyItemModInd (OSCTXT* pctxt, PDUSessionResourceModifyItemModInd* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModInd (OSCTXT* pctxt, PDUSessionResourceModifyItemModInd* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModInd 
   (const char* name, const PDUSessionResourceModifyItemModInd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModInd (const char* name, 
   PDUSessionResourceModifyItemModInd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModInd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModInd* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModInd (
   PDUSessionResourceModifyItemModInd* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyListModInd                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyListModInd ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceModifyItemModInd
*/
/* List of PDUSessionResourceModifyItemModInd */
typedef OSRTDList PDUSessionResourceModifyListModInd;

EXTERN int asn1PE_PDUSessionResourceModifyListModInd (OSCTXT* pctxt, PDUSessionResourceModifyListModInd* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyListModInd (OSCTXT* pctxt, PDUSessionResourceModifyListModInd* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyListModInd 
   (const char* name, const PDUSessionResourceModifyListModInd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyListModInd (const char* name, 
   PDUSessionResourceModifyListModInd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyListModInd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyListModInd* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyListModInd (
   PDUSessionResourceModifyListModInd* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModReq_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModReq'
*/
typedef struct EXTERN PDUSessionResourceModifyItemModReq_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceModifyItemModReq_ExtIEs_TVALUE t;

      /**
       * PDUSessionResourceModifyItemModReq-ExtIEs information objects
       */
      union {
         /**
          * id: id-S-NSSAI
          * criticality: reject
          * presence: optional
          */
         S_NSSAI *_PDUSessionResourceModifyItemModReq_ExtIEs_id_S_NSSAI;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PDUSessionResourceModifyItemModReq_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyItemModReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModReq_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyItemModReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModReq_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyItemModReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModReq_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModReq_iE_Extensions_element (
   PDUSessionResourceModifyItemModReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModReq_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModReq'
*/
/* List of PDUSessionResourceModifyItemModReq_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyItemModReq_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyItemModReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModReq_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModReq_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModReq_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyItemModReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModReq_iE_Extensions (
   const char* name, PDUSessionResourceModifyItemModReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyItemModReq_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyItemModReq_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModReq_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyItemModReq_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModReq_iE_Extensions* plist, 
   PDUSessionResourceModifyItemModReq_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyItemModReq_iE_Extensions (
   PDUSessionResourceModifyItemModReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModReq                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyItemModReq ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   nAS-PDU [1] NAS-PDU OPTIONAL,
   pDUSessionResourceModifyRequestTransfer [2] OCTET STRING,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyItemModReq-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyItemModReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyItemModReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyItemModReq {
   struct {
      unsigned nAS_PDUPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   NAS_PDU nAS_PDU;
   OSDynOctStr pDUSessionResourceModifyRequestTransfer;
   PDUSessionResourceModifyItemModReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyItemModReq;

EXTERN int asn1PE_PDUSessionResourceModifyItemModReq (OSCTXT* pctxt, PDUSessionResourceModifyItemModReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModReq (OSCTXT* pctxt, PDUSessionResourceModifyItemModReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModReq 
   (const char* name, const PDUSessionResourceModifyItemModReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModReq (const char* name, 
   PDUSessionResourceModifyItemModReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModReq (
   PDUSessionResourceModifyItemModReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyListModReq                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyListModReq ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceModifyItemModReq
*/
/* List of PDUSessionResourceModifyItemModReq */
typedef OSRTDList PDUSessionResourceModifyListModReq;

EXTERN int asn1PE_PDUSessionResourceModifyListModReq (OSCTXT* pctxt, PDUSessionResourceModifyListModReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyListModReq (OSCTXT* pctxt, PDUSessionResourceModifyListModReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyListModReq 
   (const char* name, const PDUSessionResourceModifyListModReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyListModReq (const char* name, 
   PDUSessionResourceModifyListModReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyListModReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyListModReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyListModReq (
   PDUSessionResourceModifyListModReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModRes_iE_Extensions_element  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModRes'
*/
typedef struct EXTERN PDUSessionResourceModifyItemModRes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceModifyItemModRes_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyItemModRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModRes_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModRes_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyItemModRes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModRes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModRes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModRes_iE_Extensions_element (
   PDUSessionResourceModifyItemModRes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModRes_iE_Extensions          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyItemModRes'
*/
/* List of PDUSessionResourceModifyItemModRes_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyItemModRes_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyItemModRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModRes_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyItemModRes_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModRes_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyItemModRes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModRes_iE_Extensions (
   const char* name, PDUSessionResourceModifyItemModRes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModRes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModRes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyItemModRes_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyItemModRes_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModRes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceModifyItemModRes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyItemModRes_iE_Extensions* plist, 
   PDUSessionResourceModifyItemModRes_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyItemModRes_iE_Extensions (
   PDUSessionResourceModifyItemModRes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyItemModRes                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyItemModRes ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceModifyResponseTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyItemModRes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyItemModRes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyItemModRes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyItemModRes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceModifyResponseTransfer;
   PDUSessionResourceModifyItemModRes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyItemModRes;

EXTERN int asn1PE_PDUSessionResourceModifyItemModRes (OSCTXT* pctxt, PDUSessionResourceModifyItemModRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyItemModRes (OSCTXT* pctxt, PDUSessionResourceModifyItemModRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyItemModRes 
   (const char* name, const PDUSessionResourceModifyItemModRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyItemModRes (const char* name, 
   PDUSessionResourceModifyItemModRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyItemModRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyItemModRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyItemModRes (
   PDUSessionResourceModifyItemModRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyListModRes                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyListModRes ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceModifyItemModRes
*/
/* List of PDUSessionResourceModifyItemModRes */
typedef OSRTDList PDUSessionResourceModifyListModRes;

EXTERN int asn1PE_PDUSessionResourceModifyListModRes (OSCTXT* pctxt, PDUSessionResourceModifyListModRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyListModRes (OSCTXT* pctxt, PDUSessionResourceModifyListModRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyListModRes 
   (const char* name, const PDUSessionResourceModifyListModRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyListModRes (const char* name, 
   PDUSessionResourceModifyListModRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyListModRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyListModRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyListModRes (
   PDUSessionResourceModifyListModRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensio  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyUnsuccessfulTransfer'
*/
typedef struct EXTERN PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element (
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensio  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceModifyUnsuccessfulTransfer'
*/
/* List of PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int 
   asn1GetAll_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* plist, 
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions (
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceModifyUnsuccessfulTransfer              */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceModifyUnsuccessfulTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   criticalityDiagnostics [1] CriticalityDiagnostics OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceModifyUnsuccessfulTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceModifyUnsuccessfulTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceModifyUnsuccessfulTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceModifyUnsuccessfulTransfer {
   struct {
      unsigned criticalityDiagnosticsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   CriticalityDiagnostics criticalityDiagnostics;
   PDUSessionResourceModifyUnsuccessfulTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceModifyUnsuccessfulTransfer;

EXTERN int asn1PE_PDUSessionResourceModifyUnsuccessfulTransfer (OSCTXT* pctxt, PDUSessionResourceModifyUnsuccessfulTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceModifyUnsuccessfulTransfer (OSCTXT* pctxt, PDUSessionResourceModifyUnsuccessfulTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceModifyUnsuccessfulTransfer 
   (const char* name, const PDUSessionResourceModifyUnsuccessfulTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceModifyUnsuccessfulTransfer (
   const char* name, PDUSessionResourceModifyUnsuccessfulTransfer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceModifyUnsuccessfulTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceModifyUnsuccessfulTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceModifyUnsuccessfulTransfer (
   PDUSessionResourceModifyUnsuccessfulTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyItem_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotifyItem'
*/
typedef struct EXTERN PDUSessionResourceNotifyItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceNotifyItem_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceNotifyItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceNotifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceNotifyItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyItem_iE_Extensions_element 
   (const char* name, const PDUSessionResourceNotifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyItem_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceNotifyItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotifyItem_iE_Extensions_element (
   PDUSessionResourceNotifyItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyItem_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotifyItem'
*/
/* List of PDUSessionResourceNotifyItem_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceNotifyItem_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceNotifyItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceNotifyItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceNotifyItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyItem_iE_Extensions 
   (const char* name, const PDUSessionResourceNotifyItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyItem_iE_Extensions (const char* name, 
   PDUSessionResourceNotifyItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceNotifyItem_iE_Extensions_element* 
   asn1Get_PDUSessionResourceNotifyItem_iE_Extensions (ProtocolExtensionID id, 
   PDUSessionResourceNotifyItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceNotifyItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceNotifyItem_iE_Extensions* plist, 
   PDUSessionResourceNotifyItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceNotifyItem_iE_Extensions (
   PDUSessionResourceNotifyItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyItem                              */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceNotifyItem ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceNotifyTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceNotifyItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceNotifyItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceNotifyItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceNotifyItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceNotifyTransfer;
   PDUSessionResourceNotifyItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceNotifyItem;

EXTERN int asn1PE_PDUSessionResourceNotifyItem (OSCTXT* pctxt, PDUSessionResourceNotifyItem* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyItem (OSCTXT* pctxt, PDUSessionResourceNotifyItem* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyItem 
   (const char* name, const PDUSessionResourceNotifyItem* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyItem (const char* name, 
   PDUSessionResourceNotifyItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyItem (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyItem* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotifyItem (
   PDUSessionResourceNotifyItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyList                              */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceNotifyList ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceNotifyItem
*/
/* List of PDUSessionResourceNotifyItem */
typedef OSRTDList PDUSessionResourceNotifyList;

EXTERN int asn1PE_PDUSessionResourceNotifyList (OSCTXT* pctxt, PDUSessionResourceNotifyList* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyList (OSCTXT* pctxt, PDUSessionResourceNotifyList* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyList 
   (const char* name, const PDUSessionResourceNotifyList* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyList (const char* name, 
   PDUSessionResourceNotifyList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyList (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyList* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotifyList (
   PDUSessionResourceNotifyList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_e  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotifyReleasedTransfer'
*/
typedef struct EXTERN PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceNotifyReleasedTransfer_ExtIEs_TVALUE t;

      /**
       * PDUSessionResourceNotifyReleasedTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-SecondaryRATUsageInformation
          * criticality: ignore
          * presence: optional
          */
         SecondaryRATUsageInformation *_PDUSessionResourceNotifyReleasedTransfer_ExtIEs_id_SecondaryRATUsageInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element (
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyReleasedTransfer_iE_Extensions    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotifyReleasedTransfer'
*/
/* List of PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceNotifyReleasedTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceNotifyReleasedTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* plist, 
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceNotifyReleasedTransfer_iE_Extensions (
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyReleasedTransfer                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceNotifyReleasedTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceNotifyReleasedTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceNotifyReleasedTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceNotifyReleasedTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceNotifyReleasedTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   PDUSessionResourceNotifyReleasedTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceNotifyReleasedTransfer;

EXTERN int asn1PE_PDUSessionResourceNotifyReleasedTransfer (OSCTXT* pctxt, PDUSessionResourceNotifyReleasedTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyReleasedTransfer (OSCTXT* pctxt, PDUSessionResourceNotifyReleasedTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyReleasedTransfer 
   (const char* name, const PDUSessionResourceNotifyReleasedTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyReleasedTransfer (const char* name, 
   PDUSessionResourceNotifyReleasedTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyReleasedTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyReleasedTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotifyReleasedTransfer (
   PDUSessionResourceNotifyReleasedTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowNotifyItem_iE_Extensions_element                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowNotifyItem'
*/
typedef struct EXTERN QosFlowNotifyItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowNotifyItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowNotifyItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowNotifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowNotifyItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowNotifyItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowNotifyItem_iE_Extensions_element 
   (const char* name, const QosFlowNotifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowNotifyItem_iE_Extensions_element (const char* name, 
   QosFlowNotifyItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowNotifyItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowNotifyItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowNotifyItem_iE_Extensions_element (
   QosFlowNotifyItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowNotifyItem_iE_Extensions                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowNotifyItem'
*/
/* List of QosFlowNotifyItem_iE_Extensions_element */
typedef OSRTDList QosFlowNotifyItem_iE_Extensions;

EXTERN int asn1PE_QosFlowNotifyItem_iE_Extensions (OSCTXT* pctxt, QosFlowNotifyItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowNotifyItem_iE_Extensions (OSCTXT* pctxt, QosFlowNotifyItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowNotifyItem_iE_Extensions 
   (const char* name, const QosFlowNotifyItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowNotifyItem_iE_Extensions (const char* name, 
   QosFlowNotifyItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowNotifyItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowNotifyItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowNotifyItem_iE_Extensions_element* 
   asn1Get_QosFlowNotifyItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowNotifyItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowNotifyItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowNotifyItem_iE_Extensions* plist, 
   QosFlowNotifyItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowNotifyItem_iE_Extensions (
   QosFlowNotifyItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowNotifyItem                                         */
/*                                                            */
/**************************************************************/
/*
QosFlowNotifyItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   notificationCause [1] NotificationCause,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowNotifyItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowNotifyItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowNotifyItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowNotifyItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   NotificationCause notificationCause;
   QosFlowNotifyItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowNotifyItem;

EXTERN int asn1PE_QosFlowNotifyItem (OSCTXT* pctxt, QosFlowNotifyItem* pvalue);

EXTERN int asn1PD_QosFlowNotifyItem (OSCTXT* pctxt, QosFlowNotifyItem* pvalue);

EXTERN void asn1Print_QosFlowNotifyItem 
   (const char* name, const QosFlowNotifyItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowNotifyItem (const char* name, 
   QosFlowNotifyItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowNotifyItem (OSCTXT *pctxt, 
   const char* name, const QosFlowNotifyItem* pvalue);

EXTERN int asn1Init_QosFlowNotifyItem (QosFlowNotifyItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowNotifyList                                         */
/*                                                            */
/**************************************************************/
/*
QosFlowNotifyList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowNotifyItem
*/
/* List of QosFlowNotifyItem */
typedef OSRTDList QosFlowNotifyList;

EXTERN int asn1PE_QosFlowNotifyList (OSCTXT* pctxt, QosFlowNotifyList* pvalue);

EXTERN int asn1PD_QosFlowNotifyList (OSCTXT* pctxt, QosFlowNotifyList* pvalue);

EXTERN void asn1Print_QosFlowNotifyList 
   (const char* name, const QosFlowNotifyList* pvalue);

EXTERN int asn1PrtToStr_QosFlowNotifyList (const char* name, 
   QosFlowNotifyList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowNotifyList (OSCTXT *pctxt, 
   const char* name, const QosFlowNotifyList* pvalue);

EXTERN int asn1Init_QosFlowNotifyList (QosFlowNotifyList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyTransfer_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotifyTransfer'
*/
typedef struct EXTERN PDUSessionResourceNotifyTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceNotifyTransfer_ExtIEs_TVALUE t;

      /**
       * PDUSessionResourceNotifyTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-SecondaryRATUsageInformation
          * criticality: ignore
          * presence: optional
          */
         SecondaryRATUsageInformation *_PDUSessionResourceNotifyTransfer_ExtIEs_id_SecondaryRATUsageInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PDUSessionResourceNotifyTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceNotifyTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceNotifyTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceNotifyTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceNotifyTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceNotifyTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotifyTransfer_iE_Extensions_element (
   PDUSessionResourceNotifyTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyTransfer_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceNotifyTransfer'
*/
/* List of PDUSessionResourceNotifyTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceNotifyTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceNotifyTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceNotifyTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceNotifyTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceNotifyTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyTransfer_iE_Extensions (
   const char* name, PDUSessionResourceNotifyTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceNotifyTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceNotifyTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceNotifyTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceNotifyTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceNotifyTransfer_iE_Extensions* plist, 
   PDUSessionResourceNotifyTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceNotifyTransfer_iE_Extensions (
   PDUSessionResourceNotifyTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceNotifyTransfer                          */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceNotifyTransfer ::= SEQUENCE {
   qosFlowNotifyList [0] QosFlowNotifyList OPTIONAL,
   qosFlowReleasedList [1] QosFlowListWithCause OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceNotifyTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceNotifyTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceNotifyTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceNotifyTransfer {
   struct {
      unsigned qosFlowNotifyListPresent : 1;
      unsigned qosFlowReleasedListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowNotifyList qosFlowNotifyList;
   QosFlowListWithCause qosFlowReleasedList;
   PDUSessionResourceNotifyTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceNotifyTransfer;

EXTERN int asn1PE_PDUSessionResourceNotifyTransfer (OSCTXT* pctxt, PDUSessionResourceNotifyTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceNotifyTransfer (OSCTXT* pctxt, PDUSessionResourceNotifyTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceNotifyTransfer 
   (const char* name, const PDUSessionResourceNotifyTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceNotifyTransfer (const char* name, 
   PDUSessionResourceNotifyTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceNotifyTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceNotifyTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceNotifyTransfer (
   PDUSessionResourceNotifyTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseCommandTransfer_iE_Extensions_e  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseCommandTransfer'
*/
typedef struct EXTERN PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element (
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseCommandTransfer_iE_Extensions    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseCommandTransfer'
*/
/* List of PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceReleaseCommandTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceReleaseCommandTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleaseCommandTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseCommandTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleaseCommandTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseCommandTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceReleaseCommandTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseCommandTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseCommandTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseCommandTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleaseCommandTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceReleaseCommandTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleaseCommandTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions* plist, 
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleaseCommandTransfer_iE_Extensions (
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseCommandTransfer                  */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleaseCommandTransfer ::= SEQUENCE {
   cause [0] EXPLICIT Cause,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceReleaseCommandTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceReleaseCommandTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceReleaseCommandTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleaseCommandTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   Cause cause;
   PDUSessionResourceReleaseCommandTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceReleaseCommandTransfer;

EXTERN int asn1PE_PDUSessionResourceReleaseCommandTransfer (OSCTXT* pctxt, PDUSessionResourceReleaseCommandTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseCommandTransfer (OSCTXT* pctxt, PDUSessionResourceReleaseCommandTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseCommandTransfer 
   (const char* name, const PDUSessionResourceReleaseCommandTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseCommandTransfer (const char* name, 
   PDUSessionResourceReleaseCommandTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseCommandTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseCommandTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseCommandTransfer (
   PDUSessionResourceReleaseCommandTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemNot_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemNot'
*/
typedef struct EXTERN PDUSessionResourceReleasedItemNot_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceReleasedItemNot_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceReleasedItemNot_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemNot_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemNot_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemNot_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemNot_iE_Extensions_element 
   (const char* name, const PDUSessionResourceReleasedItemNot_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemNot_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceReleasedItemNot_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemNot_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemNot_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemNot_iE_Extensions_element (
   PDUSessionResourceReleasedItemNot_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemNot_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemNot'
*/
/* List of PDUSessionResourceReleasedItemNot_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceReleasedItemNot_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceReleasedItemNot_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemNot_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemNot_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemNot_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemNot_iE_Extensions 
   (const char* name, const PDUSessionResourceReleasedItemNot_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemNot_iE_Extensions (
   const char* name, PDUSessionResourceReleasedItemNot_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemNot_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemNot_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleasedItemNot_iE_Extensions_element* 
   asn1Get_PDUSessionResourceReleasedItemNot_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemNot_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleasedItemNot_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemNot_iE_Extensions* plist, 
   PDUSessionResourceReleasedItemNot_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleasedItemNot_iE_Extensions (
   PDUSessionResourceReleasedItemNot_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemNot                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedItemNot ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceNotifyReleasedTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceReleasedItemNot-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceReleasedItemNot-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceReleasedItemNot-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleasedItemNot {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceNotifyReleasedTransfer;
   PDUSessionResourceReleasedItemNot_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceReleasedItemNot;

EXTERN int asn1PE_PDUSessionResourceReleasedItemNot (OSCTXT* pctxt, PDUSessionResourceReleasedItemNot* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemNot (OSCTXT* pctxt, PDUSessionResourceReleasedItemNot* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemNot 
   (const char* name, const PDUSessionResourceReleasedItemNot* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemNot (const char* name, 
   PDUSessionResourceReleasedItemNot* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemNot (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemNot* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemNot (
   PDUSessionResourceReleasedItemNot* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedListNot                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedListNot ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceReleasedItemNot
*/
/* List of PDUSessionResourceReleasedItemNot */
typedef OSRTDList PDUSessionResourceReleasedListNot;

EXTERN int asn1PE_PDUSessionResourceReleasedListNot (OSCTXT* pctxt, PDUSessionResourceReleasedListNot* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedListNot (OSCTXT* pctxt, PDUSessionResourceReleasedListNot* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedListNot 
   (const char* name, const PDUSessionResourceReleasedListNot* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedListNot (const char* name, 
   PDUSessionResourceReleasedListNot* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedListNot (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedListNot* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedListNot (
   PDUSessionResourceReleasedListNot* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemPSAck_iE_Extensions_elemen  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemPSAck'
*/
typedef struct EXTERN PDUSessionResourceReleasedItemPSAck_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceReleasedItemPSAck_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceReleasedItemPSAck_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSAck_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemPSAck_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSAck_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemPSAck_iE_Extensions_element 
   (const char* name, const PDUSessionResourceReleasedItemPSAck_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemPSAck_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceReleasedItemPSAck_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemPSAck_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemPSAck_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemPSAck_iE_Extensions_element (
   PDUSessionResourceReleasedItemPSAck_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemPSAck_iE_Extensions         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemPSAck'
*/
/* List of PDUSessionResourceReleasedItemPSAck_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceReleasedItemPSAck_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceReleasedItemPSAck_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSAck_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemPSAck_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSAck_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemPSAck_iE_Extensions 
   (const char* name, const PDUSessionResourceReleasedItemPSAck_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemPSAck_iE_Extensions (
   const char* name, 
   PDUSessionResourceReleasedItemPSAck_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemPSAck_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemPSAck_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleasedItemPSAck_iE_Extensions_element* 
   asn1Get_PDUSessionResourceReleasedItemPSAck_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemPSAck_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleasedItemPSAck_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemPSAck_iE_Extensions* plist, 
   PDUSessionResourceReleasedItemPSAck_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleasedItemPSAck_iE_Extensions (
   PDUSessionResourceReleasedItemPSAck_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemPSAck                       */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedItemPSAck ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pathSwitchRequestUnsuccessfulTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceReleasedItemPSAck-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceReleasedItemPSAck-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceReleasedItemPSAck-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleasedItemPSAck {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pathSwitchRequestUnsuccessfulTransfer;
   PDUSessionResourceReleasedItemPSAck_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceReleasedItemPSAck;

EXTERN int asn1PE_PDUSessionResourceReleasedItemPSAck (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSAck* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemPSAck (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSAck* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemPSAck 
   (const char* name, const PDUSessionResourceReleasedItemPSAck* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemPSAck (const char* name, 
   PDUSessionResourceReleasedItemPSAck* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemPSAck (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemPSAck* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemPSAck (
   PDUSessionResourceReleasedItemPSAck* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedListPSAck                       */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedListPSAck ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceReleasedItemPSAck
*/
/* List of PDUSessionResourceReleasedItemPSAck */
typedef OSRTDList PDUSessionResourceReleasedListPSAck;

EXTERN int asn1PE_PDUSessionResourceReleasedListPSAck (OSCTXT* pctxt, PDUSessionResourceReleasedListPSAck* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedListPSAck (OSCTXT* pctxt, PDUSessionResourceReleasedListPSAck* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedListPSAck 
   (const char* name, const PDUSessionResourceReleasedListPSAck* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedListPSAck (const char* name, 
   PDUSessionResourceReleasedListPSAck* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedListPSAck (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedListPSAck* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedListPSAck (
   PDUSessionResourceReleasedListPSAck* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemPSFail_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemPSFail'
*/
typedef struct EXTERN PDUSessionResourceReleasedItemPSFail_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceReleasedItemPSFail_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceReleasedItemPSFail_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSFail_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemPSFail_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSFail_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemPSFail_iE_Extensions_element 
   (const char* name, const PDUSessionResourceReleasedItemPSFail_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemPSFail_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceReleasedItemPSFail_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemPSFail_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemPSFail_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemPSFail_iE_Extensions_element (
   PDUSessionResourceReleasedItemPSFail_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemPSFail_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemPSFail'
*/
/* List of PDUSessionResourceReleasedItemPSFail_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceReleasedItemPSFail_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceReleasedItemPSFail_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSFail_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemPSFail_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSFail_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemPSFail_iE_Extensions 
   (const char* name, const PDUSessionResourceReleasedItemPSFail_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemPSFail_iE_Extensions (
   const char* name, 
   PDUSessionResourceReleasedItemPSFail_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemPSFail_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemPSFail_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleasedItemPSFail_iE_Extensions_element* 
   asn1Get_PDUSessionResourceReleasedItemPSFail_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemPSFail_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleasedItemPSFail_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemPSFail_iE_Extensions* plist, 
   PDUSessionResourceReleasedItemPSFail_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleasedItemPSFail_iE_Extensions (
   PDUSessionResourceReleasedItemPSFail_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemPSFail                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedItemPSFail ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pathSwitchRequestUnsuccessfulTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceReleasedItemPSFail-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceReleasedItemPSFail-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceReleasedItemPSFail-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleasedItemPSFail {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pathSwitchRequestUnsuccessfulTransfer;
   PDUSessionResourceReleasedItemPSFail_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceReleasedItemPSFail;

EXTERN int asn1PE_PDUSessionResourceReleasedItemPSFail (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSFail* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemPSFail (OSCTXT* pctxt, PDUSessionResourceReleasedItemPSFail* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemPSFail 
   (const char* name, const PDUSessionResourceReleasedItemPSFail* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemPSFail (const char* name, 
   PDUSessionResourceReleasedItemPSFail* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemPSFail (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemPSFail* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemPSFail (
   PDUSessionResourceReleasedItemPSFail* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedListPSFail                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedListPSFail ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceReleasedItemPSFail
*/
/* List of PDUSessionResourceReleasedItemPSFail */
typedef OSRTDList PDUSessionResourceReleasedListPSFail;

EXTERN int asn1PE_PDUSessionResourceReleasedListPSFail (OSCTXT* pctxt, PDUSessionResourceReleasedListPSFail* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedListPSFail (OSCTXT* pctxt, PDUSessionResourceReleasedListPSFail* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedListPSFail 
   (const char* name, const PDUSessionResourceReleasedListPSFail* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedListPSFail (const char* name, 
   PDUSessionResourceReleasedListPSFail* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedListPSFail (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedListPSFail* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedListPSFail (
   PDUSessionResourceReleasedListPSFail* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemRelRes_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemRelRes'
*/
typedef struct EXTERN PDUSessionResourceReleasedItemRelRes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceReleasedItemRelRes_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceReleasedItemRelRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemRelRes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemRelRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleasedItemRelRes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemRelRes_iE_Extensions_element 
   (const char* name, const PDUSessionResourceReleasedItemRelRes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemRelRes_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceReleasedItemRelRes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemRelRes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemRelRes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemRelRes_iE_Extensions_element (
   PDUSessionResourceReleasedItemRelRes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemRelRes_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleasedItemRelRes'
*/
/* List of PDUSessionResourceReleasedItemRelRes_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceReleasedItemRelRes_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceReleasedItemRelRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemRelRes_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemRelRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleasedItemRelRes_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemRelRes_iE_Extensions 
   (const char* name, const PDUSessionResourceReleasedItemRelRes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemRelRes_iE_Extensions (
   const char* name, 
   PDUSessionResourceReleasedItemRelRes_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemRelRes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemRelRes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleasedItemRelRes_iE_Extensions_element* 
   asn1Get_PDUSessionResourceReleasedItemRelRes_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemRelRes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleasedItemRelRes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceReleasedItemRelRes_iE_Extensions* plist, 
   PDUSessionResourceReleasedItemRelRes_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleasedItemRelRes_iE_Extensions (
   PDUSessionResourceReleasedItemRelRes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedItemRelRes                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedItemRelRes ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceReleaseResponseTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceReleasedItemRelRes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceReleasedItemRelRes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceReleasedItemRelRes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleasedItemRelRes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceReleaseResponseTransfer;
   PDUSessionResourceReleasedItemRelRes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceReleasedItemRelRes;

EXTERN int asn1PE_PDUSessionResourceReleasedItemRelRes (OSCTXT* pctxt, PDUSessionResourceReleasedItemRelRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedItemRelRes (OSCTXT* pctxt, PDUSessionResourceReleasedItemRelRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedItemRelRes 
   (const char* name, const PDUSessionResourceReleasedItemRelRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedItemRelRes (const char* name, 
   PDUSessionResourceReleasedItemRelRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedItemRelRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedItemRelRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedItemRelRes (
   PDUSessionResourceReleasedItemRelRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleasedListRelRes                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleasedListRelRes ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceReleasedItemRelRes
*/
/* List of PDUSessionResourceReleasedItemRelRes */
typedef OSRTDList PDUSessionResourceReleasedListRelRes;

EXTERN int asn1PE_PDUSessionResourceReleasedListRelRes (OSCTXT* pctxt, PDUSessionResourceReleasedListRelRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleasedListRelRes (OSCTXT* pctxt, PDUSessionResourceReleasedListRelRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleasedListRelRes 
   (const char* name, const PDUSessionResourceReleasedListRelRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleasedListRelRes (const char* name, 
   PDUSessionResourceReleasedListRelRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleasedListRelRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleasedListRelRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleasedListRelRes (
   PDUSessionResourceReleasedListRelRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseResponseTransfer_iE_Extensions_  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseResponseTransfer'
*/
typedef struct EXTERN PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceReleaseResponseTransfer_ExtIEs_TVALUE t;

      /**
       * PDUSessionResourceReleaseResponseTransfer-ExtIEs information objects
       */
      union {
         /**
          * id: id-SecondaryRATUsageInformation
          * criticality: ignore
          * presence: optional
          */
         SecondaryRATUsageInformation *_PDUSessionResourceReleaseResponseTransfer_ExtIEs_id_SecondaryRATUsageInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element (
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseResponseTransfer_iE_Extensions   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceReleaseResponseTransfer'
*/
/* List of PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceReleaseResponseTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceReleaseResponseTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleaseResponseTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseResponseTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceReleaseResponseTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseResponseTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceReleaseResponseTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseResponseTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseResponseTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseResponseTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceReleaseResponseTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceReleaseResponseTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceReleaseResponseTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions* plist, 
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceReleaseResponseTransfer_iE_Extensions (
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceReleaseResponseTransfer                 */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceReleaseResponseTransfer ::= SEQUENCE {
   iE-Extensions [0] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceReleaseResponseTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceReleaseResponseTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceReleaseResponseTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceReleaseResponseTransfer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionResourceReleaseResponseTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceReleaseResponseTransfer;

EXTERN int asn1PE_PDUSessionResourceReleaseResponseTransfer (OSCTXT* pctxt, PDUSessionResourceReleaseResponseTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceReleaseResponseTransfer (OSCTXT* pctxt, PDUSessionResourceReleaseResponseTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceReleaseResponseTransfer 
   (const char* name, const PDUSessionResourceReleaseResponseTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceReleaseResponseTransfer (const char* name, 
   PDUSessionResourceReleaseResponseTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceReleaseResponseTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceReleaseResponseTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceReleaseResponseTransfer (
   PDUSessionResourceReleaseResponseTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportTransfer_iE_Extensions_elemen  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReportTransfer'
*/
typedef struct EXTERN SecondaryRATDataUsageReportTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SecondaryRATDataUsageReportTransfer_iE_Extensions_element;

EXTERN int asn1PE_SecondaryRATDataUsageReportTransfer_iE_Extensions_element (OSCTXT* pctxt, SecondaryRATDataUsageReportTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SecondaryRATDataUsageReportTransfer_iE_Extensions_element (OSCTXT* pctxt, SecondaryRATDataUsageReportTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SecondaryRATDataUsageReportTransfer_iE_Extensions_element 
   (const char* name, const SecondaryRATDataUsageReportTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATDataUsageReportTransfer_iE_Extensions_element (
   const char* name, 
   SecondaryRATDataUsageReportTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATDataUsageReportTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SecondaryRATDataUsageReportTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SecondaryRATDataUsageReportTransfer_iE_Extensions_element (
   SecondaryRATDataUsageReportTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportTransfer_iE_Extensions         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecondaryRATDataUsageReportTransfer'
*/
/* List of SecondaryRATDataUsageReportTransfer_iE_Extensions_element */
typedef OSRTDList SecondaryRATDataUsageReportTransfer_iE_Extensions;

EXTERN int asn1PE_SecondaryRATDataUsageReportTransfer_iE_Extensions (OSCTXT* pctxt, SecondaryRATDataUsageReportTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_SecondaryRATDataUsageReportTransfer_iE_Extensions (OSCTXT* pctxt, SecondaryRATDataUsageReportTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_SecondaryRATDataUsageReportTransfer_iE_Extensions 
   (const char* name, const SecondaryRATDataUsageReportTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATDataUsageReportTransfer_iE_Extensions (
   const char* name, 
   SecondaryRATDataUsageReportTransfer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATDataUsageReportTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SecondaryRATDataUsageReportTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SecondaryRATDataUsageReportTransfer_iE_Extensions_element* 
   asn1Get_SecondaryRATDataUsageReportTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   SecondaryRATDataUsageReportTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SecondaryRATDataUsageReportTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SecondaryRATDataUsageReportTransfer_iE_Extensions* plist, 
   SecondaryRATDataUsageReportTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_SecondaryRATDataUsageReportTransfer_iE_Extensions (
   SecondaryRATDataUsageReportTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondaryRATDataUsageReportTransfer                       */
/*                                                            */
/**************************************************************/
/*
SecondaryRATDataUsageReportTransfer ::= SEQUENCE {
   secondaryRATUsageInformation [0] SecondaryRATUsageInformation OPTIONAL,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SecondaryRATDataUsageReportTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SecondaryRATDataUsageReportTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SecondaryRATDataUsageReportTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SecondaryRATDataUsageReportTransfer {
   struct {
      unsigned secondaryRATUsageInformationPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   SecondaryRATUsageInformation secondaryRATUsageInformation;
   SecondaryRATDataUsageReportTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SecondaryRATDataUsageReportTransfer;

EXTERN int asn1PE_SecondaryRATDataUsageReportTransfer (OSCTXT* pctxt, SecondaryRATDataUsageReportTransfer* pvalue);

EXTERN int asn1PD_SecondaryRATDataUsageReportTransfer (OSCTXT* pctxt, SecondaryRATDataUsageReportTransfer* pvalue);

EXTERN void asn1Print_SecondaryRATDataUsageReportTransfer 
   (const char* name, const SecondaryRATDataUsageReportTransfer* pvalue);

EXTERN int asn1PrtToStr_SecondaryRATDataUsageReportTransfer (const char* name, 
   SecondaryRATDataUsageReportTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecondaryRATDataUsageReportTransfer (OSCTXT *pctxt, 
   const char* name, const SecondaryRATDataUsageReportTransfer* pvalue);

EXTERN int asn1Init_SecondaryRATDataUsageReportTransfer (
   SecondaryRATDataUsageReportTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_el  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSecondaryRATUsageItem'
*/
typedef struct EXTERN PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element (
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSecondaryRATUsageItem_iE_Extensions     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSecondaryRATUsageItem'
*/
/* List of PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSecondaryRATUsageItem_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions 
   (const char* name, const PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions (
   const char* name, 
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSecondaryRATUsageItem_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* plist, 
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSecondaryRATUsageItem_iE_Extensions (
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSecondaryRATUsageItem                   */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSecondaryRATUsageItem ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   secondaryRATDataUsageReportTransfer [1] OCTET STRING (CONTAINING SecondaryRATDataUsageReportTransfer),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSecondaryRATUsageItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSecondaryRATUsageItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSecondaryRATUsageItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSecondaryRATUsageItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   SecondaryRATDataUsageReportTransfer secondaryRATDataUsageReportTransfer;
   PDUSessionResourceSecondaryRATUsageItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSecondaryRATUsageItem;

EXTERN int asn1PE_PDUSessionResourceSecondaryRATUsageItem (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageItem* pvalue);

EXTERN int asn1PD_PDUSessionResourceSecondaryRATUsageItem (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageItem* pvalue);

EXTERN void asn1Print_PDUSessionResourceSecondaryRATUsageItem 
   (const char* name, const PDUSessionResourceSecondaryRATUsageItem* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSecondaryRATUsageItem (const char* name, 
   PDUSessionResourceSecondaryRATUsageItem* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSecondaryRATUsageItem (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSecondaryRATUsageItem* pvalue);

EXTERN int asn1Init_PDUSessionResourceSecondaryRATUsageItem (
   PDUSessionResourceSecondaryRATUsageItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSecondaryRATUsageList                   */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSecondaryRATUsageList ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceSecondaryRATUsageItem
*/
/* List of PDUSessionResourceSecondaryRATUsageItem */
typedef OSRTDList PDUSessionResourceSecondaryRATUsageList;

EXTERN int asn1PE_PDUSessionResourceSecondaryRATUsageList (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageList* pvalue);

EXTERN int asn1PD_PDUSessionResourceSecondaryRATUsageList (OSCTXT* pctxt, PDUSessionResourceSecondaryRATUsageList* pvalue);

EXTERN void asn1Print_PDUSessionResourceSecondaryRATUsageList 
   (const char* name, const PDUSessionResourceSecondaryRATUsageList* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSecondaryRATUsageList (const char* name, 
   PDUSessionResourceSecondaryRATUsageList* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSecondaryRATUsageList (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSecondaryRATUsageList* pvalue);

EXTERN int asn1Init_PDUSessionResourceSecondaryRATUsageList (
   PDUSessionResourceSecondaryRATUsageList* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupRequestItem_iE_Extensions_element             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowSetupRequestItem'
*/
typedef struct EXTERN QosFlowSetupRequestItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowSetupRequestItem_iE_Extensions_element;

EXTERN int asn1PE_QosFlowSetupRequestItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowSetupRequestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowSetupRequestItem_iE_Extensions_element (OSCTXT* pctxt, QosFlowSetupRequestItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowSetupRequestItem_iE_Extensions_element 
   (const char* name, const QosFlowSetupRequestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupRequestItem_iE_Extensions_element (
   const char* name, QosFlowSetupRequestItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupRequestItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupRequestItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowSetupRequestItem_iE_Extensions_element (
   QosFlowSetupRequestItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupRequestItem_iE_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowSetupRequestItem'
*/
/* List of QosFlowSetupRequestItem_iE_Extensions_element */
typedef OSRTDList QosFlowSetupRequestItem_iE_Extensions;

EXTERN int asn1PE_QosFlowSetupRequestItem_iE_Extensions (OSCTXT* pctxt, QosFlowSetupRequestItem_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowSetupRequestItem_iE_Extensions (OSCTXT* pctxt, QosFlowSetupRequestItem_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowSetupRequestItem_iE_Extensions 
   (const char* name, const QosFlowSetupRequestItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupRequestItem_iE_Extensions (const char* name, 
   QosFlowSetupRequestItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupRequestItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupRequestItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowSetupRequestItem_iE_Extensions_element* 
   asn1Get_QosFlowSetupRequestItem_iE_Extensions (ProtocolExtensionID id, 
   QosFlowSetupRequestItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowSetupRequestItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowSetupRequestItem_iE_Extensions* plist, 
   QosFlowSetupRequestItem_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowSetupRequestItem_iE_Extensions (
   QosFlowSetupRequestItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupRequestItem                                   */
/*                                                            */
/**************************************************************/
/*
QosFlowSetupRequestItem ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   qosFlowLevelQosParameters [1] QosFlowLevelQosParameters,
   e-RAB-ID [2] E-RAB-ID OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowSetupRequestItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowSetupRequestItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowSetupRequestItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowSetupRequestItem {
   struct {
      unsigned e_RAB_IDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QosFlowLevelQosParameters qosFlowLevelQosParameters;
   E_RAB_ID e_RAB_ID;
   QosFlowSetupRequestItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowSetupRequestItem;

EXTERN int asn1PE_QosFlowSetupRequestItem (OSCTXT* pctxt, QosFlowSetupRequestItem* pvalue);

EXTERN int asn1PD_QosFlowSetupRequestItem (OSCTXT* pctxt, QosFlowSetupRequestItem* pvalue);

EXTERN void asn1Print_QosFlowSetupRequestItem 
   (const char* name, const QosFlowSetupRequestItem* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupRequestItem (const char* name, 
   QosFlowSetupRequestItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupRequestItem (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupRequestItem* pvalue);

EXTERN int asn1Init_QosFlowSetupRequestItem (QosFlowSetupRequestItem* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupRequestList                                   */
/*                                                            */
/**************************************************************/
/*
QosFlowSetupRequestList ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowSetupRequestItem
*/
/* List of QosFlowSetupRequestItem */
typedef OSRTDList QosFlowSetupRequestList;

EXTERN int asn1PE_QosFlowSetupRequestList (OSCTXT* pctxt, QosFlowSetupRequestList* pvalue);

EXTERN int asn1PD_QosFlowSetupRequestList (OSCTXT* pctxt, QosFlowSetupRequestList* pvalue);

EXTERN void asn1Print_QosFlowSetupRequestList 
   (const char* name, const QosFlowSetupRequestList* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupRequestList (const char* name, 
   QosFlowSetupRequestList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupRequestList (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupRequestList* pvalue);

EXTERN int asn1Init_QosFlowSetupRequestList (QosFlowSetupRequestList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupRequestTransfer_protocolIEs_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupRequestTransfer'
*/
typedef struct EXTERN PDUSessionResourceSetupRequestTransfer_protocolIEs_element {
   ProtocolIE_ID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      PDUSessionResourceSetupRequestTransferIEs_TVALUE t;

      /**
       * PDUSessionResourceSetupRequestTransferIEs information objects
       */
      union {
         /**
          * id: id-PDUSessionAggregateMaximumBitRate
          * criticality: reject
          * presence: optional
          */
         PDUSessionAggregateMaximumBitRate *_PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate;
         /**
          * id: id-UL-NGU-UP-TNLInformation
          * criticality: reject
          * presence: mandatory
          */
         UPTransportLayerInformation *_PDUSessionResourceSetupRequestTransferIEs_id_UL_NGU_UP_TNLInformation;
         /**
          * id: id-AdditionalUL-NGU-UP-TNLInformation
          * criticality: reject
          * presence: optional
          */
         UPTransportLayerInformationList *_PDUSessionResourceSetupRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation;
         /**
          * id: id-DataForwardingNotPossible
          * criticality: reject
          * presence: optional
          */
         DataForwardingNotPossible _PDUSessionResourceSetupRequestTransferIEs_id_DataForwardingNotPossible;
         /**
          * id: id-PDUSessionType
          * criticality: reject
          * presence: mandatory
          */
         PDUSessionType _PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionType;
         /**
          * id: id-SecurityIndication
          * criticality: reject
          * presence: optional
          */
         SecurityIndication *_PDUSessionResourceSetupRequestTransferIEs_id_SecurityIndication;
         /**
          * id: id-NetworkInstance
          * criticality: reject
          * presence: optional
          */
         NetworkInstance _PDUSessionResourceSetupRequestTransferIEs_id_NetworkInstance;
         /**
          * id: id-QosFlowSetupRequestList
          * criticality: reject
          * presence: mandatory
          */
         QosFlowSetupRequestList *_PDUSessionResourceSetupRequestTransferIEs_id_QosFlowSetupRequestList;
         /**
          * id: id-CommonNetworkInstance
          * criticality: ignore
          * presence: optional
          */
         CommonNetworkInstance *_PDUSessionResourceSetupRequestTransferIEs_id_CommonNetworkInstance;

         ASN1OpenType* extElem1;
      } u;
   } value;
} PDUSessionResourceSetupRequestTransfer_protocolIEs_element;

EXTERN int asn1PE_PDUSessionResourceSetupRequestTransfer_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupRequestTransfer_protocolIEs_element (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupRequestTransfer_protocolIEs_element 
   (const char* name, const PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupRequestTransfer_protocolIEs_element (
   const char* name, 
   PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupRequestTransfer_protocolIEs_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , PDUSessionAggregateMaximumBitRate *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_UL_NGU_UP_TNLInformation
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , UPTransportLayerInformation *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , UPTransportLayerInformationList *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_DataForwardingNotPossible
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , DataForwardingNotPossible value);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionType
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , PDUSessionType value);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_SecurityIndication
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , SecurityIndication *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_NetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , NetworkInstance value);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_QosFlowSetupRequestList
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , QosFlowSetupRequestList *pvalue);

EXTERN void asn1SetTC_PDUSessionResourceSetupRequestTransfer_protocolIEs_element_PDUSessionResourceSetupRequestTransferIEs_id_CommonNetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pElem
   , CommonNetworkInstance *pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupRequestTransfer_protocolIEs_element (
   PDUSessionResourceSetupRequestTransfer_protocolIEs_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupRequestTransfer_protocolIEs        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupRequestTransfer'
*/
/* List of PDUSessionResourceSetupRequestTransfer_protocolIEs_element */
typedef OSRTDList PDUSessionResourceSetupRequestTransfer_protocolIEs;

EXTERN int asn1PE_PDUSessionResourceSetupRequestTransfer_protocolIEs (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupRequestTransfer_protocolIEs (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupRequestTransfer_protocolIEs 
   (const char* name, const PDUSessionResourceSetupRequestTransfer_protocolIEs* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupRequestTransfer_protocolIEs (
   const char* name, 
   PDUSessionResourceSetupRequestTransfer_protocolIEs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupRequestTransfer_protocolIEs (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupRequestTransfer_protocolIEs* pvalue);

/* Append IE with value type PDUSessionAggregateMaximumBitRate to list */
struct PDUSessionAggregateMaximumBitRate ;
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionAggregateMaximumBitRate
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   struct PDUSessionAggregateMaximumBitRate *pvalue);

/* Append IE with value type UPTransportLayerInformation to list */
struct UPTransportLayerInformation ;
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_UL_NGU_UP_TNLInformation
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   struct UPTransportLayerInformation *pvalue);

/* Append IE with value type UPTransportLayerInformationList to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_AdditionalUL_NGU_UP_TNLInformation
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   UPTransportLayerInformationList *pvalue);

/* Append IE with value type DataForwardingNotPossible to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_DataForwardingNotPossible
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   DataForwardingNotPossible value);

/* Append IE with value type PDUSessionType to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_PDUSessionType
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   PDUSessionType value);

/* Append IE with value type SecurityIndication to list */
struct SecurityIndication ;
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_SecurityIndication
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   struct SecurityIndication *pvalue);

/* Append IE with value type NetworkInstance to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_NetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   NetworkInstance value);

/* Append IE with value type QosFlowSetupRequestList to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_QosFlowSetupRequestList
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   QosFlowSetupRequestList *pvalue);

/* Append IE with value type CommonNetworkInstance to list */
EXTERN int asn1Append_PDUSessionResourceSetupRequestTransferIEs_id_CommonNetworkInstance
   (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   CommonNetworkInstance *pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupRequestTransfer_protocolIEs_element* 
   asn1Get_PDUSessionResourceSetupRequestTransfer_protocolIEs 
   (ProtocolIE_ID id, 
   PDUSessionResourceSetupRequestTransfer_protocolIEs* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupRequestTransfer_protocolIEs 
   (OSCTXT* pctxt, ProtocolIE_ID id, 
   PDUSessionResourceSetupRequestTransfer_protocolIEs* plist, 
   PDUSessionResourceSetupRequestTransfer_protocolIEs* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupRequestTransfer_protocolIEs (
   PDUSessionResourceSetupRequestTransfer_protocolIEs* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupRequestTransfer                    */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupRequestTransfer ::= SEQUENCE {
   protocolIEs [0] SEQUENCE (SIZE (0..maxProtocolIEs)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PDUSessionResourceSetupRequestTransferIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PDUSessionResourceSetupRequestTransferIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PDUSessionResourceSetupRequestTransferIEs}{@id})
   },
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupRequestTransfer {
   PDUSessionResourceSetupRequestTransfer_protocolIEs protocolIEs;
   OSRTDList extElem1;
} PDUSessionResourceSetupRequestTransfer;

EXTERN int asn1PE_PDUSessionResourceSetupRequestTransfer (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupRequestTransfer (OSCTXT* pctxt, PDUSessionResourceSetupRequestTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupRequestTransfer 
   (const char* name, const PDUSessionResourceSetupRequestTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupRequestTransfer (const char* name, 
   PDUSessionResourceSetupRequestTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupRequestTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupRequestTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupRequestTransfer (
   PDUSessionResourceSetupRequestTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemCxtReq_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemCxtReq'
*/
typedef struct EXTERN PDUSessionResourceSetupItemCxtReq_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSetupItemCxtReq_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSetupItemCxtReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemCxtReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemCxtReq_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSetupItemCxtReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemCxtReq_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSetupItemCxtReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemCxtReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemCxtReq_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemCxtReq_iE_Extensions_element (
   PDUSessionResourceSetupItemCxtReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemCxtReq_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemCxtReq'
*/
/* List of PDUSessionResourceSetupItemCxtReq_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSetupItemCxtReq_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSetupItemCxtReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtReq_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemCxtReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtReq_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemCxtReq_iE_Extensions 
   (const char* name, const PDUSessionResourceSetupItemCxtReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemCxtReq_iE_Extensions (
   const char* name, PDUSessionResourceSetupItemCxtReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemCxtReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemCxtReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupItemCxtReq_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSetupItemCxtReq_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSetupItemCxtReq_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupItemCxtReq_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSetupItemCxtReq_iE_Extensions* plist, 
   PDUSessionResourceSetupItemCxtReq_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupItemCxtReq_iE_Extensions (
   PDUSessionResourceSetupItemCxtReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemCxtReq                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupItemCxtReq ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   nAS-PDU [1] NAS-PDU OPTIONAL,
   s-NSSAI [2] S-NSSAI,
   pDUSessionResourceSetupRequestTransfer [3] OCTET STRING (CONTAINING PDUSessionResourceSetupRequestTransfer),
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSetupItemCxtReq-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSetupItemCxtReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSetupItemCxtReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupItemCxtReq {
   struct {
      unsigned nAS_PDUPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   NAS_PDU nAS_PDU;
   S_NSSAI s_NSSAI;
   OSDynOctStr pDUSessionResourceSetupRequestTransfer;
   //PDUSessionResourceSetupRequestTransfer pDUSessionResourceSetupRequestTransfer;
   PDUSessionResourceSetupItemCxtReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSetupItemCxtReq;

EXTERN int asn1PE_PDUSessionResourceSetupItemCxtReq (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemCxtReq (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemCxtReq 
   (const char* name, const PDUSessionResourceSetupItemCxtReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemCxtReq (const char* name, 
   PDUSessionResourceSetupItemCxtReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemCxtReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemCxtReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemCxtReq (
   PDUSessionResourceSetupItemCxtReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupListCxtReq                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupListCxtReq ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceSetupItemCxtReq
*/
/* List of PDUSessionResourceSetupItemCxtReq */
typedef OSRTDList PDUSessionResourceSetupListCxtReq;

EXTERN int asn1PE_PDUSessionResourceSetupListCxtReq (OSCTXT* pctxt, PDUSessionResourceSetupListCxtReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupListCxtReq (OSCTXT* pctxt, PDUSessionResourceSetupListCxtReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupListCxtReq 
   (const char* name, const PDUSessionResourceSetupListCxtReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupListCxtReq (const char* name, 
   PDUSessionResourceSetupListCxtReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupListCxtReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupListCxtReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupListCxtReq (
   PDUSessionResourceSetupListCxtReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupResponseTransfer_iE_Extensions_el  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupResponseTransfer'
*/
typedef struct EXTERN PDUSessionResourceSetupResponseTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSetupResponseTransfer_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSetupResponseTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupResponseTransfer_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupResponseTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupResponseTransfer_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSetupResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupResponseTransfer_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSetupResponseTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupResponseTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupResponseTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupResponseTransfer_iE_Extensions_element (
   PDUSessionResourceSetupResponseTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupResponseTransfer_iE_Extensions     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupResponseTransfer'
*/
/* List of PDUSessionResourceSetupResponseTransfer_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSetupResponseTransfer_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSetupResponseTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupResponseTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupResponseTransfer_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupResponseTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupResponseTransfer_iE_Extensions 
   (const char* name, const PDUSessionResourceSetupResponseTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupResponseTransfer_iE_Extensions (
   const char* name, 
   PDUSessionResourceSetupResponseTransfer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupResponseTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupResponseTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupResponseTransfer_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSetupResponseTransfer_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSetupResponseTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupResponseTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSetupResponseTransfer_iE_Extensions* plist, 
   PDUSessionResourceSetupResponseTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupResponseTransfer_iE_Extensions (
   PDUSessionResourceSetupResponseTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupResponseTransfer                   */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupResponseTransfer ::= SEQUENCE {
   dLQosFlowPerTNLInformation [0] QosFlowPerTNLInformation,
   additionalDLQosFlowPerTNLInformation [1] QosFlowPerTNLInformationList OPTIONAL,
   securityResult [2] SecurityResult OPTIONAL,
   qosFlowFailedToSetupList [3] QosFlowListWithCause OPTIONAL,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSetupResponseTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSetupResponseTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSetupResponseTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupResponseTransfer {
   struct {
      unsigned additionalDLQosFlowPerTNLInformationPresent : 1;
      unsigned securityResultPresent : 1;
      unsigned qosFlowFailedToSetupListPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowPerTNLInformation dLQosFlowPerTNLInformation;
   QosFlowPerTNLInformationList additionalDLQosFlowPerTNLInformation;
   SecurityResult securityResult;
   QosFlowListWithCause qosFlowFailedToSetupList;
   PDUSessionResourceSetupResponseTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSetupResponseTransfer;

EXTERN int asn1PE_PDUSessionResourceSetupResponseTransfer (OSCTXT* pctxt, PDUSessionResourceSetupResponseTransfer* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupResponseTransfer (OSCTXT* pctxt, PDUSessionResourceSetupResponseTransfer* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupResponseTransfer 
   (const char* name, const PDUSessionResourceSetupResponseTransfer* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupResponseTransfer (const char* name, 
   PDUSessionResourceSetupResponseTransfer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupResponseTransfer (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupResponseTransfer* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupResponseTransfer (
   PDUSessionResourceSetupResponseTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemCxtRes_iE_Extensions_element   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemCxtRes'
*/
typedef struct EXTERN PDUSessionResourceSetupItemCxtRes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSetupItemCxtRes_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSetupItemCxtRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemCxtRes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemCxtRes_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemCxtRes_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSetupItemCxtRes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemCxtRes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemCxtRes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemCxtRes_iE_Extensions_element (
   PDUSessionResourceSetupItemCxtRes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemCxtRes_iE_Extensions           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemCxtRes'
*/
/* List of PDUSessionResourceSetupItemCxtRes_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSetupItemCxtRes_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSetupItemCxtRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtRes_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemCxtRes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtRes_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemCxtRes_iE_Extensions 
   (const char* name, const PDUSessionResourceSetupItemCxtRes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemCxtRes_iE_Extensions (
   const char* name, PDUSessionResourceSetupItemCxtRes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemCxtRes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemCxtRes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupItemCxtRes_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSetupItemCxtRes_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSetupItemCxtRes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupItemCxtRes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSetupItemCxtRes_iE_Extensions* plist, 
   PDUSessionResourceSetupItemCxtRes_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupItemCxtRes_iE_Extensions (
   PDUSessionResourceSetupItemCxtRes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemCxtRes                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupItemCxtRes ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceSetupResponseTransfer [1] OCTET STRING (CONTAINING PDUSessionResourceSetupResponseTransfer),
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSetupItemCxtRes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSetupItemCxtRes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSetupItemCxtRes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupItemCxtRes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceSetupResponseTransfer;
  // PDUSessionResourceSetupResponseTransfer pDUSessionResourceSetupResponseTransfer;
   PDUSessionResourceSetupItemCxtRes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSetupItemCxtRes;

EXTERN int asn1PE_PDUSessionResourceSetupItemCxtRes (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemCxtRes (OSCTXT* pctxt, PDUSessionResourceSetupItemCxtRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemCxtRes 
   (const char* name, const PDUSessionResourceSetupItemCxtRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemCxtRes (const char* name, 
   PDUSessionResourceSetupItemCxtRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemCxtRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemCxtRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemCxtRes (
   PDUSessionResourceSetupItemCxtRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupListCxtRes                         */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupListCxtRes ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceSetupItemCxtRes
*/
/* List of PDUSessionResourceSetupItemCxtRes */
typedef OSRTDList PDUSessionResourceSetupListCxtRes;

EXTERN int asn1PE_PDUSessionResourceSetupListCxtRes (OSCTXT* pctxt, PDUSessionResourceSetupListCxtRes* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupListCxtRes (OSCTXT* pctxt, PDUSessionResourceSetupListCxtRes* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupListCxtRes 
   (const char* name, const PDUSessionResourceSetupListCxtRes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupListCxtRes (const char* name, 
   PDUSessionResourceSetupListCxtRes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupListCxtRes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupListCxtRes* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupListCxtRes (
   PDUSessionResourceSetupListCxtRes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemHOReq_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemHOReq'
*/
typedef struct EXTERN PDUSessionResourceSetupItemHOReq_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSetupItemHOReq_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSetupItemHOReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemHOReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemHOReq_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemHOReq_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSetupItemHOReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemHOReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemHOReq_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemHOReq_iE_Extensions_element (
   PDUSessionResourceSetupItemHOReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemHOReq_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemHOReq'
*/
/* List of PDUSessionResourceSetupItemHOReq_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSetupItemHOReq_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSetupItemHOReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemHOReq_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemHOReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemHOReq_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemHOReq_iE_Extensions 
   (const char* name, const PDUSessionResourceSetupItemHOReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemHOReq_iE_Extensions (
   const char* name, PDUSessionResourceSetupItemHOReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemHOReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemHOReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupItemHOReq_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSetupItemHOReq_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSetupItemHOReq_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupItemHOReq_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSetupItemHOReq_iE_Extensions* plist, 
   PDUSessionResourceSetupItemHOReq_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupItemHOReq_iE_Extensions (
   PDUSessionResourceSetupItemHOReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemHOReq                          */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupItemHOReq ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   s-NSSAI [1] S-NSSAI,
   handoverRequestTransfer [2] OCTET STRING,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSetupItemHOReq-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSetupItemHOReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSetupItemHOReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupItemHOReq {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   S_NSSAI s_NSSAI;
   OSDynOctStr handoverRequestTransfer;
   PDUSessionResourceSetupItemHOReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSetupItemHOReq;

EXTERN int asn1PE_PDUSessionResourceSetupItemHOReq (OSCTXT* pctxt, PDUSessionResourceSetupItemHOReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemHOReq (OSCTXT* pctxt, PDUSessionResourceSetupItemHOReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemHOReq 
   (const char* name, const PDUSessionResourceSetupItemHOReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemHOReq (const char* name, 
   PDUSessionResourceSetupItemHOReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemHOReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemHOReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemHOReq (
   PDUSessionResourceSetupItemHOReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupListHOReq                          */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupListHOReq ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceSetupItemHOReq
*/
/* List of PDUSessionResourceSetupItemHOReq */
typedef OSRTDList PDUSessionResourceSetupListHOReq;

EXTERN int asn1PE_PDUSessionResourceSetupListHOReq (OSCTXT* pctxt, PDUSessionResourceSetupListHOReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupListHOReq (OSCTXT* pctxt, PDUSessionResourceSetupListHOReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupListHOReq 
   (const char* name, const PDUSessionResourceSetupListHOReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupListHOReq (const char* name, 
   PDUSessionResourceSetupListHOReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupListHOReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupListHOReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupListHOReq (
   PDUSessionResourceSetupListHOReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemSUReq_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemSUReq'
*/
typedef struct EXTERN PDUSessionResourceSetupItemSUReq_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSetupItemSUReq_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSetupItemSUReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemSUReq_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemSUReq_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemSUReq_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemSUReq_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSetupItemSUReq_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemSUReq_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSetupItemSUReq_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemSUReq_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemSUReq_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemSUReq_iE_Extensions_element (
   PDUSessionResourceSetupItemSUReq_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemSUReq_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemSUReq'
*/
/* List of PDUSessionResourceSetupItemSUReq_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSetupItemSUReq_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSetupItemSUReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemSUReq_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemSUReq_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemSUReq_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemSUReq_iE_Extensions 
   (const char* name, const PDUSessionResourceSetupItemSUReq_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemSUReq_iE_Extensions (
   const char* name, PDUSessionResourceSetupItemSUReq_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemSUReq_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemSUReq_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupItemSUReq_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSetupItemSUReq_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSetupItemSUReq_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupItemSUReq_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSetupItemSUReq_iE_Extensions* plist, 
   PDUSessionResourceSetupItemSUReq_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupItemSUReq_iE_Extensions (
   PDUSessionResourceSetupItemSUReq_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemSUReq                          */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupItemSUReq ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionNAS-PDU [1] NAS-PDU OPTIONAL,
   s-NSSAI [2] S-NSSAI,
   pDUSessionResourceSetupRequestTransfer [3] OCTET STRING,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSetupItemSUReq-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSetupItemSUReq-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSetupItemSUReq-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupItemSUReq {
   struct {
      unsigned pDUSessionNAS_PDUPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   NAS_PDU pDUSessionNAS_PDU;
   S_NSSAI s_NSSAI;
   OSDynOctStr pDUSessionResourceSetupRequestTransfer;
   PDUSessionResourceSetupItemSUReq_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSetupItemSUReq;

EXTERN int asn1PE_PDUSessionResourceSetupItemSUReq (OSCTXT* pctxt, PDUSessionResourceSetupItemSUReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemSUReq (OSCTXT* pctxt, PDUSessionResourceSetupItemSUReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemSUReq 
   (const char* name, const PDUSessionResourceSetupItemSUReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemSUReq (const char* name, 
   PDUSessionResourceSetupItemSUReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemSUReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemSUReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemSUReq (
   PDUSessionResourceSetupItemSUReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupListSUReq                          */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupListSUReq ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceSetupItemSUReq
*/
/* List of PDUSessionResourceSetupItemSUReq */
typedef OSRTDList PDUSessionResourceSetupListSUReq;

EXTERN int asn1PE_PDUSessionResourceSetupListSUReq (OSCTXT* pctxt, PDUSessionResourceSetupListSUReq* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupListSUReq (OSCTXT* pctxt, PDUSessionResourceSetupListSUReq* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupListSUReq 
   (const char* name, const PDUSessionResourceSetupListSUReq* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupListSUReq (const char* name, 
   PDUSessionResourceSetupListSUReq* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupListSUReq (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupListSUReq* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupListSUReq (
   PDUSessionResourceSetupListSUReq* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemSURes_iE_Extensions_element    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemSURes'
*/
typedef struct EXTERN PDUSessionResourceSetupItemSURes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSetupItemSURes_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSetupItemSURes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemSURes_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemSURes_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemSURes_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSetupItemSURes_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemSURes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemSURes_iE_Extensions_element (
   PDUSessionResourceSetupItemSURes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemSURes_iE_Extensions            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSetupItemSURes'
*/
/* List of PDUSessionResourceSetupItemSURes_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSetupItemSURes_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSetupItemSURes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemSURes_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemSURes_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSetupItemSURes_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemSURes_iE_Extensions 
   (const char* name, const PDUSessionResourceSetupItemSURes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemSURes_iE_Extensions (
   const char* name, PDUSessionResourceSetupItemSURes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemSURes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemSURes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSetupItemSURes_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSetupItemSURes_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSetupItemSURes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSetupItemSURes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSetupItemSURes_iE_Extensions* plist, 
   PDUSessionResourceSetupItemSURes_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSetupItemSURes_iE_Extensions (
   PDUSessionResourceSetupItemSURes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupItemSURes                          */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupItemSURes ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceSetupResponseTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSetupItemSURes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSetupItemSURes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSetupItemSURes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSetupItemSURes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceSetupResponseTransfer;
   PDUSessionResourceSetupItemSURes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSetupItemSURes;

EXTERN int asn1PE_PDUSessionResourceSetupItemSURes (OSCTXT* pctxt, PDUSessionResourceSetupItemSURes* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupItemSURes (OSCTXT* pctxt, PDUSessionResourceSetupItemSURes* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupItemSURes 
   (const char* name, const PDUSessionResourceSetupItemSURes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupItemSURes (const char* name, 
   PDUSessionResourceSetupItemSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupItemSURes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupItemSURes* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupItemSURes (
   PDUSessionResourceSetupItemSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSetupListSURes                          */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSetupListSURes ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceSetupItemSURes
*/
/* List of PDUSessionResourceSetupItemSURes */
typedef OSRTDList PDUSessionResourceSetupListSURes;

EXTERN int asn1PE_PDUSessionResourceSetupListSURes (OSCTXT* pctxt, PDUSessionResourceSetupListSURes* pvalue);

EXTERN int asn1PD_PDUSessionResourceSetupListSURes (OSCTXT* pctxt, PDUSessionResourceSetupListSURes* pvalue);

EXTERN void asn1Print_PDUSessionResourceSetupListSURes 
   (const char* name, const PDUSessionResourceSetupListSURes* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSetupListSURes (const char* name, 
   PDUSessionResourceSetupListSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSetupListSURes (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSetupListSURes* pvalue);

EXTERN int asn1Init_PDUSessionResourceSetupListSURes (
   PDUSessionResourceSetupListSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSwitchedItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSwitchedItem'
*/
typedef struct EXTERN PDUSessionResourceSwitchedItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceSwitchedItem_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceSwitchedItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSwitchedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceSwitchedItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceSwitchedItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceSwitchedItem_iE_Extensions_element 
   (const char* name, const PDUSessionResourceSwitchedItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSwitchedItem_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceSwitchedItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSwitchedItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSwitchedItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceSwitchedItem_iE_Extensions_element (
   PDUSessionResourceSwitchedItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSwitchedItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceSwitchedItem'
*/
/* List of PDUSessionResourceSwitchedItem_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceSwitchedItem_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceSwitchedItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSwitchedItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceSwitchedItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceSwitchedItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceSwitchedItem_iE_Extensions 
   (const char* name, const PDUSessionResourceSwitchedItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSwitchedItem_iE_Extensions (
   const char* name, PDUSessionResourceSwitchedItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSwitchedItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSwitchedItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceSwitchedItem_iE_Extensions_element* 
   asn1Get_PDUSessionResourceSwitchedItem_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceSwitchedItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceSwitchedItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceSwitchedItem_iE_Extensions* plist, 
   PDUSessionResourceSwitchedItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceSwitchedItem_iE_Extensions (
   PDUSessionResourceSwitchedItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSwitchedItem                            */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSwitchedItem ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pathSwitchRequestAcknowledgeTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceSwitchedItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceSwitchedItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceSwitchedItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceSwitchedItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pathSwitchRequestAcknowledgeTransfer;
   PDUSessionResourceSwitchedItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceSwitchedItem;

EXTERN int asn1PE_PDUSessionResourceSwitchedItem (OSCTXT* pctxt, PDUSessionResourceSwitchedItem* pvalue);

EXTERN int asn1PD_PDUSessionResourceSwitchedItem (OSCTXT* pctxt, PDUSessionResourceSwitchedItem* pvalue);

EXTERN void asn1Print_PDUSessionResourceSwitchedItem 
   (const char* name, const PDUSessionResourceSwitchedItem* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSwitchedItem (const char* name, 
   PDUSessionResourceSwitchedItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSwitchedItem (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSwitchedItem* pvalue);

EXTERN int asn1Init_PDUSessionResourceSwitchedItem (
   PDUSessionResourceSwitchedItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceSwitchedList                            */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceSwitchedList ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceSwitchedItem
*/
/* List of PDUSessionResourceSwitchedItem */
typedef OSRTDList PDUSessionResourceSwitchedList;

EXTERN int asn1PE_PDUSessionResourceSwitchedList (OSCTXT* pctxt, PDUSessionResourceSwitchedList* pvalue);

EXTERN int asn1PD_PDUSessionResourceSwitchedList (OSCTXT* pctxt, PDUSessionResourceSwitchedList* pvalue);

EXTERN void asn1Print_PDUSessionResourceSwitchedList 
   (const char* name, const PDUSessionResourceSwitchedList* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceSwitchedList (const char* name, 
   PDUSessionResourceSwitchedList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceSwitchedList (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceSwitchedList* pvalue);

EXTERN int asn1Init_PDUSessionResourceSwitchedList (
   PDUSessionResourceSwitchedList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceToBeSwitchedDLItem'
*/
typedef struct EXTERN PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element 
   (const char* name, const PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element (
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToBeSwitchedDLItem_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceToBeSwitchedDLItem'
*/
/* List of PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceToBeSwitchedDLItem_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions 
   (const char* name, const PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions (
   const char* name, 
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceToBeSwitchedDLItem_iE_Extensions_element* 
   asn1Get_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* plist, 
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceToBeSwitchedDLItem_iE_Extensions (
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToBeSwitchedDLItem                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceToBeSwitchedDLItem ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pathSwitchRequestTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceToBeSwitchedDLItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceToBeSwitchedDLItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceToBeSwitchedDLItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceToBeSwitchedDLItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pathSwitchRequestTransfer;
   PDUSessionResourceToBeSwitchedDLItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceToBeSwitchedDLItem;

EXTERN int asn1PE_PDUSessionResourceToBeSwitchedDLItem (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLItem* pvalue);

EXTERN int asn1PD_PDUSessionResourceToBeSwitchedDLItem (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLItem* pvalue);

EXTERN void asn1Print_PDUSessionResourceToBeSwitchedDLItem 
   (const char* name, const PDUSessionResourceToBeSwitchedDLItem* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToBeSwitchedDLItem (const char* name, 
   PDUSessionResourceToBeSwitchedDLItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToBeSwitchedDLItem (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToBeSwitchedDLItem* pvalue);

EXTERN int asn1Init_PDUSessionResourceToBeSwitchedDLItem (
   PDUSessionResourceToBeSwitchedDLItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToBeSwitchedDLList                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceToBeSwitchedDLList ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceToBeSwitchedDLItem
*/
/* List of PDUSessionResourceToBeSwitchedDLItem */
typedef OSRTDList PDUSessionResourceToBeSwitchedDLList;

EXTERN int asn1PE_PDUSessionResourceToBeSwitchedDLList (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLList* pvalue);

EXTERN int asn1PD_PDUSessionResourceToBeSwitchedDLList (OSCTXT* pctxt, PDUSessionResourceToBeSwitchedDLList* pvalue);

EXTERN void asn1Print_PDUSessionResourceToBeSwitchedDLList 
   (const char* name, const PDUSessionResourceToBeSwitchedDLList* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToBeSwitchedDLList (const char* name, 
   PDUSessionResourceToBeSwitchedDLList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToBeSwitchedDLList (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToBeSwitchedDLList* pvalue);

EXTERN int asn1Init_PDUSessionResourceToBeSwitchedDLList (
   PDUSessionResourceToBeSwitchedDLList* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceToReleaseItemHOCmd'
*/
typedef struct EXTERN PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element 
   (const char* name, const PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element (
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseItemHOCmd_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceToReleaseItemHOCmd'
*/
/* List of PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceToReleaseItemHOCmd_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions 
   (const char* name, const PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions (
   const char* name, 
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceToReleaseItemHOCmd_iE_Extensions_element* 
   asn1Get_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* plist, 
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceToReleaseItemHOCmd_iE_Extensions (
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseItemHOCmd                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceToReleaseItemHOCmd ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   handoverPreparationUnsuccessfulTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceToReleaseItemHOCmd-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceToReleaseItemHOCmd-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceToReleaseItemHOCmd-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceToReleaseItemHOCmd {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr handoverPreparationUnsuccessfulTransfer;
   PDUSessionResourceToReleaseItemHOCmd_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceToReleaseItemHOCmd;

EXTERN int asn1PE_PDUSessionResourceToReleaseItemHOCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseItemHOCmd* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseItemHOCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseItemHOCmd* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseItemHOCmd 
   (const char* name, const PDUSessionResourceToReleaseItemHOCmd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseItemHOCmd (const char* name, 
   PDUSessionResourceToReleaseItemHOCmd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseItemHOCmd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseItemHOCmd* pvalue);

EXTERN int asn1Init_PDUSessionResourceToReleaseItemHOCmd (
   PDUSessionResourceToReleaseItemHOCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseListHOCmd                      */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceToReleaseListHOCmd ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceToReleaseItemHOCmd
*/
/* List of PDUSessionResourceToReleaseItemHOCmd */
typedef OSRTDList PDUSessionResourceToReleaseListHOCmd;

EXTERN int asn1PE_PDUSessionResourceToReleaseListHOCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseListHOCmd* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseListHOCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseListHOCmd* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseListHOCmd 
   (const char* name, const PDUSessionResourceToReleaseListHOCmd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseListHOCmd (const char* name, 
   PDUSessionResourceToReleaseListHOCmd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseListHOCmd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseListHOCmd* pvalue);

EXTERN int asn1Init_PDUSessionResourceToReleaseListHOCmd (
   PDUSessionResourceToReleaseListHOCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_elem  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceToReleaseItemRelCmd'
*/
typedef struct EXTERN PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element;

EXTERN int asn1PE_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element (OSCTXT* pctxt, PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element 
   (const char* name, const PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element (
   const char* name, 
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element (
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseItemRelCmd_iE_Extensions       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PDUSessionResourceToReleaseItemRelCmd'
*/
/* List of PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element */
typedef OSRTDList PDUSessionResourceToReleaseItemRelCmd_iE_Extensions;

EXTERN int asn1PE_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions (OSCTXT* pctxt, PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions 
   (const char* name, const PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions (
   const char* name, 
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PDUSessionResourceToReleaseItemRelCmd_iE_Extensions_element* 
   asn1Get_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions 
   (ProtocolExtensionID id, 
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* plist, 
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* pmatches);

EXTERN int asn1Init_PDUSessionResourceToReleaseItemRelCmd_iE_Extensions (
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseItemRelCmd                     */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceToReleaseItemRelCmd ::= SEQUENCE {
   pDUSessionID [0] PDUSessionID,
   pDUSessionResourceReleaseCommandTransfer [1] OCTET STRING,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PDUSessionResourceToReleaseItemRelCmd-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PDUSessionResourceToReleaseItemRelCmd-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PDUSessionResourceToReleaseItemRelCmd-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PDUSessionResourceToReleaseItemRelCmd {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PDUSessionID pDUSessionID;
   OSDynOctStr pDUSessionResourceReleaseCommandTransfer;
   PDUSessionResourceToReleaseItemRelCmd_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PDUSessionResourceToReleaseItemRelCmd;

EXTERN int asn1PE_PDUSessionResourceToReleaseItemRelCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseItemRelCmd* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseItemRelCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseItemRelCmd* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseItemRelCmd 
   (const char* name, const PDUSessionResourceToReleaseItemRelCmd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseItemRelCmd (const char* name, 
   PDUSessionResourceToReleaseItemRelCmd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseItemRelCmd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseItemRelCmd* pvalue);

EXTERN int asn1Init_PDUSessionResourceToReleaseItemRelCmd (
   PDUSessionResourceToReleaseItemRelCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionResourceToReleaseListRelCmd                     */
/*                                                            */
/**************************************************************/
/*
PDUSessionResourceToReleaseListRelCmd ::= SEQUENCE (SIZE (1..maxnoofPDUSessions)) OF PDUSessionResourceToReleaseItemRelCmd
*/
/* List of PDUSessionResourceToReleaseItemRelCmd */
typedef OSRTDList PDUSessionResourceToReleaseListRelCmd;

EXTERN int asn1PE_PDUSessionResourceToReleaseListRelCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseListRelCmd* pvalue);

EXTERN int asn1PD_PDUSessionResourceToReleaseListRelCmd (OSCTXT* pctxt, PDUSessionResourceToReleaseListRelCmd* pvalue);

EXTERN void asn1Print_PDUSessionResourceToReleaseListRelCmd 
   (const char* name, const PDUSessionResourceToReleaseListRelCmd* pvalue);

EXTERN int asn1PrtToStr_PDUSessionResourceToReleaseListRelCmd (const char* name, 
   PDUSessionResourceToReleaseListRelCmd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUSessionResourceToReleaseListRelCmd (OSCTXT *pctxt, 
   const char* name, const PDUSessionResourceToReleaseListRelCmd* pvalue);

EXTERN int asn1Init_PDUSessionResourceToReleaseListRelCmd (
   PDUSessionResourceToReleaseListRelCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNSupportItem_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PLMNSupportItem'
*/
typedef struct EXTERN PLMNSupportItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} PLMNSupportItem_iE_Extensions_element;

EXTERN int asn1PE_PLMNSupportItem_iE_Extensions_element (OSCTXT* pctxt, PLMNSupportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_PLMNSupportItem_iE_Extensions_element (OSCTXT* pctxt, PLMNSupportItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_PLMNSupportItem_iE_Extensions_element 
   (const char* name, const PLMNSupportItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_PLMNSupportItem_iE_Extensions_element (const char* name, 
   PLMNSupportItem_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PLMNSupportItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const PLMNSupportItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_PLMNSupportItem_iE_Extensions_element (
   PLMNSupportItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNSupportItem_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PLMNSupportItem'
*/
/* List of PLMNSupportItem_iE_Extensions_element */
typedef OSRTDList PLMNSupportItem_iE_Extensions;

EXTERN int asn1PE_PLMNSupportItem_iE_Extensions (OSCTXT* pctxt, PLMNSupportItem_iE_Extensions* pvalue);

EXTERN int asn1PD_PLMNSupportItem_iE_Extensions (OSCTXT* pctxt, PLMNSupportItem_iE_Extensions* pvalue);

EXTERN void asn1Print_PLMNSupportItem_iE_Extensions 
   (const char* name, const PLMNSupportItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_PLMNSupportItem_iE_Extensions (const char* name, 
   PLMNSupportItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PLMNSupportItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const PLMNSupportItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct PLMNSupportItem_iE_Extensions_element* 
   asn1Get_PLMNSupportItem_iE_Extensions (ProtocolExtensionID id, 
   PLMNSupportItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_PLMNSupportItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   PLMNSupportItem_iE_Extensions* plist, 
   PLMNSupportItem_iE_Extensions* pmatches);

EXTERN int asn1Init_PLMNSupportItem_iE_Extensions (
   PLMNSupportItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNSupportItem                                           */
/*                                                            */
/**************************************************************/
/*
PLMNSupportItem ::= SEQUENCE {
   pLMNIdentity [0] PLMNIdentity,
   sliceSupportList [1] SliceSupportList,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({PLMNSupportItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({PLMNSupportItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({PLMNSupportItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN PLMNSupportItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   PLMNIdentity pLMNIdentity;
   SliceSupportList sliceSupportList;
   PLMNSupportItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} PLMNSupportItem;

EXTERN int asn1PE_PLMNSupportItem (OSCTXT* pctxt, PLMNSupportItem* pvalue);

EXTERN int asn1PD_PLMNSupportItem (OSCTXT* pctxt, PLMNSupportItem* pvalue);

EXTERN void asn1Print_PLMNSupportItem 
   (const char* name, const PLMNSupportItem* pvalue);

EXTERN int asn1PrtToStr_PLMNSupportItem (const char* name, PLMNSupportItem* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PLMNSupportItem (OSCTXT *pctxt, 
   const char* name, const PLMNSupportItem* pvalue);

EXTERN int asn1Init_PLMNSupportItem (PLMNSupportItem* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNSupportList                                           */
/*                                                            */
/**************************************************************/
/*
PLMNSupportList ::= SEQUENCE (SIZE (1..maxnoofPLMNs)) OF PLMNSupportItem
*/
/* List of PLMNSupportItem */
typedef OSRTDList PLMNSupportList;

EXTERN int asn1PE_PLMNSupportList (OSCTXT* pctxt, PLMNSupportList* pvalue);

EXTERN int asn1PD_PLMNSupportList (OSCTXT* pctxt, PLMNSupportList* pvalue);

EXTERN void asn1Print_PLMNSupportList 
   (const char* name, const PLMNSupportList* pvalue);

EXTERN int asn1PrtToStr_PLMNSupportList (const char* name, PLMNSupportList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PLMNSupportList (OSCTXT *pctxt, 
   const char* name, const PLMNSupportList* pvalue);

EXTERN int asn1Init_PLMNSupportList (PLMNSupportList* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailedCellIDList_choice_Extensions                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PWSFailedCellIDList'
*/
typedef struct EXTERN PWSFailedCellIDList_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} PWSFailedCellIDList_choice_Extensions;

EXTERN int asn1PE_PWSFailedCellIDList_choice_Extensions (OSCTXT* pctxt, PWSFailedCellIDList_choice_Extensions* pvalue);

EXTERN int asn1PD_PWSFailedCellIDList_choice_Extensions (OSCTXT* pctxt, PWSFailedCellIDList_choice_Extensions* pvalue);

EXTERN void asn1Print_PWSFailedCellIDList_choice_Extensions 
   (const char* name, const PWSFailedCellIDList_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_PWSFailedCellIDList_choice_Extensions (const char* name, 
   PWSFailedCellIDList_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSFailedCellIDList_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const PWSFailedCellIDList_choice_Extensions* pvalue);

EXTERN int asn1Init_PWSFailedCellIDList_choice_Extensions (
   PWSFailedCellIDList_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  PWSFailedCellIDList                                       */
/*                                                            */
/**************************************************************/
/*
PWSFailedCellIDList ::= CHOICE {
   eUTRA-CGI-PWSFailedList [0] EUTRA-CGIList,
   nR-CGI-PWSFailedList [1] NR-CGIList,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({PWSFailedCellIDList-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({PWSFailedCellIDList-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({PWSFailedCellIDList-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_PWSFailedCellIDList_eUTRA_CGI_PWSFailedList 1
#define T_PWSFailedCellIDList_nR_CGI_PWSFailedList 2
#define T_PWSFailedCellIDList_choice_Extensions 3

typedef struct EXTERN PWSFailedCellIDList {
   OSINT32 t;
   union {
      /* t = 1 */
      EUTRA_CGIList *eUTRA_CGI_PWSFailedList;
      /* t = 2 */
      NR_CGIList *nR_CGI_PWSFailedList;
      /* t = 3 */
      PWSFailedCellIDList_choice_Extensions *choice_Extensions;
   } u;
} PWSFailedCellIDList;

EXTERN int asn1PE_PWSFailedCellIDList (OSCTXT* pctxt, PWSFailedCellIDList* pvalue);

EXTERN int asn1PD_PWSFailedCellIDList (OSCTXT* pctxt, PWSFailedCellIDList* pvalue);

EXTERN void asn1Print_PWSFailedCellIDList 
   (const char* name, const PWSFailedCellIDList* pvalue);

EXTERN int asn1PrtToStr_PWSFailedCellIDList (const char* name, 
   PWSFailedCellIDList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PWSFailedCellIDList (OSCTXT *pctxt, 
   const char* name, const PWSFailedCellIDList* pvalue);

EXTERN int asn1Init_PWSFailedCellIDList (PWSFailedCellIDList* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupResponseItemSURes_iE_Extensions_element       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowSetupResponseItemSURes'
*/
typedef struct EXTERN QosFlowSetupResponseItemSURes_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} QosFlowSetupResponseItemSURes_iE_Extensions_element;

EXTERN int asn1PE_QosFlowSetupResponseItemSURes_iE_Extensions_element (OSCTXT* pctxt, QosFlowSetupResponseItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PD_QosFlowSetupResponseItemSURes_iE_Extensions_element (OSCTXT* pctxt, QosFlowSetupResponseItemSURes_iE_Extensions_element* pvalue);

EXTERN void asn1Print_QosFlowSetupResponseItemSURes_iE_Extensions_element 
   (const char* name, const QosFlowSetupResponseItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupResponseItemSURes_iE_Extensions_element (
   const char* name, 
   QosFlowSetupResponseItemSURes_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupResponseItemSURes_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupResponseItemSURes_iE_Extensions_element* pvalue);

EXTERN int asn1Init_QosFlowSetupResponseItemSURes_iE_Extensions_element (
   QosFlowSetupResponseItemSURes_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupResponseItemSURes_iE_Extensions               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'QosFlowSetupResponseItemSURes'
*/
/* List of QosFlowSetupResponseItemSURes_iE_Extensions_element */
typedef OSRTDList QosFlowSetupResponseItemSURes_iE_Extensions;

EXTERN int asn1PE_QosFlowSetupResponseItemSURes_iE_Extensions (OSCTXT* pctxt, QosFlowSetupResponseItemSURes_iE_Extensions* pvalue);

EXTERN int asn1PD_QosFlowSetupResponseItemSURes_iE_Extensions (OSCTXT* pctxt, QosFlowSetupResponseItemSURes_iE_Extensions* pvalue);

EXTERN void asn1Print_QosFlowSetupResponseItemSURes_iE_Extensions 
   (const char* name, const QosFlowSetupResponseItemSURes_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupResponseItemSURes_iE_Extensions (
   const char* name, QosFlowSetupResponseItemSURes_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupResponseItemSURes_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupResponseItemSURes_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct QosFlowSetupResponseItemSURes_iE_Extensions_element* 
   asn1Get_QosFlowSetupResponseItemSURes_iE_Extensions 
   (ProtocolExtensionID id, 
   QosFlowSetupResponseItemSURes_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_QosFlowSetupResponseItemSURes_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   QosFlowSetupResponseItemSURes_iE_Extensions* plist, 
   QosFlowSetupResponseItemSURes_iE_Extensions* pmatches);

EXTERN int asn1Init_QosFlowSetupResponseItemSURes_iE_Extensions (
   QosFlowSetupResponseItemSURes_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupResponseItemSURes                             */
/*                                                            */
/**************************************************************/
/*
QosFlowSetupResponseItemSURes ::= SEQUENCE {
   qosFlowIdentifier [0] QosFlowIdentifier,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({QosFlowSetupResponseItemSURes-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({QosFlowSetupResponseItemSURes-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({QosFlowSetupResponseItemSURes-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN QosFlowSetupResponseItemSURes {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   QosFlowIdentifier qosFlowIdentifier;
   QosFlowSetupResponseItemSURes_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} QosFlowSetupResponseItemSURes;

EXTERN int asn1PE_QosFlowSetupResponseItemSURes (OSCTXT* pctxt, QosFlowSetupResponseItemSURes* pvalue);

EXTERN int asn1PD_QosFlowSetupResponseItemSURes (OSCTXT* pctxt, QosFlowSetupResponseItemSURes* pvalue);

EXTERN void asn1Print_QosFlowSetupResponseItemSURes 
   (const char* name, const QosFlowSetupResponseItemSURes* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupResponseItemSURes (const char* name, 
   QosFlowSetupResponseItemSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupResponseItemSURes (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupResponseItemSURes* pvalue);

EXTERN int asn1Init_QosFlowSetupResponseItemSURes (
   QosFlowSetupResponseItemSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  QosFlowSetupResponseListSURes                             */
/*                                                            */
/**************************************************************/
/*
QosFlowSetupResponseListSURes ::= SEQUENCE (SIZE (1..maxnoofQosFlows)) OF QosFlowSetupResponseItemSURes
*/
/* List of QosFlowSetupResponseItemSURes */
typedef OSRTDList QosFlowSetupResponseListSURes;

EXTERN int asn1PE_QosFlowSetupResponseListSURes (OSCTXT* pctxt, QosFlowSetupResponseListSURes* pvalue);

EXTERN int asn1PD_QosFlowSetupResponseListSURes (OSCTXT* pctxt, QosFlowSetupResponseListSURes* pvalue);

EXTERN void asn1Print_QosFlowSetupResponseListSURes 
   (const char* name, const QosFlowSetupResponseListSURes* pvalue);

EXTERN int asn1PrtToStr_QosFlowSetupResponseListSURes (const char* name, 
   QosFlowSetupResponseListSURes* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_QosFlowSetupResponseListSURes (OSCTXT *pctxt, 
   const char* name, const QosFlowSetupResponseListSURes* pvalue);

EXTERN int asn1Init_QosFlowSetupResponseListSURes (
   QosFlowSetupResponseListSURes* pvalue);

/**************************************************************/
/*                                                            */
/*  RANStatusTransfer_TransparentContainer_iE_Extensions_ele  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANStatusTransfer-TransparentContainer'
*/
typedef struct EXTERN RANStatusTransfer_TransparentContainer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} RANStatusTransfer_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_RANStatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, RANStatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_RANStatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, RANStatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_RANStatusTransfer_TransparentContainer_iE_Extensions_element 
   (const char* name, const RANStatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_RANStatusTransfer_TransparentContainer_iE_Extensions_element (
   const char* name, 
   RANStatusTransfer_TransparentContainer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANStatusTransfer_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const RANStatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_RANStatusTransfer_TransparentContainer_iE_Extensions_element (
   RANStatusTransfer_TransparentContainer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  RANStatusTransfer_TransparentContainer_iE_Extensions      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RANStatusTransfer-TransparentContainer'
*/
/* List of RANStatusTransfer_TransparentContainer_iE_Extensions_element */
typedef OSRTDList RANStatusTransfer_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_RANStatusTransfer_TransparentContainer_iE_Extensions (OSCTXT* pctxt, RANStatusTransfer_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_RANStatusTransfer_TransparentContainer_iE_Extensions (OSCTXT* pctxt, RANStatusTransfer_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_RANStatusTransfer_TransparentContainer_iE_Extensions 
   (const char* name, const RANStatusTransfer_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_RANStatusTransfer_TransparentContainer_iE_Extensions (
   const char* name, 
   RANStatusTransfer_TransparentContainer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANStatusTransfer_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const RANStatusTransfer_TransparentContainer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct RANStatusTransfer_TransparentContainer_iE_Extensions_element* 
   asn1Get_RANStatusTransfer_TransparentContainer_iE_Extensions 
   (ProtocolExtensionID id, 
   RANStatusTransfer_TransparentContainer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_RANStatusTransfer_TransparentContainer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   RANStatusTransfer_TransparentContainer_iE_Extensions* plist, 
   RANStatusTransfer_TransparentContainer_iE_Extensions* pmatches);

EXTERN int asn1Init_RANStatusTransfer_TransparentContainer_iE_Extensions (
   RANStatusTransfer_TransparentContainer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  RANStatusTransfer_TransparentContainer                    */
/*                                                            */
/**************************************************************/
/*
RANStatusTransfer-TransparentContainer ::= SEQUENCE {
   dRBsSubjectToStatusTransferList [0] DRBsSubjectToStatusTransferList,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({RANStatusTransfer-TransparentContainer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({RANStatusTransfer-TransparentContainer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({RANStatusTransfer-TransparentContainer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN RANStatusTransfer_TransparentContainer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   DRBsSubjectToStatusTransferList dRBsSubjectToStatusTransferList;
   RANStatusTransfer_TransparentContainer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} RANStatusTransfer_TransparentContainer;

EXTERN int asn1PE_RANStatusTransfer_TransparentContainer (OSCTXT* pctxt, RANStatusTransfer_TransparentContainer* pvalue);

EXTERN int asn1PD_RANStatusTransfer_TransparentContainer (OSCTXT* pctxt, RANStatusTransfer_TransparentContainer* pvalue);

EXTERN void asn1Print_RANStatusTransfer_TransparentContainer 
   (const char* name, const RANStatusTransfer_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_RANStatusTransfer_TransparentContainer (const char* name, 
   RANStatusTransfer_TransparentContainer* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RANStatusTransfer_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const RANStatusTransfer_TransparentContainer* pvalue);

EXTERN int asn1Init_RANStatusTransfer_TransparentContainer (
   RANStatusTransfer_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalNG_connectionItem_iE_Extensions_elem  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-associatedLogicalNG-connectionItem'
*/
typedef struct EXTERN UE_associatedLogicalNG_connectionItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UE_associatedLogicalNG_connectionItem_iE_Extensions_element;

EXTERN int asn1PE_UE_associatedLogicalNG_connectionItem_iE_Extensions_element (OSCTXT* pctxt, UE_associatedLogicalNG_connectionItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UE_associatedLogicalNG_connectionItem_iE_Extensions_element (OSCTXT* pctxt, UE_associatedLogicalNG_connectionItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UE_associatedLogicalNG_connectionItem_iE_Extensions_element 
   (const char* name, const UE_associatedLogicalNG_connectionItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UE_associatedLogicalNG_connectionItem_iE_Extensions_element (
   const char* name, 
   UE_associatedLogicalNG_connectionItem_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_associatedLogicalNG_connectionItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UE_associatedLogicalNG_connectionItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UE_associatedLogicalNG_connectionItem_iE_Extensions_element (
   UE_associatedLogicalNG_connectionItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalNG_connectionItem_iE_Extensions       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-associatedLogicalNG-connectionItem'
*/
/* List of UE_associatedLogicalNG_connectionItem_iE_Extensions_element */
typedef OSRTDList UE_associatedLogicalNG_connectionItem_iE_Extensions;

EXTERN int asn1PE_UE_associatedLogicalNG_connectionItem_iE_Extensions (OSCTXT* pctxt, UE_associatedLogicalNG_connectionItem_iE_Extensions* pvalue);

EXTERN int asn1PD_UE_associatedLogicalNG_connectionItem_iE_Extensions (OSCTXT* pctxt, UE_associatedLogicalNG_connectionItem_iE_Extensions* pvalue);

EXTERN void asn1Print_UE_associatedLogicalNG_connectionItem_iE_Extensions 
   (const char* name, const UE_associatedLogicalNG_connectionItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UE_associatedLogicalNG_connectionItem_iE_Extensions (
   const char* name, 
   UE_associatedLogicalNG_connectionItem_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_associatedLogicalNG_connectionItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UE_associatedLogicalNG_connectionItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UE_associatedLogicalNG_connectionItem_iE_Extensions_element* 
   asn1Get_UE_associatedLogicalNG_connectionItem_iE_Extensions 
   (ProtocolExtensionID id, 
   UE_associatedLogicalNG_connectionItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UE_associatedLogicalNG_connectionItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UE_associatedLogicalNG_connectionItem_iE_Extensions* plist, 
   UE_associatedLogicalNG_connectionItem_iE_Extensions* pmatches);

EXTERN int asn1Init_UE_associatedLogicalNG_connectionItem_iE_Extensions (
   UE_associatedLogicalNG_connectionItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalNG_connectionItem                     */
/*                                                            */
/**************************************************************/
/*
UE-associatedLogicalNG-connectionItem ::= SEQUENCE {
   aMF-UE-NGAP-ID [0] AMF-UE-NGAP-ID OPTIONAL,
   rAN-UE-NGAP-ID [1] RAN-UE-NGAP-ID OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UE-associatedLogicalNG-connectionItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UE-associatedLogicalNG-connectionItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UE-associatedLogicalNG-connectionItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UE_associatedLogicalNG_connectionItem {
   struct {
      unsigned aMF_UE_NGAP_IDPresent : 1;
      unsigned rAN_UE_NGAP_IDPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AMF_UE_NGAP_ID aMF_UE_NGAP_ID;
   RAN_UE_NGAP_ID rAN_UE_NGAP_ID;
   UE_associatedLogicalNG_connectionItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UE_associatedLogicalNG_connectionItem;

EXTERN int asn1PE_UE_associatedLogicalNG_connectionItem (OSCTXT* pctxt, UE_associatedLogicalNG_connectionItem* pvalue);

EXTERN int asn1PD_UE_associatedLogicalNG_connectionItem (OSCTXT* pctxt, UE_associatedLogicalNG_connectionItem* pvalue);

EXTERN void asn1Print_UE_associatedLogicalNG_connectionItem 
   (const char* name, const UE_associatedLogicalNG_connectionItem* pvalue);

EXTERN int asn1PrtToStr_UE_associatedLogicalNG_connectionItem (const char* name, 
   UE_associatedLogicalNG_connectionItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_associatedLogicalNG_connectionItem (OSCTXT *pctxt, 
   const char* name, const UE_associatedLogicalNG_connectionItem* pvalue);

EXTERN int asn1Init_UE_associatedLogicalNG_connectionItem (
   UE_associatedLogicalNG_connectionItem* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_associatedLogicalNG_connectionList                     */
/*                                                            */
/**************************************************************/
/*
UE-associatedLogicalNG-connectionList ::= SEQUENCE (SIZE (1..maxnoofNGConnectionsToReset)) OF UE-associatedLogicalNG-connectionItem
*/
/* List of UE_associatedLogicalNG_connectionItem */
typedef OSRTDList UE_associatedLogicalNG_connectionList;

EXTERN int asn1PE_UE_associatedLogicalNG_connectionList (OSCTXT* pctxt, UE_associatedLogicalNG_connectionList* pvalue);

EXTERN int asn1PD_UE_associatedLogicalNG_connectionList (OSCTXT* pctxt, UE_associatedLogicalNG_connectionList* pvalue);

EXTERN void asn1Print_UE_associatedLogicalNG_connectionList 
   (const char* name, const UE_associatedLogicalNG_connectionList* pvalue);

EXTERN int asn1PrtToStr_UE_associatedLogicalNG_connectionList (const char* name, 
   UE_associatedLogicalNG_connectionList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_associatedLogicalNG_connectionList (OSCTXT *pctxt, 
   const char* name, const UE_associatedLogicalNG_connectionList* pvalue);

EXTERN int asn1Init_UE_associatedLogicalNG_connectionList (
   UE_associatedLogicalNG_connectionList* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetType_choice_Extensions                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ResetType'
*/
typedef struct EXTERN ResetType_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} ResetType_choice_Extensions;

EXTERN int asn1PE_ResetType_choice_Extensions (OSCTXT* pctxt, ResetType_choice_Extensions* pvalue);

EXTERN int asn1PD_ResetType_choice_Extensions (OSCTXT* pctxt, ResetType_choice_Extensions* pvalue);

EXTERN void asn1Print_ResetType_choice_Extensions 
   (const char* name, const ResetType_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_ResetType_choice_Extensions (const char* name, 
   ResetType_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ResetType_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const ResetType_choice_Extensions* pvalue);

EXTERN int asn1Init_ResetType_choice_Extensions (ResetType_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetType                                                 */
/*                                                            */
/**************************************************************/
/*
ResetType ::= CHOICE {
   nG-Interface [0] ResetAll,
   partOfNG-Interface [1] UE-associatedLogicalNG-connectionList,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({ResetType-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({ResetType-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({ResetType-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_ResetType_nG_Interface        1
#define T_ResetType_partOfNG_Interface  2
#define T_ResetType_choice_Extensions   3

typedef struct EXTERN ResetType {
   OSINT32 t;
   union {
      /* t = 1 */
      ResetAll nG_Interface;
      /* t = 2 */
      UE_associatedLogicalNG_connectionList *partOfNG_Interface;
      /* t = 3 */
      ResetType_choice_Extensions *choice_Extensions;
   } u;
} ResetType;

EXTERN int asn1PE_ResetType (OSCTXT* pctxt, ResetType* pvalue);

EXTERN int asn1PD_ResetType (OSCTXT* pctxt, ResetType* pvalue);

EXTERN void asn1Print_ResetType (const char* name, const ResetType* pvalue);

EXTERN int asn1PrtToStr_ResetType (const char* name, ResetType* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ResetType (OSCTXT *pctxt, 
   const char* name, const ResetType* pvalue);

EXTERN int asn1Init_ResetType (ResetType* pvalue);

/**************************************************************/
/*                                                            */
/*  SCTP_TLAs                                                 */
/*                                                            */
/**************************************************************/
/*
 S
SCTP-TLAs ::= SEQUENCE (SIZE (1..maxnoofXnTLAs)) OF TransportLayerAddress
*/
typedef struct EXTERN SCTP_TLAs {
   OSUINT8 n;
   TransportLayerAddress elem[2];
} SCTP_TLAs;

EXTERN int asn1PE_SCTP_TLAs (OSCTXT* pctxt, SCTP_TLAs* pvalue);

EXTERN int asn1PD_SCTP_TLAs (OSCTXT* pctxt, SCTP_TLAs* pvalue);

EXTERN void asn1Print_SCTP_TLAs (const char* name, const SCTP_TLAs* pvalue);

EXTERN int asn1PrtToStr_SCTP_TLAs (const char* name, SCTP_TLAs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SCTP_TLAs (OSCTXT *pctxt, 
   const char* name, const SCTP_TLAs* pvalue);

EXTERN int asn1Init_SCTP_TLAs (SCTP_TLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityContext_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityContext'
*/
typedef struct EXTERN SecurityContext_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SecurityContext_iE_Extensions_element;

EXTERN int asn1PE_SecurityContext_iE_Extensions_element (OSCTXT* pctxt, SecurityContext_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SecurityContext_iE_Extensions_element (OSCTXT* pctxt, SecurityContext_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SecurityContext_iE_Extensions_element 
   (const char* name, const SecurityContext_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SecurityContext_iE_Extensions_element (const char* name, 
   SecurityContext_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityContext_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SecurityContext_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SecurityContext_iE_Extensions_element (
   SecurityContext_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityContext_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SecurityContext'
*/
/* List of SecurityContext_iE_Extensions_element */
typedef OSRTDList SecurityContext_iE_Extensions;

EXTERN int asn1PE_SecurityContext_iE_Extensions (OSCTXT* pctxt, SecurityContext_iE_Extensions* pvalue);

EXTERN int asn1PD_SecurityContext_iE_Extensions (OSCTXT* pctxt, SecurityContext_iE_Extensions* pvalue);

EXTERN void asn1Print_SecurityContext_iE_Extensions 
   (const char* name, const SecurityContext_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SecurityContext_iE_Extensions (const char* name, 
   SecurityContext_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityContext_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SecurityContext_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SecurityContext_iE_Extensions_element* 
   asn1Get_SecurityContext_iE_Extensions (ProtocolExtensionID id, 
   SecurityContext_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SecurityContext_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SecurityContext_iE_Extensions* plist, 
   SecurityContext_iE_Extensions* pmatches);

EXTERN int asn1Init_SecurityContext_iE_Extensions (
   SecurityContext_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SecurityContext                                           */
/*                                                            */
/**************************************************************/
/*
SecurityContext ::= SEQUENCE {
   nextHopChainingCount [0] NextHopChainingCount,
   nextHopNH [1] SecurityKey,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SecurityContext-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SecurityContext-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SecurityContext-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SecurityContext {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NextHopChainingCount nextHopChainingCount;
   SecurityKey nextHopNH;
   SecurityContext_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SecurityContext;

EXTERN int asn1PE_SecurityContext (OSCTXT* pctxt, SecurityContext* pvalue);

EXTERN int asn1PD_SecurityContext (OSCTXT* pctxt, SecurityContext* pvalue);

EXTERN void asn1Print_SecurityContext 
   (const char* name, const SecurityContext* pvalue);

EXTERN int asn1PrtToStr_SecurityContext (const char* name, SecurityContext* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SecurityContext (OSCTXT *pctxt, 
   const char* name, const SecurityContext* pvalue);

EXTERN int asn1Init_SecurityContext (SecurityContext* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUAMIItem_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServedGUAMIItem'
*/
typedef struct EXTERN ServedGUAMIItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} ServedGUAMIItem_iE_Extensions_element;

EXTERN int asn1PE_ServedGUAMIItem_iE_Extensions_element (OSCTXT* pctxt, ServedGUAMIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_ServedGUAMIItem_iE_Extensions_element (OSCTXT* pctxt, ServedGUAMIItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_ServedGUAMIItem_iE_Extensions_element 
   (const char* name, const ServedGUAMIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_ServedGUAMIItem_iE_Extensions_element (const char* name, 
   ServedGUAMIItem_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServedGUAMIItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const ServedGUAMIItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_ServedGUAMIItem_iE_Extensions_element (
   ServedGUAMIItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUAMIItem_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ServedGUAMIItem'
*/
/* List of ServedGUAMIItem_iE_Extensions_element */
typedef OSRTDList ServedGUAMIItem_iE_Extensions;

EXTERN int asn1PE_ServedGUAMIItem_iE_Extensions (OSCTXT* pctxt, ServedGUAMIItem_iE_Extensions* pvalue);

EXTERN int asn1PD_ServedGUAMIItem_iE_Extensions (OSCTXT* pctxt, ServedGUAMIItem_iE_Extensions* pvalue);

EXTERN void asn1Print_ServedGUAMIItem_iE_Extensions 
   (const char* name, const ServedGUAMIItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_ServedGUAMIItem_iE_Extensions (const char* name, 
   ServedGUAMIItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServedGUAMIItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const ServedGUAMIItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct ServedGUAMIItem_iE_Extensions_element* 
   asn1Get_ServedGUAMIItem_iE_Extensions (ProtocolExtensionID id, 
   ServedGUAMIItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_ServedGUAMIItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   ServedGUAMIItem_iE_Extensions* plist, 
   ServedGUAMIItem_iE_Extensions* pmatches);

EXTERN int asn1Init_ServedGUAMIItem_iE_Extensions (
   ServedGUAMIItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUAMIItem                                           */
/*                                                            */
/**************************************************************/
/*
ServedGUAMIItem ::= SEQUENCE {
   gUAMI [0] GUAMI,
   backupAMFName [1] AMFName OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({ServedGUAMIItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({ServedGUAMIItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({ServedGUAMIItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN ServedGUAMIItem {
   struct {
      unsigned backupAMFNamePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GUAMI gUAMI;
   AMFName backupAMFName;
   ServedGUAMIItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} ServedGUAMIItem;

EXTERN int asn1PE_ServedGUAMIItem (OSCTXT* pctxt, ServedGUAMIItem* pvalue);

EXTERN int asn1PD_ServedGUAMIItem (OSCTXT* pctxt, ServedGUAMIItem* pvalue);

EXTERN void asn1Print_ServedGUAMIItem 
   (const char* name, const ServedGUAMIItem* pvalue);

EXTERN int asn1PrtToStr_ServedGUAMIItem (const char* name, ServedGUAMIItem* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServedGUAMIItem (OSCTXT *pctxt, 
   const char* name, const ServedGUAMIItem* pvalue);

EXTERN int asn1Init_ServedGUAMIItem (ServedGUAMIItem* pvalue);

/**************************************************************/
/*                                                            */
/*  ServedGUAMIList                                           */
/*                                                            */
/**************************************************************/
/*
ServedGUAMIList ::= SEQUENCE (SIZE (1..maxnoofServedGUAMIs)) OF ServedGUAMIItem
*/
/* List of ServedGUAMIItem */
typedef OSRTDList ServedGUAMIList;

EXTERN int asn1PE_ServedGUAMIList (OSCTXT* pctxt, ServedGUAMIList* pvalue);

EXTERN int asn1PD_ServedGUAMIList (OSCTXT* pctxt, ServedGUAMIList* pvalue);

EXTERN void asn1Print_ServedGUAMIList 
   (const char* name, const ServedGUAMIList* pvalue);

EXTERN int asn1PrtToStr_ServedGUAMIList (const char* name, ServedGUAMIList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ServedGUAMIList (OSCTXT *pctxt, 
   const char* name, const ServedGUAMIList* pvalue);

EXTERN int asn1Init_ServedGUAMIList (ServedGUAMIList* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetRANNodeID_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetRANNodeID'
*/
typedef struct EXTERN TargetRANNodeID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TargetRANNodeID_iE_Extensions_element;

EXTERN int asn1PE_TargetRANNodeID_iE_Extensions_element (OSCTXT* pctxt, TargetRANNodeID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TargetRANNodeID_iE_Extensions_element (OSCTXT* pctxt, TargetRANNodeID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TargetRANNodeID_iE_Extensions_element 
   (const char* name, const TargetRANNodeID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TargetRANNodeID_iE_Extensions_element (const char* name, 
   TargetRANNodeID_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetRANNodeID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TargetRANNodeID_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TargetRANNodeID_iE_Extensions_element (
   TargetRANNodeID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetRANNodeID_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetRANNodeID'
*/
/* List of TargetRANNodeID_iE_Extensions_element */
typedef OSRTDList TargetRANNodeID_iE_Extensions;

EXTERN int asn1PE_TargetRANNodeID_iE_Extensions (OSCTXT* pctxt, TargetRANNodeID_iE_Extensions* pvalue);

EXTERN int asn1PD_TargetRANNodeID_iE_Extensions (OSCTXT* pctxt, TargetRANNodeID_iE_Extensions* pvalue);

EXTERN void asn1Print_TargetRANNodeID_iE_Extensions 
   (const char* name, const TargetRANNodeID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TargetRANNodeID_iE_Extensions (const char* name, 
   TargetRANNodeID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetRANNodeID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TargetRANNodeID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TargetRANNodeID_iE_Extensions_element* 
   asn1Get_TargetRANNodeID_iE_Extensions (ProtocolExtensionID id, 
   TargetRANNodeID_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TargetRANNodeID_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TargetRANNodeID_iE_Extensions* plist, 
   TargetRANNodeID_iE_Extensions* pmatches);

EXTERN int asn1Init_TargetRANNodeID_iE_Extensions (
   TargetRANNodeID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetRANNodeID                                           */
/*                                                            */
/**************************************************************/
/*
TargetRANNodeID ::= SEQUENCE {
   globalRANNodeID [0] EXPLICIT GlobalRANNodeID,
   selectedTAI [1] TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TargetRANNodeID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TargetRANNodeID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TargetRANNodeID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TargetRANNodeID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GlobalRANNodeID globalRANNodeID;
   TAI selectedTAI;
   TargetRANNodeID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TargetRANNodeID;

EXTERN int asn1PE_TargetRANNodeID (OSCTXT* pctxt, TargetRANNodeID* pvalue);

EXTERN int asn1PD_TargetRANNodeID (OSCTXT* pctxt, TargetRANNodeID* pvalue);

EXTERN void asn1Print_TargetRANNodeID 
   (const char* name, const TargetRANNodeID* pvalue);

EXTERN int asn1PrtToStr_TargetRANNodeID (const char* name, TargetRANNodeID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetRANNodeID (OSCTXT *pctxt, 
   const char* name, const TargetRANNodeID* pvalue);

EXTERN int asn1Init_TargetRANNodeID (TargetRANNodeID* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceRANNodeID_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceRANNodeID'
*/
typedef struct EXTERN SourceRANNodeID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SourceRANNodeID_iE_Extensions_element;

EXTERN int asn1PE_SourceRANNodeID_iE_Extensions_element (OSCTXT* pctxt, SourceRANNodeID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SourceRANNodeID_iE_Extensions_element (OSCTXT* pctxt, SourceRANNodeID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SourceRANNodeID_iE_Extensions_element 
   (const char* name, const SourceRANNodeID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SourceRANNodeID_iE_Extensions_element (const char* name, 
   SourceRANNodeID_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceRANNodeID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SourceRANNodeID_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SourceRANNodeID_iE_Extensions_element (
   SourceRANNodeID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceRANNodeID_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceRANNodeID'
*/
/* List of SourceRANNodeID_iE_Extensions_element */
typedef OSRTDList SourceRANNodeID_iE_Extensions;

EXTERN int asn1PE_SourceRANNodeID_iE_Extensions (OSCTXT* pctxt, SourceRANNodeID_iE_Extensions* pvalue);

EXTERN int asn1PD_SourceRANNodeID_iE_Extensions (OSCTXT* pctxt, SourceRANNodeID_iE_Extensions* pvalue);

EXTERN void asn1Print_SourceRANNodeID_iE_Extensions 
   (const char* name, const SourceRANNodeID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SourceRANNodeID_iE_Extensions (const char* name, 
   SourceRANNodeID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceRANNodeID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SourceRANNodeID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SourceRANNodeID_iE_Extensions_element* 
   asn1Get_SourceRANNodeID_iE_Extensions (ProtocolExtensionID id, 
   SourceRANNodeID_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SourceRANNodeID_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SourceRANNodeID_iE_Extensions* plist, 
   SourceRANNodeID_iE_Extensions* pmatches);

EXTERN int asn1Init_SourceRANNodeID_iE_Extensions (
   SourceRANNodeID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceRANNodeID                                           */
/*                                                            */
/**************************************************************/
/*
SourceRANNodeID ::= SEQUENCE {
   globalRANNodeID [0] EXPLICIT GlobalRANNodeID,
   selectedTAI [1] TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SourceRANNodeID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SourceRANNodeID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SourceRANNodeID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SourceRANNodeID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GlobalRANNodeID globalRANNodeID;
   TAI selectedTAI;
   SourceRANNodeID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SourceRANNodeID;

EXTERN int asn1PE_SourceRANNodeID (OSCTXT* pctxt, SourceRANNodeID* pvalue);

EXTERN int asn1PD_SourceRANNodeID (OSCTXT* pctxt, SourceRANNodeID* pvalue);

EXTERN void asn1Print_SourceRANNodeID 
   (const char* name, const SourceRANNodeID* pvalue);

EXTERN int asn1PrtToStr_SourceRANNodeID (const char* name, SourceRANNodeID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceRANNodeID (OSCTXT *pctxt, 
   const char* name, const SourceRANNodeID* pvalue);

EXTERN int asn1Init_SourceRANNodeID (SourceRANNodeID* pvalue);

/**************************************************************/
/*                                                            */
/*  XnTLAs                                                    */
/*                                                            */
/**************************************************************/
/*
XnTLAs ::= SEQUENCE (SIZE (1..maxnoofXnTLAs)) OF TransportLayerAddress
*/
typedef struct EXTERN XnTLAs {
   OSUINT8 n;
   TransportLayerAddress elem[2];
} XnTLAs;

EXTERN int asn1PE_XnTLAs (OSCTXT* pctxt, XnTLAs* pvalue);

EXTERN int asn1PD_XnTLAs (OSCTXT* pctxt, XnTLAs* pvalue);

EXTERN void asn1Print_XnTLAs (const char* name, const XnTLAs* pvalue);

EXTERN int asn1PrtToStr_XnTLAs (const char* name, XnTLAs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnTLAs (OSCTXT *pctxt, 
   const char* name, const XnTLAs* pvalue);

EXTERN int asn1Init_XnTLAs (XnTLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  XnGTP_TLAs                                                */
/*                                                            */
/**************************************************************/
/*
XnGTP-TLAs ::= SEQUENCE (SIZE (1..maxnoofXnGTP-TLAs)) OF TransportLayerAddress
*/
typedef struct EXTERN XnGTP_TLAs {
   OSUINT8 n;
   TransportLayerAddress elem[16];
} XnGTP_TLAs;

EXTERN int asn1PE_XnGTP_TLAs (OSCTXT* pctxt, XnGTP_TLAs* pvalue);

EXTERN int asn1PD_XnGTP_TLAs (OSCTXT* pctxt, XnGTP_TLAs* pvalue);

EXTERN void asn1Print_XnGTP_TLAs (const char* name, const XnGTP_TLAs* pvalue);

EXTERN int asn1PrtToStr_XnGTP_TLAs (const char* name, XnGTP_TLAs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnGTP_TLAs (OSCTXT *pctxt, 
   const char* name, const XnGTP_TLAs* pvalue);

EXTERN int asn1Init_XnGTP_TLAs (XnGTP_TLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  XnExtTLA_Item_iE_Extensions_element                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'XnExtTLA-Item'
*/
typedef struct EXTERN XnExtTLA_Item_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      XnExtTLA_Item_ExtIEs_TVALUE t;

      /**
       * XnExtTLA-Item-ExtIEs information objects
       */
      union {
         /**
          * id: id-SCTP-TLAs
          * criticality: ignore
          * presence: optional
          */
         SCTP_TLAs *_XnExtTLA_Item_ExtIEs_id_SCTP_TLAs;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} XnExtTLA_Item_iE_Extensions_element;

EXTERN int asn1PE_XnExtTLA_Item_iE_Extensions_element (OSCTXT* pctxt, XnExtTLA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PD_XnExtTLA_Item_iE_Extensions_element (OSCTXT* pctxt, XnExtTLA_Item_iE_Extensions_element* pvalue);

EXTERN void asn1Print_XnExtTLA_Item_iE_Extensions_element 
   (const char* name, const XnExtTLA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_XnExtTLA_Item_iE_Extensions_element (const char* name, 
   XnExtTLA_Item_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnExtTLA_Item_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const XnExtTLA_Item_iE_Extensions_element* pvalue);

EXTERN int asn1Init_XnExtTLA_Item_iE_Extensions_element (
   XnExtTLA_Item_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  XnExtTLA_Item_iE_Extensions                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'XnExtTLA-Item'
*/
/* List of XnExtTLA_Item_iE_Extensions_element */
typedef OSRTDList XnExtTLA_Item_iE_Extensions;

EXTERN int asn1PE_XnExtTLA_Item_iE_Extensions (OSCTXT* pctxt, XnExtTLA_Item_iE_Extensions* pvalue);

EXTERN int asn1PD_XnExtTLA_Item_iE_Extensions (OSCTXT* pctxt, XnExtTLA_Item_iE_Extensions* pvalue);

EXTERN void asn1Print_XnExtTLA_Item_iE_Extensions 
   (const char* name, const XnExtTLA_Item_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_XnExtTLA_Item_iE_Extensions (const char* name, 
   XnExtTLA_Item_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnExtTLA_Item_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const XnExtTLA_Item_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct XnExtTLA_Item_iE_Extensions_element* 
   asn1Get_XnExtTLA_Item_iE_Extensions (ProtocolExtensionID id, 
   XnExtTLA_Item_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_XnExtTLA_Item_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, XnExtTLA_Item_iE_Extensions* plist, 
   XnExtTLA_Item_iE_Extensions* pmatches);

EXTERN int asn1Init_XnExtTLA_Item_iE_Extensions (XnExtTLA_Item_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  XnExtTLA_Item                                             */
/*                                                            */
/**************************************************************/
/*
XnExtTLA-Item ::= SEQUENCE {
   iPsecTLA [0] TransportLayerAddress OPTIONAL,
   gTP-TLAs [1] XnGTP-TLAs OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({XnExtTLA-Item-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({XnExtTLA-Item-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({XnExtTLA-Item-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN XnExtTLA_Item {
   struct {
      unsigned iPsecTLAPresent : 1;
      unsigned gTP_TLAsPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportLayerAddress iPsecTLA;
   XnGTP_TLAs gTP_TLAs;
   XnExtTLA_Item_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} XnExtTLA_Item;

EXTERN int asn1PE_XnExtTLA_Item (OSCTXT* pctxt, XnExtTLA_Item* pvalue);

EXTERN int asn1PD_XnExtTLA_Item (OSCTXT* pctxt, XnExtTLA_Item* pvalue);

EXTERN void asn1Print_XnExtTLA_Item (const char* name, const XnExtTLA_Item* pvalue);

EXTERN int asn1PrtToStr_XnExtTLA_Item (const char* name, XnExtTLA_Item* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnExtTLA_Item (OSCTXT *pctxt, 
   const char* name, const XnExtTLA_Item* pvalue);

EXTERN int asn1Init_XnExtTLA_Item (XnExtTLA_Item* pvalue);

/**************************************************************/
/*                                                            */
/*  XnExtTLAs                                                 */
/*                                                            */
/**************************************************************/
/*
 X
XnExtTLAs ::= SEQUENCE (SIZE (1..maxnoofXnExtTLAs)) OF XnExtTLA-Item
*/
/* List of XnExtTLA_Item */
typedef OSRTDList XnExtTLAs;

EXTERN int asn1PE_XnExtTLAs (OSCTXT* pctxt, XnExtTLAs* pvalue);

EXTERN int asn1PD_XnExtTLAs (OSCTXT* pctxt, XnExtTLAs* pvalue);

EXTERN void asn1Print_XnExtTLAs (const char* name, const XnExtTLAs* pvalue);

EXTERN int asn1PrtToStr_XnExtTLAs (const char* name, XnExtTLAs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnExtTLAs (OSCTXT *pctxt, 
   const char* name, const XnExtTLAs* pvalue);

EXTERN int asn1Init_XnExtTLAs (XnExtTLAs* pvalue);

/**************************************************************/
/*                                                            */
/*  XnTNLConfigurationInfo_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'XnTNLConfigurationInfo'
*/
typedef struct EXTERN XnTNLConfigurationInfo_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} XnTNLConfigurationInfo_iE_Extensions_element;

EXTERN int asn1PE_XnTNLConfigurationInfo_iE_Extensions_element (OSCTXT* pctxt, XnTNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PD_XnTNLConfigurationInfo_iE_Extensions_element (OSCTXT* pctxt, XnTNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN void asn1Print_XnTNLConfigurationInfo_iE_Extensions_element 
   (const char* name, const XnTNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_XnTNLConfigurationInfo_iE_Extensions_element (
   const char* name, XnTNLConfigurationInfo_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnTNLConfigurationInfo_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const XnTNLConfigurationInfo_iE_Extensions_element* pvalue);

EXTERN int asn1Init_XnTNLConfigurationInfo_iE_Extensions_element (
   XnTNLConfigurationInfo_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  XnTNLConfigurationInfo_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'XnTNLConfigurationInfo'
*/
/* List of XnTNLConfigurationInfo_iE_Extensions_element */
typedef OSRTDList XnTNLConfigurationInfo_iE_Extensions;

EXTERN int asn1PE_XnTNLConfigurationInfo_iE_Extensions (OSCTXT* pctxt, XnTNLConfigurationInfo_iE_Extensions* pvalue);

EXTERN int asn1PD_XnTNLConfigurationInfo_iE_Extensions (OSCTXT* pctxt, XnTNLConfigurationInfo_iE_Extensions* pvalue);

EXTERN void asn1Print_XnTNLConfigurationInfo_iE_Extensions 
   (const char* name, const XnTNLConfigurationInfo_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_XnTNLConfigurationInfo_iE_Extensions (const char* name, 
   XnTNLConfigurationInfo_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnTNLConfigurationInfo_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const XnTNLConfigurationInfo_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct XnTNLConfigurationInfo_iE_Extensions_element* 
   asn1Get_XnTNLConfigurationInfo_iE_Extensions (ProtocolExtensionID id, 
   XnTNLConfigurationInfo_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_XnTNLConfigurationInfo_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   XnTNLConfigurationInfo_iE_Extensions* plist, 
   XnTNLConfigurationInfo_iE_Extensions* pmatches);

EXTERN int asn1Init_XnTNLConfigurationInfo_iE_Extensions (
   XnTNLConfigurationInfo_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  XnTNLConfigurationInfo                                    */
/*                                                            */
/**************************************************************/
/*
XnTNLConfigurationInfo ::= SEQUENCE {
   xnTransportLayerAddresses [0] XnTLAs,
   xnExtendedTransportLayerAddresses [1] XnExtTLAs OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({XnTNLConfigurationInfo-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({XnTNLConfigurationInfo-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({XnTNLConfigurationInfo-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN XnTNLConfigurationInfo {
   struct {
      unsigned xnExtendedTransportLayerAddressesPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   XnTLAs xnTransportLayerAddresses;
   XnExtTLAs xnExtendedTransportLayerAddresses;
   XnTNLConfigurationInfo_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} XnTNLConfigurationInfo;

EXTERN int asn1PE_XnTNLConfigurationInfo (OSCTXT* pctxt, XnTNLConfigurationInfo* pvalue);

EXTERN int asn1PD_XnTNLConfigurationInfo (OSCTXT* pctxt, XnTNLConfigurationInfo* pvalue);

EXTERN void asn1Print_XnTNLConfigurationInfo 
   (const char* name, const XnTNLConfigurationInfo* pvalue);

EXTERN int asn1PrtToStr_XnTNLConfigurationInfo (const char* name, 
   XnTNLConfigurationInfo* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_XnTNLConfigurationInfo (OSCTXT *pctxt, 
   const char* name, const XnTNLConfigurationInfo* pvalue);

EXTERN int asn1Init_XnTNLConfigurationInfo (XnTNLConfigurationInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationReply_iE_Extensions_element                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONInformationReply'
*/
typedef struct EXTERN SONInformationReply_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SONInformationReply_iE_Extensions_element;

EXTERN int asn1PE_SONInformationReply_iE_Extensions_element (OSCTXT* pctxt, SONInformationReply_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SONInformationReply_iE_Extensions_element (OSCTXT* pctxt, SONInformationReply_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SONInformationReply_iE_Extensions_element 
   (const char* name, const SONInformationReply_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SONInformationReply_iE_Extensions_element (const char* name, 
   SONInformationReply_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONInformationReply_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SONInformationReply_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SONInformationReply_iE_Extensions_element (
   SONInformationReply_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationReply_iE_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONInformationReply'
*/
/* List of SONInformationReply_iE_Extensions_element */
typedef OSRTDList SONInformationReply_iE_Extensions;

EXTERN int asn1PE_SONInformationReply_iE_Extensions (OSCTXT* pctxt, SONInformationReply_iE_Extensions* pvalue);

EXTERN int asn1PD_SONInformationReply_iE_Extensions (OSCTXT* pctxt, SONInformationReply_iE_Extensions* pvalue);

EXTERN void asn1Print_SONInformationReply_iE_Extensions 
   (const char* name, const SONInformationReply_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SONInformationReply_iE_Extensions (const char* name, 
   SONInformationReply_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONInformationReply_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SONInformationReply_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SONInformationReply_iE_Extensions_element* 
   asn1Get_SONInformationReply_iE_Extensions (ProtocolExtensionID id, 
   SONInformationReply_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SONInformationReply_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SONInformationReply_iE_Extensions* plist, 
   SONInformationReply_iE_Extensions* pmatches);

EXTERN int asn1Init_SONInformationReply_iE_Extensions (
   SONInformationReply_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformationReply                                       */
/*                                                            */
/**************************************************************/
/*
SONInformationReply ::= SEQUENCE {
   xnTNLConfigurationInfo [0] XnTNLConfigurationInfo OPTIONAL,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SONInformationReply-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SONInformationReply-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SONInformationReply-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SONInformationReply {
   struct {
      unsigned xnTNLConfigurationInfoPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   XnTNLConfigurationInfo xnTNLConfigurationInfo;
   SONInformationReply_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SONInformationReply;

EXTERN int asn1PE_SONInformationReply (OSCTXT* pctxt, SONInformationReply* pvalue);

EXTERN int asn1PD_SONInformationReply (OSCTXT* pctxt, SONInformationReply* pvalue);

EXTERN void asn1Print_SONInformationReply 
   (const char* name, const SONInformationReply* pvalue);

EXTERN int asn1PrtToStr_SONInformationReply (const char* name, 
   SONInformationReply* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONInformationReply (OSCTXT *pctxt, 
   const char* name, const SONInformationReply* pvalue);

EXTERN int asn1Init_SONInformationReply (SONInformationReply* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformation_choice_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONInformation'
*/
typedef struct EXTERN SONInformation_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} SONInformation_choice_Extensions;

EXTERN int asn1PE_SONInformation_choice_Extensions (OSCTXT* pctxt, SONInformation_choice_Extensions* pvalue);

EXTERN int asn1PD_SONInformation_choice_Extensions (OSCTXT* pctxt, SONInformation_choice_Extensions* pvalue);

EXTERN void asn1Print_SONInformation_choice_Extensions 
   (const char* name, const SONInformation_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_SONInformation_choice_Extensions (const char* name, 
   SONInformation_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONInformation_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const SONInformation_choice_Extensions* pvalue);

EXTERN int asn1Init_SONInformation_choice_Extensions (
   SONInformation_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SONInformation                                            */
/*                                                            */
/**************************************************************/
/*
SONInformation ::= CHOICE {
   sONInformationRequest [0] SONInformationRequest,
   sONInformationReply [1] SONInformationReply,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({SONInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({SONInformation-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({SONInformation-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_SONInformation_sONInformationRequest 1
#define T_SONInformation_sONInformationReply 2
#define T_SONInformation_choice_Extensions 3

typedef struct EXTERN SONInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      SONInformationRequest sONInformationRequest;
      /* t = 2 */
      SONInformationReply *sONInformationReply;
      /* t = 3 */
      SONInformation_choice_Extensions *choice_Extensions;
   } u;
} SONInformation;

EXTERN int asn1PE_SONInformation (OSCTXT* pctxt, SONInformation* pvalue);

EXTERN int asn1PD_SONInformation (OSCTXT* pctxt, SONInformation* pvalue);

EXTERN void asn1Print_SONInformation (const char* name, const SONInformation* pvalue);

EXTERN int asn1PrtToStr_SONInformation (const char* name, SONInformation* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONInformation (OSCTXT *pctxt, 
   const char* name, const SONInformation* pvalue);

EXTERN int asn1Init_SONInformation (SONInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SONConfigurationTransfer_iE_Extensions_element            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONConfigurationTransfer'
*/
typedef struct EXTERN SONConfigurationTransfer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SONConfigurationTransfer_iE_Extensions_element;

EXTERN int asn1PE_SONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SONConfigurationTransfer_iE_Extensions_element (OSCTXT* pctxt, SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SONConfigurationTransfer_iE_Extensions_element 
   (const char* name, const SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SONConfigurationTransfer_iE_Extensions_element (
   const char* name, SONConfigurationTransfer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONConfigurationTransfer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SONConfigurationTransfer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SONConfigurationTransfer_iE_Extensions_element (
   SONConfigurationTransfer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SONConfigurationTransfer_iE_Extensions                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SONConfigurationTransfer'
*/
/* List of SONConfigurationTransfer_iE_Extensions_element */
typedef OSRTDList SONConfigurationTransfer_iE_Extensions;

EXTERN int asn1PE_SONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, SONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PD_SONConfigurationTransfer_iE_Extensions (OSCTXT* pctxt, SONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN void asn1Print_SONConfigurationTransfer_iE_Extensions 
   (const char* name, const SONConfigurationTransfer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SONConfigurationTransfer_iE_Extensions (const char* name, 
   SONConfigurationTransfer_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONConfigurationTransfer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SONConfigurationTransfer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SONConfigurationTransfer_iE_Extensions_element* 
   asn1Get_SONConfigurationTransfer_iE_Extensions (ProtocolExtensionID id, 
   SONConfigurationTransfer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SONConfigurationTransfer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SONConfigurationTransfer_iE_Extensions* plist, 
   SONConfigurationTransfer_iE_Extensions* pmatches);

EXTERN int asn1Init_SONConfigurationTransfer_iE_Extensions (
   SONConfigurationTransfer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SONConfigurationTransfer                                  */
/*                                                            */
/**************************************************************/
/*
SONConfigurationTransfer ::= SEQUENCE {
   targetRANNodeID [0] TargetRANNodeID,
   sourceRANNodeID [1] SourceRANNodeID,
   sONInformation [2] EXPLICIT SONInformation,
   xnTNLConfigurationInfo [3] XnTNLConfigurationInfo OPTIONAL,
--The above IE shall be present if the SON Information IE contains the SON Information Request IE set to “Xn TNL Configuration Info”
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SONConfigurationTransfer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SONConfigurationTransfer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SONConfigurationTransfer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SONConfigurationTransfer {
   struct {
      unsigned xnTNLConfigurationInfoPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TargetRANNodeID targetRANNodeID;
   SourceRANNodeID sourceRANNodeID;
   SONInformation sONInformation;
   XnTNLConfigurationInfo xnTNLConfigurationInfo;
   SONConfigurationTransfer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SONConfigurationTransfer;

EXTERN int asn1PE_SONConfigurationTransfer (OSCTXT* pctxt, SONConfigurationTransfer* pvalue);

EXTERN int asn1PD_SONConfigurationTransfer (OSCTXT* pctxt, SONConfigurationTransfer* pvalue);

EXTERN void asn1Print_SONConfigurationTransfer 
   (const char* name, const SONConfigurationTransfer* pvalue);

EXTERN int asn1PrtToStr_SONConfigurationTransfer (const char* name, 
   SONConfigurationTransfer* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SONConfigurationTransfer (OSCTXT *pctxt, 
   const char* name, const SONConfigurationTransfer* pvalue);

EXTERN int asn1Init_SONConfigurationTransfer (SONConfigurationTransfer* pvalue);

/**************************************************************/
/*                                                            */
/*  UEHistoryInformation                                      */
/*                                                            */
/**************************************************************/
/*
UEHistoryInformation ::= SEQUENCE (SIZE (1..maxnoofCellsinUEHistoryInfo)) OF LastVisitedCellItem
*/
/* List of LastVisitedCellItem */
typedef OSRTDList UEHistoryInformation;

EXTERN int asn1PE_UEHistoryInformation (OSCTXT* pctxt, UEHistoryInformation* pvalue);

EXTERN int asn1PD_UEHistoryInformation (OSCTXT* pctxt, UEHistoryInformation* pvalue);

EXTERN void asn1Print_UEHistoryInformation 
   (const char* name, const UEHistoryInformation* pvalue);

EXTERN int asn1PrtToStr_UEHistoryInformation (const char* name, 
   UEHistoryInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEHistoryInformation (OSCTXT *pctxt, 
   const char* name, const UEHistoryInformation* pvalue);

EXTERN int asn1Init_UEHistoryInformation (UEHistoryInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_i  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceNGRANNode-ToTargetNGRANNode-TransparentContainer'
*/
typedef struct EXTERN SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element 
   (const char* name, const SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element (
   const char* name, 
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element (
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_i  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceNGRANNode-ToTargetNGRANNode-TransparentContainer'
*/
/* List of SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element */
typedef OSRTDList SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions (OSCTXT* pctxt, SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions (OSCTXT* pctxt, SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions 
   (const char* name, const SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions (
   const char* name, 
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions_element* 
   asn1Get_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions 
   (ProtocolExtensionID id, 
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int 
   asn1GetAll_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* plist, 
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* pmatches);

EXTERN int asn1Init_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions (
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceNGRANNode_ToTargetNGRANNode_TransparentContainer    */
/*                                                            */
/**************************************************************/
/*
SourceNGRANNode-ToTargetNGRANNode-TransparentContainer ::= SEQUENCE {
   rRCContainer [0] RRCContainer,
   pDUSessionResourceInformationList [1] PDUSessionResourceInformationList OPTIONAL,
   e-RABInformationList [2] E-RABInformationList OPTIONAL,
   targetCell-ID [3] EXPLICIT NGRAN-CGI,
   indexToRFSP [4] IndexToRFSP OPTIONAL,
   uEHistoryInformation [5] UEHistoryInformation,
   iE-Extensions [6] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SourceNGRANNode-ToTargetNGRANNode-TransparentContainer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SourceNGRANNode-ToTargetNGRANNode-TransparentContainer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SourceNGRANNode-ToTargetNGRANNode-TransparentContainer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SourceNGRANNode_ToTargetNGRANNode_TransparentContainer {
   struct {
      unsigned pDUSessionResourceInformationListPresent : 1;
      unsigned e_RABInformationListPresent : 1;
      unsigned indexToRFSPPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RRCContainer rRCContainer;
   PDUSessionResourceInformationList pDUSessionResourceInformationList;
   E_RABInformationList e_RABInformationList;
   NGRAN_CGI targetCell_ID;
   IndexToRFSP indexToRFSP;
   UEHistoryInformation uEHistoryInformation;
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SourceNGRANNode_ToTargetNGRANNode_TransparentContainer;

EXTERN int asn1PE_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer (OSCTXT* pctxt, SourceNGRANNode_ToTargetNGRANNode_TransparentContainer* pvalue);

EXTERN int asn1PD_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer (OSCTXT* pctxt, SourceNGRANNode_ToTargetNGRANNode_TransparentContainer* pvalue);

EXTERN void asn1Print_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer 
   (const char* name, const SourceNGRANNode_ToTargetNGRANNode_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer (
   const char* name, 
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const SourceNGRANNode_ToTargetNGRANNode_TransparentContainer* pvalue);

EXTERN int asn1Init_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer (
   SourceNGRANNode_ToTargetNGRANNode_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceToTarget_AMFInformationReroute_iE_Extensions_eleme  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceToTarget-AMFInformationReroute'
*/
typedef struct EXTERN SourceToTarget_AMFInformationReroute_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SourceToTarget_AMFInformationReroute_iE_Extensions_element;

EXTERN int asn1PE_SourceToTarget_AMFInformationReroute_iE_Extensions_element (OSCTXT* pctxt, SourceToTarget_AMFInformationReroute_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SourceToTarget_AMFInformationReroute_iE_Extensions_element (OSCTXT* pctxt, SourceToTarget_AMFInformationReroute_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SourceToTarget_AMFInformationReroute_iE_Extensions_element 
   (const char* name, const SourceToTarget_AMFInformationReroute_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SourceToTarget_AMFInformationReroute_iE_Extensions_element (
   const char* name, 
   SourceToTarget_AMFInformationReroute_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceToTarget_AMFInformationReroute_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SourceToTarget_AMFInformationReroute_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SourceToTarget_AMFInformationReroute_iE_Extensions_element (
   SourceToTarget_AMFInformationReroute_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceToTarget_AMFInformationReroute_iE_Extensions        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SourceToTarget-AMFInformationReroute'
*/
/* List of SourceToTarget_AMFInformationReroute_iE_Extensions_element */
typedef OSRTDList SourceToTarget_AMFInformationReroute_iE_Extensions;

EXTERN int asn1PE_SourceToTarget_AMFInformationReroute_iE_Extensions (OSCTXT* pctxt, SourceToTarget_AMFInformationReroute_iE_Extensions* pvalue);

EXTERN int asn1PD_SourceToTarget_AMFInformationReroute_iE_Extensions (OSCTXT* pctxt, SourceToTarget_AMFInformationReroute_iE_Extensions* pvalue);

EXTERN void asn1Print_SourceToTarget_AMFInformationReroute_iE_Extensions 
   (const char* name, const SourceToTarget_AMFInformationReroute_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SourceToTarget_AMFInformationReroute_iE_Extensions (
   const char* name, 
   SourceToTarget_AMFInformationReroute_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceToTarget_AMFInformationReroute_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SourceToTarget_AMFInformationReroute_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SourceToTarget_AMFInformationReroute_iE_Extensions_element* 
   asn1Get_SourceToTarget_AMFInformationReroute_iE_Extensions 
   (ProtocolExtensionID id, 
   SourceToTarget_AMFInformationReroute_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SourceToTarget_AMFInformationReroute_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SourceToTarget_AMFInformationReroute_iE_Extensions* plist, 
   SourceToTarget_AMFInformationReroute_iE_Extensions* pmatches);

EXTERN int asn1Init_SourceToTarget_AMFInformationReroute_iE_Extensions (
   SourceToTarget_AMFInformationReroute_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SourceToTarget_AMFInformationReroute                      */
/*                                                            */
/**************************************************************/
/*
 This IE includes a transparent container from the source RAN node to the target RAN node. 
 The octets of the OCTET STRING are encoded according to the specifications of the target system.
SourceToTarget-AMFInformationReroute ::= SEQUENCE {
   configuredNSSAI [0] ConfiguredNSSAI OPTIONAL,
   rejectedNSSAIinPLMN [1] RejectedNSSAIinPLMN OPTIONAL,
   rejectedNSSAIinTA [2] RejectedNSSAIinTA OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SourceToTarget-AMFInformationReroute-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SourceToTarget-AMFInformationReroute-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SourceToTarget-AMFInformationReroute-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SourceToTarget_AMFInformationReroute {
   struct {
      unsigned configuredNSSAIPresent : 1;
      unsigned rejectedNSSAIinPLMNPresent : 1;
      unsigned rejectedNSSAIinTAPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   ConfiguredNSSAI configuredNSSAI;
   RejectedNSSAIinPLMN rejectedNSSAIinPLMN;
   RejectedNSSAIinTA rejectedNSSAIinTA;
   SourceToTarget_AMFInformationReroute_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SourceToTarget_AMFInformationReroute;

EXTERN int asn1PE_SourceToTarget_AMFInformationReroute (OSCTXT* pctxt, SourceToTarget_AMFInformationReroute* pvalue);

EXTERN int asn1PD_SourceToTarget_AMFInformationReroute (OSCTXT* pctxt, SourceToTarget_AMFInformationReroute* pvalue);

EXTERN void asn1Print_SourceToTarget_AMFInformationReroute 
   (const char* name, const SourceToTarget_AMFInformationReroute* pvalue);

EXTERN int asn1PrtToStr_SourceToTarget_AMFInformationReroute (const char* name, 
   SourceToTarget_AMFInformationReroute* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SourceToTarget_AMFInformationReroute (OSCTXT *pctxt, 
   const char* name, const SourceToTarget_AMFInformationReroute* pvalue);

EXTERN int asn1Init_SourceToTarget_AMFInformationReroute (
   SourceToTarget_AMFInformationReroute* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAItem_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SupportedTAItem'
*/
typedef struct EXTERN SupportedTAItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} SupportedTAItem_iE_Extensions_element;

EXTERN int asn1PE_SupportedTAItem_iE_Extensions_element (OSCTXT* pctxt, SupportedTAItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_SupportedTAItem_iE_Extensions_element (OSCTXT* pctxt, SupportedTAItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_SupportedTAItem_iE_Extensions_element 
   (const char* name, const SupportedTAItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_SupportedTAItem_iE_Extensions_element (const char* name, 
   SupportedTAItem_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SupportedTAItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const SupportedTAItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_SupportedTAItem_iE_Extensions_element (
   SupportedTAItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAItem_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SupportedTAItem'
*/
/* List of SupportedTAItem_iE_Extensions_element */
typedef OSRTDList SupportedTAItem_iE_Extensions;

EXTERN int asn1PE_SupportedTAItem_iE_Extensions (OSCTXT* pctxt, SupportedTAItem_iE_Extensions* pvalue);

EXTERN int asn1PD_SupportedTAItem_iE_Extensions (OSCTXT* pctxt, SupportedTAItem_iE_Extensions* pvalue);

EXTERN void asn1Print_SupportedTAItem_iE_Extensions 
   (const char* name, const SupportedTAItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_SupportedTAItem_iE_Extensions (const char* name, 
   SupportedTAItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SupportedTAItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const SupportedTAItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct SupportedTAItem_iE_Extensions_element* 
   asn1Get_SupportedTAItem_iE_Extensions (ProtocolExtensionID id, 
   SupportedTAItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_SupportedTAItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   SupportedTAItem_iE_Extensions* plist, 
   SupportedTAItem_iE_Extensions* pmatches);

EXTERN int asn1Init_SupportedTAItem_iE_Extensions (
   SupportedTAItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAItem                                           */
/*                                                            */
/**************************************************************/
/*
SupportedTAItem ::= SEQUENCE {
   tAC [0] TAC,
   broadcastPLMNList [1] BroadcastPLMNList,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({SupportedTAItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({SupportedTAItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({SupportedTAItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN SupportedTAItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAC tAC;
   BroadcastPLMNList broadcastPLMNList;
   SupportedTAItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} SupportedTAItem;

EXTERN int asn1PE_SupportedTAItem (OSCTXT* pctxt, SupportedTAItem* pvalue);

EXTERN int asn1PD_SupportedTAItem (OSCTXT* pctxt, SupportedTAItem* pvalue);

EXTERN void asn1Print_SupportedTAItem 
   (const char* name, const SupportedTAItem* pvalue);

EXTERN int asn1PrtToStr_SupportedTAItem (const char* name, SupportedTAItem* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SupportedTAItem (OSCTXT *pctxt, 
   const char* name, const SupportedTAItem* pvalue);

EXTERN int asn1Init_SupportedTAItem (SupportedTAItem* pvalue);

/**************************************************************/
/*                                                            */
/*  SupportedTAList                                           */
/*                                                            */
/**************************************************************/
/*
SupportedTAList ::= SEQUENCE (SIZE (1..maxnoofTACs)) OF SupportedTAItem
*/
/* List of SupportedTAItem */
typedef OSRTDList SupportedTAList;

EXTERN int asn1PE_SupportedTAList (OSCTXT* pctxt, SupportedTAList* pvalue);

EXTERN int asn1PD_SupportedTAList (OSCTXT* pctxt, SupportedTAList* pvalue);

EXTERN void asn1Print_SupportedTAList 
   (const char* name, const SupportedTAList* pvalue);

EXTERN int asn1PrtToStr_SupportedTAList (const char* name, SupportedTAList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SupportedTAList (OSCTXT *pctxt, 
   const char* name, const SupportedTAList* pvalue);

EXTERN int asn1Init_SupportedTAList (SupportedTAList* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForPagingItem_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIListForPagingItem'
*/
typedef struct EXTERN TAIListForPagingItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TAIListForPagingItem_iE_Extensions_element;

EXTERN int asn1PE_TAIListForPagingItem_iE_Extensions_element (OSCTXT* pctxt, TAIListForPagingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TAIListForPagingItem_iE_Extensions_element (OSCTXT* pctxt, TAIListForPagingItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TAIListForPagingItem_iE_Extensions_element 
   (const char* name, const TAIListForPagingItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TAIListForPagingItem_iE_Extensions_element (const char* name, 
   TAIListForPagingItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForPagingItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TAIListForPagingItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TAIListForPagingItem_iE_Extensions_element (
   TAIListForPagingItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForPagingItem_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TAIListForPagingItem'
*/
/* List of TAIListForPagingItem_iE_Extensions_element */
typedef OSRTDList TAIListForPagingItem_iE_Extensions;

EXTERN int asn1PE_TAIListForPagingItem_iE_Extensions (OSCTXT* pctxt, TAIListForPagingItem_iE_Extensions* pvalue);

EXTERN int asn1PD_TAIListForPagingItem_iE_Extensions (OSCTXT* pctxt, TAIListForPagingItem_iE_Extensions* pvalue);

EXTERN void asn1Print_TAIListForPagingItem_iE_Extensions 
   (const char* name, const TAIListForPagingItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TAIListForPagingItem_iE_Extensions (const char* name, 
   TAIListForPagingItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForPagingItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TAIListForPagingItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TAIListForPagingItem_iE_Extensions_element* 
   asn1Get_TAIListForPagingItem_iE_Extensions (ProtocolExtensionID id, 
   TAIListForPagingItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TAIListForPagingItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TAIListForPagingItem_iE_Extensions* plist, 
   TAIListForPagingItem_iE_Extensions* pmatches);

EXTERN int asn1Init_TAIListForPagingItem_iE_Extensions (
   TAIListForPagingItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForPagingItem                                      */
/*                                                            */
/**************************************************************/
/*
TAIListForPagingItem ::= SEQUENCE {
   tAI [0] TAI,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TAIListForPagingItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TAIListForPagingItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TAIListForPagingItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TAIListForPagingItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TAI tAI;
   TAIListForPagingItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TAIListForPagingItem;

EXTERN int asn1PE_TAIListForPagingItem (OSCTXT* pctxt, TAIListForPagingItem* pvalue);

EXTERN int asn1PD_TAIListForPagingItem (OSCTXT* pctxt, TAIListForPagingItem* pvalue);

EXTERN void asn1Print_TAIListForPagingItem 
   (const char* name, const TAIListForPagingItem* pvalue);

EXTERN int asn1PrtToStr_TAIListForPagingItem (const char* name, 
   TAIListForPagingItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForPagingItem (OSCTXT *pctxt, 
   const char* name, const TAIListForPagingItem* pvalue);

EXTERN int asn1Init_TAIListForPagingItem (TAIListForPagingItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForPaging                                          */
/*                                                            */
/**************************************************************/
/*
TAIListForPaging ::= SEQUENCE (SIZE (1..maxnoofTAIforPaging)) OF TAIListForPagingItem
*/
/* List of TAIListForPagingItem */
typedef OSRTDList TAIListForPaging;

EXTERN int asn1PE_TAIListForPaging (OSCTXT* pctxt, TAIListForPaging* pvalue);

EXTERN int asn1PD_TAIListForPaging (OSCTXT* pctxt, TAIListForPaging* pvalue);

EXTERN void asn1Print_TAIListForPaging 
   (const char* name, const TAIListForPaging* pvalue);

EXTERN int asn1PrtToStr_TAIListForPaging (const char* name, TAIListForPaging* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForPaging (OSCTXT *pctxt, 
   const char* name, const TAIListForPaging* pvalue);

EXTERN int asn1Init_TAIListForPaging (TAIListForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForRestart                                         */
/*                                                            */
/**************************************************************/
/*
TAIListForRestart ::= SEQUENCE (SIZE (1..maxnoofTAIforRestart)) OF TAI
*/
/* List of TAI */
typedef OSRTDList TAIListForRestart;

EXTERN int asn1PE_TAIListForRestart (OSCTXT* pctxt, TAIListForRestart* pvalue);

EXTERN int asn1PD_TAIListForRestart (OSCTXT* pctxt, TAIListForRestart* pvalue);

EXTERN void asn1Print_TAIListForRestart 
   (const char* name, const TAIListForRestart* pvalue);

EXTERN int asn1PrtToStr_TAIListForRestart (const char* name, 
   TAIListForRestart* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForRestart (OSCTXT *pctxt, 
   const char* name, const TAIListForRestart* pvalue);

EXTERN int asn1Init_TAIListForRestart (TAIListForRestart* pvalue);

/**************************************************************/
/*                                                            */
/*  TAIListForWarning                                         */
/*                                                            */
/**************************************************************/
/*
TAIListForWarning ::= SEQUENCE (SIZE (1..maxnoofTAIforWarning)) OF TAI
*/
/* List of TAI */
typedef OSRTDList TAIListForWarning;

EXTERN int asn1PE_TAIListForWarning (OSCTXT* pctxt, TAIListForWarning* pvalue);

EXTERN int asn1PD_TAIListForWarning (OSCTXT* pctxt, TAIListForWarning* pvalue);

EXTERN void asn1Print_TAIListForWarning 
   (const char* name, const TAIListForWarning* pvalue);

EXTERN int asn1PrtToStr_TAIListForWarning (const char* name, 
   TAIListForWarning* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TAIListForWarning (OSCTXT *pctxt, 
   const char* name, const TAIListForWarning* pvalue);

EXTERN int asn1Init_TAIListForWarning (TAIListForWarning* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ID_iE_Extensions_element                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargeteNB-ID'
*/
typedef struct EXTERN TargeteNB_ID_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TargeteNB_ID_iE_Extensions_element;

EXTERN int asn1PE_TargeteNB_ID_iE_Extensions_element (OSCTXT* pctxt, TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TargeteNB_ID_iE_Extensions_element (OSCTXT* pctxt, TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TargeteNB_ID_iE_Extensions_element 
   (const char* name, const TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TargeteNB_ID_iE_Extensions_element (const char* name, 
   TargeteNB_ID_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargeteNB_ID_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TargeteNB_ID_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TargeteNB_ID_iE_Extensions_element (
   TargeteNB_ID_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ID_iE_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargeteNB-ID'
*/
/* List of TargeteNB_ID_iE_Extensions_element */
typedef OSRTDList TargeteNB_ID_iE_Extensions;

EXTERN int asn1PE_TargeteNB_ID_iE_Extensions (OSCTXT* pctxt, TargeteNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PD_TargeteNB_ID_iE_Extensions (OSCTXT* pctxt, TargeteNB_ID_iE_Extensions* pvalue);

EXTERN void asn1Print_TargeteNB_ID_iE_Extensions 
   (const char* name, const TargeteNB_ID_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TargeteNB_ID_iE_Extensions (const char* name, 
   TargeteNB_ID_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargeteNB_ID_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TargeteNB_ID_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TargeteNB_ID_iE_Extensions_element* 
   asn1Get_TargeteNB_ID_iE_Extensions (ProtocolExtensionID id, 
   TargeteNB_ID_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TargeteNB_ID_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, TargeteNB_ID_iE_Extensions* plist, 
   TargeteNB_ID_iE_Extensions* pmatches);

EXTERN int asn1Init_TargeteNB_ID_iE_Extensions (TargeteNB_ID_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargeteNB_ID                                              */
/*                                                            */
/**************************************************************/
/*
TargeteNB-ID ::= SEQUENCE {
   globalENB-ID [0] GlobalNgENB-ID,
   selected-EPS-TAI [1] EPS-TAI,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TargeteNB-ID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TargeteNB-ID-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TargeteNB-ID-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TargeteNB_ID {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GlobalNgENB_ID globalENB_ID;
   EPS_TAI selected_EPS_TAI;
   TargeteNB_ID_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TargeteNB_ID;

EXTERN int asn1PE_TargeteNB_ID (OSCTXT* pctxt, TargeteNB_ID* pvalue);

EXTERN int asn1PD_TargeteNB_ID (OSCTXT* pctxt, TargeteNB_ID* pvalue);

EXTERN void asn1Print_TargeteNB_ID (const char* name, const TargeteNB_ID* pvalue);

EXTERN int asn1PrtToStr_TargeteNB_ID (const char* name, TargeteNB_ID* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargeteNB_ID (OSCTXT *pctxt, 
   const char* name, const TargeteNB_ID* pvalue);

EXTERN int asn1Init_TargeteNB_ID (TargeteNB_ID* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetID_choice_Extensions                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetID'
*/
typedef struct EXTERN TargetID_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} TargetID_choice_Extensions;

EXTERN int asn1PE_TargetID_choice_Extensions (OSCTXT* pctxt, TargetID_choice_Extensions* pvalue);

EXTERN int asn1PD_TargetID_choice_Extensions (OSCTXT* pctxt, TargetID_choice_Extensions* pvalue);

EXTERN void asn1Print_TargetID_choice_Extensions 
   (const char* name, const TargetID_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_TargetID_choice_Extensions (const char* name, 
   TargetID_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetID_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const TargetID_choice_Extensions* pvalue);

EXTERN int asn1Init_TargetID_choice_Extensions (TargetID_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetID                                                  */
/*                                                            */
/**************************************************************/
/*
TargetID ::= CHOICE {
   targetRANNodeID [0] TargetRANNodeID,
   targeteNB-ID [1] TargeteNB-ID,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({TargetID-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({TargetID-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({TargetID-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_TargetID_targetRANNodeID      1
#define T_TargetID_targeteNB_ID         2
#define T_TargetID_choice_Extensions    3

typedef struct EXTERN TargetID {
   OSINT32 t;
   union {
      /* t = 1 */
      TargetRANNodeID *targetRANNodeID;
      /* t = 2 */
      TargeteNB_ID *targeteNB_ID;
      /* t = 3 */
      TargetID_choice_Extensions *choice_Extensions;
   } u;
} TargetID;

EXTERN int asn1PE_TargetID (OSCTXT* pctxt, TargetID* pvalue);

EXTERN int asn1PD_TargetID (OSCTXT* pctxt, TargetID* pvalue);

EXTERN void asn1Print_TargetID (const char* name, const TargetID* pvalue);

EXTERN int asn1PrtToStr_TargetID (const char* name, TargetID* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetID (OSCTXT *pctxt, 
   const char* name, const TargetID* pvalue);

EXTERN int asn1Init_TargetID (TargetID* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_i  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetNGRANNode-ToSourceNGRANNode-TransparentContainer'
*/
typedef struct EXTERN TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element;

EXTERN int asn1PE_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element (OSCTXT* pctxt, TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element 
   (const char* name, const TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element (
   const char* name, 
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element (
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_i  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TargetNGRANNode-ToSourceNGRANNode-TransparentContainer'
*/
/* List of TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element */
typedef OSRTDList TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions;

EXTERN int asn1PE_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions (OSCTXT* pctxt, TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PD_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions (OSCTXT* pctxt, TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* pvalue);

EXTERN void asn1Print_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions 
   (const char* name, const TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions (
   const char* name, 
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions_element* 
   asn1Get_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions 
   (ProtocolExtensionID id, 
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int 
   asn1GetAll_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* plist, 
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* pmatches);

EXTERN int asn1Init_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions (
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetNGRANNode_ToSourceNGRANNode_TransparentContainer    */
/*                                                            */
/**************************************************************/
/*
TargetNGRANNode-ToSourceNGRANNode-TransparentContainer ::= SEQUENCE {
   rRCContainer [0] RRCContainer,
   iE-Extensions [1] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TargetNGRANNode-ToSourceNGRANNode-TransparentContainer-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TargetNGRANNode-ToSourceNGRANNode-TransparentContainer-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TargetNGRANNode-ToSourceNGRANNode-TransparentContainer-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TargetNGRANNode_ToSourceNGRANNode_TransparentContainer {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   RRCContainer rRCContainer;
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TargetNGRANNode_ToSourceNGRANNode_TransparentContainer;

EXTERN int asn1PE_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer (OSCTXT* pctxt, TargetNGRANNode_ToSourceNGRANNode_TransparentContainer* pvalue);

EXTERN int asn1PD_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer (OSCTXT* pctxt, TargetNGRANNode_ToSourceNGRANNode_TransparentContainer* pvalue);

EXTERN void asn1Print_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer 
   (const char* name, const TargetNGRANNode_ToSourceNGRANNode_TransparentContainer* pvalue);

EXTERN int asn1PrtToStr_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer (
   const char* name, 
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer (OSCTXT *pctxt, 
   const char* name, const TargetNGRANNode_ToSourceNGRANNode_TransparentContainer* pvalue);

EXTERN int asn1Init_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer (
   TargetNGRANNode_ToSourceNGRANNode_TransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  TNLAssociationItem_iE_Extensions_element                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TNLAssociationItem'
*/
typedef struct EXTERN TNLAssociationItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TNLAssociationItem_iE_Extensions_element;

EXTERN int asn1PE_TNLAssociationItem_iE_Extensions_element (OSCTXT* pctxt, TNLAssociationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TNLAssociationItem_iE_Extensions_element (OSCTXT* pctxt, TNLAssociationItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TNLAssociationItem_iE_Extensions_element 
   (const char* name, const TNLAssociationItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TNLAssociationItem_iE_Extensions_element (const char* name, 
   TNLAssociationItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TNLAssociationItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TNLAssociationItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TNLAssociationItem_iE_Extensions_element (
   TNLAssociationItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TNLAssociationItem_iE_Extensions                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TNLAssociationItem'
*/
/* List of TNLAssociationItem_iE_Extensions_element */
typedef OSRTDList TNLAssociationItem_iE_Extensions;

EXTERN int asn1PE_TNLAssociationItem_iE_Extensions (OSCTXT* pctxt, TNLAssociationItem_iE_Extensions* pvalue);

EXTERN int asn1PD_TNLAssociationItem_iE_Extensions (OSCTXT* pctxt, TNLAssociationItem_iE_Extensions* pvalue);

EXTERN void asn1Print_TNLAssociationItem_iE_Extensions 
   (const char* name, const TNLAssociationItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TNLAssociationItem_iE_Extensions (const char* name, 
   TNLAssociationItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TNLAssociationItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TNLAssociationItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TNLAssociationItem_iE_Extensions_element* 
   asn1Get_TNLAssociationItem_iE_Extensions (ProtocolExtensionID id, 
   TNLAssociationItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TNLAssociationItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TNLAssociationItem_iE_Extensions* plist, 
   TNLAssociationItem_iE_Extensions* pmatches);

EXTERN int asn1Init_TNLAssociationItem_iE_Extensions (
   TNLAssociationItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TNLAssociationItem                                        */
/*                                                            */
/**************************************************************/
/*
TNLAssociationItem ::= SEQUENCE {
   tNLAssociationAddress [0] EXPLICIT CPTransportLayerInformation,
   cause [1] EXPLICIT Cause,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TNLAssociationItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TNLAssociationItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TNLAssociationItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TNLAssociationItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   CPTransportLayerInformation tNLAssociationAddress;
   Cause cause;
   TNLAssociationItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TNLAssociationItem;

EXTERN int asn1PE_TNLAssociationItem (OSCTXT* pctxt, TNLAssociationItem* pvalue);

EXTERN int asn1PD_TNLAssociationItem (OSCTXT* pctxt, TNLAssociationItem* pvalue);

EXTERN void asn1Print_TNLAssociationItem 
   (const char* name, const TNLAssociationItem* pvalue);

EXTERN int asn1PrtToStr_TNLAssociationItem (const char* name, 
   TNLAssociationItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TNLAssociationItem (OSCTXT *pctxt, 
   const char* name, const TNLAssociationItem* pvalue);

EXTERN int asn1Init_TNLAssociationItem (TNLAssociationItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TNLAssociationList                                        */
/*                                                            */
/**************************************************************/
/*
TNLAssociationList ::= SEQUENCE (SIZE (1..maxnoofTNLAssociations)) OF TNLAssociationItem
*/
/* List of TNLAssociationItem */
typedef OSRTDList TNLAssociationList;

EXTERN int asn1PE_TNLAssociationList (OSCTXT* pctxt, TNLAssociationList* pvalue);

EXTERN int asn1PD_TNLAssociationList (OSCTXT* pctxt, TNLAssociationList* pvalue);

EXTERN void asn1Print_TNLAssociationList 
   (const char* name, const TNLAssociationList* pvalue);

EXTERN int asn1PrtToStr_TNLAssociationList (const char* name, 
   TNLAssociationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TNLAssociationList (OSCTXT *pctxt, 
   const char* name, const TNLAssociationList* pvalue);

EXTERN int asn1Init_TNLAssociationList (TNLAssociationList* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceActivation_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceActivation'
*/
typedef struct EXTERN TraceActivation_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} TraceActivation_iE_Extensions_element;

EXTERN int asn1PE_TraceActivation_iE_Extensions_element (OSCTXT* pctxt, TraceActivation_iE_Extensions_element* pvalue);

EXTERN int asn1PD_TraceActivation_iE_Extensions_element (OSCTXT* pctxt, TraceActivation_iE_Extensions_element* pvalue);

EXTERN void asn1Print_TraceActivation_iE_Extensions_element 
   (const char* name, const TraceActivation_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_TraceActivation_iE_Extensions_element (const char* name, 
   TraceActivation_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceActivation_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const TraceActivation_iE_Extensions_element* pvalue);

EXTERN int asn1Init_TraceActivation_iE_Extensions_element (
   TraceActivation_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceActivation_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TraceActivation'
*/
/* List of TraceActivation_iE_Extensions_element */
typedef OSRTDList TraceActivation_iE_Extensions;

EXTERN int asn1PE_TraceActivation_iE_Extensions (OSCTXT* pctxt, TraceActivation_iE_Extensions* pvalue);

EXTERN int asn1PD_TraceActivation_iE_Extensions (OSCTXT* pctxt, TraceActivation_iE_Extensions* pvalue);

EXTERN void asn1Print_TraceActivation_iE_Extensions 
   (const char* name, const TraceActivation_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_TraceActivation_iE_Extensions (const char* name, 
   TraceActivation_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceActivation_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const TraceActivation_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct TraceActivation_iE_Extensions_element* 
   asn1Get_TraceActivation_iE_Extensions (ProtocolExtensionID id, 
   TraceActivation_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_TraceActivation_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   TraceActivation_iE_Extensions* plist, 
   TraceActivation_iE_Extensions* pmatches);

EXTERN int asn1Init_TraceActivation_iE_Extensions (
   TraceActivation_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  TraceActivation                                           */
/*                                                            */
/**************************************************************/
/*
TraceActivation ::= SEQUENCE {
   nGRANTraceID [0] NGRANTraceID,
   interfacesToTrace [1] InterfacesToTrace,
   traceDepth [2] TraceDepth,
   traceCollectionEntityIPAddress [3] TransportLayerAddress,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({TraceActivation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({TraceActivation-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({TraceActivation-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN TraceActivation {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NGRANTraceID nGRANTraceID;
   InterfacesToTrace interfacesToTrace;
   TraceDepth traceDepth;
   TransportLayerAddress traceCollectionEntityIPAddress;
   TraceActivation_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} TraceActivation;

EXTERN int asn1PE_TraceActivation (OSCTXT* pctxt, TraceActivation* pvalue);

EXTERN int asn1PD_TraceActivation (OSCTXT* pctxt, TraceActivation* pvalue);

EXTERN void asn1Print_TraceActivation 
   (const char* name, const TraceActivation* pvalue);

EXTERN int asn1PrtToStr_TraceActivation (const char* name, TraceActivation* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TraceActivation (OSCTXT *pctxt, 
   const char* name, const TraceActivation* pvalue);

EXTERN int asn1Init_TraceActivation (TraceActivation* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAggregateMaximumBitRate_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAggregateMaximumBitRate'
*/
typedef struct EXTERN UEAggregateMaximumBitRate_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UEAggregateMaximumBitRate_iE_Extensions_element;

EXTERN int asn1PE_UEAggregateMaximumBitRate_iE_Extensions_element (OSCTXT* pctxt, UEAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UEAggregateMaximumBitRate_iE_Extensions_element (OSCTXT* pctxt, UEAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UEAggregateMaximumBitRate_iE_Extensions_element 
   (const char* name, const UEAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UEAggregateMaximumBitRate_iE_Extensions_element (
   const char* name, UEAggregateMaximumBitRate_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEAggregateMaximumBitRate_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UEAggregateMaximumBitRate_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UEAggregateMaximumBitRate_iE_Extensions_element (
   UEAggregateMaximumBitRate_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAggregateMaximumBitRate_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAggregateMaximumBitRate'
*/
/* List of UEAggregateMaximumBitRate_iE_Extensions_element */
typedef OSRTDList UEAggregateMaximumBitRate_iE_Extensions;

EXTERN int asn1PE_UEAggregateMaximumBitRate_iE_Extensions (OSCTXT* pctxt, UEAggregateMaximumBitRate_iE_Extensions* pvalue);

EXTERN int asn1PD_UEAggregateMaximumBitRate_iE_Extensions (OSCTXT* pctxt, UEAggregateMaximumBitRate_iE_Extensions* pvalue);

EXTERN void asn1Print_UEAggregateMaximumBitRate_iE_Extensions 
   (const char* name, const UEAggregateMaximumBitRate_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UEAggregateMaximumBitRate_iE_Extensions (const char* name, 
   UEAggregateMaximumBitRate_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEAggregateMaximumBitRate_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UEAggregateMaximumBitRate_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UEAggregateMaximumBitRate_iE_Extensions_element* 
   asn1Get_UEAggregateMaximumBitRate_iE_Extensions (ProtocolExtensionID id, 
   UEAggregateMaximumBitRate_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEAggregateMaximumBitRate_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UEAggregateMaximumBitRate_iE_Extensions* plist, 
   UEAggregateMaximumBitRate_iE_Extensions* pmatches);

EXTERN int asn1Init_UEAggregateMaximumBitRate_iE_Extensions (
   UEAggregateMaximumBitRate_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAggregateMaximumBitRate                                 */
/*                                                            */
/**************************************************************/
/*
 U
UEAggregateMaximumBitRate ::= SEQUENCE {
   uEAggregateMaximumBitRateDL [0] BitRate,
   uEAggregateMaximumBitRateUL [1] BitRate,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UEAggregateMaximumBitRate-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UEAggregateMaximumBitRate-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UEAggregateMaximumBitRate-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UEAggregateMaximumBitRate {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   BitRate uEAggregateMaximumBitRateDL;
   BitRate uEAggregateMaximumBitRateUL;
   UEAggregateMaximumBitRate_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UEAggregateMaximumBitRate;

EXTERN int asn1PE_UEAggregateMaximumBitRate (OSCTXT* pctxt, UEAggregateMaximumBitRate* pvalue);

EXTERN int asn1PD_UEAggregateMaximumBitRate (OSCTXT* pctxt, UEAggregateMaximumBitRate* pvalue);

EXTERN void asn1Print_UEAggregateMaximumBitRate 
   (const char* name, const UEAggregateMaximumBitRate* pvalue);

EXTERN int asn1PrtToStr_UEAggregateMaximumBitRate (const char* name, 
   UEAggregateMaximumBitRate* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEAggregateMaximumBitRate (OSCTXT *pctxt, 
   const char* name, const UEAggregateMaximumBitRate* pvalue);

EXTERN int asn1Init_UEAggregateMaximumBitRate (UEAggregateMaximumBitRate* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_NGAP_ID_pair_iE_Extensions_element                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-NGAP-ID-pair'
*/
typedef struct EXTERN UE_NGAP_ID_pair_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UE_NGAP_ID_pair_iE_Extensions_element;

EXTERN int asn1PE_UE_NGAP_ID_pair_iE_Extensions_element (OSCTXT* pctxt, UE_NGAP_ID_pair_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UE_NGAP_ID_pair_iE_Extensions_element (OSCTXT* pctxt, UE_NGAP_ID_pair_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UE_NGAP_ID_pair_iE_Extensions_element 
   (const char* name, const UE_NGAP_ID_pair_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UE_NGAP_ID_pair_iE_Extensions_element (const char* name, 
   UE_NGAP_ID_pair_iE_Extensions_element* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_NGAP_ID_pair_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UE_NGAP_ID_pair_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UE_NGAP_ID_pair_iE_Extensions_element (
   UE_NGAP_ID_pair_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_NGAP_ID_pair_iE_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-NGAP-ID-pair'
*/
/* List of UE_NGAP_ID_pair_iE_Extensions_element */
typedef OSRTDList UE_NGAP_ID_pair_iE_Extensions;

EXTERN int asn1PE_UE_NGAP_ID_pair_iE_Extensions (OSCTXT* pctxt, UE_NGAP_ID_pair_iE_Extensions* pvalue);

EXTERN int asn1PD_UE_NGAP_ID_pair_iE_Extensions (OSCTXT* pctxt, UE_NGAP_ID_pair_iE_Extensions* pvalue);

EXTERN void asn1Print_UE_NGAP_ID_pair_iE_Extensions 
   (const char* name, const UE_NGAP_ID_pair_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UE_NGAP_ID_pair_iE_Extensions (const char* name, 
   UE_NGAP_ID_pair_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_NGAP_ID_pair_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UE_NGAP_ID_pair_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UE_NGAP_ID_pair_iE_Extensions_element* 
   asn1Get_UE_NGAP_ID_pair_iE_Extensions (ProtocolExtensionID id, 
   UE_NGAP_ID_pair_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UE_NGAP_ID_pair_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UE_NGAP_ID_pair_iE_Extensions* plist, 
   UE_NGAP_ID_pair_iE_Extensions* pmatches);

EXTERN int asn1Init_UE_NGAP_ID_pair_iE_Extensions (
   UE_NGAP_ID_pair_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_NGAP_ID_pair                                           */
/*                                                            */
/**************************************************************/
/*
UE-NGAP-ID-pair ::= SEQUENCE {
   aMF-UE-NGAP-ID [0] AMF-UE-NGAP-ID,
   rAN-UE-NGAP-ID [1] RAN-UE-NGAP-ID,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UE-NGAP-ID-pair-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UE-NGAP-ID-pair-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UE-NGAP-ID-pair-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UE_NGAP_ID_pair {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   AMF_UE_NGAP_ID aMF_UE_NGAP_ID;
   RAN_UE_NGAP_ID rAN_UE_NGAP_ID;
   UE_NGAP_ID_pair_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UE_NGAP_ID_pair;

EXTERN int asn1PE_UE_NGAP_ID_pair (OSCTXT* pctxt, UE_NGAP_ID_pair* pvalue);

EXTERN int asn1PD_UE_NGAP_ID_pair (OSCTXT* pctxt, UE_NGAP_ID_pair* pvalue);

EXTERN void asn1Print_UE_NGAP_ID_pair 
   (const char* name, const UE_NGAP_ID_pair* pvalue);

EXTERN int asn1PrtToStr_UE_NGAP_ID_pair (const char* name, UE_NGAP_ID_pair* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_NGAP_ID_pair (OSCTXT *pctxt, 
   const char* name, const UE_NGAP_ID_pair* pvalue);

EXTERN int asn1Init_UE_NGAP_ID_pair (UE_NGAP_ID_pair* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_NGAP_IDs_choice_Extensions                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UE-NGAP-IDs'
*/
typedef struct EXTERN UE_NGAP_IDs_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} UE_NGAP_IDs_choice_Extensions;

EXTERN int asn1PE_UE_NGAP_IDs_choice_Extensions (OSCTXT* pctxt, UE_NGAP_IDs_choice_Extensions* pvalue);

EXTERN int asn1PD_UE_NGAP_IDs_choice_Extensions (OSCTXT* pctxt, UE_NGAP_IDs_choice_Extensions* pvalue);

EXTERN void asn1Print_UE_NGAP_IDs_choice_Extensions 
   (const char* name, const UE_NGAP_IDs_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_UE_NGAP_IDs_choice_Extensions (const char* name, 
   UE_NGAP_IDs_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_NGAP_IDs_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const UE_NGAP_IDs_choice_Extensions* pvalue);

EXTERN int asn1Init_UE_NGAP_IDs_choice_Extensions (
   UE_NGAP_IDs_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UE_NGAP_IDs                                               */
/*                                                            */
/**************************************************************/
/*
UE-NGAP-IDs ::= CHOICE {
   uE-NGAP-ID-pair [0] UE-NGAP-ID-pair,
   aMF-UE-NGAP-ID [1] AMF-UE-NGAP-ID,
   choice-Extensions [2] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UE-NGAP-IDs-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UE-NGAP-IDs-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UE-NGAP-IDs-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_UE_NGAP_IDs_uE_NGAP_ID_pair   1
#define T_UE_NGAP_IDs_aMF_UE_NGAP_ID    2
#define T_UE_NGAP_IDs_choice_Extensions 3

typedef struct EXTERN UE_NGAP_IDs {
   OSINT32 t;
   union {
      /* t = 1 */
      UE_NGAP_ID_pair *uE_NGAP_ID_pair;
      /* t = 2 */
      AMF_UE_NGAP_ID aMF_UE_NGAP_ID;
      /* t = 3 */
      UE_NGAP_IDs_choice_Extensions *choice_Extensions;
   } u;
} UE_NGAP_IDs;

EXTERN int asn1PE_UE_NGAP_IDs (OSCTXT* pctxt, UE_NGAP_IDs* pvalue);

EXTERN int asn1PD_UE_NGAP_IDs (OSCTXT* pctxt, UE_NGAP_IDs* pvalue);

EXTERN void asn1Print_UE_NGAP_IDs (const char* name, const UE_NGAP_IDs* pvalue);

EXTERN int asn1PrtToStr_UE_NGAP_IDs (const char* name, UE_NGAP_IDs* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UE_NGAP_IDs (OSCTXT *pctxt, 
   const char* name, const UE_NGAP_IDs* pvalue);

EXTERN int asn1Init_UE_NGAP_IDs (UE_NGAP_IDs* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPagingIdentity_choice_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEPagingIdentity'
*/
typedef struct EXTERN UEPagingIdentity_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} UEPagingIdentity_choice_Extensions;

EXTERN int asn1PE_UEPagingIdentity_choice_Extensions (OSCTXT* pctxt, UEPagingIdentity_choice_Extensions* pvalue);

EXTERN int asn1PD_UEPagingIdentity_choice_Extensions (OSCTXT* pctxt, UEPagingIdentity_choice_Extensions* pvalue);

EXTERN void asn1Print_UEPagingIdentity_choice_Extensions 
   (const char* name, const UEPagingIdentity_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_UEPagingIdentity_choice_Extensions (const char* name, 
   UEPagingIdentity_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEPagingIdentity_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const UEPagingIdentity_choice_Extensions* pvalue);

EXTERN int asn1Init_UEPagingIdentity_choice_Extensions (
   UEPagingIdentity_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPagingIdentity                                          */
/*                                                            */
/**************************************************************/
/*
UEPagingIdentity ::= CHOICE {
   fiveG-S-TMSI [0] FiveG-S-TMSI,
   choice-Extensions [1] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UEPagingIdentity-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UEPagingIdentity-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UEPagingIdentity-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_UEPagingIdentity_fiveG_S_TMSI 1
#define T_UEPagingIdentity_choice_Extensions 2

typedef struct EXTERN UEPagingIdentity {
   OSINT32 t;
   union {
      /* t = 1 */
      FiveG_S_TMSI *fiveG_S_TMSI;
      /* t = 2 */
      UEPagingIdentity_choice_Extensions *choice_Extensions;
   } u;
} UEPagingIdentity;

EXTERN int asn1PE_UEPagingIdentity (OSCTXT* pctxt, UEPagingIdentity* pvalue);

EXTERN int asn1PD_UEPagingIdentity (OSCTXT* pctxt, UEPagingIdentity* pvalue);

EXTERN void asn1Print_UEPagingIdentity 
   (const char* name, const UEPagingIdentity* pvalue);

EXTERN int asn1PrtToStr_UEPagingIdentity (const char* name, UEPagingIdentity* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEPagingIdentity (OSCTXT *pctxt, 
   const char* name, const UEPagingIdentity* pvalue);

EXTERN int asn1Init_UEPagingIdentity (UEPagingIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPresenceInAreaOfInterestItem_iE_Extensions_element      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEPresenceInAreaOfInterestItem'
*/
typedef struct EXTERN UEPresenceInAreaOfInterestItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UEPresenceInAreaOfInterestItem_iE_Extensions_element;

EXTERN int asn1PE_UEPresenceInAreaOfInterestItem_iE_Extensions_element (OSCTXT* pctxt, UEPresenceInAreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UEPresenceInAreaOfInterestItem_iE_Extensions_element (OSCTXT* pctxt, UEPresenceInAreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UEPresenceInAreaOfInterestItem_iE_Extensions_element 
   (const char* name, const UEPresenceInAreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UEPresenceInAreaOfInterestItem_iE_Extensions_element (
   const char* name, 
   UEPresenceInAreaOfInterestItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEPresenceInAreaOfInterestItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UEPresenceInAreaOfInterestItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UEPresenceInAreaOfInterestItem_iE_Extensions_element (
   UEPresenceInAreaOfInterestItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPresenceInAreaOfInterestItem_iE_Extensions              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEPresenceInAreaOfInterestItem'
*/
/* List of UEPresenceInAreaOfInterestItem_iE_Extensions_element */
typedef OSRTDList UEPresenceInAreaOfInterestItem_iE_Extensions;

EXTERN int asn1PE_UEPresenceInAreaOfInterestItem_iE_Extensions (OSCTXT* pctxt, UEPresenceInAreaOfInterestItem_iE_Extensions* pvalue);

EXTERN int asn1PD_UEPresenceInAreaOfInterestItem_iE_Extensions (OSCTXT* pctxt, UEPresenceInAreaOfInterestItem_iE_Extensions* pvalue);

EXTERN void asn1Print_UEPresenceInAreaOfInterestItem_iE_Extensions 
   (const char* name, const UEPresenceInAreaOfInterestItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UEPresenceInAreaOfInterestItem_iE_Extensions (
   const char* name, UEPresenceInAreaOfInterestItem_iE_Extensions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEPresenceInAreaOfInterestItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UEPresenceInAreaOfInterestItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UEPresenceInAreaOfInterestItem_iE_Extensions_element* 
   asn1Get_UEPresenceInAreaOfInterestItem_iE_Extensions 
   (ProtocolExtensionID id, 
   UEPresenceInAreaOfInterestItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UEPresenceInAreaOfInterestItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UEPresenceInAreaOfInterestItem_iE_Extensions* plist, 
   UEPresenceInAreaOfInterestItem_iE_Extensions* pmatches);

EXTERN int asn1Init_UEPresenceInAreaOfInterestItem_iE_Extensions (
   UEPresenceInAreaOfInterestItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPresenceInAreaOfInterestItem                            */
/*                                                            */
/**************************************************************/
/*
UEPresenceInAreaOfInterestItem ::= SEQUENCE {
   locationReportingReferenceID [0] LocationReportingReferenceID,
   uEPresence [1] UEPresence,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UEPresenceInAreaOfInterestItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UEPresenceInAreaOfInterestItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UEPresenceInAreaOfInterestItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UEPresenceInAreaOfInterestItem {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   LocationReportingReferenceID locationReportingReferenceID;
   UEPresence uEPresence;
   UEPresenceInAreaOfInterestItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UEPresenceInAreaOfInterestItem;

EXTERN int asn1PE_UEPresenceInAreaOfInterestItem (OSCTXT* pctxt, UEPresenceInAreaOfInterestItem* pvalue);

EXTERN int asn1PD_UEPresenceInAreaOfInterestItem (OSCTXT* pctxt, UEPresenceInAreaOfInterestItem* pvalue);

EXTERN void asn1Print_UEPresenceInAreaOfInterestItem 
   (const char* name, const UEPresenceInAreaOfInterestItem* pvalue);

EXTERN int asn1PrtToStr_UEPresenceInAreaOfInterestItem (const char* name, 
   UEPresenceInAreaOfInterestItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEPresenceInAreaOfInterestItem (OSCTXT *pctxt, 
   const char* name, const UEPresenceInAreaOfInterestItem* pvalue);

EXTERN int asn1Init_UEPresenceInAreaOfInterestItem (
   UEPresenceInAreaOfInterestItem* pvalue);

/**************************************************************/
/*                                                            */
/*  UEPresenceInAreaOfInterestList                            */
/*                                                            */
/**************************************************************/
/*
UEPresenceInAreaOfInterestList ::= SEQUENCE (SIZE (1..maxnoofAoI)) OF UEPresenceInAreaOfInterestItem
*/
/* List of UEPresenceInAreaOfInterestItem */
typedef OSRTDList UEPresenceInAreaOfInterestList;

EXTERN int asn1PE_UEPresenceInAreaOfInterestList (OSCTXT* pctxt, UEPresenceInAreaOfInterestList* pvalue);

EXTERN int asn1PD_UEPresenceInAreaOfInterestList (OSCTXT* pctxt, UEPresenceInAreaOfInterestList* pvalue);

EXTERN void asn1Print_UEPresenceInAreaOfInterestList 
   (const char* name, const UEPresenceInAreaOfInterestList* pvalue);

EXTERN int asn1PrtToStr_UEPresenceInAreaOfInterestList (const char* name, 
   UEPresenceInAreaOfInterestList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UEPresenceInAreaOfInterestList (OSCTXT *pctxt, 
   const char* name, const UEPresenceInAreaOfInterestList* pvalue);

EXTERN int asn1Init_UEPresenceInAreaOfInterestList (
   UEPresenceInAreaOfInterestList* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityForPaging_iE_Extensions_element          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityForPaging'
*/
typedef struct EXTERN UERadioCapabilityForPaging_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UERadioCapabilityForPaging_iE_Extensions_element;

EXTERN int asn1PE_UERadioCapabilityForPaging_iE_Extensions_element (OSCTXT* pctxt, UERadioCapabilityForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UERadioCapabilityForPaging_iE_Extensions_element (OSCTXT* pctxt, UERadioCapabilityForPaging_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UERadioCapabilityForPaging_iE_Extensions_element 
   (const char* name, const UERadioCapabilityForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityForPaging_iE_Extensions_element (
   const char* name, UERadioCapabilityForPaging_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityForPaging_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityForPaging_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UERadioCapabilityForPaging_iE_Extensions_element (
   UERadioCapabilityForPaging_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityForPaging_iE_Extensions                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UERadioCapabilityForPaging'
*/
/* List of UERadioCapabilityForPaging_iE_Extensions_element */
typedef OSRTDList UERadioCapabilityForPaging_iE_Extensions;

EXTERN int asn1PE_UERadioCapabilityForPaging_iE_Extensions (OSCTXT* pctxt, UERadioCapabilityForPaging_iE_Extensions* pvalue);

EXTERN int asn1PD_UERadioCapabilityForPaging_iE_Extensions (OSCTXT* pctxt, UERadioCapabilityForPaging_iE_Extensions* pvalue);

EXTERN void asn1Print_UERadioCapabilityForPaging_iE_Extensions 
   (const char* name, const UERadioCapabilityForPaging_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityForPaging_iE_Extensions (const char* name, 
   UERadioCapabilityForPaging_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityForPaging_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityForPaging_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UERadioCapabilityForPaging_iE_Extensions_element* 
   asn1Get_UERadioCapabilityForPaging_iE_Extensions (ProtocolExtensionID id, 
   UERadioCapabilityForPaging_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UERadioCapabilityForPaging_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UERadioCapabilityForPaging_iE_Extensions* plist, 
   UERadioCapabilityForPaging_iE_Extensions* pmatches);

EXTERN int asn1Init_UERadioCapabilityForPaging_iE_Extensions (
   UERadioCapabilityForPaging_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapabilityForPaging                                */
/*                                                            */
/**************************************************************/
/*
UERadioCapabilityForPaging ::= SEQUENCE {
   uERadioCapabilityForPagingOfNR [0] UERadioCapabilityForPagingOfNR OPTIONAL,
   uERadioCapabilityForPagingOfEUTRA [1] UERadioCapabilityForPagingOfEUTRA OPTIONAL,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UERadioCapabilityForPaging-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UERadioCapabilityForPaging-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UERadioCapabilityForPaging-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UERadioCapabilityForPaging {
   struct {
      unsigned uERadioCapabilityForPagingOfNRPresent : 1;
      unsigned uERadioCapabilityForPagingOfEUTRAPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   UERadioCapabilityForPagingOfNR uERadioCapabilityForPagingOfNR;
   UERadioCapabilityForPagingOfEUTRA uERadioCapabilityForPagingOfEUTRA;
   UERadioCapabilityForPaging_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UERadioCapabilityForPaging;

EXTERN int asn1PE_UERadioCapabilityForPaging (OSCTXT* pctxt, UERadioCapabilityForPaging* pvalue);

EXTERN int asn1PD_UERadioCapabilityForPaging (OSCTXT* pctxt, UERadioCapabilityForPaging* pvalue);

EXTERN void asn1Print_UERadioCapabilityForPaging 
   (const char* name, const UERadioCapabilityForPaging* pvalue);

EXTERN int asn1PrtToStr_UERadioCapabilityForPaging (const char* name, 
   UERadioCapabilityForPaging* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UERadioCapabilityForPaging (OSCTXT *pctxt, 
   const char* name, const UERadioCapabilityForPaging* pvalue);

EXTERN int asn1Init_UERadioCapabilityForPaging (UERadioCapabilityForPaging* pvalue);

/**************************************************************/
/*                                                            */
/*  UESecurityCapabilities_iE_Extensions_element              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESecurityCapabilities'
*/
typedef struct EXTERN UESecurityCapabilities_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UESecurityCapabilities_iE_Extensions_element;

EXTERN int asn1PE_UESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UESecurityCapabilities_iE_Extensions_element (OSCTXT* pctxt, UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UESecurityCapabilities_iE_Extensions_element 
   (const char* name, const UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UESecurityCapabilities_iE_Extensions_element (
   const char* name, UESecurityCapabilities_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UESecurityCapabilities_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UESecurityCapabilities_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UESecurityCapabilities_iE_Extensions_element (
   UESecurityCapabilities_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UESecurityCapabilities_iE_Extensions                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESecurityCapabilities'
*/
/* List of UESecurityCapabilities_iE_Extensions_element */
typedef OSRTDList UESecurityCapabilities_iE_Extensions;

EXTERN int asn1PE_UESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, UESecurityCapabilities_iE_Extensions* pvalue);

EXTERN int asn1PD_UESecurityCapabilities_iE_Extensions (OSCTXT* pctxt, UESecurityCapabilities_iE_Extensions* pvalue);

EXTERN void asn1Print_UESecurityCapabilities_iE_Extensions 
   (const char* name, const UESecurityCapabilities_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UESecurityCapabilities_iE_Extensions (const char* name, 
   UESecurityCapabilities_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UESecurityCapabilities_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UESecurityCapabilities_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UESecurityCapabilities_iE_Extensions_element* 
   asn1Get_UESecurityCapabilities_iE_Extensions (ProtocolExtensionID id, 
   UESecurityCapabilities_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UESecurityCapabilities_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UESecurityCapabilities_iE_Extensions* plist, 
   UESecurityCapabilities_iE_Extensions* pmatches);

EXTERN int asn1Init_UESecurityCapabilities_iE_Extensions (
   UESecurityCapabilities_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UESecurityCapabilities                                    */
/*                                                            */
/**************************************************************/
/*
UESecurityCapabilities ::= SEQUENCE {
   nRencryptionAlgorithms [0] NRencryptionAlgorithms,
   nRintegrityProtectionAlgorithms [1] NRintegrityProtectionAlgorithms,
   eUTRAencryptionAlgorithms [2] EUTRAencryptionAlgorithms,
   eUTRAintegrityProtectionAlgorithms [3] EUTRAintegrityProtectionAlgorithms,
   iE-Extensions [4] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UESecurityCapabilities-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UESecurityCapabilities-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UESecurityCapabilities-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UESecurityCapabilities {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NRencryptionAlgorithms nRencryptionAlgorithms;
   NRintegrityProtectionAlgorithms nRintegrityProtectionAlgorithms;
   EUTRAencryptionAlgorithms eUTRAencryptionAlgorithms;
   EUTRAintegrityProtectionAlgorithms eUTRAintegrityProtectionAlgorithms;
   UESecurityCapabilities_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UESecurityCapabilities;

EXTERN int asn1PE_UESecurityCapabilities (OSCTXT* pctxt, UESecurityCapabilities* pvalue);

EXTERN int asn1PD_UESecurityCapabilities (OSCTXT* pctxt, UESecurityCapabilities* pvalue);

EXTERN void asn1Print_UESecurityCapabilities 
   (const char* name, const UESecurityCapabilities* pvalue);

EXTERN int asn1PrtToStr_UESecurityCapabilities (const char* name, 
   UESecurityCapabilities* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UESecurityCapabilities (OSCTXT *pctxt, 
   const char* name, const UESecurityCapabilities* pvalue);

EXTERN int asn1Init_UESecurityCapabilities (UESecurityCapabilities* pvalue);

/**************************************************************/
/*                                                            */
/*  UnavailableGUAMIItem_iE_Extensions_element                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UnavailableGUAMIItem'
*/
typedef struct EXTERN UnavailableGUAMIItem_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UnavailableGUAMIItem_iE_Extensions_element;

EXTERN int asn1PE_UnavailableGUAMIItem_iE_Extensions_element (OSCTXT* pctxt, UnavailableGUAMIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UnavailableGUAMIItem_iE_Extensions_element (OSCTXT* pctxt, UnavailableGUAMIItem_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UnavailableGUAMIItem_iE_Extensions_element 
   (const char* name, const UnavailableGUAMIItem_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UnavailableGUAMIItem_iE_Extensions_element (const char* name, 
   UnavailableGUAMIItem_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UnavailableGUAMIItem_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UnavailableGUAMIItem_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UnavailableGUAMIItem_iE_Extensions_element (
   UnavailableGUAMIItem_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UnavailableGUAMIItem_iE_Extensions                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UnavailableGUAMIItem'
*/
/* List of UnavailableGUAMIItem_iE_Extensions_element */
typedef OSRTDList UnavailableGUAMIItem_iE_Extensions;

EXTERN int asn1PE_UnavailableGUAMIItem_iE_Extensions (OSCTXT* pctxt, UnavailableGUAMIItem_iE_Extensions* pvalue);

EXTERN int asn1PD_UnavailableGUAMIItem_iE_Extensions (OSCTXT* pctxt, UnavailableGUAMIItem_iE_Extensions* pvalue);

EXTERN void asn1Print_UnavailableGUAMIItem_iE_Extensions 
   (const char* name, const UnavailableGUAMIItem_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UnavailableGUAMIItem_iE_Extensions (const char* name, 
   UnavailableGUAMIItem_iE_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UnavailableGUAMIItem_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UnavailableGUAMIItem_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UnavailableGUAMIItem_iE_Extensions_element* 
   asn1Get_UnavailableGUAMIItem_iE_Extensions (ProtocolExtensionID id, 
   UnavailableGUAMIItem_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UnavailableGUAMIItem_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UnavailableGUAMIItem_iE_Extensions* plist, 
   UnavailableGUAMIItem_iE_Extensions* pmatches);

EXTERN int asn1Init_UnavailableGUAMIItem_iE_Extensions (
   UnavailableGUAMIItem_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UnavailableGUAMIItem                                      */
/*                                                            */
/**************************************************************/
/*
UnavailableGUAMIItem ::= SEQUENCE {
   gUAMI [0] GUAMI,
   timerApproachForGUAMIRemoval [1] TimerApproachForGUAMIRemoval OPTIONAL,
   backupAMFName [2] AMFName OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UnavailableGUAMIItem-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UnavailableGUAMIItem-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UnavailableGUAMIItem-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UnavailableGUAMIItem {
   struct {
      unsigned timerApproachForGUAMIRemovalPresent : 1;
      unsigned backupAMFNamePresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   GUAMI gUAMI;
   TimerApproachForGUAMIRemoval timerApproachForGUAMIRemoval;
   AMFName backupAMFName;
   UnavailableGUAMIItem_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UnavailableGUAMIItem;

EXTERN int asn1PE_UnavailableGUAMIItem (OSCTXT* pctxt, UnavailableGUAMIItem* pvalue);

EXTERN int asn1PD_UnavailableGUAMIItem (OSCTXT* pctxt, UnavailableGUAMIItem* pvalue);

EXTERN void asn1Print_UnavailableGUAMIItem 
   (const char* name, const UnavailableGUAMIItem* pvalue);

EXTERN int asn1PrtToStr_UnavailableGUAMIItem (const char* name, 
   UnavailableGUAMIItem* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UnavailableGUAMIItem (OSCTXT *pctxt, 
   const char* name, const UnavailableGUAMIItem* pvalue);

EXTERN int asn1Init_UnavailableGUAMIItem (UnavailableGUAMIItem* pvalue);

/**************************************************************/
/*                                                            */
/*  UnavailableGUAMIList                                      */
/*                                                            */
/**************************************************************/
/*
UnavailableGUAMIList ::= SEQUENCE (SIZE (1..maxnoofServedGUAMIs)) OF UnavailableGUAMIItem
*/
/* List of UnavailableGUAMIItem */
typedef OSRTDList UnavailableGUAMIList;

EXTERN int asn1PE_UnavailableGUAMIList (OSCTXT* pctxt, UnavailableGUAMIList* pvalue);

EXTERN int asn1PD_UnavailableGUAMIList (OSCTXT* pctxt, UnavailableGUAMIList* pvalue);

EXTERN void asn1Print_UnavailableGUAMIList 
   (const char* name, const UnavailableGUAMIList* pvalue);

EXTERN int asn1PrtToStr_UnavailableGUAMIList (const char* name, 
   UnavailableGUAMIList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UnavailableGUAMIList (OSCTXT *pctxt, 
   const char* name, const UnavailableGUAMIList* pvalue);

EXTERN int asn1Init_UnavailableGUAMIList (UnavailableGUAMIList* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationEUTRA_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformationEUTRA'
*/
typedef struct EXTERN UserLocationInformationEUTRA_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UserLocationInformationEUTRA_ExtIEs_TVALUE t;

      /**
       * UserLocationInformationEUTRA-ExtIEs information objects
       */
      union {
         /**
          * id: id-PSCellInformation
          * criticality: ignore
          * presence: optional
          */
         NGRAN_CGI *_UserLocationInformationEUTRA_ExtIEs_id_PSCellInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} UserLocationInformationEUTRA_iE_Extensions_element;

EXTERN int asn1PE_UserLocationInformationEUTRA_iE_Extensions_element (OSCTXT* pctxt, UserLocationInformationEUTRA_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UserLocationInformationEUTRA_iE_Extensions_element (OSCTXT* pctxt, UserLocationInformationEUTRA_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UserLocationInformationEUTRA_iE_Extensions_element 
   (const char* name, const UserLocationInformationEUTRA_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationEUTRA_iE_Extensions_element (
   const char* name, 
   UserLocationInformationEUTRA_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationEUTRA_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationEUTRA_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UserLocationInformationEUTRA_iE_Extensions_element (
   UserLocationInformationEUTRA_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationEUTRA_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformationEUTRA'
*/
/* List of UserLocationInformationEUTRA_iE_Extensions_element */
typedef OSRTDList UserLocationInformationEUTRA_iE_Extensions;

EXTERN int asn1PE_UserLocationInformationEUTRA_iE_Extensions (OSCTXT* pctxt, UserLocationInformationEUTRA_iE_Extensions* pvalue);

EXTERN int asn1PD_UserLocationInformationEUTRA_iE_Extensions (OSCTXT* pctxt, UserLocationInformationEUTRA_iE_Extensions* pvalue);

EXTERN void asn1Print_UserLocationInformationEUTRA_iE_Extensions 
   (const char* name, const UserLocationInformationEUTRA_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationEUTRA_iE_Extensions (const char* name, 
   UserLocationInformationEUTRA_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationEUTRA_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationEUTRA_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UserLocationInformationEUTRA_iE_Extensions_element* 
   asn1Get_UserLocationInformationEUTRA_iE_Extensions (ProtocolExtensionID id, 
   UserLocationInformationEUTRA_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UserLocationInformationEUTRA_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UserLocationInformationEUTRA_iE_Extensions* plist, 
   UserLocationInformationEUTRA_iE_Extensions* pmatches);

EXTERN int asn1Init_UserLocationInformationEUTRA_iE_Extensions (
   UserLocationInformationEUTRA_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationEUTRA                              */
/*                                                            */
/**************************************************************/
/*
UserLocationInformationEUTRA ::= SEQUENCE {
   eUTRA-CGI [0] EUTRA-CGI,
   tAI [1] TAI,
   timeStamp [2] TimeStamp OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UserLocationInformationEUTRA-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UserLocationInformationEUTRA-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UserLocationInformationEUTRA-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UserLocationInformationEUTRA {
   struct {
      unsigned timeStampPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   EUTRA_CGI eUTRA_CGI;
   TAI tAI;
   TimeStamp timeStamp;
   UserLocationInformationEUTRA_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UserLocationInformationEUTRA;

EXTERN int asn1PE_UserLocationInformationEUTRA (OSCTXT* pctxt, UserLocationInformationEUTRA* pvalue);

EXTERN int asn1PD_UserLocationInformationEUTRA (OSCTXT* pctxt, UserLocationInformationEUTRA* pvalue);

EXTERN void asn1Print_UserLocationInformationEUTRA 
   (const char* name, const UserLocationInformationEUTRA* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationEUTRA (const char* name, 
   UserLocationInformationEUTRA* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationEUTRA (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationEUTRA* pvalue);

EXTERN int asn1Init_UserLocationInformationEUTRA (
   UserLocationInformationEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationNR_iE_Extensions_element           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformationNR'
*/
typedef struct EXTERN UserLocationInformationNR_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   struct  {
      /**
       * information object selector
       */
      UserLocationInformationNR_ExtIEs_TVALUE t;

      /**
       * UserLocationInformationNR-ExtIEs information objects
       */
      union {
         /**
          * id: id-PSCellInformation
          * criticality: ignore
          * presence: optional
          */
         NGRAN_CGI *_UserLocationInformationNR_ExtIEs_id_PSCellInformation;

         ASN1OpenType* extElem1;
      } u;
   } extensionValue;
} UserLocationInformationNR_iE_Extensions_element;

EXTERN int asn1PE_UserLocationInformationNR_iE_Extensions_element (OSCTXT* pctxt, UserLocationInformationNR_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UserLocationInformationNR_iE_Extensions_element (OSCTXT* pctxt, UserLocationInformationNR_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UserLocationInformationNR_iE_Extensions_element 
   (const char* name, const UserLocationInformationNR_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationNR_iE_Extensions_element (
   const char* name, UserLocationInformationNR_iE_Extensions_element* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationNR_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationNR_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UserLocationInformationNR_iE_Extensions_element (
   UserLocationInformationNR_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationNR_iE_Extensions                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformationNR'
*/
/* List of UserLocationInformationNR_iE_Extensions_element */
typedef OSRTDList UserLocationInformationNR_iE_Extensions;

EXTERN int asn1PE_UserLocationInformationNR_iE_Extensions (OSCTXT* pctxt, UserLocationInformationNR_iE_Extensions* pvalue);

EXTERN int asn1PD_UserLocationInformationNR_iE_Extensions (OSCTXT* pctxt, UserLocationInformationNR_iE_Extensions* pvalue);

EXTERN void asn1Print_UserLocationInformationNR_iE_Extensions 
   (const char* name, const UserLocationInformationNR_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationNR_iE_Extensions (const char* name, 
   UserLocationInformationNR_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationNR_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationNR_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UserLocationInformationNR_iE_Extensions_element* 
   asn1Get_UserLocationInformationNR_iE_Extensions (ProtocolExtensionID id, 
   UserLocationInformationNR_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UserLocationInformationNR_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UserLocationInformationNR_iE_Extensions* plist, 
   UserLocationInformationNR_iE_Extensions* pmatches);

EXTERN int asn1Init_UserLocationInformationNR_iE_Extensions (
   UserLocationInformationNR_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationNR                                 */
/*                                                            */
/**************************************************************/
/*
UserLocationInformationNR ::= SEQUENCE {
   nR-CGI [0] NR-CGI,
   tAI [1] TAI,
   timeStamp [2] TimeStamp OPTIONAL,
   iE-Extensions [3] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UserLocationInformationNR-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UserLocationInformationNR-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UserLocationInformationNR-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UserLocationInformationNR {
   struct {
      unsigned timeStampPresent : 1;
      unsigned iE_ExtensionsPresent : 1;
   } m;
   NR_CGI nR_CGI;
   TAI tAI;
   TimeStamp timeStamp;
   UserLocationInformationNR_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UserLocationInformationNR;

EXTERN int asn1PE_UserLocationInformationNR (OSCTXT* pctxt, UserLocationInformationNR* pvalue);

EXTERN int asn1PD_UserLocationInformationNR (OSCTXT* pctxt, UserLocationInformationNR* pvalue);

EXTERN void asn1Print_UserLocationInformationNR 
   (const char* name, const UserLocationInformationNR* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationNR (const char* name, 
   UserLocationInformationNR* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationNR (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationNR* pvalue);

EXTERN int asn1Init_UserLocationInformationNR (UserLocationInformationNR* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationN3IWF_iE_Extensions_element        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformationN3IWF'
*/
typedef struct EXTERN UserLocationInformationN3IWF_iE_Extensions_element {
   ProtocolExtensionID id;
   Criticality criticality;
   ASN1OpenType extensionValue;
} UserLocationInformationN3IWF_iE_Extensions_element;

EXTERN int asn1PE_UserLocationInformationN3IWF_iE_Extensions_element (OSCTXT* pctxt, UserLocationInformationN3IWF_iE_Extensions_element* pvalue);

EXTERN int asn1PD_UserLocationInformationN3IWF_iE_Extensions_element (OSCTXT* pctxt, UserLocationInformationN3IWF_iE_Extensions_element* pvalue);

EXTERN void asn1Print_UserLocationInformationN3IWF_iE_Extensions_element 
   (const char* name, const UserLocationInformationN3IWF_iE_Extensions_element* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationN3IWF_iE_Extensions_element (
   const char* name, 
   UserLocationInformationN3IWF_iE_Extensions_element* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationN3IWF_iE_Extensions_element (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationN3IWF_iE_Extensions_element* pvalue);

EXTERN int asn1Init_UserLocationInformationN3IWF_iE_Extensions_element (
   UserLocationInformationN3IWF_iE_Extensions_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationN3IWF_iE_Extensions                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformationN3IWF'
*/
/* List of UserLocationInformationN3IWF_iE_Extensions_element */
typedef OSRTDList UserLocationInformationN3IWF_iE_Extensions;

EXTERN int asn1PE_UserLocationInformationN3IWF_iE_Extensions (OSCTXT* pctxt, UserLocationInformationN3IWF_iE_Extensions* pvalue);

EXTERN int asn1PD_UserLocationInformationN3IWF_iE_Extensions (OSCTXT* pctxt, UserLocationInformationN3IWF_iE_Extensions* pvalue);

EXTERN void asn1Print_UserLocationInformationN3IWF_iE_Extensions 
   (const char* name, const UserLocationInformationN3IWF_iE_Extensions* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationN3IWF_iE_Extensions (const char* name, 
   UserLocationInformationN3IWF_iE_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationN3IWF_iE_Extensions (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationN3IWF_iE_Extensions* pvalue);

/* Get IE using id key value */
EXTERN struct UserLocationInformationN3IWF_iE_Extensions_element* 
   asn1Get_UserLocationInformationN3IWF_iE_Extensions (ProtocolExtensionID id, 
   UserLocationInformationN3IWF_iE_Extensions* plist);

/* Get all matching IEs using id key value */
EXTERN int asn1GetAll_UserLocationInformationN3IWF_iE_Extensions 
   (OSCTXT* pctxt, ProtocolExtensionID id, 
   UserLocationInformationN3IWF_iE_Extensions* plist, 
   UserLocationInformationN3IWF_iE_Extensions* pmatches);

EXTERN int asn1Init_UserLocationInformationN3IWF_iE_Extensions (
   UserLocationInformationN3IWF_iE_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformationN3IWF                              */
/*                                                            */
/**************************************************************/
/*
UserLocationInformationN3IWF ::= SEQUENCE {
   iPAddress [0] TransportLayerAddress,
   portNumber [1] PortNumber,
   iE-Extensions [2] SEQUENCE (SIZE (1..maxProtocolExtensions)) OF SEQUENCE {
      id [0] NGAP-PROTOCOL-EXTENSION.&id ({UserLocationInformationN3IWF-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-EXTENSION.&criticality ({UserLocationInformationN3IWF-ExtIEs}{@id}),
      extensionValue [2] EXPLICIT NGAP-PROTOCOL-EXTENSION.&Extension ({UserLocationInformationN3IWF-ExtIEs}{@id})
   } OPTIONAL,
   ...
}
*/
typedef struct EXTERN UserLocationInformationN3IWF {
   struct {
      unsigned iE_ExtensionsPresent : 1;
   } m;
   TransportLayerAddress iPAddress;
   PortNumber portNumber;
   UserLocationInformationN3IWF_iE_Extensions iE_Extensions;
   OSRTDList extElem1;
} UserLocationInformationN3IWF;

EXTERN int asn1PE_UserLocationInformationN3IWF (OSCTXT* pctxt, UserLocationInformationN3IWF* pvalue);

EXTERN int asn1PD_UserLocationInformationN3IWF (OSCTXT* pctxt, UserLocationInformationN3IWF* pvalue);

EXTERN void asn1Print_UserLocationInformationN3IWF 
   (const char* name, const UserLocationInformationN3IWF* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformationN3IWF (const char* name, 
   UserLocationInformationN3IWF* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformationN3IWF (OSCTXT *pctxt, 
   const char* name, const UserLocationInformationN3IWF* pvalue);

EXTERN int asn1Init_UserLocationInformationN3IWF (
   UserLocationInformationN3IWF* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformation_choice_Extensions                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UserLocationInformation'
*/
typedef struct EXTERN UserLocationInformation_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} UserLocationInformation_choice_Extensions;

EXTERN int asn1PE_UserLocationInformation_choice_Extensions (OSCTXT* pctxt, UserLocationInformation_choice_Extensions* pvalue);

EXTERN int asn1PD_UserLocationInformation_choice_Extensions (OSCTXT* pctxt, UserLocationInformation_choice_Extensions* pvalue);

EXTERN void asn1Print_UserLocationInformation_choice_Extensions 
   (const char* name, const UserLocationInformation_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformation_choice_Extensions (const char* name, 
   UserLocationInformation_choice_Extensions* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformation_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const UserLocationInformation_choice_Extensions* pvalue);

EXTERN int asn1Init_UserLocationInformation_choice_Extensions (
   UserLocationInformation_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  UserLocationInformation                                   */
/*                                                            */
/**************************************************************/
/*
UserLocationInformation ::= CHOICE {
   userLocationInformationEUTRA [0] UserLocationInformationEUTRA,
   userLocationInformationNR [1] UserLocationInformationNR,
   userLocationInformationN3IWF [2] UserLocationInformationN3IWF,
   choice-Extensions [3] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({UserLocationInformation-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({UserLocationInformation-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({UserLocationInformation-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_UserLocationInformation_userLocationInformationEUTRA 1
#define T_UserLocationInformation_userLocationInformationNR 2
#define T_UserLocationInformation_userLocationInformationN3IWF 3
#define T_UserLocationInformation_choice_Extensions 4

typedef struct EXTERN UserLocationInformation {
   OSINT32 t;
   union {
      /* t = 1 */
      UserLocationInformationEUTRA *userLocationInformationEUTRA;
      /* t = 2 */
      UserLocationInformationNR *userLocationInformationNR;
      /* t = 3 */
      UserLocationInformationN3IWF *userLocationInformationN3IWF;
      /* t = 4 */
      UserLocationInformation_choice_Extensions *choice_Extensions;
   } u;
} UserLocationInformation;

EXTERN int asn1PE_UserLocationInformation (OSCTXT* pctxt, UserLocationInformation* pvalue);

EXTERN int asn1PD_UserLocationInformation (OSCTXT* pctxt, UserLocationInformation* pvalue);

EXTERN void asn1Print_UserLocationInformation 
   (const char* name, const UserLocationInformation* pvalue);

EXTERN int asn1PrtToStr_UserLocationInformation (const char* name, 
   UserLocationInformation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_UserLocationInformation (OSCTXT *pctxt, 
   const char* name, const UserLocationInformation* pvalue);

EXTERN int asn1Init_UserLocationInformation (UserLocationInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningAreaList_choice_Extensions                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'WarningAreaList'
*/
typedef struct EXTERN WarningAreaList_choice_Extensions {
   ProtocolIE_ID id;
   Criticality criticality;
   ASN1OpenType value;
} WarningAreaList_choice_Extensions;

EXTERN int asn1PE_WarningAreaList_choice_Extensions (OSCTXT* pctxt, WarningAreaList_choice_Extensions* pvalue);

EXTERN int asn1PD_WarningAreaList_choice_Extensions (OSCTXT* pctxt, WarningAreaList_choice_Extensions* pvalue);

EXTERN void asn1Print_WarningAreaList_choice_Extensions 
   (const char* name, const WarningAreaList_choice_Extensions* pvalue);

EXTERN int asn1PrtToStr_WarningAreaList_choice_Extensions (const char* name, 
   WarningAreaList_choice_Extensions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WarningAreaList_choice_Extensions (OSCTXT *pctxt, 
   const char* name, const WarningAreaList_choice_Extensions* pvalue);

EXTERN int asn1Init_WarningAreaList_choice_Extensions (
   WarningAreaList_choice_Extensions* pvalue);

/**************************************************************/
/*                                                            */
/*  WarningAreaList                                           */
/*                                                            */
/**************************************************************/
/*
WarningAreaList ::= CHOICE {
   eUTRA-CGIListForWarning [0] EUTRA-CGIListForWarning,
   nR-CGIListForWarning [1] NR-CGIListForWarning,
   tAIListForWarning [2] TAIListForWarning,
   emergencyAreaIDList [3] EmergencyAreaIDList,
   choice-Extensions [4] SEQUENCE {
      id [0] NGAP-PROTOCOL-IES.&id ({WarningAreaList-ExtIEs}),
      criticality [1] NGAP-PROTOCOL-IES.&criticality ({WarningAreaList-ExtIEs}{@id}),
      value [2] EXPLICIT NGAP-PROTOCOL-IES.&Value ({WarningAreaList-ExtIEs}{@id})
   }
}
*/
/* Choice tag constants */

#define T_WarningAreaList_eUTRA_CGIListForWarning 1
#define T_WarningAreaList_nR_CGIListForWarning 2
#define T_WarningAreaList_tAIListForWarning 3
#define T_WarningAreaList_emergencyAreaIDList 4
#define T_WarningAreaList_choice_Extensions 5

typedef struct EXTERN WarningAreaList {
   OSINT32 t;
   union {
      /* t = 1 */
      EUTRA_CGIListForWarning *eUTRA_CGIListForWarning;
      /* t = 2 */
      NR_CGIListForWarning *nR_CGIListForWarning;
      /* t = 3 */
      TAIListForWarning *tAIListForWarning;
      /* t = 4 */
      EmergencyAreaIDList *emergencyAreaIDList;
      /* t = 5 */
      WarningAreaList_choice_Extensions *choice_Extensions;
   } u;
} WarningAreaList;

EXTERN int asn1PE_WarningAreaList (OSCTXT* pctxt, WarningAreaList* pvalue);

EXTERN int asn1PD_WarningAreaList (OSCTXT* pctxt, WarningAreaList* pvalue);

EXTERN void asn1Print_WarningAreaList 
   (const char* name, const WarningAreaList* pvalue);

EXTERN int asn1PrtToStr_WarningAreaList (const char* name, WarningAreaList* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_WarningAreaList (OSCTXT *pctxt, 
   const char* name, const WarningAreaList* pvalue);

EXTERN int asn1Init_WarningAreaList (WarningAreaList* pvalue);

#ifdef __cplusplus
}
#endif

#endif
