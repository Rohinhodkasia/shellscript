/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.6.0, Date: 15-Feb-2022.
 */
#ifndef TS24301IES_H
#define TS24301IES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtsrc/asn1type.h"

#include "TS24008IES.h"

/**
 * Header file for ASN.1 module TS24301IES
 */
/**************************************************************/
/*                                                            */
/*  EPSEncryptAlgsSupported                                   */
/*                                                            */
/**************************************************************/
/*
EPSEncryptAlgsSupported ::= SEQUENCE {
   eea0 [0] BOOLEAN,
   x128-eea1 [1] BOOLEAN,
   x128-eea2 [2] BOOLEAN,
   eea3 [3] BOOLEAN,
   eea4 [4] BOOLEAN,
   eea5 [5] BOOLEAN,
   eea6 [6] BOOLEAN,
   eea7 [7] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_EPSEncryptAlgsSupported {
   OSBOOL eea0;
   OSBOOL x128_eea1;
   OSBOOL x128_eea2;
   OSBOOL eea3;
   OSBOOL eea4;
   OSBOOL eea5;
   OSBOOL eea6;
   OSBOOL eea7;
} TS24301IE_EPSEncryptAlgsSupported;

EXTERN int NASEnc_TS24301IE_EPSEncryptAlgsSupported (OSCTXT* pctxt
   , TS24301IE_EPSEncryptAlgsSupported* pvalue);

EXTERN int NASDec_TS24301IE_EPSEncryptAlgsSupported (OSCTXT* pctxt
   , TS24301IE_EPSEncryptAlgsSupported* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSEncryptAlgsSupported (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSEncryptAlgsSupported* pvalue);

EXTERN TS24301IE_EPSEncryptAlgsSupported*
    asn1Test_TS24301IE_EPSEncryptAlgsSupported (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSIntegAlgsSupported                                     */
/*                                                            */
/**************************************************************/
/*
EPSIntegAlgsSupported ::= SEQUENCE {
   eia0 [0] BOOLEAN,
   eia1 [1] BOOLEAN,
   eia2 [2] BOOLEAN,
   eia3 [3] BOOLEAN,
   eia4 [4] BOOLEAN,
   eia5 [5] BOOLEAN,
   eia6 [6] BOOLEAN,
   eia7 [7] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_EPSIntegAlgsSupported {
   OSBOOL eia0;
   OSBOOL eia1;
   OSBOOL eia2;
   OSBOOL eia3;
   OSBOOL eia4;
   OSBOOL eia5;
   OSBOOL eia6;
   OSBOOL eia7;
} TS24301IE_EPSIntegAlgsSupported;

EXTERN int NASEnc_TS24301IE_EPSIntegAlgsSupported (OSCTXT* pctxt
   , TS24301IE_EPSIntegAlgsSupported* pvalue);

EXTERN int NASDec_TS24301IE_EPSIntegAlgsSupported (OSCTXT* pctxt
   , TS24301IE_EPSIntegAlgsSupported* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSIntegAlgsSupported (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSIntegAlgsSupported* pvalue);

EXTERN TS24301IE_EPSIntegAlgsSupported*
    asn1Test_TS24301IE_EPSIntegAlgsSupported (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UMTSEncryptAlgsSupported                                  */
/*                                                            */
/**************************************************************/
/*
UMTSEncryptAlgsSupported ::= SEQUENCE {
   uea0 [0] BOOLEAN,
   uea1 [1] BOOLEAN,
   uea2 [2] BOOLEAN,
   uea3 [3] BOOLEAN,
   uea4 [4] BOOLEAN,
   uea5 [5] BOOLEAN,
   uea6 [6] BOOLEAN,
   uea7 [7] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_UMTSEncryptAlgsSupported {
   OSBOOL uea0;
   OSBOOL uea1;
   OSBOOL uea2;
   OSBOOL uea3;
   OSBOOL uea4;
   OSBOOL uea5;
   OSBOOL uea6;
   OSBOOL uea7;
} TS24301IE_UMTSEncryptAlgsSupported;

EXTERN int NASEnc_TS24301IE_UMTSEncryptAlgsSupported (OSCTXT* pctxt
   , TS24301IE_UMTSEncryptAlgsSupported* pvalue);

EXTERN int NASDec_TS24301IE_UMTSEncryptAlgsSupported (OSCTXT* pctxt
   , TS24301IE_UMTSEncryptAlgsSupported* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UMTSEncryptAlgsSupported (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UMTSEncryptAlgsSupported* pvalue);

EXTERN TS24301IE_UMTSEncryptAlgsSupported*
    asn1Test_TS24301IE_UMTSEncryptAlgsSupported (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UMTSIntegAlgsSupported                                    */
/*                                                            */
/**************************************************************/
/*
UMTSIntegAlgsSupported ::= SEQUENCE {
   uia1 [0] BOOLEAN,
   uia2 [1] BOOLEAN,
   uia3 [2] BOOLEAN,
   uia4 [3] BOOLEAN,
   uia5 [4] BOOLEAN,
   uia6 [5] BOOLEAN,
   uia7 [6] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_UMTSIntegAlgsSupported {
   OSBOOL uia1;
   OSBOOL uia2;
   OSBOOL uia3;
   OSBOOL uia4;
   OSBOOL uia5;
   OSBOOL uia6;
   OSBOOL uia7;
} TS24301IE_UMTSIntegAlgsSupported;

EXTERN int NASEnc_TS24301IE_UMTSIntegAlgsSupported (OSCTXT* pctxt
   , TS24301IE_UMTSIntegAlgsSupported* pvalue);

EXTERN int NASDec_TS24301IE_UMTSIntegAlgsSupported (OSCTXT* pctxt
   , TS24301IE_UMTSIntegAlgsSupported* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UMTSIntegAlgsSupported (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UMTSIntegAlgsSupported* pvalue);

EXTERN TS24301IE_UMTSIntegAlgsSupported*
    asn1Test_TS24301IE_UMTSIntegAlgsSupported (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UENetworkCapability                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.3.34 - UE network capability 
UENetworkCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   -- EPS encryption algorithms supported
   epsEncryptAlgs [1] EPSEncryptAlgsSupported,
   -- EPS integrity algorithms supported 
   epsIntegAlgs [2] EPSIntegAlgsSupported,
   -- UMTS encryption algorithms supported
   --<noPresentBit/>
   umtsEncryptAlgs [3] UMTSEncryptAlgsSupported OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet6 [4] SEQUENCE {
      -- UCS2 character string support
      ucs2 [0] BOOLEAN,
      -- UMTS integrity algorithms supported 
      umtsIntegAlgs [1] UMTSIntegAlgsSupported
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet7 [5] SEQUENCE {
      proSedd [0] BOOLEAN,
      proSe [1] BOOLEAN,
      h245-ash [2] BOOLEAN,
      acc-csfb [3] BOOLEAN,
      lpp [4] BOOLEAN,
      lcs [5] BOOLEAN,
      x1xSR-VCC [6] BOOLEAN,
      nf [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet8 [6] SEQUENCE {
      ePCO [0] BOOLEAN,
      hc-CP-CIoT [1] BOOLEAN,
      erwoPDN [2] BOOLEAN,
      s1-Udata [3] BOOLEAN,
      upCIoT [4] BOOLEAN,
      cpCIoT [5] BOOLEAN,
      prose-relay [6] BOOLEAN,
      proSedc [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet9 [7] SEQUENCE {
      bearers [0] BOOLEAN,
      sgc [1] BOOLEAN,
      n1Mode [2] BOOLEAN,
      dcnr [3] BOOLEAN,
      cpBackoff [4] BOOLEAN,
      restrictEC [5] BOOLEAN,
      v2xPC5 [6] BOOLEAN,
      multDRB [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet10 [8] SEQUENCE {
      spare [0] INTEGER (0..7) DEFAULT 0,
      v2x-nr-pc5 [1] BOOLEAN, -- Added in v16.5
      up-mt-edt [2] BOOLEAN,
      cp-mt-edt [3] BOOLEAN,
      wusa [4] BOOLEAN,
      racs [5] BOOLEAN
   } OPTIONAL,
   --<length fixed-size="0"/>
   --<noPresentBit/>
   spare4 [9] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24301IE_UENetworkCapability {
   struct {
      unsigned umtsEncryptAlgsPresent : 1;
      unsigned octet6Present : 1;
      unsigned octet7Present : 1;
      unsigned octet8Present : 1;
      unsigned octet9Present : 1;
      unsigned octet10Present : 1;
      unsigned spare4Present : 1;
   } m;
   OSUINT8 length;
   TS24301IE_EPSEncryptAlgsSupported epsEncryptAlgs;
   TS24301IE_EPSIntegAlgsSupported epsIntegAlgs;
   TS24301IE_UMTSEncryptAlgsSupported umtsEncryptAlgs;
   struct  {
      OSBOOL ucs2;
      TS24301IE_UMTSIntegAlgsSupported umtsIntegAlgs;
   } octet6;
   struct  {
      OSBOOL proSedd;
      OSBOOL proSe;
      OSBOOL h245_ash;
      OSBOOL acc_csfb;
      OSBOOL lpp;
      OSBOOL lcs;
      OSBOOL x1xSR_VCC;
      OSBOOL nf;
   } octet7;
   struct  {
      OSBOOL ePCO;
      OSBOOL hc_CP_CIoT;
      OSBOOL erwoPDN;
      OSBOOL s1_Udata;
      OSBOOL upCIoT;
      OSBOOL cpCIoT;
      OSBOOL prose_relay;
      OSBOOL proSedc;
   } octet8;
   struct  {
      OSBOOL bearers;
      OSBOOL sgc;
      OSBOOL n1Mode;
      OSBOOL dcnr;
      OSBOOL cpBackoff;
      OSBOOL restrictEC;
      OSBOOL v2xPC5;
      OSBOOL multDRB;
   } octet9;
   struct  {
      OSUINT8 spare;
      OSBOOL v2x_nr_pc5;
      OSBOOL up_mt_edt;
      OSBOOL cp_mt_edt;
      OSBOOL wusa;
      OSBOOL racs;
   } octet10;
   OSDynOctStr spare4;
} TS24301IE_UENetworkCapability;

EXTERN int NASEnc_TS24301IE_UENetworkCapability (OSCTXT* pctxt
   , TS24301IE_UENetworkCapability* pvalue);

EXTERN int NASDec_TS24301IE_UENetworkCapability (OSCTXT* pctxt
   , TS24301IE_UENetworkCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UENetworkCapability (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UENetworkCapability* pvalue);

EXTERN TS24301IE_UENetworkCapability*
    asn1Test_TS24301IE_UENetworkCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UENetworkCapability (
   TS24301IE_UENetworkCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthRespParam                                             */
/*                                                            */
/**************************************************************/
/*
 9.9.3.4 - Authentication response parameter 
AuthRespParam ::= OCTET STRING (SIZE (4..16))
*/
typedef struct EXTERN TS24301IE_AuthRespParam {
   OSUINT8 numocts;
   OSOCTET data[16];
} TS24301IE_AuthRespParam;

EXTERN int NASEnc_TS24301IE_AuthRespParam (OSCTXT* pctxt
   , TS24301IE_AuthRespParam* pvalue);

EXTERN int NASDec_TS24301IE_AuthRespParam (OSCTXT* pctxt
   , TS24301IE_AuthRespParam* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_AuthRespParam (OSCTXT *pctxt, 
   const char* name, const TS24301IE_AuthRespParam* pvalue);

EXTERN TS24301IE_AuthRespParam*
    asn1Test_TS24301IE_AuthRespParam (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_AuthRespParam (TS24301IE_AuthRespParam* pvalue);

/**************************************************************/
/*                                                            */
/*  SMSStatusValues                                           */
/*                                                            */
/**************************************************************/
/*
SMSStatusValues ::= ENUMERATED { notAvail(0), notAvailThisPlmn(1), netFailure(2), congestion(3), smsValueMAX(7) }
*/
typedef enum {
   TS24301IE_SMSStatusValues_notAvail = 0,
   TS24301IE_SMSStatusValues_notAvailThisPlmn = 1,
   TS24301IE_SMSStatusValues_netFailure = 2,
   TS24301IE_SMSStatusValues_congestion = 3,
   TS24301IE_SMSStatusValues_smsValueMAX = 7
} TS24301IE_SMSStatusValues;

EXTERN int NASEnc_TS24301IE_SMSStatusValues (OSCTXT* pctxt
   , TS24301IE_SMSStatusValues value);

EXTERN int NASDec_TS24301IE_SMSStatusValues (OSCTXT* pctxt
   , TS24301IE_SMSStatusValues* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_SMSStatusValues (OSCTXT *pctxt, 
   const char* name, const TS24301IE_SMSStatusValues* pvalue);

EXTERN extern const OSEnumItem TS24301IE_SMSStatusValues_ENUMTAB[];
#define TS24301IE_SMSStatusValues_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24301IE_SMSStatusValues_ToString (OSINT32 value);

EXTERN int TS24301IE_SMSStatusValues_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_SMSStatusValues* pvalue);

EXTERN int TS24301IE_SMSStatusValues_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24301IE_SMSStatusValues* pvalue)
      ;

EXTERN TS24301IE_SMSStatusValues*
    asn1Test_TS24301IE_SMSStatusValues (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CSFBRespValues                                            */
/*                                                            */
/**************************************************************/
/*
CSFBRespValues ::= ENUMERATED { rejected(0), accepted(1), respValMAX(7) }
*/
typedef enum {
   TS24301IE_CSFBRespValues_rejected = 0,
   TS24301IE_CSFBRespValues_accepted = 1,
   TS24301IE_CSFBRespValues_respValMAX = 7
} TS24301IE_CSFBRespValues;

EXTERN int NASEnc_TS24301IE_CSFBRespValues (OSCTXT* pctxt
   , TS24301IE_CSFBRespValues value);

EXTERN int NASDec_TS24301IE_CSFBRespValues (OSCTXT* pctxt
   , TS24301IE_CSFBRespValues* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CSFBRespValues (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CSFBRespValues* pvalue);

EXTERN extern const OSEnumItem TS24301IE_CSFBRespValues_ENUMTAB[];
#define TS24301IE_CSFBRespValues_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24301IE_CSFBRespValues_ToString (OSINT32 value);

EXTERN int TS24301IE_CSFBRespValues_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_CSFBRespValues* pvalue);

EXTERN int TS24301IE_CSFBRespValues_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24301IE_CSFBRespValues* pvalue)
      ;

EXTERN TS24301IE_CSFBRespValues*
    asn1Test_TS24301IE_CSFBRespValues (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EMMCause                                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.3.9 - EMM cause 
EMMCause ::= ENUMERATED { imsiUnkInHSS(2), illegalUE(3), imeiNotAccept(5), illegalME(6), epsSvcNotAllowed(7), epsAndNonEPSSvcNotAllowed(8), ueIdentNotDeriv(9), implDetach(10), plmnNotAllowed(11), trkAreaNotAllowed(12), roamNotAllowed(13), epsSvcNotAllowInPLMN(14), noCellsInTrkArea(15), mscTempNotReach(16), networkFailure(17), csDomainNotAvail(18), esmFailure(19), macFailure(20), synchFailure(21), congestion(22), ueSecCapMismat(23), secModeReject(24), notAuthForCSG(25), nonEPSAuthUnaccept(26), redirTo5GRequired(31), reqSvcOptNotAuth(35), csSvcTempUnavail(39), noEPSBearerCtxtAct(40), severeNetFailure(42), semIncorrectMsg(95), invMandInfo(96), msgTypeNotExist(97), msgTypeNotCompat(98), infoElemNotExist(99), condIEError(100), msgNotCompat(101), unspecProtoErr(111), eMMCauseMAX(255) }
*/
typedef enum {
   TS24301IE_EMMCause_imsiUnkInHSS = 2,
   TS24301IE_EMMCause_illegalUE = 3,
   TS24301IE_EMMCause_imeiNotAccept = 5,
   TS24301IE_EMMCause_illegalME = 6,
   TS24301IE_EMMCause_epsSvcNotAllowed = 7,
   TS24301IE_EMMCause_epsAndNonEPSSvcNotAllowed = 8,
   TS24301IE_EMMCause_ueIdentNotDeriv = 9,
   TS24301IE_EMMCause_implDetach = 10,
   TS24301IE_EMMCause_plmnNotAllowed = 11,
   TS24301IE_EMMCause_trkAreaNotAllowed = 12,
   TS24301IE_EMMCause_roamNotAllowed = 13,
   TS24301IE_EMMCause_epsSvcNotAllowInPLMN = 14,
   TS24301IE_EMMCause_noCellsInTrkArea = 15,
   TS24301IE_EMMCause_mscTempNotReach = 16,
   TS24301IE_EMMCause_networkFailure = 17,
   TS24301IE_EMMCause_csDomainNotAvail = 18,
   TS24301IE_EMMCause_esmFailure = 19,
   TS24301IE_EMMCause_macFailure = 20,
   TS24301IE_EMMCause_synchFailure = 21,
   TS24301IE_EMMCause_congestion = 22,
   TS24301IE_EMMCause_ueSecCapMismat = 23,
   TS24301IE_EMMCause_secModeReject = 24,
   TS24301IE_EMMCause_notAuthForCSG = 25,
   TS24301IE_EMMCause_nonEPSAuthUnaccept = 26,
   TS24301IE_EMMCause_redirTo5GRequired = 31,
   TS24301IE_EMMCause_reqSvcOptNotAuth = 35,
   TS24301IE_EMMCause_csSvcTempUnavail = 39,
   TS24301IE_EMMCause_noEPSBearerCtxtAct = 40,
   TS24301IE_EMMCause_severeNetFailure = 42,
   TS24301IE_EMMCause_semIncorrectMsg = 95,
   TS24301IE_EMMCause_invMandInfo = 96,
   TS24301IE_EMMCause_msgTypeNotExist = 97,
   TS24301IE_EMMCause_msgTypeNotCompat = 98,
   TS24301IE_EMMCause_infoElemNotExist = 99,
   TS24301IE_EMMCause_condIEError = 100,
   TS24301IE_EMMCause_msgNotCompat = 101,
   TS24301IE_EMMCause_unspecProtoErr = 111,
   TS24301IE_EMMCause_eMMCauseMAX = 255
} TS24301IE_EMMCause;

EXTERN int NASEnc_TS24301IE_EMMCause (OSCTXT* pctxt, TS24301IE_EMMCause value);

EXTERN int NASDec_TS24301IE_EMMCause (OSCTXT* pctxt, TS24301IE_EMMCause* pvalue
   );

EXTERN int asn1PrtToStrm_TS24301IE_EMMCause (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EMMCause* pvalue);

EXTERN extern const OSEnumItem TS24301IE_EMMCause_ENUMTAB[];
#define TS24301IE_EMMCause_ENUMTABSIZE 38

EXTERN const OSUTF8CHAR* TS24301IE_EMMCause_ToString (OSINT32 value);

EXTERN int TS24301IE_EMMCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_EMMCause* pvalue);

EXTERN int TS24301IE_EMMCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24301IE_EMMCause* pvalue);

EXTERN TS24301IE_EMMCause* asn1Test_TS24301IE_EMMCause (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSAttachResultValues                                     */
/*                                                            */
/**************************************************************/
/*
EPSAttachResultValues ::= ENUMERATED { epsOnly(1), combinedAttach(2), resultValMAX(7) }
*/
typedef enum {
   TS24301IE_EPSAttachResultValues_epsOnly = 1,
   TS24301IE_EPSAttachResultValues_combinedAttach = 2,
   TS24301IE_EPSAttachResultValues_resultValMAX = 7
} TS24301IE_EPSAttachResultValues;

EXTERN int NASEnc_TS24301IE_EPSAttachResultValues (OSCTXT* pctxt
   , TS24301IE_EPSAttachResultValues value);

EXTERN int NASDec_TS24301IE_EPSAttachResultValues (OSCTXT* pctxt
   , TS24301IE_EPSAttachResultValues* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSAttachResultValues (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSAttachResultValues* pvalue);

EXTERN extern const OSEnumItem TS24301IE_EPSAttachResultValues_ENUMTAB[];
#define TS24301IE_EPSAttachResultValues_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24301IE_EPSAttachResultValues_ToString (OSINT32 value);

EXTERN int TS24301IE_EPSAttachResultValues_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_EPSAttachResultValues* pvalue);

EXTERN int TS24301IE_EPSAttachResultValues_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_EPSAttachResultValues* pvalue);

EXTERN TS24301IE_EPSAttachResultValues*
    asn1Test_TS24301IE_EPSAttachResultValues (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSUpdateResultValues                                     */
/*                                                            */
/**************************************************************/
/*
EPSUpdateResultValues ::= ENUMERATED { taUpdated(0), taLaUpdated(1), taUpdatedIsrActive(4), taLaUpdatedIsrActive(5), updateValMAX(7) }
*/
typedef enum {
   TS24301IE_EPSUpdateResultValues_taUpdated = 0,
   TS24301IE_EPSUpdateResultValues_taLaUpdated = 1,
   TS24301IE_EPSUpdateResultValues_taUpdatedIsrActive = 4,
   TS24301IE_EPSUpdateResultValues_taLaUpdatedIsrActive = 5,
   TS24301IE_EPSUpdateResultValues_updateValMAX = 7
} TS24301IE_EPSUpdateResultValues;

EXTERN int NASEnc_TS24301IE_EPSUpdateResultValues (OSCTXT* pctxt
   , TS24301IE_EPSUpdateResultValues value);

EXTERN int NASDec_TS24301IE_EPSUpdateResultValues (OSCTXT* pctxt
   , TS24301IE_EPSUpdateResultValues* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSUpdateResultValues (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSUpdateResultValues* pvalue);

EXTERN extern const OSEnumItem TS24301IE_EPSUpdateResultValues_ENUMTAB[];
#define TS24301IE_EPSUpdateResultValues_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24301IE_EPSUpdateResultValues_ToString (OSINT32 value);

EXTERN int TS24301IE_EPSUpdateResultValues_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_EPSUpdateResultValues* pvalue);

EXTERN int TS24301IE_EPSUpdateResultValues_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_EPSUpdateResultValues* pvalue);

EXTERN TS24301IE_EPSUpdateResultValues*
    asn1Test_TS24301IE_EPSUpdateResultValues (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NASMessageContainer                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.3.22 - NAS message container 
NASMessageContainer ::= OCTET STRING (SIZE (2..251))
*/
typedef struct EXTERN TS24301IE_NASMessageContainer {
   OSUINT8 numocts;
   OSOCTET data[251];
} TS24301IE_NASMessageContainer;

EXTERN int NASEnc_TS24301IE_NASMessageContainer (OSCTXT* pctxt
   , TS24301IE_NASMessageContainer* pvalue);

EXTERN int NASDec_TS24301IE_NASMessageContainer (OSCTXT* pctxt
   , TS24301IE_NASMessageContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NASMessageContainer (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NASMessageContainer* pvalue);

EXTERN TS24301IE_NASMessageContainer*
    asn1Test_TS24301IE_NASMessageContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_NASMessageContainer (
   TS24301IE_NASMessageContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  Nonce                                                     */
/*                                                            */
/**************************************************************/
/*
 9.9.3.25 - Nonce 
Nonce ::= OCTET STRING (SIZE (4))
*/
typedef struct EXTERN TS24301IE_Nonce {
   OSOCTET data[4];
} TS24301IE_Nonce;

EXTERN int NASEnc_TS24301IE_Nonce (OSCTXT* pctxt, TS24301IE_Nonce* pvalue);

EXTERN int NASDec_TS24301IE_Nonce (OSCTXT* pctxt, TS24301IE_Nonce* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_Nonce (OSCTXT *pctxt, 
   const char* name, const TS24301IE_Nonce* pvalue);

EXTERN TS24301IE_Nonce* asn1Test_TS24301IE_Nonce (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ServiceType                                               */
/*                                                            */
/**************************************************************/
/*
 9.9.3.27 - Service type 
ServiceType ::= INTEGER { moCSFallback(0), mtCSFallBack(1), moCSFBEmergCall(2), pktSvcsViaS1(8) } (0..15)
*/
typedef enum {
   TS24301IE_ServiceType_moCSFallback = 0,
   TS24301IE_ServiceType_mtCSFallBack = 1,
   TS24301IE_ServiceType_moCSFBEmergCall = 2,
   TS24301IE_ServiceType_pktSvcsViaS1 = 8
} TS24301IE_ServiceType_Root;

typedef OSUINT8 TS24301IE_ServiceType;

EXTERN int NASEnc_TS24301IE_ServiceType (OSCTXT* pctxt
   , TS24301IE_ServiceType value);

EXTERN int NASDec_TS24301IE_ServiceType (OSCTXT* pctxt
   , TS24301IE_ServiceType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ServiceType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ServiceType* pvalue);

EXTERN TS24301IE_ServiceType* asn1Test_TS24301IE_ServiceType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ShortMAC                                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.3.28 - Short MAC 
ShortMAC ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN TS24301IE_ShortMAC {
   OSOCTET data[2];
} TS24301IE_ShortMAC;

EXTERN int NASEnc_TS24301IE_ShortMAC (OSCTXT* pctxt, TS24301IE_ShortMAC* pvalue
   );

EXTERN int NASDec_TS24301IE_ShortMAC (OSCTXT* pctxt, TS24301IE_ShortMAC* pvalue
   );

EXTERN int asn1PrtToStrm_TS24301IE_ShortMAC (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ShortMAC* pvalue);

EXTERN TS24301IE_ShortMAC* asn1Test_TS24301IE_ShortMAC (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrackingAreaCode                                          */
/*                                                            */
/**************************************************************/
/*
TrackingAreaCode ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN TS24301IE_TrackingAreaCode {
   OSOCTET data[2];
} TS24301IE_TrackingAreaCode;

EXTERN int NASEnc_TS24301IE_TrackingAreaCode (OSCTXT* pctxt
   , TS24301IE_TrackingAreaCode* pvalue);

EXTERN int NASDec_TS24301IE_TrackingAreaCode (OSCTXT* pctxt
   , TS24301IE_TrackingAreaCode* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_TrackingAreaCode (OSCTXT *pctxt, 
   const char* name, const TS24301IE_TrackingAreaCode* pvalue);

EXTERN TS24301IE_TrackingAreaCode*
    asn1Test_TS24301IE_TrackingAreaCode (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SSCode                                                    */
/*                                                            */
/**************************************************************/
/*
 9.9.3.39 - SS Code 
SSCode ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24301IE_SSCode;

EXTERN int NASEnc_TS24301IE_SSCode (OSCTXT* pctxt, TS24301IE_SSCode value);

EXTERN int NASDec_TS24301IE_SSCode (OSCTXT* pctxt, TS24301IE_SSCode* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_SSCode (OSCTXT *pctxt, 
   const char* name, const TS24301IE_SSCode* pvalue);

EXTERN TS24301IE_SSCode* asn1Test_TS24301IE_SSCode (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LCSIndicator                                              */
/*                                                            */
/**************************************************************/
/*
 9.9.3.40 - LCS indicator 
LCSIndicator ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24301IE_LCSIndicator;

EXTERN int NASEnc_TS24301IE_LCSIndicator (OSCTXT* pctxt
   , TS24301IE_LCSIndicator value);

EXTERN int NASDec_TS24301IE_LCSIndicator (OSCTXT* pctxt
   , TS24301IE_LCSIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_LCSIndicator (OSCTXT *pctxt, 
   const char* name, const TS24301IE_LCSIndicator* pvalue);

EXTERN TS24301IE_LCSIndicator* asn1Test_TS24301IE_LCSIndicator (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  LCSClientIdentity                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.3.41 - LCS client identity 
LCSClientIdentity ::= OCTET STRING (SIZE (1..255))
*/
typedef struct EXTERN TS24301IE_LCSClientIdentity {
   OSUINT8 numocts;
   OSOCTET data[255];
} TS24301IE_LCSClientIdentity;

EXTERN int NASEnc_TS24301IE_LCSClientIdentity (OSCTXT* pctxt
   , TS24301IE_LCSClientIdentity* pvalue);

EXTERN int NASDec_TS24301IE_LCSClientIdentity (OSCTXT* pctxt
   , TS24301IE_LCSClientIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_LCSClientIdentity (OSCTXT *pctxt, 
   const char* name, const TS24301IE_LCSClientIdentity* pvalue);

EXTERN TS24301IE_LCSClientIdentity*
    asn1Test_TS24301IE_LCSClientIdentity (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_LCSClientIdentity (TS24301IE_LCSClientIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  GenMsgContainerType                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.3.42 - Generic message container type 
GenMsgContainerType ::= ENUMERATED { lppMsgCont(1), lcsMsgCont(2), genMsgContainerTypeMAX(255) }
*/
typedef enum {
   TS24301IE_GenMsgContainerType_lppMsgCont = 1,
   TS24301IE_GenMsgContainerType_lcsMsgCont = 2,
   TS24301IE_GenMsgContainerType_genMsgContainerTypeMAX = 255
} TS24301IE_GenMsgContainerType;

EXTERN int NASEnc_TS24301IE_GenMsgContainerType (OSCTXT* pctxt
   , TS24301IE_GenMsgContainerType value);

EXTERN int NASDec_TS24301IE_GenMsgContainerType (OSCTXT* pctxt
   , TS24301IE_GenMsgContainerType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_GenMsgContainerType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_GenMsgContainerType* pvalue);

EXTERN extern const OSEnumItem TS24301IE_GenMsgContainerType_ENUMTAB[];
#define TS24301IE_GenMsgContainerType_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24301IE_GenMsgContainerType_ToString (OSINT32 value);

EXTERN int TS24301IE_GenMsgContainerType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_GenMsgContainerType* pvalue);

EXTERN int TS24301IE_GenMsgContainerType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_GenMsgContainerType* pvalue);

EXTERN TS24301IE_GenMsgContainerType*
    asn1Test_TS24301IE_GenMsgContainerType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  GenMessageContainer                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.3.43 - Generic message container 
<length fixed-size="2"/>
GenMessageContainer ::= OCTET STRING (SIZE (0..65535))
*/
typedef OSDynOctStr TS24301IE_GenMessageContainer;

EXTERN int NASEnc_TS24301IE_GenMessageContainer (OSCTXT* pctxt
   , TS24301IE_GenMessageContainer value);

EXTERN int NASDec_TS24301IE_GenMessageContainer (OSCTXT* pctxt
   , TS24301IE_GenMessageContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_GenMessageContainer (OSCTXT *pctxt, 
   const char* name, const TS24301IE_GenMessageContainer* pvalue);

EXTERN TS24301IE_GenMessageContainer*
    asn1Test_TS24301IE_GenMessageContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_GenMessageContainer (
   TS24301IE_GenMessageContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationType                                           */
/*                                                            */
/**************************************************************/
/*
InformationType ::= ENUMERATED { itUEPagingProbInfo(0), itMAX(7) }
*/
typedef enum {
   TS24301IE_InformationType_itUEPagingProbInfo = 0,
   TS24301IE_InformationType_itMAX = 7
} TS24301IE_InformationType;

EXTERN int NASEnc_TS24301IE_InformationType (OSCTXT* pctxt
   , TS24301IE_InformationType value);

EXTERN int NASDec_TS24301IE_InformationType (OSCTXT* pctxt
   , TS24301IE_InformationType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_InformationType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_InformationType* pvalue);

EXTERN extern const OSEnumItem TS24301IE_InformationType_ENUMTAB[];
#define TS24301IE_InformationType_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* TS24301IE_InformationType_ToString (OSINT32 value);

EXTERN int TS24301IE_InformationType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_InformationType* pvalue);

EXTERN int TS24301IE_InformationType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24301IE_InformationType* pvalue)
      ;

EXTERN TS24301IE_InformationType*
    asn1Test_TS24301IE_InformationType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UERequestTypes                                            */
/*                                                            */
/**************************************************************/
/*
UERequestTypes ::= ENUMERATED { ueReserved(0), ueNASRelease(1), uePagingReject(2), ueMAX(15) }
*/
typedef enum {
   TS24301IE_UERequestTypes_ueReserved = 0,
   TS24301IE_UERequestTypes_ueNASRelease = 1,
   TS24301IE_UERequestTypes_uePagingReject = 2,
   TS24301IE_UERequestTypes_ueMAX = 15
} TS24301IE_UERequestTypes;

EXTERN int NASEnc_TS24301IE_UERequestTypes (OSCTXT* pctxt
   , TS24301IE_UERequestTypes value);

EXTERN int NASDec_TS24301IE_UERequestTypes (OSCTXT* pctxt
   , TS24301IE_UERequestTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UERequestTypes (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UERequestTypes* pvalue);

EXTERN extern const OSEnumItem TS24301IE_UERequestTypes_ENUMTAB[];
#define TS24301IE_UERequestTypes_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24301IE_UERequestTypes_ToString (OSINT32 value);

EXTERN int TS24301IE_UERequestTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_UERequestTypes* pvalue);

EXTERN int TS24301IE_UERequestTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24301IE_UERequestTypes* pvalue)
      ;

EXTERN TS24301IE_UERequestTypes*
    asn1Test_TS24301IE_UERequestTypes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RestrictionTypes                                          */
/*                                                            */
/**************************************************************/
/*
RestrictionTypes ::= ENUMERATED { rtReserved(0), rtAll(1), rtExceptVoice(2), rtExceptPDN(3), rtExceptVoicePDN(4), rtMAX(15) }
*/
typedef enum {
   TS24301IE_RestrictionTypes_rtReserved = 0,
   TS24301IE_RestrictionTypes_rtAll = 1,
   TS24301IE_RestrictionTypes_rtExceptVoice = 2,
   TS24301IE_RestrictionTypes_rtExceptPDN = 3,
   TS24301IE_RestrictionTypes_rtExceptVoicePDN = 4,
   TS24301IE_RestrictionTypes_rtMAX = 15
} TS24301IE_RestrictionTypes;

EXTERN int NASEnc_TS24301IE_RestrictionTypes (OSCTXT* pctxt
   , TS24301IE_RestrictionTypes value);

EXTERN int NASDec_TS24301IE_RestrictionTypes (OSCTXT* pctxt
   , TS24301IE_RestrictionTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_RestrictionTypes (OSCTXT *pctxt, 
   const char* name, const TS24301IE_RestrictionTypes* pvalue);

EXTERN extern const OSEnumItem TS24301IE_RestrictionTypes_ENUMTAB[];
#define TS24301IE_RestrictionTypes_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24301IE_RestrictionTypes_ToString (OSINT32 value);

EXTERN int TS24301IE_RestrictionTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_RestrictionTypes* pvalue);

EXTERN int TS24301IE_RestrictionTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_RestrictionTypes* pvalue);

EXTERN TS24301IE_RestrictionTypes*
    asn1Test_TS24301IE_RestrictionTypes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ESMCause                                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.4.4 - ESM cause 
ESMCause ::= ENUMERATED { operDeterBarring(8), insuffResources(26), unkOrMissAPN(27), unknownPDNType(28), userAutheFailed(29), reqRejectByServingGW(30), reqRejectUnspecified(31), svcOptNotSupp(32), reqSvcOptNotSubscr(33), svcOptTempOutOfOrder(34), ptiAlreadyInUse(35), regularDeactivation(36), epsQoSNotAccepted(37), networkFailure(38), reactivateRequest(39), semErrorInTFTOp(41), synErrorInTFTOp(42), invEPSBearerIdent(43), semErrorsInPktFilt(44), synErrorsInPktFilt(45), ptiMismatch(47), lastPDNDisconnNotAllow(49), pdnTypeIPv4OnlyAllow(50), pdnTypeIPv6OnlyAllow(51), singleAddrBearersOnlyAllow(52), esmInfoNotRcvd(53), pdnConnNotExist(54), multPDNConnsForAPNNotAllow(55), collWithNetwInitReq(56), pdnTypeIPv4v6OnlyAllow(57), pdnTypeNonIPOnlyAllow(58), unsuppQCIValue(59), bearerHandlingNotSupp(60), pdnTypeEthOnlyAllow(61), maxNumEPSBearersReached(65), reqAPNNotSupp(66), invPTIValue(81), semIncorrectMessage(95), invMandatoryInfo(96), msgTypeNonExistOrNotImpl(97), msgTypeNotCompatWithProtoState(98), ieNonExistOrNotImpl(99), condIEError(100), msgNotCompatWithProtoState(101), protocolErrorUnspecified(111), apnRestrValIncompWithBearerCtxt(112), multAccToPdnNotAllowed(113), eSMCauseMAX(255) }
*/
typedef enum {
   TS24301IE_ESMCause_operDeterBarring = 8,
   TS24301IE_ESMCause_insuffResources = 26,
   TS24301IE_ESMCause_unkOrMissAPN = 27,
   TS24301IE_ESMCause_unknownPDNType = 28,
   TS24301IE_ESMCause_userAutheFailed = 29,
   TS24301IE_ESMCause_reqRejectByServingGW = 30,
   TS24301IE_ESMCause_reqRejectUnspecified = 31,
   TS24301IE_ESMCause_svcOptNotSupp = 32,
   TS24301IE_ESMCause_reqSvcOptNotSubscr = 33,
   TS24301IE_ESMCause_svcOptTempOutOfOrder = 34,
   TS24301IE_ESMCause_ptiAlreadyInUse = 35,
   TS24301IE_ESMCause_regularDeactivation = 36,
   TS24301IE_ESMCause_epsQoSNotAccepted = 37,
   TS24301IE_ESMCause_networkFailure = 38,
   TS24301IE_ESMCause_reactivateRequest = 39,
   TS24301IE_ESMCause_semErrorInTFTOp = 41,
   TS24301IE_ESMCause_synErrorInTFTOp = 42,
   TS24301IE_ESMCause_invEPSBearerIdent = 43,
   TS24301IE_ESMCause_semErrorsInPktFilt = 44,
   TS24301IE_ESMCause_synErrorsInPktFilt = 45,
   TS24301IE_ESMCause_ptiMismatch = 47,
   TS24301IE_ESMCause_lastPDNDisconnNotAllow = 49,
   TS24301IE_ESMCause_pdnTypeIPv4OnlyAllow = 50,
   TS24301IE_ESMCause_pdnTypeIPv6OnlyAllow = 51,
   TS24301IE_ESMCause_singleAddrBearersOnlyAllow = 52,
   TS24301IE_ESMCause_esmInfoNotRcvd = 53,
   TS24301IE_ESMCause_pdnConnNotExist = 54,
   TS24301IE_ESMCause_multPDNConnsForAPNNotAllow = 55,
   TS24301IE_ESMCause_collWithNetwInitReq = 56,
   TS24301IE_ESMCause_pdnTypeIPv4v6OnlyAllow = 57,
   TS24301IE_ESMCause_pdnTypeNonIPOnlyAllow = 58,
   TS24301IE_ESMCause_unsuppQCIValue = 59,
   TS24301IE_ESMCause_bearerHandlingNotSupp = 60,
   TS24301IE_ESMCause_pdnTypeEthOnlyAllow = 61,
   TS24301IE_ESMCause_maxNumEPSBearersReached = 65,
   TS24301IE_ESMCause_reqAPNNotSupp = 66,
   TS24301IE_ESMCause_invPTIValue = 81,
   TS24301IE_ESMCause_semIncorrectMessage = 95,
   TS24301IE_ESMCause_invMandatoryInfo = 96,
   TS24301IE_ESMCause_msgTypeNonExistOrNotImpl = 97,
   TS24301IE_ESMCause_msgTypeNotCompatWithProtoState = 98,
   TS24301IE_ESMCause_ieNonExistOrNotImpl = 99,
   TS24301IE_ESMCause_condIEError = 100,
   TS24301IE_ESMCause_msgNotCompatWithProtoState = 101,
   TS24301IE_ESMCause_protocolErrorUnspecified = 111,
   TS24301IE_ESMCause_apnRestrValIncompWithBearerCtxt = 112,
   TS24301IE_ESMCause_multAccToPdnNotAllowed = 113,
   TS24301IE_ESMCause_eSMCauseMAX = 255
} TS24301IE_ESMCause;

EXTERN int NASEnc_TS24301IE_ESMCause (OSCTXT* pctxt, TS24301IE_ESMCause value);

EXTERN int NASDec_TS24301IE_ESMCause (OSCTXT* pctxt, TS24301IE_ESMCause* pvalue
   );

EXTERN int asn1PrtToStrm_TS24301IE_ESMCause (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ESMCause* pvalue);

EXTERN extern const OSEnumItem TS24301IE_ESMCause_ENUMTAB[];
#define TS24301IE_ESMCause_ENUMTABSIZE 48

EXTERN const OSUTF8CHAR* TS24301IE_ESMCause_ToString (OSINT32 value);

EXTERN int TS24301IE_ESMCause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_ESMCause* pvalue);

EXTERN int TS24301IE_ESMCause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24301IE_ESMCause* pvalue);

EXTERN TS24301IE_ESMCause* asn1Test_TS24301IE_ESMCause (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  LinkedEPSBearerIdent                                      */
/*                                                            */
/**************************************************************/
/*
 9.9.4.6 - Linked EPS bearer identity 
LinkedEPSBearerIdent ::= INTEGER (0..15)
*/
typedef OSUINT8 TS24301IE_LinkedEPSBearerIdent;

EXTERN int NASEnc_TS24301IE_LinkedEPSBearerIdent (OSCTXT* pctxt
   , TS24301IE_LinkedEPSBearerIdent value);

EXTERN int NASDec_TS24301IE_LinkedEPSBearerIdent (OSCTXT* pctxt
   , TS24301IE_LinkedEPSBearerIdent* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_LinkedEPSBearerIdent (OSCTXT *pctxt, 
   const char* name, const TS24301IE_LinkedEPSBearerIdent* pvalue);

EXTERN TS24301IE_LinkedEPSBearerIdent*
    asn1Test_TS24301IE_LinkedEPSBearerIdent (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDNTypeValue                                              */
/*                                                            */
/**************************************************************/
/*
PDNTypeValue ::= ENUMERATED { ipv4(1), ipv6(2), ipv4v6(3), nonip(5), eth(6), pdnMAX(7) }
*/
typedef enum {
   TS24301IE_PDNTypeValue_ipv4 = 1,
   TS24301IE_PDNTypeValue_ipv6 = 2,
   TS24301IE_PDNTypeValue_ipv4v6 = 3,
   TS24301IE_PDNTypeValue_nonip = 5,
   TS24301IE_PDNTypeValue_eth = 6,
   TS24301IE_PDNTypeValue_pdnMAX = 7
} TS24301IE_PDNTypeValue;

EXTERN int NASEnc_TS24301IE_PDNTypeValue (OSCTXT* pctxt
   , TS24301IE_PDNTypeValue value);

EXTERN int NASDec_TS24301IE_PDNTypeValue (OSCTXT* pctxt
   , TS24301IE_PDNTypeValue* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PDNTypeValue (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PDNTypeValue* pvalue);

EXTERN extern const OSEnumItem TS24301IE_PDNTypeValue_ENUMTAB[];
#define TS24301IE_PDNTypeValue_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24301IE_PDNTypeValue_ToString (OSINT32 value);

EXTERN int TS24301IE_PDNTypeValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_PDNTypeValue* pvalue);

EXTERN int TS24301IE_PDNTypeValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24301IE_PDNTypeValue* pvalue);

EXTERN TS24301IE_PDNTypeValue* asn1Test_TS24301IE_PDNTypeValue (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  RemoteUEAddrType                                          */
/*                                                            */
/**************************************************************/
/*
RemoteUEAddrType ::= ENUMERATED { remUENoIp(0), remUEIpv4(1), remUEIpv6(2), remUEMAX(7) }
*/
typedef enum {
   TS24301IE_RemoteUEAddrType_remUENoIp = 0,
   TS24301IE_RemoteUEAddrType_remUEIpv4 = 1,
   TS24301IE_RemoteUEAddrType_remUEIpv6 = 2,
   TS24301IE_RemoteUEAddrType_remUEMAX = 7
} TS24301IE_RemoteUEAddrType;

EXTERN int NASEnc_TS24301IE_RemoteUEAddrType (OSCTXT* pctxt
   , TS24301IE_RemoteUEAddrType value);

EXTERN int NASDec_TS24301IE_RemoteUEAddrType (OSCTXT* pctxt
   , TS24301IE_RemoteUEAddrType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_RemoteUEAddrType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_RemoteUEAddrType* pvalue);

EXTERN extern const OSEnumItem TS24301IE_RemoteUEAddrType_ENUMTAB[];
#define TS24301IE_RemoteUEAddrType_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24301IE_RemoteUEAddrType_ToString (OSINT32 value);

EXTERN int TS24301IE_RemoteUEAddrType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_RemoteUEAddrType* pvalue);

EXTERN int TS24301IE_RemoteUEAddrType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_RemoteUEAddrType* pvalue);

EXTERN TS24301IE_RemoteUEAddrType*
    asn1Test_TS24301IE_RemoteUEAddrType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UserIdentityType                                          */
/*                                                            */
/**************************************************************/
/*
UserIdentityType ::= ENUMERATED { encryptImsi(1), imsi(2), msisdn(3), imei(4), imeisv(5), userIdTypeMAX(7) }
*/
typedef enum {
   TS24301IE_UserIdentityType_encryptImsi = 1,
   TS24301IE_UserIdentityType_imsi = 2,
   TS24301IE_UserIdentityType_msisdn = 3,
   TS24301IE_UserIdentityType_imei = 4,
   TS24301IE_UserIdentityType_imeisv = 5,
   TS24301IE_UserIdentityType_userIdTypeMAX = 7
} TS24301IE_UserIdentityType;

EXTERN int NASEnc_TS24301IE_UserIdentityType (OSCTXT* pctxt
   , TS24301IE_UserIdentityType value);

EXTERN int NASDec_TS24301IE_UserIdentityType (OSCTXT* pctxt
   , TS24301IE_UserIdentityType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UserIdentityType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UserIdentityType* pvalue);

EXTERN extern const OSEnumItem TS24301IE_UserIdentityType_ENUMTAB[];
#define TS24301IE_UserIdentityType_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24301IE_UserIdentityType_ToString (OSINT32 value);

EXTERN int TS24301IE_UserIdentityType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_UserIdentityType* pvalue);

EXTERN int TS24301IE_UserIdentityType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_UserIdentityType* pvalue);

EXTERN TS24301IE_UserIdentityType*
    asn1Test_TS24301IE_UserIdentityType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HdrCompressCtxtParams                                     */
/*                                                            */
/**************************************************************/
/*
HdrCompressCtxtParams ::= ENUMERATED { noCompress(0), udp-ip-2(1), esp-ip-3(2), ip-4(3), tcp-ip-6(4), udp-ip-102(5), udp-ip-103(6), ip-104(7), other(8), ipMAX(255) }
*/
typedef enum {
   TS24301IE_HdrCompressCtxtParams_noCompress = 0,
   TS24301IE_HdrCompressCtxtParams_udp_ip_2 = 1,
   TS24301IE_HdrCompressCtxtParams_esp_ip_3 = 2,
   TS24301IE_HdrCompressCtxtParams_ip_4 = 3,
   TS24301IE_HdrCompressCtxtParams_tcp_ip_6 = 4,
   TS24301IE_HdrCompressCtxtParams_udp_ip_102 = 5,
   TS24301IE_HdrCompressCtxtParams_udp_ip_103 = 6,
   TS24301IE_HdrCompressCtxtParams_ip_104 = 7,
   TS24301IE_HdrCompressCtxtParams_other = 8,
   TS24301IE_HdrCompressCtxtParams_ipMAX = 255
} TS24301IE_HdrCompressCtxtParams;

EXTERN int NASEnc_TS24301IE_HdrCompressCtxtParams (OSCTXT* pctxt
   , TS24301IE_HdrCompressCtxtParams value);

EXTERN int NASDec_TS24301IE_HdrCompressCtxtParams (OSCTXT* pctxt
   , TS24301IE_HdrCompressCtxtParams* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_HdrCompressCtxtParams (OSCTXT *pctxt, 
   const char* name, const TS24301IE_HdrCompressCtxtParams* pvalue);

EXTERN extern const OSEnumItem TS24301IE_HdrCompressCtxtParams_ENUMTAB[];
#define TS24301IE_HdrCompressCtxtParams_ENUMTABSIZE 10

EXTERN const OSUTF8CHAR* TS24301IE_HdrCompressCtxtParams_ToString (OSINT32 value);

EXTERN int TS24301IE_HdrCompressCtxtParams_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_HdrCompressCtxtParams* pvalue);

EXTERN int TS24301IE_HdrCompressCtxtParams_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_HdrCompressCtxtParams* pvalue);

EXTERN TS24301IE_HdrCompressCtxtParams*
    asn1Test_TS24301IE_HdrCompressCtxtParams (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ServPLMNRateCtrl                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.4.28 - Serving PLMN rate control 
ServPLMNRateCtrl ::= OCTET STRING (SIZE (2))
*/
typedef struct EXTERN TS24301IE_ServPLMNRateCtrl {
   OSOCTET data[2];
} TS24301IE_ServPLMNRateCtrl;

EXTERN int NASEnc_TS24301IE_ServPLMNRateCtrl (OSCTXT* pctxt
   , TS24301IE_ServPLMNRateCtrl* pvalue);

EXTERN int NASDec_TS24301IE_ServPLMNRateCtrl (OSCTXT* pctxt
   , TS24301IE_ServPLMNRateCtrl* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ServPLMNRateCtrl (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ServPLMNRateCtrl* pvalue);

EXTERN TS24301IE_ServPLMNRateCtrl*
    asn1Test_TS24301IE_ServPLMNRateCtrl (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AddnUpdateResult_value                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AddnUpdateResult'
*/
typedef enum {
   TS24301IE_AddnUpdateResult_value_noInfo = 0,
   TS24301IE_AddnUpdateResult_value_csFbNotPref = 1,
   TS24301IE_AddnUpdateResult_value_smsOnly = 2,
   TS24301IE_AddnUpdateResult_value_reserved = 3
} TS24301IE_AddnUpdateResult_value;

EXTERN int NASEnc_TS24301IE_AddnUpdateResult_value (OSCTXT* pctxt
   , TS24301IE_AddnUpdateResult_value value);

EXTERN int NASDec_TS24301IE_AddnUpdateResult_value (OSCTXT* pctxt
   , TS24301IE_AddnUpdateResult_value* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_AddnUpdateResult_value (OSCTXT *pctxt, 
   const char* name, const TS24301IE_AddnUpdateResult_value* pvalue);

EXTERN extern const OSEnumItem TS24301IE_AddnUpdateResult_value_ENUMTAB[];
#define TS24301IE_AddnUpdateResult_value_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24301IE_AddnUpdateResult_value_ToString (OSINT32 value);

EXTERN int TS24301IE_AddnUpdateResult_value_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_AddnUpdateResult_value* pvalue);

EXTERN int TS24301IE_AddnUpdateResult_value_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_AddnUpdateResult_value* pvalue);

EXTERN TS24301IE_AddnUpdateResult_value*
    asn1Test_TS24301IE_AddnUpdateResult_value (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AddnUpdateType_pnb_CIoT                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AddnUpdateType'
*/
typedef enum {
   TS24301IE_AddnUpdateType_pnb_CIoT_noAddInfo = 0,
   TS24301IE_AddnUpdateType_pnb_CIoT_cpCIotEpsPref = 1,
   TS24301IE_AddnUpdateType_pnb_CIoT_upCIotEpsPref = 2,
   TS24301IE_AddnUpdateType_pnb_CIoT_reserved = 3
} TS24301IE_AddnUpdateType_pnb_CIoT;

EXTERN int NASEnc_TS24301IE_AddnUpdateType_pnb_CIoT (OSCTXT* pctxt
   , TS24301IE_AddnUpdateType_pnb_CIoT value);

EXTERN int NASDec_TS24301IE_AddnUpdateType_pnb_CIoT (OSCTXT* pctxt
   , TS24301IE_AddnUpdateType_pnb_CIoT* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_AddnUpdateType_pnb_CIoT (OSCTXT *pctxt, 
   const char* name, const TS24301IE_AddnUpdateType_pnb_CIoT* pvalue);

EXTERN extern const OSEnumItem TS24301IE_AddnUpdateType_pnb_CIoT_ENUMTAB[];
#define TS24301IE_AddnUpdateType_pnb_CIoT_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24301IE_AddnUpdateType_pnb_CIoT_ToString (OSINT32 value);

EXTERN int TS24301IE_AddnUpdateType_pnb_CIoT_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_AddnUpdateType_pnb_CIoT* pvalue);

EXTERN int TS24301IE_AddnUpdateType_pnb_CIoT_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_AddnUpdateType_pnb_CIoT* pvalue);

EXTERN TS24301IE_AddnUpdateType_pnb_CIoT*
    asn1Test_TS24301IE_AddnUpdateType_pnb_CIoT (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSMobileIdentity_typeOfIdent                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EPSMobileIdentity'
*/
typedef enum {
   TS24301IE_EPSMobileIdentity_typeOfIdent_imsi = 1,
   TS24301IE_EPSMobileIdentity_typeOfIdent_imei = 3,
   TS24301IE_EPSMobileIdentity_typeOfIdent_guti = 6
} TS24301IE_EPSMobileIdentity_typeOfIdent;

EXTERN int NASEnc_TS24301IE_EPSMobileIdentity_typeOfIdent (OSCTXT* pctxt
   , TS24301IE_EPSMobileIdentity_typeOfIdent value);

EXTERN int NASDec_TS24301IE_EPSMobileIdentity_typeOfIdent (OSCTXT* pctxt
   , TS24301IE_EPSMobileIdentity_typeOfIdent* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSMobileIdentity_typeOfIdent (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSMobileIdentity_typeOfIdent* pvalue);

EXTERN extern const OSEnumItem TS24301IE_EPSMobileIdentity_typeOfIdent_ENUMTAB[];
#define TS24301IE_EPSMobileIdentity_typeOfIdent_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24301IE_EPSMobileIdentity_typeOfIdent_ToString (OSINT32 value);

EXTERN int TS24301IE_EPSMobileIdentity_typeOfIdent_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_EPSMobileIdentity_typeOfIdent* pvalue);

EXTERN int TS24301IE_EPSMobileIdentity_typeOfIdent_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_EPSMobileIdentity_typeOfIdent* pvalue);

EXTERN TS24301IE_EPSMobileIdentity_typeOfIdent*
    asn1Test_TS24301IE_EPSMobileIdentity_typeOfIdent (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NASSecurityAlgorithms_typeOfCiph                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASSecurityAlgorithms'
*/
typedef enum {
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_eea0 = 0,
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_x128_eea1 = 1,
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_x128_eea2 = 2,
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_eea3 = 3,
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_eea4 = 4,
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_eea5 = 5,
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_eea6 = 6,
   TS24301IE_NASSecurityAlgorithms_typeOfCiph_eea7 = 7
} TS24301IE_NASSecurityAlgorithms_typeOfCiph;

EXTERN int NASEnc_TS24301IE_NASSecurityAlgorithms_typeOfCiph (OSCTXT* pctxt
   , TS24301IE_NASSecurityAlgorithms_typeOfCiph value);

EXTERN int NASDec_TS24301IE_NASSecurityAlgorithms_typeOfCiph (OSCTXT* pctxt
   , TS24301IE_NASSecurityAlgorithms_typeOfCiph* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NASSecurityAlgorithms_typeOfCiph (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NASSecurityAlgorithms_typeOfCiph* pvalue);

EXTERN extern const OSEnumItem TS24301IE_NASSecurityAlgorithms_typeOfCiph_ENUMTAB[];
#define TS24301IE_NASSecurityAlgorithms_typeOfCiph_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* TS24301IE_NASSecurityAlgorithms_typeOfCiph_ToString (OSINT32 value);

EXTERN int TS24301IE_NASSecurityAlgorithms_typeOfCiph_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_NASSecurityAlgorithms_typeOfCiph* pvalue)
      ;

EXTERN int TS24301IE_NASSecurityAlgorithms_typeOfCiph_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_NASSecurityAlgorithms_typeOfCiph* pvalue);

EXTERN TS24301IE_NASSecurityAlgorithms_typeOfCiph*
    asn1Test_TS24301IE_NASSecurityAlgorithms_typeOfCiph (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NASSecurityAlgorithms_typeOfProt                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NASSecurityAlgorithms'
*/
typedef enum {
   TS24301IE_NASSecurityAlgorithms_typeOfProt_eia0 = 0,
   TS24301IE_NASSecurityAlgorithms_typeOfProt_x128_eia1 = 1,
   TS24301IE_NASSecurityAlgorithms_typeOfProt_x128_eia2 = 2,
   TS24301IE_NASSecurityAlgorithms_typeOfProt_eia3 = 3,
   TS24301IE_NASSecurityAlgorithms_typeOfProt_eia4 = 4,
   TS24301IE_NASSecurityAlgorithms_typeOfProt_eia5 = 5,
   TS24301IE_NASSecurityAlgorithms_typeOfProt_eia6 = 6,
   TS24301IE_NASSecurityAlgorithms_typeOfProt_eia7 = 7
} TS24301IE_NASSecurityAlgorithms_typeOfProt;

EXTERN int NASEnc_TS24301IE_NASSecurityAlgorithms_typeOfProt (OSCTXT* pctxt
   , TS24301IE_NASSecurityAlgorithms_typeOfProt value);

EXTERN int NASDec_TS24301IE_NASSecurityAlgorithms_typeOfProt (OSCTXT* pctxt
   , TS24301IE_NASSecurityAlgorithms_typeOfProt* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NASSecurityAlgorithms_typeOfProt (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NASSecurityAlgorithms_typeOfProt* pvalue);

EXTERN extern const OSEnumItem TS24301IE_NASSecurityAlgorithms_typeOfProt_ENUMTAB[];
#define TS24301IE_NASSecurityAlgorithms_typeOfProt_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* TS24301IE_NASSecurityAlgorithms_typeOfProt_ToString (OSINT32 value);

EXTERN int TS24301IE_NASSecurityAlgorithms_typeOfProt_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_NASSecurityAlgorithms_typeOfProt* pvalue)
      ;

EXTERN int TS24301IE_NASSecurityAlgorithms_typeOfProt_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_NASSecurityAlgorithms_typeOfProt* pvalue);

EXTERN TS24301IE_NASSecurityAlgorithms_typeOfProt*
    asn1Test_TS24301IE_NASSecurityAlgorithms_typeOfProt (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PagingIdentity_ident                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PagingIdentity'
*/
typedef enum {
   TS24301IE_PagingIdentity_ident_imsi = 0,
   TS24301IE_PagingIdentity_ident_tmsi = 1
} TS24301IE_PagingIdentity_ident;

EXTERN int NASEnc_TS24301IE_PagingIdentity_ident (OSCTXT* pctxt
   , TS24301IE_PagingIdentity_ident value);

EXTERN int NASDec_TS24301IE_PagingIdentity_ident (OSCTXT* pctxt
   , TS24301IE_PagingIdentity_ident* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PagingIdentity_ident (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PagingIdentity_ident* pvalue);

EXTERN extern const OSEnumItem TS24301IE_PagingIdentity_ident_ENUMTAB[];
#define TS24301IE_PagingIdentity_ident_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* TS24301IE_PagingIdentity_ident_ToString (OSINT32 value);

EXTERN int TS24301IE_PagingIdentity_ident_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_PagingIdentity_ident* pvalue);

EXTERN int TS24301IE_PagingIdentity_ident_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_PagingIdentity_ident* pvalue);

EXTERN TS24301IE_PagingIdentity_ident*
    asn1Test_TS24301IE_PagingIdentity_ident (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PKMFAddress_addrType                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PKMFAddress'
*/
typedef enum {
   TS24301IE_PKMFAddress_addrType_ipv4 = 1,
   TS24301IE_PKMFAddress_addrType_ipv6 = 2,
   TS24301IE_PKMFAddress_addrType_atMAX = 7
} TS24301IE_PKMFAddress_addrType;

EXTERN int NASEnc_TS24301IE_PKMFAddress_addrType (OSCTXT* pctxt
   , TS24301IE_PKMFAddress_addrType value);

EXTERN int NASDec_TS24301IE_PKMFAddress_addrType (OSCTXT* pctxt
   , TS24301IE_PKMFAddress_addrType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PKMFAddress_addrType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PKMFAddress_addrType* pvalue);

EXTERN extern const OSEnumItem TS24301IE_PKMFAddress_addrType_ENUMTAB[];
#define TS24301IE_PKMFAddress_addrType_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24301IE_PKMFAddress_addrType_ToString (OSINT32 value);

EXTERN int TS24301IE_PKMFAddress_addrType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_PKMFAddress_addrType* pvalue);

EXTERN int TS24301IE_PKMFAddress_addrType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_PKMFAddress_addrType* pvalue);

EXTERN TS24301IE_PKMFAddress_addrType*
    asn1Test_TS24301IE_PKMFAddress_addrType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReleaseAssistInd_ddx                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ReleaseAssistInd'
*/
typedef enum {
   TS24301IE_ReleaseAssistInd_ddx_ddxNoInfo = 0,
   TS24301IE_ReleaseAssistInd_ddx_ddxNoTrans = 1,
   TS24301IE_ReleaseAssistInd_ddx_ddxSingleDLTrans = 2,
   TS24301IE_ReleaseAssistInd_ddx_ddxReserved = 3
} TS24301IE_ReleaseAssistInd_ddx;

EXTERN int NASEnc_TS24301IE_ReleaseAssistInd_ddx (OSCTXT* pctxt
   , TS24301IE_ReleaseAssistInd_ddx value);

EXTERN int NASDec_TS24301IE_ReleaseAssistInd_ddx (OSCTXT* pctxt
   , TS24301IE_ReleaseAssistInd_ddx* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ReleaseAssistInd_ddx (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ReleaseAssistInd_ddx* pvalue);

EXTERN extern const OSEnumItem TS24301IE_ReleaseAssistInd_ddx_ENUMTAB[];
#define TS24301IE_ReleaseAssistInd_ddx_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24301IE_ReleaseAssistInd_ddx_ToString (OSINT32 value);

EXTERN int TS24301IE_ReleaseAssistInd_ddx_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24301IE_ReleaseAssistInd_ddx* pvalue);

EXTERN int TS24301IE_ReleaseAssistInd_ddx_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24301IE_ReleaseAssistInd_ddx* pvalue);

EXTERN TS24301IE_ReleaseAssistInd_ddx*
    asn1Test_TS24301IE_ReleaseAssistInd_ddx (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSBearerContextStatus                                    */
/*                                                            */
/**************************************************************/
/*
 Common types
 9.9.2.1 - EPS bearer context status 
EPSBearerContextStatus ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2),
   -- first octet
   ebi7 [1] BOOLEAN,
   ebi6 [2] BOOLEAN,
   ebi5 [3] BOOLEAN,
   ebi4 [4] BOOLEAN,
   ebi3 [5] BOOLEAN,
   ebi2 [6] BOOLEAN,
   ebi1 [7] BOOLEAN,
   ebi0 [8] BOOLEAN DEFAULT FALSE,
   -- 2nd octet
   ebi15 [9] BOOLEAN,
   ebi14 [10] BOOLEAN,
   ebi13 [11] BOOLEAN,
   ebi12 [12] BOOLEAN,
   ebi11 [13] BOOLEAN,
   ebi10 [14] BOOLEAN,
   ebi9 [15] BOOLEAN,
   ebi8 [16] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_EPSBearerContextStatus {
   OSUINT8 length;
   OSBOOL ebi7;
   OSBOOL ebi6;
   OSBOOL ebi5;
   OSBOOL ebi4;
   OSBOOL ebi3;
   OSBOOL ebi2;
   OSBOOL ebi1;
   OSBOOL ebi0;
   OSBOOL ebi15;
   OSBOOL ebi14;
   OSBOOL ebi13;
   OSBOOL ebi12;
   OSBOOL ebi11;
   OSBOOL ebi10;
   OSBOOL ebi9;
   OSBOOL ebi8;
} TS24301IE_EPSBearerContextStatus;

EXTERN int NASEnc_TS24301IE_EPSBearerContextStatus (OSCTXT* pctxt
   , TS24301IE_EPSBearerContextStatus* pvalue);

EXTERN int NASDec_TS24301IE_EPSBearerContextStatus (OSCTXT* pctxt
   , TS24301IE_EPSBearerContextStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSBearerContextStatus (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSBearerContextStatus* pvalue);

EXTERN TS24301IE_EPSBearerContextStatus*
    asn1Test_TS24301IE_EPSBearerContextStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSBearerContextStatus (
   TS24301IE_EPSBearerContextStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  NASSecParamsFromEUTRA                                     */
/*                                                            */
/**************************************************************/
/*
 9.9.2.6 - NAS security parameters from E-UTRA 
NASSecParamsFromEUTRA ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   dlNASCount [1] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24301IE_NASSecParamsFromEUTRA {
   OSUINT8 spare;
   OSUINT8 dlNASCount;
} TS24301IE_NASSecParamsFromEUTRA;

EXTERN int NASEnc_TS24301IE_NASSecParamsFromEUTRA (OSCTXT* pctxt
   , TS24301IE_NASSecParamsFromEUTRA* pvalue);

EXTERN int NASDec_TS24301IE_NASSecParamsFromEUTRA (OSCTXT* pctxt
   , TS24301IE_NASSecParamsFromEUTRA* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NASSecParamsFromEUTRA (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NASSecParamsFromEUTRA* pvalue);

EXTERN TS24301IE_NASSecParamsFromEUTRA*
    asn1Test_TS24301IE_NASSecParamsFromEUTRA (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_NASSecParamsFromEUTRA (
   TS24301IE_NASSecParamsFromEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  NASSecParamsToEUTRA                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.2.7 - NAS security parameters to E-UTRA 
NASSecParamsToEUTRA ::= SEQUENCE {
   nonceMMEValue [0] OCTET STRING (SIZE (4)),
   spare1 [1] BOOLEAN DEFAULT FALSE,
   typeOfCiphAlg [2] INTEGER (0..7),
   spare2 [3] BOOLEAN DEFAULT FALSE,
   typeOfProtAlg [4] INTEGER (0..7),
   spare3 [5] INTEGER (0..15) DEFAULT 0,
   tsc [6] BOOLEAN,
   nasKeySetIdent [7] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24301IE_NASSecParamsToEUTRA {
   OSOCTET nonceMMEValue[4];
   OSBOOL spare1;
   OSUINT8 typeOfCiphAlg;
   OSBOOL spare2;
   OSUINT8 typeOfProtAlg;
   OSUINT8 spare3;
   OSBOOL tsc;
   OSUINT8 nasKeySetIdent;
} TS24301IE_NASSecParamsToEUTRA;

EXTERN int NASEnc_TS24301IE_NASSecParamsToEUTRA (OSCTXT* pctxt
   , TS24301IE_NASSecParamsToEUTRA* pvalue);

EXTERN int NASDec_TS24301IE_NASSecParamsToEUTRA (OSCTXT* pctxt
   , TS24301IE_NASSecParamsToEUTRA* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NASSecParamsToEUTRA (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NASSecParamsToEUTRA* pvalue);

EXTERN TS24301IE_NASSecParamsToEUTRA*
    asn1Test_TS24301IE_NASSecParamsToEUTRA (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_NASSecParamsToEUTRA (
   TS24301IE_NASSecParamsToEUTRA* pvalue);

/**************************************************************/
/*                                                            */
/*  AddnUpdateResult                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.3 - EPS Mobility Management (EMM) information elements 
 9.9.3.0A - Additional update result 
AddnUpdateResult ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   value [1] ENUMERATED { noInfo(0), csFbNotPref(1), smsOnly(2), reserved(3) }
}
*/
typedef struct EXTERN TS24301IE_AddnUpdateResult {
   OSUINT8 spare;
   TS24301IE_AddnUpdateResult_value value;
} TS24301IE_AddnUpdateResult;

EXTERN int NASEnc_TS24301IE_AddnUpdateResult (OSCTXT* pctxt
   , TS24301IE_AddnUpdateResult* pvalue);

EXTERN int NASDec_TS24301IE_AddnUpdateResult (OSCTXT* pctxt
   , TS24301IE_AddnUpdateResult* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_AddnUpdateResult (OSCTXT *pctxt, 
   const char* name, const TS24301IE_AddnUpdateResult* pvalue);

EXTERN TS24301IE_AddnUpdateResult*
    asn1Test_TS24301IE_AddnUpdateResult (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_AddnUpdateResult (TS24301IE_AddnUpdateResult* pvalue);

/**************************************************************/
/*                                                            */
/*  AddnUpdateType                                            */
/*                                                            */
/**************************************************************/
/*
 9.9.3.0B - Additional update type 
AddnUpdateType ::= SEQUENCE {
   pnb_CIoT [0] ENUMERATED { noAddInfo(0), cpCIotEpsPref(1), upCIotEpsPref(2), reserved(3) },
   saf [1] BOOLEAN,
   autv [2] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_AddnUpdateType {
   TS24301IE_AddnUpdateType_pnb_CIoT pnb_CIoT;
   OSBOOL saf;
   OSBOOL autv;
} TS24301IE_AddnUpdateType;

EXTERN int NASEnc_TS24301IE_AddnUpdateType (OSCTXT* pctxt
   , TS24301IE_AddnUpdateType* pvalue);

EXTERN int NASDec_TS24301IE_AddnUpdateType (OSCTXT* pctxt
   , TS24301IE_AddnUpdateType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_AddnUpdateType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_AddnUpdateType* pvalue);

EXTERN TS24301IE_AddnUpdateType*
    asn1Test_TS24301IE_AddnUpdateType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SMSServicesStatus                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.3.4B - SMS services status 
SMSServicesStatus ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] SMSStatusValues
}
*/
typedef struct EXTERN TS24301IE_SMSServicesStatus {
   OSBOOL spare;
   TS24301IE_SMSStatusValues value;
} TS24301IE_SMSServicesStatus;

EXTERN int NASEnc_TS24301IE_SMSServicesStatus (OSCTXT* pctxt
   , TS24301IE_SMSServicesStatus* pvalue);

EXTERN int NASDec_TS24301IE_SMSServicesStatus (OSCTXT* pctxt
   , TS24301IE_SMSServicesStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_SMSServicesStatus (OSCTXT *pctxt, 
   const char* name, const TS24301IE_SMSServicesStatus* pvalue);

EXTERN TS24301IE_SMSServicesStatus*
    asn1Test_TS24301IE_SMSServicesStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_SMSServicesStatus (TS24301IE_SMSServicesStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  CSFBResponse                                              */
/*                                                            */
/**************************************************************/
/*
 9.9.3.5 - CSFB response 
CSFBResponse ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] CSFBRespValues
}
*/
typedef struct EXTERN TS24301IE_CSFBResponse {
   OSBOOL spare;
   TS24301IE_CSFBRespValues value;
} TS24301IE_CSFBResponse;

EXTERN int NASEnc_TS24301IE_CSFBResponse (OSCTXT* pctxt
   , TS24301IE_CSFBResponse* pvalue);

EXTERN int NASDec_TS24301IE_CSFBResponse (OSCTXT* pctxt
   , TS24301IE_CSFBResponse* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CSFBResponse (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CSFBResponse* pvalue);

EXTERN TS24301IE_CSFBResponse* asn1Test_TS24301IE_CSFBResponse (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24301IE_CSFBResponse (TS24301IE_CSFBResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  DetachType                                                */
/*                                                            */
/**************************************************************/
/*
 9.9.3.7 - Detach type 
DetachType ::= SEQUENCE {
   switchOff [0] BOOLEAN,
   typeOfDetach [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24301IE_DetachType {
   OSBOOL switchOff;
   OSUINT8 typeOfDetach;
} TS24301IE_DetachType;

EXTERN int NASEnc_TS24301IE_DetachType (OSCTXT* pctxt
   , TS24301IE_DetachType* pvalue);

EXTERN int NASDec_TS24301IE_DetachType (OSCTXT* pctxt
   , TS24301IE_DetachType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_DetachType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_DetachType* pvalue);

EXTERN TS24301IE_DetachType* asn1Test_TS24301IE_DetachType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSAttachResult                                           */
/*                                                            */
/**************************************************************/
/*
 9.9.3.10 - EPS attach result 
EPSAttachResult ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   result [1] EPSAttachResultValues
}
*/
typedef struct EXTERN TS24301IE_EPSAttachResult {
   OSBOOL spare;
   TS24301IE_EPSAttachResultValues result;
} TS24301IE_EPSAttachResult;

EXTERN int NASEnc_TS24301IE_EPSAttachResult (OSCTXT* pctxt
   , TS24301IE_EPSAttachResult* pvalue);

EXTERN int NASDec_TS24301IE_EPSAttachResult (OSCTXT* pctxt
   , TS24301IE_EPSAttachResult* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSAttachResult (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSAttachResult* pvalue);

EXTERN TS24301IE_EPSAttachResult*
    asn1Test_TS24301IE_EPSAttachResult (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSAttachResult (TS24301IE_EPSAttachResult* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSAttachType                                             */
/*                                                            */
/**************************************************************/
/*
 9.9.3.11 - EPS attach type 
EPSAttachType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24301IE_EPSAttachType {
   OSBOOL spare;
   OSUINT8 value;
} TS24301IE_EPSAttachType;

EXTERN int NASEnc_TS24301IE_EPSAttachType (OSCTXT* pctxt
   , TS24301IE_EPSAttachType* pvalue);

EXTERN int NASDec_TS24301IE_EPSAttachType (OSCTXT* pctxt
   , TS24301IE_EPSAttachType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSAttachType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSAttachType* pvalue);

EXTERN TS24301IE_EPSAttachType*
    asn1Test_TS24301IE_EPSAttachType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSAttachType (TS24301IE_EPSAttachType* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSMobileIdentity_GUTI                                    */
/*                                                            */
/**************************************************************/
/*
 9.9.3.12 - EPS mobile identity 
EPSMobileIdentity-GUTI ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair,
   mmeGroupID [1] OCTET STRING (SIZE (2)),
   mmeCode [2] INTEGER (0..255),
   tmsi [3] OCTET STRING (SIZE (4))
}
*/
typedef struct EXTERN TS24301IE_EPSMobileIdentity_GUTI {
   TS24008IE_MCCMNCPair mcc_mnc;
   OSOCTET mmeGroupID[2];
   OSUINT8 mmeCode;
   OSOCTET tmsi[4];
} TS24301IE_EPSMobileIdentity_GUTI;

EXTERN int NASEnc_TS24301IE_EPSMobileIdentity_GUTI (OSCTXT* pctxt
   , TS24301IE_EPSMobileIdentity_GUTI* pvalue);

EXTERN int NASDec_TS24301IE_EPSMobileIdentity_GUTI (OSCTXT* pctxt
   , TS24301IE_EPSMobileIdentity_GUTI* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSMobileIdentity_GUTI (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSMobileIdentity_GUTI* pvalue);

EXTERN TS24301IE_EPSMobileIdentity_GUTI*
    asn1Test_TS24301IE_EPSMobileIdentity_GUTI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSMobileIdentity_GUTI (
   TS24301IE_EPSMobileIdentity_GUTI* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSMobileIdentity                                         */
/*                                                            */
/**************************************************************/
/*
EPSMobileIdentity ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   filler [1] INTEGER (0..15) DEFAULT 15,
   oddEvenInd [2] BOOLEAN,
   typeOfIdent [3] ENUMERATED { imsi(1), imei(3), guti(6) },
   --<inline/>
   content [4] EXPLICIT CHOICE {
      --<selector element="typeOfIdent" value="6"/>
      guti [0] EPSMobileIdentity-GUTI,
      --<selector element="typeOfIdent" value="1"/>
      imsi [1] IMSI,
      --<selector element="typeOfIdent" value="3"/>
      imei [2] IMEI
   }
}
*/
typedef struct EXTERN TS24301IE_EPSMobileIdentity {
   OSUINT8 length;
   OSUINT8 filler;
   OSBOOL oddEvenInd;
   TS24301IE_EPSMobileIdentity_typeOfIdent typeOfIdent;
   struct  {
      union {
         /* selector element = typeOfIdent, value = 6 */
         TS24301IE_EPSMobileIdentity_GUTI guti;
         /* selector element = typeOfIdent, value = 1 */
         TS24008IE_IMSI imsi;
         /* selector element = typeOfIdent, value = 3 */
         TS24008IE_IMEI imei;
      } u;
   } content;
} TS24301IE_EPSMobileIdentity;

EXTERN int NASEnc_TS24301IE_EPSMobileIdentity (OSCTXT* pctxt
   , TS24301IE_EPSMobileIdentity* pvalue);

EXTERN int NASDec_TS24301IE_EPSMobileIdentity (OSCTXT* pctxt
   , TS24301IE_EPSMobileIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSMobileIdentity (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSMobileIdentity* pvalue);

EXTERN TS24301IE_EPSMobileIdentity*
    asn1Test_TS24301IE_EPSMobileIdentity (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSMobileIdentity (TS24301IE_EPSMobileIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSNetworkFeatureSupport                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.3.12A - EPS network feature support 
EPSNetworkFeatureSupport ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..2) DEFAULT 1,
   cpCIoT [1] BOOLEAN,
   erNoPDN [2] BOOLEAN,
   esr [3] BOOLEAN,
   csLCS [4] INTEGER (0..3),
   epcLCS [5] BOOLEAN,
   emcBS [6] BOOLEAN,
   imsVoPS [7] BOOLEAN,
   --<noPresentBit/>
   --<inline/>
   octet4 [8] SEQUENCE {
      sigEPSBC [0] BOOLEAN,
      iwkN26 [1] BOOLEAN,
      rDCNR [2] BOOLEAN,
      rEC [3] BOOLEAN,
      ePCO [4] BOOLEAN,
      hcCpCIoT [5] BOOLEAN,
      s1DT [6] BOOLEAN,
      upCIot [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet5 [9] SEQUENCE {
      spare [0] INTEGER (0..15) DEFAULT 0,
      pr [1] BOOLEAN,
      rpr [2] BOOLEAN,
      piv [3] BOOLEAN,
      ncr [4] BOOLEAN
   } OPTIONAL
}
*/
typedef struct EXTERN TS24301IE_EPSNetworkFeatureSupport {
   struct {
      unsigned octet4Present : 1;
      unsigned octet5Present : 1;
   } m;
   OSUINT8 length;
   OSBOOL cpCIoT;
   OSBOOL erNoPDN;
   OSBOOL esr;
   OSUINT8 csLCS;
   OSBOOL epcLCS;
   OSBOOL emcBS;
   OSBOOL imsVoPS;
   struct  {
      OSBOOL sigEPSBC;
      OSBOOL iwkN26;
      OSBOOL rDCNR;
      OSBOOL rEC;
      OSBOOL ePCO;
      OSBOOL hcCpCIoT;
      OSBOOL s1DT;
      OSBOOL upCIot;
   } octet4;
   struct  {
      OSUINT8 spare;
      OSBOOL pr;
      OSBOOL rpr;
      OSBOOL piv;
      OSBOOL ncr;
   } octet5;
} TS24301IE_EPSNetworkFeatureSupport;

EXTERN int NASEnc_TS24301IE_EPSNetworkFeatureSupport (OSCTXT* pctxt
   , TS24301IE_EPSNetworkFeatureSupport* pvalue);

EXTERN int NASDec_TS24301IE_EPSNetworkFeatureSupport (OSCTXT* pctxt
   , TS24301IE_EPSNetworkFeatureSupport* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSNetworkFeatureSupport (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSNetworkFeatureSupport* pvalue);

EXTERN TS24301IE_EPSNetworkFeatureSupport*
    asn1Test_TS24301IE_EPSNetworkFeatureSupport (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSNetworkFeatureSupport (
   TS24301IE_EPSNetworkFeatureSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSUpdateResult                                           */
/*                                                            */
/**************************************************************/
/*
 9.9.3.13 - EPS update result 
EPSUpdateResult ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   result [1] EPSUpdateResultValues
}
*/
typedef struct EXTERN TS24301IE_EPSUpdateResult {
   OSBOOL spare;
   TS24301IE_EPSUpdateResultValues result;
} TS24301IE_EPSUpdateResult;

EXTERN int NASEnc_TS24301IE_EPSUpdateResult (OSCTXT* pctxt
   , TS24301IE_EPSUpdateResult* pvalue);

EXTERN int NASDec_TS24301IE_EPSUpdateResult (OSCTXT* pctxt
   , TS24301IE_EPSUpdateResult* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSUpdateResult (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSUpdateResult* pvalue);

EXTERN TS24301IE_EPSUpdateResult*
    asn1Test_TS24301IE_EPSUpdateResult (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSUpdateResult (TS24301IE_EPSUpdateResult* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSUpdateType                                             */
/*                                                            */
/**************************************************************/
/*
 9.9.3.14 - EPS update type 
EPSUpdateType ::= SEQUENCE {
   active [0] BOOLEAN,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24301IE_EPSUpdateType {
   OSBOOL active;
   OSUINT8 value;
} TS24301IE_EPSUpdateType;

EXTERN int NASEnc_TS24301IE_EPSUpdateType (OSCTXT* pctxt
   , TS24301IE_EPSUpdateType* pvalue);

EXTERN int NASDec_TS24301IE_EPSUpdateType (OSCTXT* pctxt
   , TS24301IE_EPSUpdateType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSUpdateType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSUpdateType* pvalue);

EXTERN TS24301IE_EPSUpdateType*
    asn1Test_TS24301IE_EPSUpdateType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  KSIAndSequenceNumber                                      */
/*                                                            */
/**************************************************************/
/*
 9.9.3.15 - ESM message container
Defined in TS24301Msgs.asn
 9.9.3.19 - KSI and sequence number 
KSIAndSequenceNumber ::= SEQUENCE {
   ksi [0] INTEGER (0..7),
   seqNo [1] INTEGER (0..31)
}
*/
typedef struct EXTERN TS24301IE_KSIAndSequenceNumber {
   OSUINT8 ksi;
   OSUINT8 seqNo;
} TS24301IE_KSIAndSequenceNumber;

EXTERN int NASEnc_TS24301IE_KSIAndSequenceNumber (OSCTXT* pctxt
   , TS24301IE_KSIAndSequenceNumber* pvalue);

EXTERN int NASDec_TS24301IE_KSIAndSequenceNumber (OSCTXT* pctxt
   , TS24301IE_KSIAndSequenceNumber* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_KSIAndSequenceNumber (OSCTXT *pctxt, 
   const char* name, const TS24301IE_KSIAndSequenceNumber* pvalue);

EXTERN TS24301IE_KSIAndSequenceNumber*
    asn1Test_TS24301IE_KSIAndSequenceNumber (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NASKeySetIdentifier                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.3.21 - NAS key set identifier 
NASKeySetIdentifier ::= SEQUENCE {
   tsc [0] BOOLEAN,
   ident [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24301IE_NASKeySetIdentifier {
   OSBOOL tsc;
   OSUINT8 ident;
} TS24301IE_NASKeySetIdentifier;

EXTERN int NASEnc_TS24301IE_NASKeySetIdentifier (OSCTXT* pctxt
   , TS24301IE_NASKeySetIdentifier* pvalue);

EXTERN int NASDec_TS24301IE_NASKeySetIdentifier (OSCTXT* pctxt
   , TS24301IE_NASKeySetIdentifier* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NASKeySetIdentifier (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NASKeySetIdentifier* pvalue);

EXTERN TS24301IE_NASKeySetIdentifier*
    asn1Test_TS24301IE_NASKeySetIdentifier (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NASSecurityAlgorithms                                     */
/*                                                            */
/**************************************************************/
/*
 9.9.3.23 - NAS security algorithms 
NASSecurityAlgorithms ::= SEQUENCE {
   spare1 [0] BOOLEAN DEFAULT FALSE,
   typeOfCiph [1] ENUMERATED { eea0(0), x128-eea1(1), x128-eea2(2), eea3(3), eea4(4), eea5(5), eea6(6), eea7(7) },
   spare2 [2] BOOLEAN DEFAULT FALSE,
   typeOfProt [3] ENUMERATED { eia0(0), x128-eia1(1), x128-eia2(2), eia3(3), eia4(4), eia5(5), eia6(6), eia7(7) }
}
*/
typedef struct EXTERN TS24301IE_NASSecurityAlgorithms {
   OSBOOL spare1;
   TS24301IE_NASSecurityAlgorithms_typeOfCiph typeOfCiph;
   OSBOOL spare2;
   TS24301IE_NASSecurityAlgorithms_typeOfProt typeOfProt;
} TS24301IE_NASSecurityAlgorithms;

EXTERN int NASEnc_TS24301IE_NASSecurityAlgorithms (OSCTXT* pctxt
   , TS24301IE_NASSecurityAlgorithms* pvalue);

EXTERN int NASDec_TS24301IE_NASSecurityAlgorithms (OSCTXT* pctxt
   , TS24301IE_NASSecurityAlgorithms* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NASSecurityAlgorithms (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NASSecurityAlgorithms* pvalue);

EXTERN TS24301IE_NASSecurityAlgorithms*
    asn1Test_TS24301IE_NASSecurityAlgorithms (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_NASSecurityAlgorithms (
   TS24301IE_NASSecurityAlgorithms* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingIdentity                                            */
/*                                                            */
/**************************************************************/
/*
 9.9.3.25A - Paging identity 
PagingIdentity ::= SEQUENCE {
   spare [0] INTEGER (0..127) DEFAULT 0,
   ident [1] ENUMERATED { imsi(0), tmsi(1) }
}
*/
typedef struct EXTERN TS24301IE_PagingIdentity {
   OSUINT8 spare;
   TS24301IE_PagingIdentity_ident ident;
} TS24301IE_PagingIdentity;

EXTERN int NASEnc_TS24301IE_PagingIdentity (OSCTXT* pctxt
   , TS24301IE_PagingIdentity* pvalue);

EXTERN int NASDec_TS24301IE_PagingIdentity (OSCTXT* pctxt
   , TS24301IE_PagingIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PagingIdentity (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PagingIdentity* pvalue);

EXTERN TS24301IE_PagingIdentity*
    asn1Test_TS24301IE_PagingIdentity (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PagingIdentity (TS24301IE_PagingIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtEMMCause                                               */
/*                                                            */
/**************************************************************/
/*
 9.9.3.26A - Extended EMM cause 
ExtEMMCause ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   nbiotAllowed [1] BOOLEAN,
   epsOptInfo [2] BOOLEAN,
   e-UTRAN-NotAllowed [3] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_ExtEMMCause {
   OSBOOL spare;
   OSBOOL nbiotAllowed;
   OSBOOL epsOptInfo;
   OSBOOL e_UTRAN_NotAllowed;
} TS24301IE_ExtEMMCause;

EXTERN int NASEnc_TS24301IE_ExtEMMCause (OSCTXT* pctxt
   , TS24301IE_ExtEMMCause* pvalue);

EXTERN int NASDec_TS24301IE_ExtEMMCause (OSCTXT* pctxt
   , TS24301IE_ExtEMMCause* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ExtEMMCause (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ExtEMMCause* pvalue);

EXTERN TS24301IE_ExtEMMCause* asn1Test_TS24301IE_ExtEMMCause (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ExtEMMCause (TS24301IE_ExtEMMCause* pvalue);

/**************************************************************/
/*                                                            */
/*  TrackingAreaIdent                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.3.32 - Tracking area identity 
TrackingAreaIdent ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair,
   tac [1] TrackingAreaCode
}
*/
typedef struct EXTERN TS24301IE_TrackingAreaIdent {
   TS24008IE_MCCMNCPair mcc_mnc;
   TS24301IE_TrackingAreaCode tac;
} TS24301IE_TrackingAreaIdent;

EXTERN int NASEnc_TS24301IE_TrackingAreaIdent (OSCTXT* pctxt
   , TS24301IE_TrackingAreaIdent* pvalue);

EXTERN int NASDec_TS24301IE_TrackingAreaIdent (OSCTXT* pctxt
   , TS24301IE_TrackingAreaIdent* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_TrackingAreaIdent (OSCTXT *pctxt, 
   const char* name, const TS24301IE_TrackingAreaIdent* pvalue);

EXTERN TS24301IE_TrackingAreaIdent*
    asn1Test_TS24301IE_TrackingAreaIdent (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_TrackingAreaIdent (TS24301IE_TrackingAreaIdent* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialTrkAreaIdent0                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrackingAreaIdentListItem'
*/
typedef struct EXTERN TS24301IE_PartialTrkAreaIdent0 {
   TS24008IE_MCCMNCPair mcc_mnc;
   struct  {
      OSUINT8 n;
      TS24301IE_TrackingAreaCode elem[32];
   } tacs;
} TS24301IE_PartialTrkAreaIdent0;

EXTERN int NASEnc_TS24301IE_PartialTrkAreaIdent0 (OSCTXT* pctxt
   , TS24301IE_PartialTrkAreaIdent0* pvalue);

EXTERN int NASDec_TS24301IE_PartialTrkAreaIdent0 (OSCTXT* pctxt
   , TS24301IE_PartialTrkAreaIdent0* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PartialTrkAreaIdent0 (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PartialTrkAreaIdent0* pvalue);

EXTERN TS24301IE_PartialTrkAreaIdent0*
    asn1Test_TS24301IE_PartialTrkAreaIdent0 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PartialTrkAreaIdent0 (
   TS24301IE_PartialTrkAreaIdent0* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialTrkAreaIdent1                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrackingAreaIdentListItem'
*/
typedef struct EXTERN TS24301IE_PartialTrkAreaIdent1 {
   TS24008IE_MCCMNCPair mcc_mnc;
   TS24301IE_TrackingAreaCode tac;
} TS24301IE_PartialTrkAreaIdent1;

EXTERN int NASEnc_TS24301IE_PartialTrkAreaIdent1 (OSCTXT* pctxt
   , TS24301IE_PartialTrkAreaIdent1* pvalue);

EXTERN int NASDec_TS24301IE_PartialTrkAreaIdent1 (OSCTXT* pctxt
   , TS24301IE_PartialTrkAreaIdent1* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PartialTrkAreaIdent1 (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PartialTrkAreaIdent1* pvalue);

EXTERN TS24301IE_PartialTrkAreaIdent1*
    asn1Test_TS24301IE_PartialTrkAreaIdent1 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PartialTrkAreaIdent1 (
   TS24301IE_PartialTrkAreaIdent1* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialTrkAreaIdent2                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrackingAreaIdentListItem'
*/
typedef struct EXTERN TS24301IE_PartialTrkAreaIdent2 {
   OSUINT8 n;
   TS24301IE_TrackingAreaIdent elem[32];
} TS24301IE_PartialTrkAreaIdent2;

EXTERN int NASEnc_TS24301IE_PartialTrkAreaIdent2 (OSCTXT* pctxt
   , TS24301IE_PartialTrkAreaIdent2* pvalue);

EXTERN int NASDec_TS24301IE_PartialTrkAreaIdent2 (OSCTXT* pctxt
   , TS24301IE_PartialTrkAreaIdent2* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PartialTrkAreaIdent2 (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PartialTrkAreaIdent2* pvalue);

EXTERN TS24301IE_PartialTrkAreaIdent2*
    asn1Test_TS24301IE_PartialTrkAreaIdent2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PartialTrkAreaIdent2 (
   TS24301IE_PartialTrkAreaIdent2* pvalue);

/**************************************************************/
/*                                                            */
/*  TrackingAreaIdentListItem                                 */
/*                                                            */
/**************************************************************/
/*
TrackingAreaIdentListItem ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   typeOfList [1] INTEGER (0..2),
   numElements [2] INTEGER (0..31),
   --<inline/>
   elements [3] EXPLICIT CHOICE {
      --<selector element="typeOfList" value="0"/>
      --<asn1typename>PartialTrkAreaIdent0</asn1typename>
      partTrkIdentList0 [0] SEQUENCE {
         mcc-mnc [0] MCCMNCPair,
         --<inline/>
         --<length expr="@...numElements+1"/>
         tacs [1] SEQUENCE (SIZE (1..32)) OF tac TrackingAreaCode
      },
      --<selector element="typeOfList" value="1"/>
      --<asn1typename>PartialTrkAreaIdent1</asn1typename>
      partTrkIdentList1 [1] SEQUENCE {
         mcc-mnc [0] MCCMNCPair,
         tac [1] TrackingAreaCode
      },
      --<selector element="typeOfList" value="2"/>
      --<asn1typename>PartialTrkAreaIdent2</asn1typename>
      --<length expr="@.numElements+1"/>
      partTrkIdentList2 [2] SEQUENCE (SIZE (1..32)) OF TrackingAreaIdent
   }
}
*/
typedef struct EXTERN TS24301IE_TrackingAreaIdentListItem {
   OSBOOL spare;
   OSUINT8 typeOfList;
   OSUINT8 numElements;
   struct  {
      union {
         /* selector element = typeOfList, value = 0 */
         TS24301IE_PartialTrkAreaIdent0 partTrkIdentList0;
         /* selector element = typeOfList, value = 1 */
         TS24301IE_PartialTrkAreaIdent1 partTrkIdentList1;
         /* selector element = typeOfList, value = 2 */
         TS24301IE_PartialTrkAreaIdent2 partTrkIdentList2;
      } u;
   } elements;
} TS24301IE_TrackingAreaIdentListItem;

EXTERN int NASEnc_TS24301IE_TrackingAreaIdentListItem (OSCTXT* pctxt
   , TS24301IE_TrackingAreaIdentListItem* pvalue);

EXTERN int NASDec_TS24301IE_TrackingAreaIdentListItem (OSCTXT* pctxt
   , TS24301IE_TrackingAreaIdentListItem* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_TrackingAreaIdentListItem (OSCTXT *pctxt, 
   const char* name, const TS24301IE_TrackingAreaIdentListItem* pvalue);

EXTERN TS24301IE_TrackingAreaIdentListItem*
    asn1Test_TS24301IE_TrackingAreaIdentListItem (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_TrackingAreaIdentListItem (
   TS24301IE_TrackingAreaIdentListItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TrackingAreaIdentList                                     */
/*                                                            */
/**************************************************************/
/*
 9.9.3.33 - Tracking area identity list 
TrackingAreaIdentList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (6..96),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   idents [1] SEQUENCE (SIZE (1..16)) OF TrackingAreaIdentListItem
}
*/
typedef struct EXTERN TS24301IE_TrackingAreaIdentList {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24301IE_TrackingAreaIdentListItem elem[16];
   } idents;
} TS24301IE_TrackingAreaIdentList;

EXTERN int NASEnc_TS24301IE_TrackingAreaIdentList (OSCTXT* pctxt
   , TS24301IE_TrackingAreaIdentList* pvalue);

EXTERN int NASDec_TS24301IE_TrackingAreaIdentList (OSCTXT* pctxt
   , TS24301IE_TrackingAreaIdentList* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_TrackingAreaIdentList (OSCTXT *pctxt, 
   const char* name, const TS24301IE_TrackingAreaIdentList* pvalue);

EXTERN TS24301IE_TrackingAreaIdentList*
    asn1Test_TS24301IE_TrackingAreaIdentList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_TrackingAreaIdentList (
   TS24301IE_TrackingAreaIdentList* pvalue);

/**************************************************************/
/*                                                            */
/*  GPRSIntegAlgsSupported                                    */
/*                                                            */
/**************************************************************/
/*
GPRSIntegAlgsSupported ::= SEQUENCE {
   gea1 [0] BOOLEAN,
   gea2 [1] BOOLEAN,
   gea3 [2] BOOLEAN,
   gea4 [3] BOOLEAN,
   gea5 [4] BOOLEAN,
   gea6 [5] BOOLEAN,
   gea7 [6] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_GPRSIntegAlgsSupported {
   OSBOOL gea1;
   OSBOOL gea2;
   OSBOOL gea3;
   OSBOOL gea4;
   OSBOOL gea5;
   OSBOOL gea6;
   OSBOOL gea7;
} TS24301IE_GPRSIntegAlgsSupported;

EXTERN int NASEnc_TS24301IE_GPRSIntegAlgsSupported (OSCTXT* pctxt
   , TS24301IE_GPRSIntegAlgsSupported* pvalue);

EXTERN int NASDec_TS24301IE_GPRSIntegAlgsSupported (OSCTXT* pctxt
   , TS24301IE_GPRSIntegAlgsSupported* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_GPRSIntegAlgsSupported (OSCTXT *pctxt, 
   const char* name, const TS24301IE_GPRSIntegAlgsSupported* pvalue);

EXTERN TS24301IE_GPRSIntegAlgsSupported*
    asn1Test_TS24301IE_GPRSIntegAlgsSupported (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UERadioCapInfoUpdateNeeded                                */
/*                                                            */
/**************************************************************/
/*
 9.9.3.35 - UE radio capability information update needed 
UERadioCapInfoUpdateNeeded ::= SEQUENCE {
   spare [0] INTEGER (0..7),
   value [1] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_UERadioCapInfoUpdateNeeded {
   OSUINT8 spare;
   OSBOOL value;
} TS24301IE_UERadioCapInfoUpdateNeeded;

EXTERN int NASEnc_TS24301IE_UERadioCapInfoUpdateNeeded (OSCTXT* pctxt
   , TS24301IE_UERadioCapInfoUpdateNeeded* pvalue);

EXTERN int NASDec_TS24301IE_UERadioCapInfoUpdateNeeded (OSCTXT* pctxt
   , TS24301IE_UERadioCapInfoUpdateNeeded* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UERadioCapInfoUpdateNeeded (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UERadioCapInfoUpdateNeeded* pvalue);

EXTERN TS24301IE_UERadioCapInfoUpdateNeeded*
    asn1Test_TS24301IE_UERadioCapInfoUpdateNeeded (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESecurityCapability                                      */
/*                                                            */
/**************************************************************/
/*
 9.9.3.36 - UE security capability 
UESecurityCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2..13),
   -- EPS encryption algorithms supported
   epsEncryptAlgs [1] EPSEncryptAlgsSupported,
   -- EPS integrity algorithms supported 
   epsIntegAlgs [2] EPSIntegAlgsSupported,
   -- UMTS encryption algorithms supported
   --<noPresentBit/>
   umtsEncryptAlgs [3] UMTSEncryptAlgsSupported OPTIONAL,
   -- EPS integrity algorithms supported 
   --<noPresentBit/>
   --<inline/>
   octet6 [4] SEQUENCE {
      spare [0] BOOLEAN DEFAULT FALSE,
      umtsIntegAlgs [1] UMTSIntegAlgsSupported
   } OPTIONAL,
   -- GPRS integrity algorithms supported 
   --<noPresentBit/>
   --<inline/>
   octet7 [5] SEQUENCE {
      spare [0] BOOLEAN DEFAULT FALSE,
      gprsIntegAlgs [1] GPRSIntegAlgsSupported
   } OPTIONAL
}
*/
typedef struct EXTERN TS24301IE_UESecurityCapability {
   struct {
      unsigned umtsEncryptAlgsPresent : 1;
      unsigned octet6Present : 1;
      unsigned octet7Present : 1;
   } m;
   OSUINT8 length;
   TS24301IE_EPSEncryptAlgsSupported epsEncryptAlgs;
   TS24301IE_EPSIntegAlgsSupported epsIntegAlgs;
   TS24301IE_UMTSEncryptAlgsSupported umtsEncryptAlgs;
   struct  {
      OSBOOL spare;
      TS24301IE_UMTSIntegAlgsSupported umtsIntegAlgs;
   } octet6;
   struct  {
      OSBOOL spare;
      TS24301IE_GPRSIntegAlgsSupported gprsIntegAlgs;
   } octet7;
} TS24301IE_UESecurityCapability;

EXTERN int NASEnc_TS24301IE_UESecurityCapability (OSCTXT* pctxt
   , TS24301IE_UESecurityCapability* pvalue);

EXTERN int NASDec_TS24301IE_UESecurityCapability (OSCTXT* pctxt
   , TS24301IE_UESecurityCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UESecurityCapability (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UESecurityCapability* pvalue);

EXTERN TS24301IE_UESecurityCapability*
    asn1Test_TS24301IE_UESecurityCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UESecurityCapability (
   TS24301IE_UESecurityCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtEmergencyNumberInfo_number                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExtEmergencyNumberInfo'
*/
typedef struct EXTERN TS24301IE_ExtEmergencyNumberInfo_number {
   OSUINT8 length;
   TS24008IE_TBCDString digits;
} TS24301IE_ExtEmergencyNumberInfo_number;

EXTERN int NASEnc_TS24301IE_ExtEmergencyNumberInfo_number (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberInfo_number* pvalue);

EXTERN int NASDec_TS24301IE_ExtEmergencyNumberInfo_number (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberInfo_number* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ExtEmergencyNumberInfo_number (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ExtEmergencyNumberInfo_number* pvalue);

EXTERN TS24301IE_ExtEmergencyNumberInfo_number*
    asn1Test_TS24301IE_ExtEmergencyNumberInfo_number (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ExtEmergencyNumberInfo_number (
   TS24301IE_ExtEmergencyNumberInfo_number* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtEmergencyNumberInfo_subservices                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExtEmergencyNumberInfo'
*/
typedef struct EXTERN TS24301IE_ExtEmergencyNumberInfo_subservices {
   OSUINT8 subservicesLen;
   OSDynOctStr subservices;
} TS24301IE_ExtEmergencyNumberInfo_subservices;

EXTERN int NASEnc_TS24301IE_ExtEmergencyNumberInfo_subservices (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberInfo_subservices* pvalue);

EXTERN int NASDec_TS24301IE_ExtEmergencyNumberInfo_subservices (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberInfo_subservices* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ExtEmergencyNumberInfo_subservices (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ExtEmergencyNumberInfo_subservices* pvalue);

EXTERN TS24301IE_ExtEmergencyNumberInfo_subservices*
    asn1Test_TS24301IE_ExtEmergencyNumberInfo_subservices (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ExtEmergencyNumberInfo_subservices (
   TS24301IE_ExtEmergencyNumberInfo_subservices* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtEmergencyNumberInfo                                    */
/*                                                            */
/**************************************************************/
/*
 9.9.3.37a - Extended emergency number list 
ExtEmergencyNumberInfo ::= SEQUENCE {
   number [0] SEQUENCE {
      --<is3GLength/>
      length [0] INTEGER (0..255),
      --<length fixed-size="0"/>
      digits [1] TBCDString
   },
   subservices [1] SEQUENCE {
      --<is3GLength/>
      subservicesLen [0] INTEGER (0..255),
      --<length fixed-size="0"/>
      subservices [1] OCTET STRING
   }
}
*/
typedef struct EXTERN TS24301IE_ExtEmergencyNumberInfo {
   TS24301IE_ExtEmergencyNumberInfo_number number;
   TS24301IE_ExtEmergencyNumberInfo_subservices subservices;
} TS24301IE_ExtEmergencyNumberInfo;

EXTERN int NASEnc_TS24301IE_ExtEmergencyNumberInfo (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberInfo* pvalue);

EXTERN int NASDec_TS24301IE_ExtEmergencyNumberInfo (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberInfo* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ExtEmergencyNumberInfo (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ExtEmergencyNumberInfo* pvalue);

EXTERN TS24301IE_ExtEmergencyNumberInfo*
    asn1Test_TS24301IE_ExtEmergencyNumberInfo (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ExtEmergencyNumberInfo (
   TS24301IE_ExtEmergencyNumberInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtEmergencyNumberList                                    */
/*                                                            */
/**************************************************************/
/*
ExtEmergencyNumberList ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   spare [1] INTEGER (0..127) DEFAULT 0,
   catValue [2] BOOLEAN,
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   numberInfo [3] SEQUENCE OF ExtEmergencyNumberInfo
}
*/
typedef struct EXTERN TS24301IE_ExtEmergencyNumberList {
   OSUINT16 length;
   OSUINT8 spare;
   OSBOOL catValue;
   struct  {
      OSSIZE n;
      TS24301IE_ExtEmergencyNumberInfo *elem;
   } numberInfo;
} TS24301IE_ExtEmergencyNumberList;

EXTERN int NASEnc_TS24301IE_ExtEmergencyNumberList (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberList* pvalue);

EXTERN int NASDec_TS24301IE_ExtEmergencyNumberList (OSCTXT* pctxt
   , TS24301IE_ExtEmergencyNumberList* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ExtEmergencyNumberList (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ExtEmergencyNumberList* pvalue);

EXTERN TS24301IE_ExtEmergencyNumberList*
    asn1Test_TS24301IE_ExtEmergencyNumberList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ExtEmergencyNumberList (
   TS24301IE_ExtEmergencyNumberList* pvalue);

/**************************************************************/
/*                                                            */
/*  CLI                                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.3.38 - CLI 
CLI ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<length fixed-size="0"/>
   value [1] TBCDString
}
*/
typedef struct EXTERN TS24301IE_CLI {
   OSUINT8 length;
   TS24008IE_TBCDString value;
} TS24301IE_CLI;

EXTERN int NASEnc_TS24301IE_CLI (OSCTXT* pctxt, TS24301IE_CLI* pvalue);

EXTERN int NASDec_TS24301IE_CLI (OSCTXT* pctxt, TS24301IE_CLI* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CLI (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CLI* pvalue);

EXTERN TS24301IE_CLI* asn1Test_TS24301IE_CLI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_CLI (TS24301IE_CLI* pvalue);

/**************************************************************/
/*                                                            */
/*  GUTIType                                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.3.45 - GUTI type 
GUTIType ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   mapped [1] BOOLEAN -- FALSE = native
}
*/
typedef struct EXTERN TS24301IE_GUTIType {
   OSUINT8 spare;
   OSBOOL mapped;
} TS24301IE_GUTIType;

EXTERN int NASEnc_TS24301IE_GUTIType (OSCTXT* pctxt, TS24301IE_GUTIType* pvalue
   );

EXTERN int NASDec_TS24301IE_GUTIType (OSCTXT* pctxt, TS24301IE_GUTIType* pvalue
   );

EXTERN int asn1PrtToStrm_TS24301IE_GUTIType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_GUTIType* pvalue);

EXTERN TS24301IE_GUTIType* asn1Test_TS24301IE_GUTIType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_GUTIType (TS24301IE_GUTIType* pvalue);

/**************************************************************/
/*                                                            */
/*  CtrlPlaneSvcType                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.3.47 - Control Plane Service Type 
CtrlPlaneSvcType ::= SEQUENCE {
   activeFlag [0] BOOLEAN,
   svcTypeValue [1] INTEGER (0..7)
      -- 0 = mobile originating request
      -- 1 = mobile terminating request
      -- 2 thru 7 - not used
}
*/
typedef struct EXTERN TS24301IE_CtrlPlaneSvcType {
   OSBOOL activeFlag;
   OSUINT8 svcTypeValue;
} TS24301IE_CtrlPlaneSvcType;

EXTERN int NASEnc_TS24301IE_CtrlPlaneSvcType (OSCTXT* pctxt
   , TS24301IE_CtrlPlaneSvcType* pvalue);

EXTERN int NASDec_TS24301IE_CtrlPlaneSvcType (OSCTXT* pctxt
   , TS24301IE_CtrlPlaneSvcType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CtrlPlaneSvcType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CtrlPlaneSvcType* pvalue);

EXTERN TS24301IE_CtrlPlaneSvcType*
    asn1Test_TS24301IE_CtrlPlaneSvcType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  HashMME                                                   */
/*                                                            */
/**************************************************************/
/*
 9.9.3.50 - Hash MME 
HashMME ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   hashValue [1] OCTET STRING (SIZE (8))
}
*/
typedef struct EXTERN TS24301IE_HashMME {
   OSUINT8 length;
   OSOCTET hashValue[8];
} TS24301IE_HashMME;

EXTERN int NASEnc_TS24301IE_HashMME (OSCTXT* pctxt, TS24301IE_HashMME* pvalue);

EXTERN int NASDec_TS24301IE_HashMME (OSCTXT* pctxt, TS24301IE_HashMME* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_HashMME (OSCTXT *pctxt, 
   const char* name, const TS24301IE_HashMME* pvalue);

EXTERN TS24301IE_HashMME* asn1Test_TS24301IE_HashMME (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ReplayedNASMsgContainer                                   */
/*                                                            */
/**************************************************************/
/*
 9.9.3.51 - Replayed NAS message container 
ReplayedNASMsgContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   contents [1] OCTET STRING (SIZE (1..65535))
}
*/
typedef struct EXTERN TS24301IE_ReplayedNASMsgContainer {
   OSUINT16 length;
   OSDynOctStr contents;
} TS24301IE_ReplayedNASMsgContainer;

EXTERN int NASEnc_TS24301IE_ReplayedNASMsgContainer (OSCTXT* pctxt
   , TS24301IE_ReplayedNASMsgContainer* pvalue);

EXTERN int NASDec_TS24301IE_ReplayedNASMsgContainer (OSCTXT* pctxt
   , TS24301IE_ReplayedNASMsgContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ReplayedNASMsgContainer (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ReplayedNASMsgContainer* pvalue);

EXTERN TS24301IE_ReplayedNASMsgContainer*
    asn1Test_TS24301IE_ReplayedNASMsgContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ReplayedNASMsgContainer (
   TS24301IE_ReplayedNASMsgContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  NetworkPolicy                                             */
/*                                                            */
/**************************************************************/
/*
 9.9.3.52 - Network policy 
NetworkPolicy ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   redirPolicy [1] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_NetworkPolicy {
   OSUINT8 spare;
   OSBOOL redirPolicy;
} TS24301IE_NetworkPolicy;

EXTERN int NASEnc_TS24301IE_NetworkPolicy (OSCTXT* pctxt
   , TS24301IE_NetworkPolicy* pvalue);

EXTERN int NASDec_TS24301IE_NetworkPolicy (OSCTXT* pctxt
   , TS24301IE_NetworkPolicy* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NetworkPolicy (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NetworkPolicy* pvalue);

EXTERN TS24301IE_NetworkPolicy*
    asn1Test_TS24301IE_NetworkPolicy (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_NetworkPolicy (TS24301IE_NetworkPolicy* pvalue);

/**************************************************************/
/*                                                            */
/*  UEAddlSecurityCapability_contents                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEAddlSecurityCapability'
*/
typedef struct EXTERN TS24301IE_UEAddlSecurityCapability_contents {
   OSBOOL elem[32];
} TS24301IE_UEAddlSecurityCapability_contents;

EXTERN int NASEnc_TS24301IE_UEAddlSecurityCapability_contents (OSCTXT* pctxt
   , TS24301IE_UEAddlSecurityCapability_contents* pvalue);

EXTERN int NASDec_TS24301IE_UEAddlSecurityCapability_contents (OSCTXT* pctxt
   , TS24301IE_UEAddlSecurityCapability_contents* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UEAddlSecurityCapability_contents (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UEAddlSecurityCapability_contents* pvalue);

EXTERN TS24301IE_UEAddlSecurityCapability_contents*
    asn1Test_TS24301IE_UEAddlSecurityCapability_contents (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UEAddlSecurityCapability                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.3.53 - UE additional security capability 
UEAddlSecurityCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   contents [1] SEQUENCE (SIZE (32)) OF BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_UEAddlSecurityCapability {
   OSUINT8 length;
   TS24301IE_UEAddlSecurityCapability_contents contents;
} TS24301IE_UEAddlSecurityCapability;

EXTERN int NASEnc_TS24301IE_UEAddlSecurityCapability (OSCTXT* pctxt
   , TS24301IE_UEAddlSecurityCapability* pvalue);

EXTERN int NASDec_TS24301IE_UEAddlSecurityCapability (OSCTXT* pctxt
   , TS24301IE_UEAddlSecurityCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UEAddlSecurityCapability (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UEAddlSecurityCapability* pvalue);

EXTERN TS24301IE_UEAddlSecurityCapability*
    asn1Test_TS24301IE_UEAddlSecurityCapability (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UEStatus                                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.3.54 - UE status 
UEStatus ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 1,
   spare [1] INTEGER (0..63) DEFAULT 0,
   n1RegStatus [2] BOOLEAN,
   s1RegStatus [3] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_UEStatus {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL n1RegStatus;
   OSBOOL s1RegStatus;
} TS24301IE_UEStatus;

EXTERN int NASEnc_TS24301IE_UEStatus (OSCTXT* pctxt, TS24301IE_UEStatus* pvalue
   );

EXTERN int NASDec_TS24301IE_UEStatus (OSCTXT* pctxt, TS24301IE_UEStatus* pvalue
   );

EXTERN int asn1PrtToStrm_TS24301IE_UEStatus (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UEStatus* pvalue);

EXTERN TS24301IE_UEStatus* asn1Test_TS24301IE_UEStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UEStatus (TS24301IE_UEStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalInfoReq                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.3.55 - Additional information requested 
AdditionalInfoReq ::= SEQUENCE {
   spare [0] INTEGER (0..127) DEFAULT 0,
   dataRequested [1] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_AdditionalInfoReq {
   OSUINT8 spare;
   OSBOOL dataRequested;
} TS24301IE_AdditionalInfoReq;

EXTERN int NASEnc_TS24301IE_AdditionalInfoReq (OSCTXT* pctxt
   , TS24301IE_AdditionalInfoReq* pvalue);

EXTERN int NASDec_TS24301IE_AdditionalInfoReq (OSCTXT* pctxt
   , TS24301IE_AdditionalInfoReq* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_AdditionalInfoReq (OSCTXT *pctxt, 
   const char* name, const TS24301IE_AdditionalInfoReq* pvalue);

EXTERN TS24301IE_AdditionalInfoReq*
    asn1Test_TS24301IE_AdditionalInfoReq (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_AdditionalInfoReq (TS24301IE_AdditionalInfoReq* pvalue);

/**************************************************************/
/*                                                            */
/*  CipherDataSet_posSIBType                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CipherDataSet'
*/
typedef struct EXTERN TS24301IE_CipherDataSet_posSIBType {
   OSBOOL elem[27];
} TS24301IE_CipherDataSet_posSIBType;

EXTERN int NASEnc_TS24301IE_CipherDataSet_posSIBType (OSCTXT* pctxt
   , TS24301IE_CipherDataSet_posSIBType* pvalue);

EXTERN int NASDec_TS24301IE_CipherDataSet_posSIBType (OSCTXT* pctxt
   , TS24301IE_CipherDataSet_posSIBType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CipherDataSet_posSIBType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CipherDataSet_posSIBType* pvalue);

EXTERN TS24301IE_CipherDataSet_posSIBType*
    asn1Test_TS24301IE_CipherDataSet_posSIBType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CipherDataSet                                             */
/*                                                            */
/**************************************************************/
/*
 9.9.3.56 - Ciphering key data 
CipherDataSet ::= SEQUENCE {
   cipherKey [0] OCTET STRING (SIZE (16)),
   spare [1] INTEGER (0..7) DEFAULT 0,
   c0Len [2] INTEGER (0..31),
   --<length expr="@c0Len"/>
   c0 [3] OCTET STRING,
   posSIBType [4] SEQUENCE (SIZE (27)) OF BOOLEAN,
   spare2 [5] INTEGER (0..31) DEFAULT 0,
   validityStartTime [6] TimeZoneAndTime,
   validityDuration [7] INTEGER (0..65535),
   taiList [8] TrackingAreaIdentList
}
*/
typedef struct EXTERN TS24301IE_CipherDataSet {
   OSOCTET cipherKey[16];
   OSUINT8 spare;
   OSUINT8 c0Len;
   OSDynOctStr c0;
   TS24301IE_CipherDataSet_posSIBType posSIBType;
   OSUINT8 spare2;
   TS24008IE_TimeZoneAndTime validityStartTime;
   OSUINT16 validityDuration;
   TS24301IE_TrackingAreaIdentList taiList;
} TS24301IE_CipherDataSet;

EXTERN int NASEnc_TS24301IE_CipherDataSet (OSCTXT* pctxt
   , TS24301IE_CipherDataSet* pvalue);

EXTERN int NASDec_TS24301IE_CipherDataSet (OSCTXT* pctxt
   , TS24301IE_CipherDataSet* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CipherDataSet (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CipherDataSet* pvalue);

EXTERN TS24301IE_CipherDataSet*
    asn1Test_TS24301IE_CipherDataSet (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_CipherDataSet (TS24301IE_CipherDataSet* pvalue);

/**************************************************************/
/*                                                            */
/*  CipherKeyData                                             */
/*                                                            */
/**************************************************************/
/*
CipherKeyData ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   dataSet [1] SEQUENCE (SIZE (1..16)) OF CipherDataSet
}
*/
typedef struct EXTERN TS24301IE_CipherKeyData {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24301IE_CipherDataSet elem[16];
   } dataSet;
} TS24301IE_CipherKeyData;

EXTERN int NASEnc_TS24301IE_CipherKeyData (OSCTXT* pctxt
   , TS24301IE_CipherKeyData* pvalue);

EXTERN int NASDec_TS24301IE_CipherKeyData (OSCTXT* pctxt
   , TS24301IE_CipherKeyData* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CipherKeyData (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CipherKeyData* pvalue);

EXTERN TS24301IE_CipherKeyData*
    asn1Test_TS24301IE_CipherKeyData (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_CipherKeyData (TS24301IE_CipherKeyData* pvalue);

/**************************************************************/
/*                                                            */
/*  N1UENetCapability                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.3.57 - N1 UE network capability 
N1UENetCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..3) DEFAULT 0,
   pnbCIoT [2] INTEGER (0..3),
   upCIoT [3] BOOLEAN,
   hcCpCIoT [4] BOOLEAN,
   n3Data [5] BOOLEAN,
   cpCIoT [6] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_N1UENetCapability {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 pnbCIoT;
   OSBOOL upCIoT;
   OSBOOL hcCpCIoT;
   OSBOOL n3Data;
   OSBOOL cpCIoT;
} TS24301IE_N1UENetCapability;

EXTERN int NASEnc_TS24301IE_N1UENetCapability (OSCTXT* pctxt
   , TS24301IE_N1UENetCapability* pvalue);

EXTERN int NASDec_TS24301IE_N1UENetCapability (OSCTXT* pctxt
   , TS24301IE_N1UENetCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_N1UENetCapability (OSCTXT *pctxt, 
   const char* name, const TS24301IE_N1UENetCapability* pvalue);

EXTERN TS24301IE_N1UENetCapability*
    asn1Test_TS24301IE_N1UENetCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_N1UENetCapability (TS24301IE_N1UENetCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapIdAvailability                                  */
/*                                                            */
/**************************************************************/
/*
 9.9.3.58 - UE radio capability ID availability 
UERadioCapIdAvailability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..31) DEFAULT 0,
   value [2] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24301IE_UERadioCapIdAvailability {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 value;
} TS24301IE_UERadioCapIdAvailability;

EXTERN int NASEnc_TS24301IE_UERadioCapIdAvailability (OSCTXT* pctxt
   , TS24301IE_UERadioCapIdAvailability* pvalue);

EXTERN int NASDec_TS24301IE_UERadioCapIdAvailability (OSCTXT* pctxt
   , TS24301IE_UERadioCapIdAvailability* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UERadioCapIdAvailability (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UERadioCapIdAvailability* pvalue);

EXTERN TS24301IE_UERadioCapIdAvailability*
    asn1Test_TS24301IE_UERadioCapIdAvailability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UERadioCapIdAvailability (
   TS24301IE_UERadioCapIdAvailability* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapIdRequest                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.3.59 - UE radio capability ID request 
UERadioCapIdRequest ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..127) DEFAULT 0,
   urcid-A [2] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_UERadioCapIdRequest {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL urcid_A;
} TS24301IE_UERadioCapIdRequest;

EXTERN int NASEnc_TS24301IE_UERadioCapIdRequest (OSCTXT* pctxt
   , TS24301IE_UERadioCapIdRequest* pvalue);

EXTERN int NASDec_TS24301IE_UERadioCapIdRequest (OSCTXT* pctxt
   , TS24301IE_UERadioCapIdRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UERadioCapIdRequest (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UERadioCapIdRequest* pvalue);

EXTERN TS24301IE_UERadioCapIdRequest*
    asn1Test_TS24301IE_UERadioCapIdRequest (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UERadioCapIdRequest (
   TS24301IE_UERadioCapIdRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapId                                              */
/*                                                            */
/**************************************************************/
/*
 9.9.3.60 - UE radio capability ID 
UERadioCapId ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   capId [1] OCTET STRING
}
*/
typedef struct EXTERN TS24301IE_UERadioCapId {
   OSUINT8 length;
   OSDynOctStr capId;
} TS24301IE_UERadioCapId;

EXTERN int NASEnc_TS24301IE_UERadioCapId (OSCTXT* pctxt
   , TS24301IE_UERadioCapId* pvalue);

EXTERN int NASDec_TS24301IE_UERadioCapId (OSCTXT* pctxt
   , TS24301IE_UERadioCapId* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UERadioCapId (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UERadioCapId* pvalue);

EXTERN TS24301IE_UERadioCapId* asn1Test_TS24301IE_UERadioCapId (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24301IE_UERadioCapId (TS24301IE_UERadioCapId* pvalue);

/**************************************************************/
/*                                                            */
/*  UERadioCapIdDeletionInd                                   */
/*                                                            */
/**************************************************************/
/*
 9.9.3.61 - UE radio capability ID deletion indication 
UERadioCapIdDeletionInd ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   deletionReq [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24301IE_UERadioCapIdDeletionInd {
   OSBOOL spare;
   OSUINT8 deletionReq;
} TS24301IE_UERadioCapIdDeletionInd;

EXTERN int NASEnc_TS24301IE_UERadioCapIdDeletionInd (OSCTXT* pctxt
   , TS24301IE_UERadioCapIdDeletionInd* pvalue);

EXTERN int NASDec_TS24301IE_UERadioCapIdDeletionInd (OSCTXT* pctxt
   , TS24301IE_UERadioCapIdDeletionInd* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UERadioCapIdDeletionInd (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UERadioCapIdDeletionInd* pvalue);

EXTERN TS24301IE_UERadioCapIdDeletionInd*
    asn1Test_TS24301IE_UERadioCapIdDeletionInd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UERadioCapIdDeletionInd (
   TS24301IE_UERadioCapIdDeletionInd* pvalue);

/**************************************************************/
/*                                                            */
/*  WUSAssistInfoType                                         */
/*                                                            */
/**************************************************************/
/*
WUSAssistInfoType ::= SEQUENCE {
   infoType [0] InformationType,
   infoValue [1] INTEGER (0..31)
}
*/
typedef struct EXTERN TS24301IE_WUSAssistInfoType {
   TS24301IE_InformationType infoType;
   OSUINT8 infoValue;
} TS24301IE_WUSAssistInfoType;

EXTERN int NASEnc_TS24301IE_WUSAssistInfoType (OSCTXT* pctxt
   , TS24301IE_WUSAssistInfoType* pvalue);

EXTERN int NASDec_TS24301IE_WUSAssistInfoType (OSCTXT* pctxt
   , TS24301IE_WUSAssistInfoType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_WUSAssistInfoType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_WUSAssistInfoType* pvalue);

EXTERN TS24301IE_WUSAssistInfoType*
    asn1Test_TS24301IE_WUSAssistInfoType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  WUSAssistanceInfo                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.3.62 - WUS assistance information - Fully defined in v16.5 
WUSAssistanceInfo ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   types [1] SEQUENCE (SIZE (1..255)) OF WUSAssistInfoType
}
*/
typedef struct EXTERN TS24301IE_WUSAssistanceInfo {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24301IE_WUSAssistInfoType elem[255];
   } types;
} TS24301IE_WUSAssistanceInfo;

EXTERN int NASEnc_TS24301IE_WUSAssistanceInfo (OSCTXT* pctxt
   , TS24301IE_WUSAssistanceInfo* pvalue);

EXTERN int NASDec_TS24301IE_WUSAssistanceInfo (OSCTXT* pctxt
   , TS24301IE_WUSAssistanceInfo* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_WUSAssistanceInfo (OSCTXT *pctxt, 
   const char* name, const TS24301IE_WUSAssistanceInfo* pvalue);

EXTERN TS24301IE_WUSAssistanceInfo*
    asn1Test_TS24301IE_WUSAssistanceInfo (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_WUSAssistanceInfo (TS24301IE_WUSAssistanceInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  NBS1DRXParameter                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.3.63 - NB-S1 DRX parameter - Added in v16.5 
NBS1DRXParameter ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..15) DEFAULT 0,
   drxValue [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24301IE_NBS1DRXParameter {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 drxValue;
} TS24301IE_NBS1DRXParameter;

EXTERN int NASEnc_TS24301IE_NBS1DRXParameter (OSCTXT* pctxt
   , TS24301IE_NBS1DRXParameter* pvalue);

EXTERN int NASDec_TS24301IE_NBS1DRXParameter (OSCTXT* pctxt
   , TS24301IE_NBS1DRXParameter* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NBS1DRXParameter (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NBS1DRXParameter* pvalue);

EXTERN TS24301IE_NBS1DRXParameter*
    asn1Test_TS24301IE_NBS1DRXParameter (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_NBS1DRXParameter (TS24301IE_NBS1DRXParameter* pvalue);

/**************************************************************/
/*                                                            */
/*  IMSIOffset                                                */
/*                                                            */
/**************************************************************/
/*
 9.9.3.64 - IMSI offset - Added in v17.3 
IMSIOffset ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   value [1] OCTET STRING (SIZE (2))
}
*/
typedef struct EXTERN TS24301IE_IMSIOffset {
   OSUINT8 length;
   OSOCTET value[2];
} TS24301IE_IMSIOffset;

EXTERN int NASEnc_TS24301IE_IMSIOffset (OSCTXT* pctxt
   , TS24301IE_IMSIOffset* pvalue);

EXTERN int NASDec_TS24301IE_IMSIOffset (OSCTXT* pctxt
   , TS24301IE_IMSIOffset* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_IMSIOffset (OSCTXT *pctxt, 
   const char* name, const TS24301IE_IMSIOffset* pvalue);

EXTERN TS24301IE_IMSIOffset* asn1Test_TS24301IE_IMSIOffset (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UERequestType                                             */
/*                                                            */
/**************************************************************/
/*
 9.9.3.65 - UE request type - Added in v17.3 
UERequestType ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..15) DEFAULT 0,
   type [2] UERequestTypes
}
*/
typedef struct EXTERN TS24301IE_UERequestType {
   OSUINT8 length;
   OSUINT8 spare;
   TS24301IE_UERequestTypes type;
} TS24301IE_UERequestType;

EXTERN int NASEnc_TS24301IE_UERequestType (OSCTXT* pctxt
   , TS24301IE_UERequestType* pvalue);

EXTERN int NASDec_TS24301IE_UERequestType (OSCTXT* pctxt
   , TS24301IE_UERequestType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UERequestType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UERequestType* pvalue);

EXTERN TS24301IE_UERequestType*
    asn1Test_TS24301IE_UERequestType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UERequestType (TS24301IE_UERequestType* pvalue);

/**************************************************************/
/*                                                            */
/*  PagingRestriction                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.3.66 - Paging restriction - Added in v17.3 
PagingRestriction ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..15) DEFAULT 0,
   type [2] RestrictionTypes,
   --<noPresentBit/>
   --<inline/>
   octet4 [3] SEQUENCE {
      ebi7 [0] BOOLEAN,
      ebi6 [1] BOOLEAN,
      ebi5 [2] BOOLEAN,
      ebi4 [3] BOOLEAN,
      ebi3 [4] BOOLEAN,
      ebi2 [5] BOOLEAN,
      ebi1 [6] BOOLEAN,
      ebi0 [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<inline/>
   octet5 [4] SEQUENCE {
      ebi15 [0] BOOLEAN,
      ebi14 [1] BOOLEAN,
      ebi13 [2] BOOLEAN,
      ebi12 [3] BOOLEAN,
      ebi11 [4] BOOLEAN,
      ebi10 [5] BOOLEAN,
      ebi9 [6] BOOLEAN,
      ebi8 [7] BOOLEAN
   } OPTIONAL
}
*/
typedef struct EXTERN TS24301IE_PagingRestriction {
   struct {
      unsigned octet4Present : 1;
      unsigned octet5Present : 1;
   } m;
   OSUINT8 length;
   OSUINT8 spare;
   TS24301IE_RestrictionTypes type;
   struct  {
      OSBOOL ebi7;
      OSBOOL ebi6;
      OSBOOL ebi5;
      OSBOOL ebi4;
      OSBOOL ebi3;
      OSBOOL ebi2;
      OSBOOL ebi1;
      OSBOOL ebi0;
   } octet4;
   struct  {
      OSBOOL ebi15;
      OSBOOL ebi14;
      OSBOOL ebi13;
      OSBOOL ebi12;
      OSBOOL ebi11;
      OSBOOL ebi10;
      OSBOOL ebi9;
      OSBOOL ebi8;
   } octet5;
} TS24301IE_PagingRestriction;

EXTERN int NASEnc_TS24301IE_PagingRestriction (OSCTXT* pctxt
   , TS24301IE_PagingRestriction* pvalue);

EXTERN int NASDec_TS24301IE_PagingRestriction (OSCTXT* pctxt
   , TS24301IE_PagingRestriction* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PagingRestriction (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PagingRestriction* pvalue);

EXTERN TS24301IE_PagingRestriction*
    asn1Test_TS24301IE_PagingRestriction (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PagingRestriction (TS24301IE_PagingRestriction* pvalue);

/**************************************************************/
/*                                                            */
/*  APNAggMaxBitRateExt                                       */
/*                                                            */
/**************************************************************/
/*
APNAggMaxBitRateExt ::= SEQUENCE {
   apnAmbrforDL [0] INTEGER (0..255),
   apnAmbrforUL [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24301IE_APNAggMaxBitRateExt {
   OSUINT8 apnAmbrforDL;
   OSUINT8 apnAmbrforUL;
} TS24301IE_APNAggMaxBitRateExt;

EXTERN int NASEnc_TS24301IE_APNAggMaxBitRateExt (OSCTXT* pctxt
   , TS24301IE_APNAggMaxBitRateExt* pvalue);

EXTERN int NASDec_TS24301IE_APNAggMaxBitRateExt (OSCTXT* pctxt
   , TS24301IE_APNAggMaxBitRateExt* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_APNAggMaxBitRateExt (OSCTXT *pctxt, 
   const char* name, const TS24301IE_APNAggMaxBitRateExt* pvalue);

EXTERN TS24301IE_APNAggMaxBitRateExt*
    asn1Test_TS24301IE_APNAggMaxBitRateExt (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  APNAggMaxBitRate                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.4 - EPS Session Management (ESM) information elements 
 9.9.4.2 - APN aggregate maximum bit rate 
APNAggMaxBitRate ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2..6),
   apnAmbrforDL [1] INTEGER (0..255),
   apnAmbrforUL [2] INTEGER (0..255),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   --<noPresentBit/>
   ext [3] SEQUENCE (SIZE (0..2)) OF APNAggMaxBitRateExt OPTIONAL
}
*/
typedef struct EXTERN TS24301IE_APNAggMaxBitRate {
   struct {
      unsigned extPresent : 1;
   } m;
   OSUINT8 length;
   OSUINT8 apnAmbrforDL;
   OSUINT8 apnAmbrforUL;
   struct  {
      OSUINT8 n;
      TS24301IE_APNAggMaxBitRateExt elem[2];
   } ext;
} TS24301IE_APNAggMaxBitRate;

EXTERN int NASEnc_TS24301IE_APNAggMaxBitRate (OSCTXT* pctxt
   , TS24301IE_APNAggMaxBitRate* pvalue);

EXTERN int NASDec_TS24301IE_APNAggMaxBitRate (OSCTXT* pctxt
   , TS24301IE_APNAggMaxBitRate* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_APNAggMaxBitRate (OSCTXT *pctxt, 
   const char* name, const TS24301IE_APNAggMaxBitRate* pvalue);

EXTERN TS24301IE_APNAggMaxBitRate*
    asn1Test_TS24301IE_APNAggMaxBitRate (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_APNAggMaxBitRate (TS24301IE_APNAggMaxBitRate* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSQoSBitRates                                            */
/*                                                            */
/**************************************************************/
/*
EPSQoSBitRates ::= SEQUENCE {
   maxBitRateforUL [0] INTEGER (0..255),
   maxBitRateforDL [1] INTEGER (0..255),
   guarBitRateforUL [2] INTEGER (0..255),
   guarBitRateforDL [3] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24301IE_EPSQoSBitRates {
   OSUINT8 maxBitRateforUL;
   OSUINT8 maxBitRateforDL;
   OSUINT8 guarBitRateforUL;
   OSUINT8 guarBitRateforDL;
} TS24301IE_EPSQoSBitRates;

EXTERN int NASEnc_TS24301IE_EPSQoSBitRates (OSCTXT* pctxt
   , TS24301IE_EPSQoSBitRates* pvalue);

EXTERN int NASDec_TS24301IE_EPSQoSBitRates (OSCTXT* pctxt
   , TS24301IE_EPSQoSBitRates* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSQoSBitRates (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSQoSBitRates* pvalue);

EXTERN TS24301IE_EPSQoSBitRates*
    asn1Test_TS24301IE_EPSQoSBitRates (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSQualityOfService                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.4.3 - EPS quality of service 
EPSQualityOfService ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1 | 5 | 9 | 13),
   qci [1] INTEGER (0..255),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   --<noPresentBit/>
   bitRates [2] SEQUENCE (SIZE (0..3)) OF EPSQoSBitRates OPTIONAL
}
*/
typedef struct EXTERN TS24301IE_EPSQualityOfService {
   struct {
      unsigned bitRatesPresent : 1;
   } m;
   OSUINT8 length;
   OSUINT8 qci;
   struct  {
      OSUINT8 n;
      TS24301IE_EPSQoSBitRates elem[3];
   } bitRates;
} TS24301IE_EPSQualityOfService;

EXTERN int NASEnc_TS24301IE_EPSQualityOfService (OSCTXT* pctxt
   , TS24301IE_EPSQualityOfService* pvalue);

EXTERN int NASDec_TS24301IE_EPSQualityOfService (OSCTXT* pctxt
   , TS24301IE_EPSQualityOfService* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_EPSQualityOfService (OSCTXT *pctxt, 
   const char* name, const TS24301IE_EPSQualityOfService* pvalue);

EXTERN TS24301IE_EPSQualityOfService*
    asn1Test_TS24301IE_EPSQualityOfService (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_EPSQualityOfService (
   TS24301IE_EPSQualityOfService* pvalue);

/**************************************************************/
/*                                                            */
/*  ESMInfoXferFlag                                           */
/*                                                            */
/**************************************************************/
/*
 9.9.4.5 - ESM information transfer flag 
ESMInfoXferFlag ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   eitValue [1] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_ESMInfoXferFlag {
   OSUINT8 spare;
   OSBOOL eitValue;
} TS24301IE_ESMInfoXferFlag;

EXTERN int NASEnc_TS24301IE_ESMInfoXferFlag (OSCTXT* pctxt
   , TS24301IE_ESMInfoXferFlag* pvalue);

EXTERN int NASDec_TS24301IE_ESMInfoXferFlag (OSCTXT* pctxt
   , TS24301IE_ESMInfoXferFlag* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ESMInfoXferFlag (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ESMInfoXferFlag* pvalue);

EXTERN TS24301IE_ESMInfoXferFlag*
    asn1Test_TS24301IE_ESMInfoXferFlag (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ESMInfoXferFlag (TS24301IE_ESMInfoXferFlag* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationIndicator                                     */
/*                                                            */
/**************************************************************/
/*
 9.9.4.7a - Notification indicator 
NotificationIndicator ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   value [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24301IE_NotificationIndicator {
   OSUINT8 length;
   OSUINT8 value;
} TS24301IE_NotificationIndicator;

EXTERN int NASEnc_TS24301IE_NotificationIndicator (OSCTXT* pctxt
   , TS24301IE_NotificationIndicator* pvalue);

EXTERN int NASDec_TS24301IE_NotificationIndicator (OSCTXT* pctxt
   , TS24301IE_NotificationIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_NotificationIndicator (OSCTXT *pctxt, 
   const char* name, const TS24301IE_NotificationIndicator* pvalue);

EXTERN TS24301IE_NotificationIndicator*
    asn1Test_TS24301IE_NotificationIndicator (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDNAddress                                                */
/*                                                            */
/**************************************************************/
/*
 9.9.4.9 - PDN address 
PDNAddress ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (5..13),
   spare [1] INTEGER (0..31) DEFAULT 0,
   pdnTypeValue [2] PDNTypeValue,
   --<inline/>
   --<length fixed-size="0"/>
   pdnAddrInfo [3] OCTET STRING (SIZE (4..12))
}
*/
typedef struct EXTERN TS24301IE_PDNAddress {
   OSUINT8 length;
   OSUINT8 spare;
   TS24301IE_PDNTypeValue pdnTypeValue;
   struct {
      OSUINT8 numocts;
      OSOCTET data[12];
   } pdnAddrInfo;
} TS24301IE_PDNAddress;

EXTERN int NASEnc_TS24301IE_PDNAddress (OSCTXT* pctxt
   , TS24301IE_PDNAddress* pvalue);

EXTERN int NASDec_TS24301IE_PDNAddress (OSCTXT* pctxt
   , TS24301IE_PDNAddress* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PDNAddress (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PDNAddress* pvalue);

EXTERN TS24301IE_PDNAddress* asn1Test_TS24301IE_PDNAddress (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PDNAddress (TS24301IE_PDNAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  PDNType                                                   */
/*                                                            */
/**************************************************************/
/*
 9.9.4.10 - PDN type 
PDNType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   pdnTypeValue [1] PDNTypeValue
}
*/
typedef struct EXTERN TS24301IE_PDNType {
   OSBOOL spare;
   TS24301IE_PDNTypeValue pdnTypeValue;
} TS24301IE_PDNType;

EXTERN int NASEnc_TS24301IE_PDNType (OSCTXT* pctxt, TS24301IE_PDNType* pvalue);

EXTERN int NASDec_TS24301IE_PDNType (OSCTXT* pctxt, TS24301IE_PDNType* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PDNType (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PDNType* pvalue);

EXTERN TS24301IE_PDNType* asn1Test_TS24301IE_PDNType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PDNType (TS24301IE_PDNType* pvalue);

/**************************************************************/
/*                                                            */
/*  ReattemptInd                                              */
/*                                                            */
/**************************************************************/
/*
 9.9.4.13A - Reattempt indicator 
ReattemptInd ::= SEQUENCE {
   spare [0] INTEGER (0..63) DEFAULT 0,
   eplmNcValue [1] BOOLEAN,
   ratcValue [2] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_ReattemptInd {
   OSUINT8 spare;
   OSBOOL eplmNcValue;
   OSBOOL ratcValue;
} TS24301IE_ReattemptInd;

EXTERN int NASEnc_TS24301IE_ReattemptInd (OSCTXT* pctxt
   , TS24301IE_ReattemptInd* pvalue);

EXTERN int NASDec_TS24301IE_ReattemptInd (OSCTXT* pctxt
   , TS24301IE_ReattemptInd* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ReattemptInd (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ReattemptInd* pvalue);

EXTERN TS24301IE_ReattemptInd* asn1Test_TS24301IE_ReattemptInd (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24301IE_ReattemptInd (TS24301IE_ReattemptInd* pvalue);

/**************************************************************/
/*                                                            */
/*  UserIdentity                                              */
/*                                                            */
/**************************************************************/
/*
UserIdentity ::= SEQUENCE {
   length [0] INTEGER (0..255),
   userDigit1 [1] INTEGER (0..15),
   oddEvenInd [2] BOOLEAN,
   userType1 [3] UserIdentityType,
   userDigits [4] OCTET STRING
}
*/
typedef struct EXTERN TS24301IE_UserIdentity {
   OSUINT8 length;
   OSUINT8 userDigit1;
   OSBOOL oddEvenInd;
   TS24301IE_UserIdentityType userType1;
   OSDynOctStr userDigits;
} TS24301IE_UserIdentity;

EXTERN int NASEnc_TS24301IE_UserIdentity (OSCTXT* pctxt
   , TS24301IE_UserIdentity* pvalue);

EXTERN int NASDec_TS24301IE_UserIdentity (OSCTXT* pctxt
   , TS24301IE_UserIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UserIdentity (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UserIdentity* pvalue);

EXTERN TS24301IE_UserIdentity* asn1Test_TS24301IE_UserIdentity (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24301IE_UserIdentity (TS24301IE_UserIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  RemoteUECtxt                                              */
/*                                                            */
/**************************************************************/
/*
RemoteUECtxt ::= SEQUENCE {
   length [0] INTEGER (0..255),
   numUserIdents [1] INTEGER (0..255),
   --<inline/>
   --<length expr="@numUserIdents"/>
   userIdents [2] SEQUENCE OF UserIdentity,
   spare [3] INTEGER (0..31) DEFAULT 0,
   addrType [4] RemoteUEAddrType,
   addrInfo [5] OCTET STRING
}
*/
typedef struct EXTERN TS24301IE_RemoteUECtxt {
   OSUINT8 length;
   OSUINT8 numUserIdents;
   struct  {
      OSSIZE n;
      TS24301IE_UserIdentity *elem;
   } userIdents;
   OSUINT8 spare;
   TS24301IE_RemoteUEAddrType addrType;
   OSDynOctStr addrInfo;
} TS24301IE_RemoteUECtxt;

EXTERN int NASEnc_TS24301IE_RemoteUECtxt (OSCTXT* pctxt
   , TS24301IE_RemoteUECtxt* pvalue);

EXTERN int NASDec_TS24301IE_RemoteUECtxt (OSCTXT* pctxt
   , TS24301IE_RemoteUECtxt* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_RemoteUECtxt (OSCTXT *pctxt, 
   const char* name, const TS24301IE_RemoteUECtxt* pvalue);

EXTERN TS24301IE_RemoteUECtxt* asn1Test_TS24301IE_RemoteUECtxt (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24301IE_RemoteUECtxt (TS24301IE_RemoteUECtxt* pvalue);

/**************************************************************/
/*                                                            */
/*  RemoteUECtxtList                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.4.20 - Remote UE context list 
RemoteUECtxtList ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (5..65535),
   numRemUECtxts [1] INTEGER (1..255),
   --<inline/>
   --<length expr="@numRemUECtxts"/>
   remUECtxts [2] SEQUENCE OF RemoteUECtxt
}
*/
typedef struct EXTERN TS24301IE_RemoteUECtxtList {
   OSUINT16 length;
   OSUINT8 numRemUECtxts;
   struct  {
      OSSIZE n;
      TS24301IE_RemoteUECtxt *elem;
   } remUECtxts;
} TS24301IE_RemoteUECtxtList;

EXTERN int NASEnc_TS24301IE_RemoteUECtxtList (OSCTXT* pctxt
   , TS24301IE_RemoteUECtxtList* pvalue);

EXTERN int NASDec_TS24301IE_RemoteUECtxtList (OSCTXT* pctxt
   , TS24301IE_RemoteUECtxtList* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_RemoteUECtxtList (OSCTXT *pctxt, 
   const char* name, const TS24301IE_RemoteUECtxtList* pvalue);

EXTERN TS24301IE_RemoteUECtxtList*
    asn1Test_TS24301IE_RemoteUECtxtList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_RemoteUECtxtList (TS24301IE_RemoteUECtxtList* pvalue);

/**************************************************************/
/*                                                            */
/*  PKMFAddress                                               */
/*                                                            */
/**************************************************************/
/*
 9.9.4.21 - PKMF address IE 
PKMFAddress ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..31) DEFAULT 0,
   addrType [2] ENUMERATED { ipv4(1), ipv6(2), atMAX(7) },
   --<length fixed-size="0"/>
   addrInfo [3] OCTET STRING (SIZE (0..16))
}
*/
typedef struct EXTERN TS24301IE_PKMFAddress {
   OSUINT8 length;
   OSUINT8 spare;
   TS24301IE_PKMFAddress_addrType addrType;
   struct {
      OSUINT8 numocts;
      OSOCTET data[16];
   } addrInfo;
} TS24301IE_PKMFAddress;

EXTERN int NASEnc_TS24301IE_PKMFAddress (OSCTXT* pctxt
   , TS24301IE_PKMFAddress* pvalue);

EXTERN int NASDec_TS24301IE_PKMFAddress (OSCTXT* pctxt
   , TS24301IE_PKMFAddress* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_PKMFAddress (OSCTXT *pctxt, 
   const char* name, const TS24301IE_PKMFAddress* pvalue);

EXTERN TS24301IE_PKMFAddress* asn1Test_TS24301IE_PKMFAddress (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_PKMFAddress (TS24301IE_PKMFAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  HdrCompressConfig                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.4.22 - Header compression configuration 
HdrCompressConfig ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (3..255),
   spare1 [1] BOOLEAN DEFAULT FALSE,
   profile104 [2] BOOLEAN,
   profile103 [3] BOOLEAN,
   profile102 [4] BOOLEAN,
   profile006 [5] BOOLEAN,
   profile004 [6] BOOLEAN,
   profile003 [7] BOOLEAN,
   profile002 [8] BOOLEAN,
   maxCID [9] OCTET STRING (SIZE (2)),
   --<noPresentBit/>
   --<length fixed-size="0"/>
   addlSetupType [10] HdrCompressCtxtParams OPTIONAL,
   --<noPresentBit/>
   --<length fixed-size="0"/>
   addlSetupContainer [11] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24301IE_HdrCompressConfig {
   struct {
      unsigned addlSetupTypePresent : 1;
      unsigned addlSetupContainerPresent : 1;
   } m;
   OSUINT8 length;
   OSBOOL spare1;
   OSBOOL profile104;
   OSBOOL profile103;
   OSBOOL profile102;
   OSBOOL profile006;
   OSBOOL profile004;
   OSBOOL profile003;
   OSBOOL profile002;
   OSOCTET maxCID[2];
   TS24301IE_HdrCompressCtxtParams addlSetupType;
   OSDynOctStr addlSetupContainer;
} TS24301IE_HdrCompressConfig;

EXTERN int NASEnc_TS24301IE_HdrCompressConfig (OSCTXT* pctxt
   , TS24301IE_HdrCompressConfig* pvalue);

EXTERN int NASDec_TS24301IE_HdrCompressConfig (OSCTXT* pctxt
   , TS24301IE_HdrCompressConfig* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_HdrCompressConfig (OSCTXT *pctxt, 
   const char* name, const TS24301IE_HdrCompressConfig* pvalue);

EXTERN TS24301IE_HdrCompressConfig*
    asn1Test_TS24301IE_HdrCompressConfig (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_HdrCompressConfig (TS24301IE_HdrCompressConfig* pvalue);

/**************************************************************/
/*                                                            */
/*  CtrlPlaneOnlyInd                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.4.23 - Control Plane Only Indication 
CtrlPlaneOnlyInd ::= SEQUENCE {
   spare4 [0] BOOLEAN DEFAULT FALSE,
   spare3 [1] BOOLEAN DEFAULT FALSE,
   spare2 [2] BOOLEAN DEFAULT FALSE,
   cpoiValue [3] BOOLEAN
}
*/
typedef struct EXTERN TS24301IE_CtrlPlaneOnlyInd {
   OSBOOL spare4;
   OSBOOL spare3;
   OSBOOL spare2;
   OSBOOL cpoiValue;
} TS24301IE_CtrlPlaneOnlyInd;

EXTERN int NASEnc_TS24301IE_CtrlPlaneOnlyInd (OSCTXT* pctxt
   , TS24301IE_CtrlPlaneOnlyInd* pvalue);

EXTERN int NASDec_TS24301IE_CtrlPlaneOnlyInd (OSCTXT* pctxt
   , TS24301IE_CtrlPlaneOnlyInd* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_CtrlPlaneOnlyInd (OSCTXT *pctxt, 
   const char* name, const TS24301IE_CtrlPlaneOnlyInd* pvalue);

EXTERN TS24301IE_CtrlPlaneOnlyInd*
    asn1Test_TS24301IE_CtrlPlaneOnlyInd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_CtrlPlaneOnlyInd (TS24301IE_CtrlPlaneOnlyInd* pvalue);

/**************************************************************/
/*                                                            */
/*  UserDataContainer                                         */
/*                                                            */
/**************************************************************/
/*
 9.9.4.24 - User data container 
UserDataContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   --<length fixed-size="0"/>
   contents [1] OCTET STRING
}
*/
typedef struct EXTERN TS24301IE_UserDataContainer {
   OSUINT16 length;
   OSDynOctStr contents;
} TS24301IE_UserDataContainer;

EXTERN int NASEnc_TS24301IE_UserDataContainer (OSCTXT* pctxt
   , TS24301IE_UserDataContainer* pvalue);

EXTERN int NASDec_TS24301IE_UserDataContainer (OSCTXT* pctxt
   , TS24301IE_UserDataContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_UserDataContainer (OSCTXT *pctxt, 
   const char* name, const TS24301IE_UserDataContainer* pvalue);

EXTERN TS24301IE_UserDataContainer*
    asn1Test_TS24301IE_UserDataContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_UserDataContainer (TS24301IE_UserDataContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  ReleaseAssistInd                                          */
/*                                                            */
/**************************************************************/
/*
 9.9.4.25 - Release assistance indication 
ReleaseAssistInd ::= SEQUENCE {
   spare4 [0] BOOLEAN DEFAULT FALSE,
   spare3 [1] BOOLEAN DEFAULT FALSE,
   ddx [2] ENUMERATED { ddxNoInfo(0), ddxNoTrans(1), ddxSingleDLTrans(2), ddxReserved(3) }
}
*/
typedef struct EXTERN TS24301IE_ReleaseAssistInd {
   OSBOOL spare4;
   OSBOOL spare3;
   TS24301IE_ReleaseAssistInd_ddx ddx;
} TS24301IE_ReleaseAssistInd;

EXTERN int NASEnc_TS24301IE_ReleaseAssistInd (OSCTXT* pctxt
   , TS24301IE_ReleaseAssistInd* pvalue);

EXTERN int NASDec_TS24301IE_ReleaseAssistInd (OSCTXT* pctxt
   , TS24301IE_ReleaseAssistInd* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ReleaseAssistInd (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ReleaseAssistInd* pvalue);

EXTERN TS24301IE_ReleaseAssistInd*
    asn1Test_TS24301IE_ReleaseAssistInd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24301IE_ReleaseAssistInd (TS24301IE_ReleaseAssistInd* pvalue);

/**************************************************************/
/*                                                            */
/*  HdrCompressConfigStat                                     */
/*                                                            */
/**************************************************************/
/*
 9.9.4.27 - Header compression configuration status 
HdrCompressConfigStat ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2),
   ebi [1] OCTET STRING (SIZE (2))
}
*/
typedef struct EXTERN TS24301IE_HdrCompressConfigStat {
   OSUINT8 length;
   OSOCTET ebi[2];
} TS24301IE_HdrCompressConfigStat;

EXTERN int NASEnc_TS24301IE_HdrCompressConfigStat (OSCTXT* pctxt
   , TS24301IE_HdrCompressConfigStat* pvalue);

EXTERN int NASDec_TS24301IE_HdrCompressConfigStat (OSCTXT* pctxt
   , TS24301IE_HdrCompressConfigStat* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_HdrCompressConfigStat (OSCTXT *pctxt, 
   const char* name, const TS24301IE_HdrCompressConfigStat* pvalue);

EXTERN TS24301IE_HdrCompressConfigStat*
    asn1Test_TS24301IE_HdrCompressConfigStat (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ExtAPNAggMaxBitRate                                       */
/*                                                            */
/**************************************************************/
/*
 9.9.4.29 - Extended APN aggregate maximum bit rate 
ExtAPNAggMaxBitRate ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   extApnAmbrUnitForDL [1] INTEGER (0..255),
   extApnAmbrForDL [2] OCTET STRING (SIZE (2)),
   extApnAmbrUnitForUL [3] INTEGER (0..255),
   extApnAmbrForUL [4] OCTET STRING (SIZE (2))
}
*/
typedef struct EXTERN TS24301IE_ExtAPNAggMaxBitRate {
   OSUINT8 length;
   OSUINT8 extApnAmbrUnitForDL;
   OSOCTET extApnAmbrForDL[2];
   OSUINT8 extApnAmbrUnitForUL;
   OSOCTET extApnAmbrForUL[2];
} TS24301IE_ExtAPNAggMaxBitRate;

EXTERN int NASEnc_TS24301IE_ExtAPNAggMaxBitRate (OSCTXT* pctxt
   , TS24301IE_ExtAPNAggMaxBitRate* pvalue);

EXTERN int NASDec_TS24301IE_ExtAPNAggMaxBitRate (OSCTXT* pctxt
   , TS24301IE_ExtAPNAggMaxBitRate* pvalue);

EXTERN int asn1PrtToStrm_TS24301IE_ExtAPNAggMaxBitRate (OSCTXT *pctxt, 
   const char* name, const TS24301IE_ExtAPNAggMaxBitRate* pvalue);

EXTERN TS24301IE_ExtAPNAggMaxBitRate*
    asn1Test_TS24301IE_ExtAPNAggMaxBitRate (OSCTXT* pctxt);

#ifdef __cplusplus
}
#endif

#endif
