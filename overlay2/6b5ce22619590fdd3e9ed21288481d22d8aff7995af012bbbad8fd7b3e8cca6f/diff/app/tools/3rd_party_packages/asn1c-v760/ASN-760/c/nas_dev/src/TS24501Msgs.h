/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.6.0, Date: 15-Feb-2022.
 */
#ifndef TS24501MSGS_H
#define TS24501MSGS_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtsrc/asn1type.h"

#include "TS24008IES.h"
#include "TS24301IES.h"
#include "TS24501IES.h"
#include "TS24011Msgs.h"

/**
 * Header file for ASN.1 module TS24501Msgs
 */
typedef enum {
   T_TS24501Msgs_TS24501_IE_OBJECTSET_UNDEF_,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_MMAuthRequest5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_MMAuthResponse5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_MMAuthResult5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_MMAuthFailure5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_MMAuthReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_RegRequest5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_RegAccept5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_RegComplete5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_RegReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ULNASTrans5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_DLNASTrans5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_DeregReqUEOrig5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_DeregAcceptUEOrig5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_DeregReqUETerm5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_DeregAcceptUETerm5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ServRequest5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ServAccept5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ServReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_CfgUpdateCmd5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_CfgUpdateDone5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_IdentityRequest5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_IdentityResponse5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_Notify5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_NotifyResponse5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_SecModeCmd5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_SecModeDone5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_SecModeReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_MMStatus5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_EstablishRequest5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_EstablishAccept5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_EstablishReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_SMAuthCmd5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_SMAuthDone5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_SMAuthResult5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ModifyRequest5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ModifyReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ModifyCmd5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ModifyDone5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ModifyCmdReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ReleaseRequest5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ReleaseReject5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ReleaseCmd5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ReleaseDone5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_SMStatus5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_ControlPlaneServReq5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_NetSliceAuthCmd5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_NetSliceAuthDone5G,
   T_TS24501Msgs_TS24501_IE_OBJECTSET_obj_NetSliceAuthResult5G
} TS24501_IE_OBJECTSET_TVALUE;

typedef enum {
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_UNDEF_,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_EstablishRequest5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_EstablishAccept5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_EstablishReject5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_SMAuthCmd5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_SMAuthDone5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_SMAuthResult5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ModifyRequest5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ModifyReject5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ModifyCmd5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ModifyDone5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ModifyCmdReject5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ReleaseRequest5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ReleaseReject5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ReleaseCmd5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ReleaseDone5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_SMStatus5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_ControlPlaneServReq5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_NetSliceAuthCmd5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_NetSliceAuthDone5G,
   T_TS24501Msgs_TS24501_IE_SM_OBJECTSET_obj_NetSliceAuthResult5G
} TS24501_IE_SM_OBJECTSET_TVALUE;

/**************************************************************/
/*                                                            */
/*  NAS5GProtoDiscr                                           */
/*                                                            */
/**************************************************************/
/*
NAS5GProtoDiscr ::= ENUMERATED { sessMgmt5G(46), mobMgmt5G(126), maxProtoDiscr(255) }
*/
typedef enum {
   TS24501Msg_NAS5GProtoDiscr_sessMgmt5G = 46,
   TS24501Msg_NAS5GProtoDiscr_mobMgmt5G = 126,
   TS24501Msg_NAS5GProtoDiscr_maxProtoDiscr = 255
} TS24501Msg_NAS5GProtoDiscr;

EXTERN int NASEnc_TS24501Msg_NAS5GProtoDiscr (OSCTXT* pctxt
   , TS24501Msg_NAS5GProtoDiscr value);

EXTERN int NASDec_TS24501Msg_NAS5GProtoDiscr (OSCTXT* pctxt
   , TS24501Msg_NAS5GProtoDiscr* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_NAS5GProtoDiscr (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_NAS5GProtoDiscr* pvalue);

EXTERN extern const OSEnumItem TS24501Msg_NAS5GProtoDiscr_ENUMTAB[];
#define TS24501Msg_NAS5GProtoDiscr_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24501Msg_NAS5GProtoDiscr_ToString (OSINT32 value);

EXTERN int TS24501Msg_NAS5GProtoDiscr_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501Msg_NAS5GProtoDiscr* pvalue);

EXTERN int TS24501Msg_NAS5GProtoDiscr_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501Msg_NAS5GProtoDiscr* pvalue);

EXTERN TS24501Msg_NAS5GProtoDiscr*
    asn1Test_TS24501Msg_NAS5GProtoDiscr (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NAS5GSecHdrType                                           */
/*                                                            */
/**************************************************************/
/*
NAS5GSecHdrType ::= ENUMERATED { noSec(0), integProt(1), integProtAndCipher(2), integProtAnd5GSecCtxt(3), integProtAndCipherAnd5GSecCtxt(4), secMax(15) }
*/
typedef enum {
   TS24501Msg_NAS5GSecHdrType_noSec = 0,
   TS24501Msg_NAS5GSecHdrType_integProt = 1,
   TS24501Msg_NAS5GSecHdrType_integProtAndCipher = 2,
   TS24501Msg_NAS5GSecHdrType_integProtAnd5GSecCtxt = 3,
   TS24501Msg_NAS5GSecHdrType_integProtAndCipherAnd5GSecCtxt = 4,
   TS24501Msg_NAS5GSecHdrType_secMax = 15
} TS24501Msg_NAS5GSecHdrType;

EXTERN int NASEnc_TS24501Msg_NAS5GSecHdrType (OSCTXT* pctxt
   , TS24501Msg_NAS5GSecHdrType value);

EXTERN int NASDec_TS24501Msg_NAS5GSecHdrType (OSCTXT* pctxt
   , TS24501Msg_NAS5GSecHdrType* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_NAS5GSecHdrType (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_NAS5GSecHdrType* pvalue);

EXTERN extern const OSEnumItem TS24501Msg_NAS5GSecHdrType_ENUMTAB[];
#define TS24501Msg_NAS5GSecHdrType_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24501Msg_NAS5GSecHdrType_ToString (OSINT32 value);

EXTERN int TS24501Msg_NAS5GSecHdrType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501Msg_NAS5GSecHdrType* pvalue);

EXTERN int TS24501Msg_NAS5GSecHdrType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501Msg_NAS5GSecHdrType* pvalue);

EXTERN TS24501Msg_NAS5GSecHdrType*
    asn1Test_TS24501Msg_NAS5GSecHdrType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDUSessionIdentity                                        */
/*                                                            */
/**************************************************************/
/*
PDUSessionIdentity ::= ENUMERATED { noPduId(0), pduId1(1), pduId2(2), pduId3(3), pduId4(4), pduId5(5), pduId6(6), pduId7(7), pduId8(8), pduId9(9), pduId10(10), pduId11(11), pduId12(12), pduId13(13), pduId14(14), pduId15(15), pduIdMax(255) }
*/
typedef enum {
   TS24501Msg_PDUSessionIdentity_noPduId = 0,
   TS24501Msg_PDUSessionIdentity_pduId1 = 1,
   TS24501Msg_PDUSessionIdentity_pduId2 = 2,
   TS24501Msg_PDUSessionIdentity_pduId3 = 3,
   TS24501Msg_PDUSessionIdentity_pduId4 = 4,
   TS24501Msg_PDUSessionIdentity_pduId5 = 5,
   TS24501Msg_PDUSessionIdentity_pduId6 = 6,
   TS24501Msg_PDUSessionIdentity_pduId7 = 7,
   TS24501Msg_PDUSessionIdentity_pduId8 = 8,
   TS24501Msg_PDUSessionIdentity_pduId9 = 9,
   TS24501Msg_PDUSessionIdentity_pduId10 = 10,
   TS24501Msg_PDUSessionIdentity_pduId11 = 11,
   TS24501Msg_PDUSessionIdentity_pduId12 = 12,
   TS24501Msg_PDUSessionIdentity_pduId13 = 13,
   TS24501Msg_PDUSessionIdentity_pduId14 = 14,
   TS24501Msg_PDUSessionIdentity_pduId15 = 15,
   TS24501Msg_PDUSessionIdentity_pduIdMax = 255
} TS24501Msg_PDUSessionIdentity;

EXTERN int NASEnc_TS24501Msg_PDUSessionIdentity (OSCTXT* pctxt
   , TS24501Msg_PDUSessionIdentity value);

EXTERN int NASDec_TS24501Msg_PDUSessionIdentity (OSCTXT* pctxt
   , TS24501Msg_PDUSessionIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_PDUSessionIdentity (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_PDUSessionIdentity* pvalue);

EXTERN extern const OSEnumItem TS24501Msg_PDUSessionIdentity_ENUMTAB[];
#define TS24501Msg_PDUSessionIdentity_ENUMTABSIZE 17

EXTERN const OSUTF8CHAR* TS24501Msg_PDUSessionIdentity_ToString (OSINT32 value);

EXTERN int TS24501Msg_PDUSessionIdentity_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501Msg_PDUSessionIdentity* pvalue);

EXTERN int TS24501Msg_PDUSessionIdentity_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501Msg_PDUSessionIdentity* pvalue);

EXTERN TS24501Msg_PDUSessionIdentity*
    asn1Test_TS24501Msg_PDUSessionIdentity (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NAS5GSecProtMsgHdr                                        */
/*                                                            */
/**************************************************************/
/*
NAS5GSecProtMsgHdr ::= SEQUENCE {
   protoDiscr [0] NAS5GProtoDiscr,
   spare1 [1] INTEGER (0..15) DEFAULT 0,
   secHdrType [2] NAS5GSecHdrType,
   msgAuthCode [3] INTEGER (0..4294967295), -- Message authentication code (MAC)
   seqNumber [4] INTEGER (0..255) -- Sequence number
}
*/
typedef struct EXTERN TS24501Msg_NAS5GSecProtMsgHdr {
   TS24501Msg_NAS5GProtoDiscr protoDiscr;
   OSUINT8 spare1;
   TS24501Msg_NAS5GSecHdrType secHdrType;
   OSUINT32 msgAuthCode;
   OSUINT8 seqNumber;
} TS24501Msg_NAS5GSecProtMsgHdr;

EXTERN int NASEnc_TS24501Msg_NAS5GSecProtMsgHdr (OSCTXT* pctxt
   , TS24501Msg_NAS5GSecProtMsgHdr* pvalue);

EXTERN int NASDec_TS24501Msg_NAS5GSecProtMsgHdr (OSCTXT* pctxt
   , TS24501Msg_NAS5GSecProtMsgHdr* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_NAS5GSecProtMsgHdr (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_NAS5GSecProtMsgHdr* pvalue);

EXTERN TS24501Msg_NAS5GSecProtMsgHdr*
    asn1Test_TS24501Msg_NAS5GSecProtMsgHdr (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_NAS5GSecProtMsgHdr (
   TS24501Msg_NAS5GSecProtMsgHdr* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthRequest                                               */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
AuthRequest ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   nasKeySetIdent [1] NASKeySetIdentifier,
   -- This field was added as optional in 15.1 and made mandatory in 15.3... 
   abba [2] ABBA, -- 9.11.3.10
   --<iei format="tv" length="17">21</iei>
   authParamRAND [3] AuthParamRAND OPTIONAL,
   --<iei format="tlv">20</iei>
   authParamAUTN [4] AuthParamAUTN OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [5] EAPMessage OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_AuthRequest {
   struct {
      unsigned authParamRANDPresent : 1;
      unsigned authParamAUTNPresent : 1;
      unsigned eapMessagePresent : 1;
   } m;
   OSUINT8 spare;
   TS24301IE_NASKeySetIdentifier nasKeySetIdent;
   TS24501IE_ABBA abba;
   TS24008IE_AuthParamRAND authParamRAND;
   TS24008IE_AuthParamAUTN authParamAUTN;
   TS24501IE_EAPMessage eapMessage;
} TS24501Msg_AuthRequest;

EXTERN int NASEnc_TS24501Msg_AuthRequest (OSCTXT* pctxt
   , TS24501Msg_AuthRequest* pvalue);

EXTERN int NASDec_TS24501Msg_AuthRequest (OSCTXT* pctxt
   , TS24501Msg_AuthRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_AuthRequest (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_AuthRequest* pvalue);

EXTERN TS24501Msg_AuthRequest* asn1Test_TS24501Msg_AuthRequest (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501Msg_AuthRequest (TS24501Msg_AuthRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthResponse                                              */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
AuthResponse ::= SEQUENCE {
   --<iei format="tlv">2D</iei>
   authRespParam [0] AuthRespParam OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [1] EAPMessage OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_AuthResponse {
   struct {
      unsigned authRespParamPresent : 1;
      unsigned eapMessagePresent : 1;
   } m;
   TS24301IE_AuthRespParam authRespParam;
   TS24501IE_EAPMessage eapMessage;
} TS24501Msg_AuthResponse;

EXTERN int NASEnc_TS24501Msg_AuthResponse (OSCTXT* pctxt
   , TS24501Msg_AuthResponse* pvalue);

EXTERN int NASDec_TS24501Msg_AuthResponse (OSCTXT* pctxt
   , TS24501Msg_AuthResponse* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_AuthResponse (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_AuthResponse* pvalue);

EXTERN TS24501Msg_AuthResponse*
    asn1Test_TS24501Msg_AuthResponse (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_AuthResponse (TS24501Msg_AuthResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthResult                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
AuthResult ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   nasKeySetIdent [1] NASKeySetIdentifier,
   eapMessage [2] EAPMessage,
   --<iei format="tlv">38</iei>
   abba [3] ABBA OPTIONAL -- added in v15.2.0
}
*/
typedef struct EXTERN TS24501Msg_AuthResult {
   struct {
      unsigned abbaPresent : 1;
   } m;
   OSUINT8 spare;
   TS24301IE_NASKeySetIdentifier nasKeySetIdent;
   TS24501IE_EAPMessage eapMessage;
   TS24501IE_ABBA abba;
} TS24501Msg_AuthResult;

EXTERN int NASEnc_TS24501Msg_AuthResult (OSCTXT* pctxt
   , TS24501Msg_AuthResult* pvalue);

EXTERN int NASDec_TS24501Msg_AuthResult (OSCTXT* pctxt
   , TS24501Msg_AuthResult* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_AuthResult (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_AuthResult* pvalue);

EXTERN TS24501Msg_AuthResult* asn1Test_TS24501Msg_AuthResult (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_AuthResult (TS24501Msg_AuthResult* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthFailure                                               */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
AuthFailure ::= SEQUENCE {
   cause [0] MMCause,
   --<iei format="tlv">30</iei>
   authFailureParam [1] AuthFailureParam OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_AuthFailure {
   struct {
      unsigned authFailureParamPresent : 1;
   } m;
   TS24501IE_MMCause cause;
   TS24008IE_AuthFailureParam authFailureParam;
} TS24501Msg_AuthFailure;

EXTERN int NASEnc_TS24501Msg_AuthFailure (OSCTXT* pctxt
   , TS24501Msg_AuthFailure* pvalue);

EXTERN int NASDec_TS24501Msg_AuthFailure (OSCTXT* pctxt
   , TS24501Msg_AuthFailure* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_AuthFailure (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_AuthFailure* pvalue);

EXTERN TS24501Msg_AuthFailure* asn1Test_TS24501Msg_AuthFailure (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501Msg_AuthFailure (TS24501Msg_AuthFailure* pvalue);

/**************************************************************/
/*                                                            */
/*  AuthReject                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
AuthReject ::= SEQUENCE {
   --<iei format="tlv-e">78</iei>
   eapMessage [0] EAPMessage OPTIONAL -- added in v15.2.0
}
*/
typedef struct EXTERN TS24501Msg_AuthReject {
   struct {
      unsigned eapMessagePresent : 1;
   } m;
   TS24501IE_EAPMessage eapMessage;
} TS24501Msg_AuthReject;

EXTERN int NASEnc_TS24501Msg_AuthReject (OSCTXT* pctxt
   , TS24501Msg_AuthReject* pvalue);

EXTERN int NASDec_TS24501Msg_AuthReject (OSCTXT* pctxt
   , TS24501Msg_AuthReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_AuthReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_AuthReject* pvalue);

EXTERN TS24501Msg_AuthReject* asn1Test_TS24501Msg_AuthReject (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_AuthReject (TS24501Msg_AuthReject* pvalue);

/**************************************************************/
/*                                                            */
/*  RegRequest                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
RegRequest ::= SEQUENCE {
   nasKeySetIdent [0] NASKeySetIdentifier,
   registrationType [1] RegistrationType,
   mobileId [2] EXPLICIT MobileIdentity,
   --<iei format="tv" length="1">0C</iei>
   nativeNasKeySetIdent [3] NASKeySetIdentifier OPTIONAL,
   --<iei format="tlv">10</iei>
   capability [4] MMCapability OPTIONAL,
   --<iei format="tlv">2E</iei>
   securityCapability [5] UESecurityCapability OPTIONAL,
   --<iei format="tlv">2F</iei>
   requestedNSSAI [6] NSSAI OPTIONAL,
   --<iei format="tv" length="7">52</iei>
   lastVisitedTAI [7] TrackingAreaIdent OPTIONAL,
   --<iei format="tlv">17</iei>
   s1NetworkCapability [8] UENetworkCapability OPTIONAL,
   --<iei format="tlv">40</iei>
   uplinkStat [9] UplinkDataStatus OPTIONAL,
   --<iei format="tlv">50</iei>
   sessionStat [10] PDUSessionStatus OPTIONAL,
   --<iei format="tv" length="1">0B</iei>
   micoInd [11] MICOIndication OPTIONAL,
   --<iei format="tlv">2B</iei>
   ueStat [12] UEStatus OPTIONAL,
   --<iei format="tlv-e">77</iei>
   addlGUTI [13] EXPLICIT MobileIdentity OPTIONAL,
   --<iei format="tlv">25</iei>
   allowedSessionStat [14] AllowedPDUSessionStatus OPTIONAL,
   --<iei format="tlv">18</iei>
   ueUsage [15] UEUsageSetting OPTIONAL,
   --<iei format="tlv">51</iei>
   reqDrxParams [16] DRXParams OPTIONAL, -- added in v15.2.0
   --<iei format="tlv-e">70</iei>
   epsContainer [17] EPSMessageContainer OPTIONAL,
   --<iei format="tlv-e">74</iei>
   ladnInd [18] LADNIndication OPTIONAL, -- added in v15.1.0
   --<iei format="tv" length="1">8</iei>
   containerType [19] PayloadContainerType OPTIONAL, -- added in v15.3.0
   --<iei format="tlv-e">7B</iei>
   --<inline/>
   container [20] EXPLICIT CHOICE {
      -- The only option currently allowed is UE Policy.  See 8.2.6.17A. 
      --<selector element="containerType" value="5"/>
      uePolicy [0] OpaqueData
   } OPTIONAL,
   --<iei format="tv" length="1">9</iei>
   netSliceInd [21] NetSliceIndication OPTIONAL, -- added in v15.2.0
   --<iei format="tlv">53</iei>
   updateType [22] UpdateType OPTIONAL, -- added in v15.2.0
   --<iei format="tlv-e">71</iei>
   nasContainer [23] NASMessageContainer2 OPTIONAL, -- added in v15.2.0
   --<iei format="tlv">60</iei>
   epsBearerStat [24] EPSBearerContextStatus OPTIONAL,
   ...,
   [[ 16:
      mobileStationClassmark2 [25] MobileStationClassmark2 OPTIONAL,
      supportedCodecs [26] SupportedCodecList OPTIONAL,
      reqDRXParams [27] ExtDRXParams OPTIONAL,
      t3324 [28] GPRSTimer3 OPTIONAL,
      ueRadioCapabilityId [29] UERadioCapId OPTIONAL,
      reqMappedNSSAI [30] MappedNSSAI OPTIONAL,
      addlInfoRequested [31] AdditionalInfoRequested OPTIONAL,
      wusAssistInfo [32] WUSAssistanceInfo OPTIONAL,
      n5gcInd [33] N5GCIndication OPTIONAL,
      reqNBN1Params [34] NBN1ModeDRXParams OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_RegRequest {
   struct {
      unsigned nativeNasKeySetIdentPresent : 1;
      unsigned capabilityPresent : 1;
      unsigned securityCapabilityPresent : 1;
      unsigned requestedNSSAIPresent : 1;
      unsigned lastVisitedTAIPresent : 1;
      unsigned s1NetworkCapabilityPresent : 1;
      unsigned uplinkStatPresent : 1;
      unsigned sessionStatPresent : 1;
      unsigned micoIndPresent : 1;
      unsigned ueStatPresent : 1;
      unsigned addlGUTIPresent : 1;
      unsigned allowedSessionStatPresent : 1;
      unsigned ueUsagePresent : 1;
      unsigned reqDrxParamsPresent : 1;
      unsigned epsContainerPresent : 1;
      unsigned ladnIndPresent : 1;
      unsigned containerTypePresent : 1;
      unsigned containerPresent : 1;
      unsigned netSliceIndPresent : 1;
      unsigned updateTypePresent : 1;
      unsigned nasContainerPresent : 1;
      unsigned epsBearerStatPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned mobileStationClassmark2Present : 1;
      unsigned supportedCodecsPresent : 1;
      unsigned reqDRXParamsPresent : 1;
      unsigned t3324Present : 1;
      unsigned ueRadioCapabilityIdPresent : 1;
      unsigned reqMappedNSSAIPresent : 1;
      unsigned addlInfoRequestedPresent : 1;
      unsigned wusAssistInfoPresent : 1;
      unsigned n5gcIndPresent : 1;
      unsigned reqNBN1ParamsPresent : 1;
   } m;
   TS24301IE_NASKeySetIdentifier nasKeySetIdent;
   TS24501IE_RegistrationType registrationType;
   TS24501IE_MobileIdentity mobileId;
   TS24301IE_NASKeySetIdentifier nativeNasKeySetIdent;
   TS24501IE_MMCapability capability;
   TS24501IE_UESecurityCapability securityCapability;
   TS24501IE_NSSAI requestedNSSAI;
   TS24501IE_TrackingAreaIdent lastVisitedTAI;
   TS24301IE_UENetworkCapability s1NetworkCapability;
   TS24501IE_UplinkDataStatus uplinkStat;
   TS24501IE_PDUSessionStatus sessionStat;
   TS24501IE_MICOIndication micoInd;
   TS24301IE_UEStatus ueStat;
   TS24501IE_MobileIdentity addlGUTI;
   TS24501IE_AllowedPDUSessionStatus allowedSessionStat;
   TS24501IE_UEUsageSetting ueUsage;
   TS24501IE_DRXParams reqDrxParams;
   TS24501IE_EPSMessageContainer epsContainer;
   TS24501IE_LADNIndication ladnInd;
   TS24501IE_PayloadContainerType containerType;
   struct  {
      union {
         /* selector element = containerType, value = 5 */
         TS24501IE_OpaqueData uePolicy;
      } u;
   } container;
   TS24501IE_NetSliceIndication netSliceInd;
   TS24501IE_UpdateType updateType;
   TS24501IE_NASMessageContainer2 nasContainer;
   TS24301IE_EPSBearerContextStatus epsBearerStat;
   TS24008IE_MobileStationClassmark2 mobileStationClassmark2;
   TS24008IE_SupportedCodecList supportedCodecs;
   TS24008IE_ExtDRXParams reqDRXParams;
   TS24008IE_GPRSTimer3 t3324;
   TS24301IE_UERadioCapId ueRadioCapabilityId;
   TS24501IE_MappedNSSAI reqMappedNSSAI;
   TS24501IE_AdditionalInfoRequested addlInfoRequested;
   TS24301IE_WUSAssistanceInfo wusAssistInfo;
   TS24501IE_N5GCIndication n5gcInd;
   TS24501IE_NBN1ModeDRXParams reqNBN1Params;
} TS24501Msg_RegRequest;

EXTERN int NASEnc_TS24501Msg_RegRequest (OSCTXT* pctxt
   , TS24501Msg_RegRequest* pvalue);

EXTERN int NASDec_TS24501Msg_RegRequest (OSCTXT* pctxt
   , TS24501Msg_RegRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_RegRequest (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_RegRequest* pvalue);

EXTERN TS24501Msg_RegRequest* asn1Test_TS24501Msg_RegRequest (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_RegRequest (TS24501Msg_RegRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  RegAccept                                                 */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
RegAccept ::= SEQUENCE {
   regResult [0] RegistrationResult,
   --<iei format="tlv-e">77</iei>
   guti [1] EXPLICIT MobileIdentity OPTIONAL,
   --<iei format="tlv">4A</iei>
   plmnList [2] PLMNList OPTIONAL,
   --<iei format="tlv">54</iei>
   taiList [3] TrackingAreaIdentList OPTIONAL,
   --<iei format="tlv">15</iei>
   allowedNSSAI [4] NSSAI OPTIONAL,
   --<iei format="tlv">11</iei>
   rejectedNSSAI [5] RejectedNSSAIList OPTIONAL,
   --<iei format="tlv">31</iei>
   configuredNSSAI [6] NSSAI OPTIONAL,
   --<iei format="tlv">21</iei>
   netSupport [7] NetworkFeatureSupport OPTIONAL,
   --<iei format="tlv">50</iei>
   sessionStat [8] PDUSessionStatus OPTIONAL,
   --<iei format="tlv">26</iei>
   reactivateRslt [9] SessionReactivateRslt OPTIONAL,
   --<iei format="tlv-e">72</iei>
   reactivateRsltCause [10] SessionReactivateCause OPTIONAL,
   --<iei format="tlv-e">79</iei>
   ladn [11] LADNList OPTIONAL,
   --<iei format="tv" length="1">B</iei>
   micoInd [12] MICOIndication OPTIONAL,
   --<iei format="tv" length="1">9</iei>
   netSliceInd [13] NetSliceIndication OPTIONAL, -- added in v15.1.0
   --<iei format="tlv">27</iei>
   svcAreaList [14] TrackingAreaIdentList OPTIONAL,
   --<iei format="tlv">5E</iei>
   t3512 [15] GPRSTimer3 OPTIONAL,
   --<iei format="tlv">5D</iei>
   non3GPPDeregTimer [16] GPRSTimer2 OPTIONAL,
   --<iei format="tlv">16</iei>
   t3502 [17] GPRSTimer2 OPTIONAL,
   --<iei format="tlv">34</iei>
   emergencyNumList [18] EmergencyNumberList OPTIONAL,
   --<iei format="tlv-e">7A</iei>
   extEmergencyNumList [19] ExtEmergencyNumberList OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">73</iei>
   transparentContainer [20] SORTransparentContainer OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">78</iei>
   eapMessage [21] EAPMessage OPTIONAL,
   --<iei format="tv" length="1">A</iei>
   inclusionMode [22] NSSAIInclusionMode OPTIONAL, -- added in v15.2.0
   --<iei format="tlv-e">76</iei>
   accessDefs [23] AccessCategoryDefinitions OPTIONAL, -- added in v15.2.0
   --<iei format="tlv">51</iei>
   negotiatedDrxParams [24] DRXParams OPTIONAL, -- added in v15.2.0
   --<iei format="tv" length="1">D</iei>
   non3GPPNWPolicies [25] Non3GPPNetPolicies OPTIONAL, -- added in v15.4.0
   --<iei format="tlv">60</iei>
   epsBearerStat [26] EPSBearerContextStatus OPTIONAL,
   ...,
   [[ 16:
      negotiatedExtDrxParams [27] ExtDRXParams OPTIONAL,
      t3447 [28] GPRSTimer3 OPTIONAL,
      t3448 [29] GPRSTimer3 OPTIONAL,
      t3324 [30] GPRSTimer3 OPTIONAL,
      ueRadioCapabilityId [31] UERadioCapId OPTIONAL,
      ueRadioCapIdDeletionIndication [32] UERadioCapIdDeletionInd OPTIONAL,
      pendingNSSAI [33] NSSAI OPTIONAL,
      cipherKeyData [34] CipheringKeyData OPTIONAL,
      cagInfoList [35] CAGInfoList OPTIONAL,
      truncatedConfig [36] TruncatedTMSIConfig OPTIONAL,
      negotiatedWUSAssistInfo [37] WUSAssistanceInfo OPTIONAL,
      negotiatedNBN1Params [38] NBN1ModeDRXParams OPTIONAL
   ]],
   [[ 17:
      extRejectedNSSAI [39] ExtRejectedNSSAIList OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_RegAccept {
   struct {
      unsigned gutiPresent : 1;
      unsigned plmnListPresent : 1;
      unsigned taiListPresent : 1;
      unsigned allowedNSSAIPresent : 1;
      unsigned rejectedNSSAIPresent : 1;
      unsigned configuredNSSAIPresent : 1;
      unsigned netSupportPresent : 1;
      unsigned sessionStatPresent : 1;
      unsigned reactivateRsltPresent : 1;
      unsigned reactivateRsltCausePresent : 1;
      unsigned ladnPresent : 1;
      unsigned micoIndPresent : 1;
      unsigned netSliceIndPresent : 1;
      unsigned svcAreaListPresent : 1;
      unsigned t3512Present : 1;
      unsigned non3GPPDeregTimerPresent : 1;
      unsigned t3502Present : 1;
      unsigned emergencyNumListPresent : 1;
      unsigned extEmergencyNumListPresent : 1;
      unsigned transparentContainerPresent : 1;
      unsigned eapMessagePresent : 1;
      unsigned inclusionModePresent : 1;
      unsigned accessDefsPresent : 1;
      unsigned negotiatedDrxParamsPresent : 1;
      unsigned non3GPPNWPoliciesPresent : 1;
      unsigned epsBearerStatPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned negotiatedExtDrxParamsPresent : 1;
      unsigned t3447Present : 1;
      unsigned t3448Present : 1;
      unsigned t3324Present : 1;
      unsigned ueRadioCapabilityIdPresent : 1;
      unsigned ueRadioCapIdDeletionIndicationPresent : 1;
      unsigned pendingNSSAIPresent : 1;
      unsigned cipherKeyDataPresent : 1;
      unsigned cagInfoListPresent : 1;
      unsigned truncatedConfigPresent : 1;
      unsigned negotiatedWUSAssistInfoPresent : 1;
      unsigned negotiatedNBN1ParamsPresent : 1;
      unsigned _v17ExtPresent : 1;
      unsigned extRejectedNSSAIPresent : 1;
   } m;
   TS24501IE_RegistrationResult regResult;
   TS24501IE_MobileIdentity guti;
   TS24008IE_PLMNList plmnList;
   TS24501IE_TrackingAreaIdentList taiList;
   TS24501IE_NSSAI allowedNSSAI;
   TS24501IE_RejectedNSSAIList rejectedNSSAI;
   TS24501IE_NSSAI configuredNSSAI;
   TS24501IE_NetworkFeatureSupport netSupport;
   TS24501IE_PDUSessionStatus sessionStat;
   TS24501IE_SessionReactivateRslt reactivateRslt;
   TS24501IE_SessionReactivateCause reactivateRsltCause;
   TS24501IE_LADNList ladn;
   TS24501IE_MICOIndication micoInd;
   TS24501IE_NetSliceIndication netSliceInd;
   TS24501IE_TrackingAreaIdentList svcAreaList;
   TS24008IE_GPRSTimer3 t3512;
   TS24008IE_GPRSTimer2 non3GPPDeregTimer;
   TS24008IE_GPRSTimer2 t3502;
   TS24008IE_EmergencyNumberList emergencyNumList;
   TS24301IE_ExtEmergencyNumberList extEmergencyNumList;
   TS24501IE_SORTransparentContainer transparentContainer;
   TS24501IE_EAPMessage eapMessage;
   TS24501IE_NSSAIInclusionMode inclusionMode;
   TS24501IE_AccessCategoryDefinitions accessDefs;
   TS24501IE_DRXParams negotiatedDrxParams;
   TS24008IE_Non3GPPNetPolicies non3GPPNWPolicies;
   TS24301IE_EPSBearerContextStatus epsBearerStat;
   TS24008IE_ExtDRXParams negotiatedExtDrxParams;
   TS24008IE_GPRSTimer3 t3447;
   TS24008IE_GPRSTimer3 t3448;
   TS24008IE_GPRSTimer3 t3324;
   TS24301IE_UERadioCapId ueRadioCapabilityId;
   TS24301IE_UERadioCapIdDeletionInd ueRadioCapIdDeletionIndication;
   TS24501IE_NSSAI pendingNSSAI;
   TS24501IE_CipheringKeyData cipherKeyData;
   TS24501IE_CAGInfoList cagInfoList;
   TS24501IE_TruncatedTMSIConfig truncatedConfig;
   TS24301IE_WUSAssistanceInfo negotiatedWUSAssistInfo;
   TS24501IE_NBN1ModeDRXParams negotiatedNBN1Params;
   TS24501IE_ExtRejectedNSSAIList extRejectedNSSAI;
} TS24501Msg_RegAccept;

EXTERN int NASEnc_TS24501Msg_RegAccept (OSCTXT* pctxt
   , TS24501Msg_RegAccept* pvalue);

EXTERN int NASDec_TS24501Msg_RegAccept (OSCTXT* pctxt
   , TS24501Msg_RegAccept* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_RegAccept (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_RegAccept* pvalue);

EXTERN TS24501Msg_RegAccept* asn1Test_TS24501Msg_RegAccept (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_RegAccept (TS24501Msg_RegAccept* pvalue);

/**************************************************************/
/*                                                            */
/*  RegComplete                                               */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
RegComplete ::= SEQUENCE {
   --<iei format="tlv-e">73</iei>
   transparentContainer [0] SORTransparentContainer OPTIONAL -- added in v15.1.0
}
*/
typedef struct EXTERN TS24501Msg_RegComplete {
   struct {
      unsigned transparentContainerPresent : 1;
   } m;
   TS24501IE_SORTransparentContainer transparentContainer;
} TS24501Msg_RegComplete;

EXTERN int NASEnc_TS24501Msg_RegComplete (OSCTXT* pctxt
   , TS24501Msg_RegComplete* pvalue);

EXTERN int NASDec_TS24501Msg_RegComplete (OSCTXT* pctxt
   , TS24501Msg_RegComplete* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_RegComplete (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_RegComplete* pvalue);

EXTERN TS24501Msg_RegComplete* asn1Test_TS24501Msg_RegComplete (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501Msg_RegComplete (TS24501Msg_RegComplete* pvalue);

/**************************************************************/
/*                                                            */
/*  RegReject                                                 */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
RegReject ::= SEQUENCE {
   cause [0] MMCause,
   --<iei format="tlv">5F</iei>
   t3346 [1] GPRSTimer2 OPTIONAL,
   --<iei format="tlv">16</iei>
   t3502 [2] GPRSTimer2 OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [3] EAPMessage OPTIONAL,
   ...,
   [[ 16:
      rejectedNSSAI [4] RejectedNSSAIList OPTIONAL,
      cagInfoList [5] CAGInfoList OPTIONAL
   ]],
   [[ 17:
      extRejectedNSSAI [6] ExtRejectedNSSAIList OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_RegReject {
   struct {
      unsigned t3346Present : 1;
      unsigned t3502Present : 1;
      unsigned eapMessagePresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned rejectedNSSAIPresent : 1;
      unsigned cagInfoListPresent : 1;
      unsigned _v17ExtPresent : 1;
      unsigned extRejectedNSSAIPresent : 1;
   } m;
   TS24501IE_MMCause cause;
   TS24008IE_GPRSTimer2 t3346;
   TS24008IE_GPRSTimer2 t3502;
   TS24501IE_EAPMessage eapMessage;
   TS24501IE_RejectedNSSAIList rejectedNSSAI;
   TS24501IE_CAGInfoList cagInfoList;
   TS24501IE_ExtRejectedNSSAIList extRejectedNSSAI;
} TS24501Msg_RegReject;

EXTERN int NASEnc_TS24501Msg_RegReject (OSCTXT* pctxt
   , TS24501Msg_RegReject* pvalue);

EXTERN int NASDec_TS24501Msg_RegReject (OSCTXT* pctxt
   , TS24501Msg_RegReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_RegReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_RegReject* pvalue);

EXTERN TS24501Msg_RegReject* asn1Test_TS24501Msg_RegReject (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_RegReject (TS24501Msg_RegReject* pvalue);

/**************************************************************/
/*                                                            */
/*  EstablishRequest                                          */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
EstablishRequest ::= SEQUENCE {
   integProtMaxRate [0] IntegrityProtMaxDataRate, -- added in v15.1.0
   --<iei format="tv" length="1">9</iei>
   pduSessionType [1] PDUSessionType OPTIONAL,
   --<iei format="tv" length="1">0A</iei>
   sscMode [2] SSCMode OPTIONAL,
   --<iei format="tlv">28</iei>
   capability [3] SMCapability OPTIONAL,
   --<iei format="tv" length="3">55</iei>
   maxPktFilters [4] MaxSupportedPacketFilters OPTIONAL,
   --<iei format="tv" length="1">B</iei>
   alwaysOnPDUSession [5] AlwaysOnPDUSessionReq OPTIONAL, -- added in v15.1.0
   --<iei format="tlv">39</iei>
   reqContainer [6] SmPduDnReqContainer OPTIONAL, -- added in v15.2.0
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [7] ExtProtoConfigOptions OPTIONAL,
   ...,
   [[ 16:
      headerCompressionCfg [8] HeaderCompressionConfig OPTIONAL,
      dsttPortMacAddr [9] DSTTEthMACAddr OPTIONAL,
      dsttResidenceTime [10] DSTTResidenceTime OPTIONAL,
      portMgmtInfoContainer [11] PortMgmtInfoContainer OPTIONAL,
      ethernetHdrCompressionCfg [12] EthHdrCompressConfig OPTIONAL,
      suggestedInterfaceId [13] PDUAddress OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_EstablishRequest {
   struct {
      unsigned pduSessionTypePresent : 1;
      unsigned sscModePresent : 1;
      unsigned capabilityPresent : 1;
      unsigned maxPktFiltersPresent : 1;
      unsigned alwaysOnPDUSessionPresent : 1;
      unsigned reqContainerPresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned headerCompressionCfgPresent : 1;
      unsigned dsttPortMacAddrPresent : 1;
      unsigned dsttResidenceTimePresent : 1;
      unsigned portMgmtInfoContainerPresent : 1;
      unsigned ethernetHdrCompressionCfgPresent : 1;
      unsigned suggestedInterfaceIdPresent : 1;
   } m;
   TS24501IE_IntegrityProtMaxDataRate integProtMaxRate;
   TS24501IE_PDUSessionType pduSessionType;
   TS24501IE_SSCMode sscMode;
   TS24501IE_SMCapability capability;
   TS24501IE_MaxSupportedPacketFilters maxPktFilters;
   TS24501IE_AlwaysOnPDUSessionReq alwaysOnPDUSession;
   TS24501IE_SmPduDnReqContainer reqContainer;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_HeaderCompressionConfig headerCompressionCfg;
   TS24501IE_DSTTEthMACAddr dsttPortMacAddr;
   TS24501IE_DSTTResidenceTime dsttResidenceTime;
   TS24501IE_PortMgmtInfoContainer portMgmtInfoContainer;
   TS24501IE_EthHdrCompressConfig ethernetHdrCompressionCfg;
   TS24501IE_PDUAddress suggestedInterfaceId;
} TS24501Msg_EstablishRequest;

EXTERN int NASEnc_TS24501Msg_EstablishRequest (OSCTXT* pctxt
   , TS24501Msg_EstablishRequest* pvalue);

EXTERN int NASDec_TS24501Msg_EstablishRequest (OSCTXT* pctxt
   , TS24501Msg_EstablishRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_EstablishRequest (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_EstablishRequest* pvalue);

EXTERN TS24501Msg_EstablishRequest*
    asn1Test_TS24501Msg_EstablishRequest (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_EstablishRequest (TS24501Msg_EstablishRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  EstablishAccept                                           */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
EstablishAccept ::= SEQUENCE {
   sscMode [0] SSCMode,
   pduSessionType [1] PDUSessionType,
   qosRules [2] QoSRules,
   sessionAMBR [3] SessionAMBR,
   --<iei format="tv" length="2">59</iei>
   cause [4] SMCause OPTIONAL,
   --<iei format="tlv">29</iei>
   pduAddress [5] PDUAddress OPTIONAL,
   --<iei format="tv" length="2">56</iei>
   rqTimer [6] GPRSTimer OPTIONAL,
   --<iei format="tlv">22</iei>
   snssai [7] SNSSAI OPTIONAL,
   --<iei format="tv" length="1">8</iei>
   alwaysOnPDUSession [8] AlwaysOnPDUSessionInd OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">75</iei>
   epsBearerCtxts [9] EPSBearerCtxts OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [10] EAPMessage OPTIONAL,
   --<iei format="tlv-e">79</iei>
   qosFlowDesr [11] QOSFlowDescriptions OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [12] ExtProtoConfigOptions OPTIONAL,
   --<iei format="tlv">25</iei>
   dnn [13] DNNList OPTIONAL,
   ...,
   [[ 16:
      smNetFeatureSupport [14] SMNetworkFeatureSupport OPTIONAL,
      servingPLMNRateCtrl [15] ServPLMNRateCtrl OPTIONAL,
      atsssContainer [16] ATSSSContainer OPTIONAL,
      ctrlPlaneOnlyIndication [17] ControlPlaneIndication OPTIONAL,
      headerCompressionCfg [18] HeaderCompressionConfig OPTIONAL,
      ethernetHdrCompressionCfg [19] EthHdrCompressConfig OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_EstablishAccept {
   struct {
      unsigned causePresent : 1;
      unsigned pduAddressPresent : 1;
      unsigned rqTimerPresent : 1;
      unsigned snssaiPresent : 1;
      unsigned alwaysOnPDUSessionPresent : 1;
      unsigned epsBearerCtxtsPresent : 1;
      unsigned eapMessagePresent : 1;
      unsigned qosFlowDesrPresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
      unsigned dnnPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned smNetFeatureSupportPresent : 1;
      unsigned servingPLMNRateCtrlPresent : 1;
      unsigned atsssContainerPresent : 1;
      unsigned ctrlPlaneOnlyIndicationPresent : 1;
      unsigned headerCompressionCfgPresent : 1;
      unsigned ethernetHdrCompressionCfgPresent : 1;
   } m;
   TS24501IE_SSCMode sscMode;
   TS24501IE_PDUSessionType pduSessionType;
   TS24501IE_QoSRules qosRules;
   TS24501IE_SessionAMBR sessionAMBR;
   TS24501IE_SMCause cause;
   TS24501IE_PDUAddress pduAddress;
   TS24008IE_GPRSTimer rqTimer;
   TS24501IE_SNSSAI snssai;
   TS24501IE_AlwaysOnPDUSessionInd alwaysOnPDUSession;
   TS24501IE_EPSBearerCtxts epsBearerCtxts;
   TS24501IE_EAPMessage eapMessage;
   TS24501IE_QOSFlowDescriptions qosFlowDesr;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_DNNList dnn;
   TS24501IE_SMNetworkFeatureSupport smNetFeatureSupport;
   TS24301IE_ServPLMNRateCtrl servingPLMNRateCtrl;
   TS24501IE_ATSSSContainer atsssContainer;
   TS24501IE_ControlPlaneIndication ctrlPlaneOnlyIndication;
   TS24501IE_HeaderCompressionConfig headerCompressionCfg;
   TS24501IE_EthHdrCompressConfig ethernetHdrCompressionCfg;
} TS24501Msg_EstablishAccept;

EXTERN int NASEnc_TS24501Msg_EstablishAccept (OSCTXT* pctxt
   , TS24501Msg_EstablishAccept* pvalue);

EXTERN int NASDec_TS24501Msg_EstablishAccept (OSCTXT* pctxt
   , TS24501Msg_EstablishAccept* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_EstablishAccept (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_EstablishAccept* pvalue);

EXTERN TS24501Msg_EstablishAccept*
    asn1Test_TS24501Msg_EstablishAccept (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_EstablishAccept (TS24501Msg_EstablishAccept* pvalue);

/**************************************************************/
/*                                                            */
/*  EstablishReject                                           */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
EstablishReject ::= SEQUENCE {
   cause [0] SMCause,
   --<iei format="tlv">37</iei>
   backoffTimer [1] GPRSTimer3 OPTIONAL,
   --<iei format="tv" length="1">0F</iei>
   allowedSSCMode [2] AllowedSSCMode OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [3] EAPMessage OPTIONAL,
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [4] ExtProtoConfigOptions OPTIONAL,
   --<iei format="tlv">61</iei>
   congestionReattemptInd [5] CongestionReattemptIndicator OPTIONAL,
   ...,
   [[ 16:
      reattemptInd [6] ReattemptIndicator OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_EstablishReject {
   struct {
      unsigned backoffTimerPresent : 1;
      unsigned allowedSSCModePresent : 1;
      unsigned eapMessagePresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
      unsigned congestionReattemptIndPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned reattemptIndPresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24008IE_GPRSTimer3 backoffTimer;
   TS24501IE_AllowedSSCMode allowedSSCMode;
   TS24501IE_EAPMessage eapMessage;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_CongestionReattemptIndicator congestionReattemptInd;
   TS24501IE_ReattemptIndicator reattemptInd;
} TS24501Msg_EstablishReject;

EXTERN int NASEnc_TS24501Msg_EstablishReject (OSCTXT* pctxt
   , TS24501Msg_EstablishReject* pvalue);

EXTERN int NASDec_TS24501Msg_EstablishReject (OSCTXT* pctxt
   , TS24501Msg_EstablishReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_EstablishReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_EstablishReject* pvalue);

EXTERN TS24501Msg_EstablishReject*
    asn1Test_TS24501Msg_EstablishReject (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_EstablishReject (TS24501Msg_EstablishReject* pvalue);

/**************************************************************/
/*                                                            */
/*  SMAuthCmd                                                 */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
SMAuthCmd ::= SEQUENCE {
   eapMessage [0] EAPMessage,
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [1] ExtProtoConfigOptions OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_SMAuthCmd {
   struct {
      unsigned extProtoCfgOptsPresent : 1;
   } m;
   TS24501IE_EAPMessage eapMessage;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
} TS24501Msg_SMAuthCmd;

EXTERN int NASEnc_TS24501Msg_SMAuthCmd (OSCTXT* pctxt
   , TS24501Msg_SMAuthCmd* pvalue);

EXTERN int NASDec_TS24501Msg_SMAuthCmd (OSCTXT* pctxt
   , TS24501Msg_SMAuthCmd* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SMAuthCmd (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SMAuthCmd* pvalue);

EXTERN TS24501Msg_SMAuthCmd* asn1Test_TS24501Msg_SMAuthCmd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_SMAuthCmd (TS24501Msg_SMAuthCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  SMAuthDone                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
SMAuthDone ::= SEQUENCE {
   eapMessage [0] EAPMessage,
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [1] ExtProtoConfigOptions OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_SMAuthDone {
   struct {
      unsigned extProtoCfgOptsPresent : 1;
   } m;
   TS24501IE_EAPMessage eapMessage;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
} TS24501Msg_SMAuthDone;

EXTERN int NASEnc_TS24501Msg_SMAuthDone (OSCTXT* pctxt
   , TS24501Msg_SMAuthDone* pvalue);

EXTERN int NASDec_TS24501Msg_SMAuthDone (OSCTXT* pctxt
   , TS24501Msg_SMAuthDone* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SMAuthDone (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SMAuthDone* pvalue);

EXTERN TS24501Msg_SMAuthDone* asn1Test_TS24501Msg_SMAuthDone (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_SMAuthDone (TS24501Msg_SMAuthDone* pvalue);

/**************************************************************/
/*                                                            */
/*  SMAuthResult                                              */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
SMAuthResult ::= SEQUENCE {
   --<iei format="tlv-e">78</iei>
   eapMessage [0] EAPMessage OPTIONAL,
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [1] ExtProtoConfigOptions OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_SMAuthResult {
   struct {
      unsigned eapMessagePresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
   } m;
   TS24501IE_EAPMessage eapMessage;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
} TS24501Msg_SMAuthResult;

EXTERN int NASEnc_TS24501Msg_SMAuthResult (OSCTXT* pctxt
   , TS24501Msg_SMAuthResult* pvalue);

EXTERN int NASDec_TS24501Msg_SMAuthResult (OSCTXT* pctxt
   , TS24501Msg_SMAuthResult* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SMAuthResult (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SMAuthResult* pvalue);

EXTERN TS24501Msg_SMAuthResult*
    asn1Test_TS24501Msg_SMAuthResult (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_SMAuthResult (TS24501Msg_SMAuthResult* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyRequest                                             */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ModifyRequest ::= SEQUENCE {
   --<iei format="tlv">28</iei>
   capability [0] SMCapability OPTIONAL,
   --<iei format="tv" length="2">59</iei>
   cause [1] SMCause OPTIONAL, -- added in v15.1.0
   --<iei format="tv" length="3">55</iei>
   maxPktFilters [2] MaxSupportedPacketFilters OPTIONAL,
   --<iei format="tv" length="1">B</iei>
   alwaysOnPDUSession [3] AlwaysOnPDUSessionReq OPTIONAL, -- added in v15.1.0
   --<iei format="tv" length="3">13</iei>
   integProtMaxRate [4] IntegrityProtMaxDataRate OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">7A</iei>
   qosRules [5] QoSRules OPTIONAL,
   --<iei format="tlv-e">79</iei>
   qosFlowDesr [6] QOSFlowDescriptions OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">75</iei>
   epsBearerCtxts [7] EPSBearerCtxts OPTIONAL, -- added in v15.2.0
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [8] ExtProtoConfigOptions OPTIONAL,
   ...,
   [[ 16:
      portMgmtInfoContainer [9] PortMgmtInfoContainer OPTIONAL,
      headerCompressionCfg [10] HeaderCompressionConfig OPTIONAL,
      ethernetHdrCompressionCfg [11] EthHdrCompressConfig OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ModifyRequest {
   struct {
      unsigned capabilityPresent : 1;
      unsigned causePresent : 1;
      unsigned maxPktFiltersPresent : 1;
      unsigned alwaysOnPDUSessionPresent : 1;
      unsigned integProtMaxRatePresent : 1;
      unsigned qosRulesPresent : 1;
      unsigned qosFlowDesrPresent : 1;
      unsigned epsBearerCtxtsPresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned portMgmtInfoContainerPresent : 1;
      unsigned headerCompressionCfgPresent : 1;
      unsigned ethernetHdrCompressionCfgPresent : 1;
   } m;
   TS24501IE_SMCapability capability;
   TS24501IE_SMCause cause;
   TS24501IE_MaxSupportedPacketFilters maxPktFilters;
   TS24501IE_AlwaysOnPDUSessionReq alwaysOnPDUSession;
   TS24501IE_IntegrityProtMaxDataRate integProtMaxRate;
   TS24501IE_QoSRules qosRules;
   TS24501IE_QOSFlowDescriptions qosFlowDesr;
   TS24501IE_EPSBearerCtxts epsBearerCtxts;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_PortMgmtInfoContainer portMgmtInfoContainer;
   TS24501IE_HeaderCompressionConfig headerCompressionCfg;
   TS24501IE_EthHdrCompressConfig ethernetHdrCompressionCfg;
} TS24501Msg_ModifyRequest;

EXTERN int NASEnc_TS24501Msg_ModifyRequest (OSCTXT* pctxt
   , TS24501Msg_ModifyRequest* pvalue);

EXTERN int NASDec_TS24501Msg_ModifyRequest (OSCTXT* pctxt
   , TS24501Msg_ModifyRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ModifyRequest (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ModifyRequest* pvalue);

EXTERN TS24501Msg_ModifyRequest*
    asn1Test_TS24501Msg_ModifyRequest (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ModifyRequest (TS24501Msg_ModifyRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyReject                                              */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ModifyReject ::= SEQUENCE {
   cause [0] SMCause,
   --<iei format="tlv">37</iei>
   backoffTimer [1] GPRSTimer3 OPTIONAL,
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [2] ExtProtoConfigOptions OPTIONAL,
   --<iei format="tlv">61</iei>
   congestionReattemptInd [3] CongestionReattemptIndicator OPTIONAL,
   ...,
   [[ 16:
      reattemptInd [4] ReattemptIndicator OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ModifyReject {
   struct {
      unsigned backoffTimerPresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
      unsigned congestionReattemptIndPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned reattemptIndPresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24008IE_GPRSTimer3 backoffTimer;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_CongestionReattemptIndicator congestionReattemptInd;
   TS24501IE_ReattemptIndicator reattemptInd;
} TS24501Msg_ModifyReject;

EXTERN int NASEnc_TS24501Msg_ModifyReject (OSCTXT* pctxt
   , TS24501Msg_ModifyReject* pvalue);

EXTERN int NASDec_TS24501Msg_ModifyReject (OSCTXT* pctxt
   , TS24501Msg_ModifyReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ModifyReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ModifyReject* pvalue);

EXTERN TS24501Msg_ModifyReject*
    asn1Test_TS24501Msg_ModifyReject (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ModifyReject (TS24501Msg_ModifyReject* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyCmd                                                 */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ModifyCmd ::= SEQUENCE {
   --<iei format="tv" length="2">59</iei>
   cause [0] SMCause OPTIONAL,
   --<iei format="tlv">2A</iei>
   sessionAMBR [1] SessionAMBR OPTIONAL,
   --<iei format="tv" length="2">56</iei>
   rqTimer [2] GPRSTimer OPTIONAL,
   --<iei format="tv" length="1">8</iei>
   alwaysOnPDUSession [3] AlwaysOnPDUSessionReq OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">7A</iei>
   qosRules [4] QoSRules OPTIONAL,
   --<iei format="tlv-e">75</iei>
   epsBearerCtxts [5] EPSBearerCtxts OPTIONAL,
   --<iei format="tlv-e">79</iei>
   qosFlowDesr [6] QOSFlowDescriptions OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [7] ExtProtoConfigOptions OPTIONAL,
   ...,
   [[ 16:
      atsssContainer [8] ATSSSContainer OPTIONAL,
      headerCompressionCfg [9] HeaderCompressionConfig OPTIONAL,
      portMgmtInfoContainer [10] PortMgmtInfoContainer OPTIONAL,
      servingPLMNRateCtrl [11] ServPLMNRateCtrl OPTIONAL,
      ethernetHdrCompressionCfg [12] EthHdrCompressConfig OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ModifyCmd {
   struct {
      unsigned causePresent : 1;
      unsigned sessionAMBRPresent : 1;
      unsigned rqTimerPresent : 1;
      unsigned alwaysOnPDUSessionPresent : 1;
      unsigned qosRulesPresent : 1;
      unsigned epsBearerCtxtsPresent : 1;
      unsigned qosFlowDesrPresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned atsssContainerPresent : 1;
      unsigned headerCompressionCfgPresent : 1;
      unsigned portMgmtInfoContainerPresent : 1;
      unsigned servingPLMNRateCtrlPresent : 1;
      unsigned ethernetHdrCompressionCfgPresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24501IE_SessionAMBR sessionAMBR;
   TS24008IE_GPRSTimer rqTimer;
   TS24501IE_AlwaysOnPDUSessionReq alwaysOnPDUSession;
   TS24501IE_QoSRules qosRules;
   TS24501IE_EPSBearerCtxts epsBearerCtxts;
   TS24501IE_QOSFlowDescriptions qosFlowDesr;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_ATSSSContainer atsssContainer;
   TS24501IE_HeaderCompressionConfig headerCompressionCfg;
   TS24501IE_PortMgmtInfoContainer portMgmtInfoContainer;
   TS24301IE_ServPLMNRateCtrl servingPLMNRateCtrl;
   TS24501IE_EthHdrCompressConfig ethernetHdrCompressionCfg;
} TS24501Msg_ModifyCmd;

EXTERN int NASEnc_TS24501Msg_ModifyCmd (OSCTXT* pctxt
   , TS24501Msg_ModifyCmd* pvalue);

EXTERN int NASDec_TS24501Msg_ModifyCmd (OSCTXT* pctxt
   , TS24501Msg_ModifyCmd* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ModifyCmd (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ModifyCmd* pvalue);

EXTERN TS24501Msg_ModifyCmd* asn1Test_TS24501Msg_ModifyCmd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ModifyCmd (TS24501Msg_ModifyCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyDone                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ModifyDone ::= SEQUENCE {
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [0] ExtProtoConfigOptions OPTIONAL,
   ...,
   [[ 16:
      portMgmtInfoContainer [1] PortMgmtInfoContainer OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ModifyDone {
   struct {
      unsigned extProtoCfgOptsPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned portMgmtInfoContainerPresent : 1;
   } m;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_PortMgmtInfoContainer portMgmtInfoContainer;
} TS24501Msg_ModifyDone;

EXTERN int NASEnc_TS24501Msg_ModifyDone (OSCTXT* pctxt
   , TS24501Msg_ModifyDone* pvalue);

EXTERN int NASDec_TS24501Msg_ModifyDone (OSCTXT* pctxt
   , TS24501Msg_ModifyDone* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ModifyDone (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ModifyDone* pvalue);

EXTERN TS24501Msg_ModifyDone* asn1Test_TS24501Msg_ModifyDone (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ModifyDone (TS24501Msg_ModifyDone* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyCmdReject                                           */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ModifyCmdReject ::= SEQUENCE {
   cause [0] SMCause,
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [1] ExtProtoConfigOptions OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_ModifyCmdReject {
   struct {
      unsigned extProtoCfgOptsPresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
} TS24501Msg_ModifyCmdReject;

EXTERN int NASEnc_TS24501Msg_ModifyCmdReject (OSCTXT* pctxt
   , TS24501Msg_ModifyCmdReject* pvalue);

EXTERN int NASDec_TS24501Msg_ModifyCmdReject (OSCTXT* pctxt
   , TS24501Msg_ModifyCmdReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ModifyCmdReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ModifyCmdReject* pvalue);

EXTERN TS24501Msg_ModifyCmdReject*
    asn1Test_TS24501Msg_ModifyCmdReject (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ModifyCmdReject (TS24501Msg_ModifyCmdReject* pvalue);

/**************************************************************/
/*                                                            */
/*  ReleaseRequest                                            */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ReleaseRequest ::= SEQUENCE {
   --<iei format="tv" length="2">59</iei>
   cause [0] SMCause OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [1] ExtProtoConfigOptions OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_ReleaseRequest {
   struct {
      unsigned causePresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
} TS24501Msg_ReleaseRequest;

EXTERN int NASEnc_TS24501Msg_ReleaseRequest (OSCTXT* pctxt
   , TS24501Msg_ReleaseRequest* pvalue);

EXTERN int NASDec_TS24501Msg_ReleaseRequest (OSCTXT* pctxt
   , TS24501Msg_ReleaseRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ReleaseRequest (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ReleaseRequest* pvalue);

EXTERN TS24501Msg_ReleaseRequest*
    asn1Test_TS24501Msg_ReleaseRequest (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ReleaseRequest (TS24501Msg_ReleaseRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  ReleaseReject                                             */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ReleaseReject ::= SEQUENCE {
   cause [0] SMCause,
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [1] ExtProtoConfigOptions OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_ReleaseReject {
   struct {
      unsigned extProtoCfgOptsPresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
} TS24501Msg_ReleaseReject;

EXTERN int NASEnc_TS24501Msg_ReleaseReject (OSCTXT* pctxt
   , TS24501Msg_ReleaseReject* pvalue);

EXTERN int NASDec_TS24501Msg_ReleaseReject (OSCTXT* pctxt
   , TS24501Msg_ReleaseReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ReleaseReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ReleaseReject* pvalue);

EXTERN TS24501Msg_ReleaseReject*
    asn1Test_TS24501Msg_ReleaseReject (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ReleaseReject (TS24501Msg_ReleaseReject* pvalue);

/**************************************************************/
/*                                                            */
/*  ReleaseCmd                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ReleaseCmd ::= SEQUENCE {
   cause [0] SMCause,
   --<iei format="tlv">37</iei>
   backoffTimer [1] GPRSTimer3 OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [2] EAPMessage OPTIONAL,
   --<iei format="tlv">61</iei>
   congestionReattemptInd [3] CongestionReattemptIndicator OPTIONAL, -- Added in v15.4.0
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [4] ExtProtoConfigOptions OPTIONAL,
   ...,
   [[ 16:
      accessType [5] AccessType OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ReleaseCmd {
   struct {
      unsigned backoffTimerPresent : 1;
      unsigned eapMessagePresent : 1;
      unsigned congestionReattemptIndPresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned accessTypePresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24008IE_GPRSTimer3 backoffTimer;
   TS24501IE_EAPMessage eapMessage;
   TS24501IE_CongestionReattemptIndicator congestionReattemptInd;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
   TS24501IE_AccessType accessType;
} TS24501Msg_ReleaseCmd;

EXTERN int NASEnc_TS24501Msg_ReleaseCmd (OSCTXT* pctxt
   , TS24501Msg_ReleaseCmd* pvalue);

EXTERN int NASDec_TS24501Msg_ReleaseCmd (OSCTXT* pctxt
   , TS24501Msg_ReleaseCmd* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ReleaseCmd (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ReleaseCmd* pvalue);

EXTERN TS24501Msg_ReleaseCmd* asn1Test_TS24501Msg_ReleaseCmd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ReleaseCmd (TS24501Msg_ReleaseCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  ReleaseDone                                               */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ReleaseDone ::= SEQUENCE {
   --<iei format="tv" length="2">59</iei>
   cause [0] SMCause OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">7B</iei>
   extProtoCfgOpts [1] ExtProtoConfigOptions OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_ReleaseDone {
   struct {
      unsigned causePresent : 1;
      unsigned extProtoCfgOptsPresent : 1;
   } m;
   TS24501IE_SMCause cause;
   TS24008IE_ExtProtoConfigOptions extProtoCfgOpts;
} TS24501Msg_ReleaseDone;

EXTERN int NASEnc_TS24501Msg_ReleaseDone (OSCTXT* pctxt
   , TS24501Msg_ReleaseDone* pvalue);

EXTERN int NASDec_TS24501Msg_ReleaseDone (OSCTXT* pctxt
   , TS24501Msg_ReleaseDone* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ReleaseDone (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ReleaseDone* pvalue);

EXTERN TS24501Msg_ReleaseDone* asn1Test_TS24501Msg_ReleaseDone (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501Msg_ReleaseDone (TS24501Msg_ReleaseDone* pvalue);

/**************************************************************/
/*                                                            */
/*  SMStatus                                                  */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
SMStatus ::= SEQUENCE {
   cause [0] SMCause
}
*/
typedef struct EXTERN TS24501Msg_SMStatus {
   TS24501IE_SMCause cause;
} TS24501Msg_SMStatus;

EXTERN int NASEnc_TS24501Msg_SMStatus (OSCTXT* pctxt
   , TS24501Msg_SMStatus* pvalue);

EXTERN int NASDec_TS24501Msg_SMStatus (OSCTXT* pctxt
   , TS24501Msg_SMStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SMStatus (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SMStatus* pvalue);

EXTERN TS24501Msg_SMStatus* asn1Test_TS24501Msg_SMStatus (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SMSMessage                                                */
/*                                                            */
/**************************************************************/
/*
 9.11.3.39 - Payload container type SMS
 This covers the specific case where the payload container type is SMS
 Message.
 This is defined here to avoid circular reference issues and resulting
 backward compatability problems...
SMSMessage ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   cpPdu [1] CP-PDU
}
*/
typedef struct EXTERN TS24501Msg_SMSMessage {
   OSUINT8 length;
   TS24011Msg_CP_PDU cpPdu;
} TS24501Msg_SMSMessage;

EXTERN int NASEnc_TS24501Msg_SMSMessage (OSCTXT* pctxt
   , TS24501Msg_SMSMessage* pvalue);

EXTERN int NASDec_TS24501Msg_SMSMessage (OSCTXT* pctxt
   , TS24501Msg_SMSMessage* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SMSMessage (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SMSMessage* pvalue);

EXTERN TS24501Msg_SMSMessage* asn1Test_TS24501Msg_SMSMessage (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_SMSMessage (TS24501Msg_SMSMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  ControlPlaneServReq                                       */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ControlPlaneServReq ::= SEQUENCE {
   nasKeySetIdent [0] NASKeySetIdentifier,
   ctrlPlaneServType [1] ControlPlaneServiceType,
   --<iei format="tv" length="1">08</iei>
   containerType [2] PayloadContainerType OPTIONAL,
   --<iei format="tlv-e">7B</iei>
   --<inline/>
   container [3] EXPLICIT CHOICE {
      -- The only options currently allowed are CIoT user data, SMS or
--       location services message.  See 8.2.30.4. 
      --<selector element="containerType" value="2"/>
      sms [0] SMSMessage,
      --<selector element="containerType" value="7"/>
      locSvcs [1] OpaqueData,
      --<selector element="containerType" value="8"/>
      cIOTUserData [2] UserDataContainer
   } OPTIONAL,
   --<iei format="tv" length="2">12</iei>
   pduSessionId [4] PDUSessionId2 OPTIONAL,
   --<iei format="tlv">50</iei>
   sessionStat [5] PDUSessionStatus OPTIONAL,
   --<iei format="tv" length="1">0F</iei>
   releaseAssistIndication [6] ReleaseAssistInd OPTIONAL,
   --<iei format="tlv">40</iei>
   uplinkStat [7] UplinkDataStatus OPTIONAL,
   --<iei format="tlv-e">71</iei>
   nasMsgContainer [8] NASMessageContainer2 OPTIONAL,
   ...,
   [[ 16:
      addlInfo [9] AdditionalInfo OPTIONAL,
      ciotSmallDataContainer [10] CIoTSmallDataContainer OPTIONAL
   ]],
   [[ 17:
      allowedPduSessStat [11] AllowedPDUSessionStatus OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ControlPlaneServReq {
   struct {
      unsigned containerTypePresent : 1;
      unsigned containerPresent : 1;
      unsigned pduSessionIdPresent : 1;
      unsigned sessionStatPresent : 1;
      unsigned releaseAssistIndicationPresent : 1;
      unsigned uplinkStatPresent : 1;
      unsigned nasMsgContainerPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned addlInfoPresent : 1;
      unsigned ciotSmallDataContainerPresent : 1;
      unsigned _v17ExtPresent : 1;
      unsigned allowedPduSessStatPresent : 1;
   } m;
   TS24301IE_NASKeySetIdentifier nasKeySetIdent;
   TS24501IE_ControlPlaneServiceType ctrlPlaneServType;
   TS24501IE_PayloadContainerType containerType;
   struct  {
      union {
         /* selector element = containerType, value = 2 */
         TS24501Msg_SMSMessage sms;
         /* selector element = containerType, value = 7 */
         TS24501IE_OpaqueData locSvcs;
         /* selector element = containerType, value = 8 */
         TS24301IE_UserDataContainer cIOTUserData;
      } u;
   } container;
   TS24501IE_PDUSessionId2 pduSessionId;
   TS24501IE_PDUSessionStatus sessionStat;
   TS24301IE_ReleaseAssistInd releaseAssistIndication;
   TS24501IE_UplinkDataStatus uplinkStat;
   TS24501IE_NASMessageContainer2 nasMsgContainer;
   TS24501IE_AdditionalInfo addlInfo;
   TS24501IE_CIoTSmallDataContainer ciotSmallDataContainer;
   TS24501IE_AllowedPDUSessionStatus allowedPduSessStat;
} TS24501Msg_ControlPlaneServReq;

EXTERN int NASEnc_TS24501Msg_ControlPlaneServReq (OSCTXT* pctxt
   , TS24501Msg_ControlPlaneServReq* pvalue);

EXTERN int NASDec_TS24501Msg_ControlPlaneServReq (OSCTXT* pctxt
   , TS24501Msg_ControlPlaneServReq* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ControlPlaneServReq (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ControlPlaneServReq* pvalue);

EXTERN TS24501Msg_ControlPlaneServReq*
    asn1Test_TS24501Msg_ControlPlaneServReq (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ControlPlaneServReq (
   TS24501Msg_ControlPlaneServReq* pvalue);

/**************************************************************/
/*                                                            */
/*  NetSliceAuthCmd                                           */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
NetSliceAuthCmd ::= SEQUENCE {
   snssai [0] SNSSAI,
   eapMessage [1] EAPMessage
}
*/
typedef struct EXTERN TS24501Msg_NetSliceAuthCmd {
   TS24501IE_SNSSAI snssai;
   TS24501IE_EAPMessage eapMessage;
} TS24501Msg_NetSliceAuthCmd;

EXTERN int NASEnc_TS24501Msg_NetSliceAuthCmd (OSCTXT* pctxt
   , TS24501Msg_NetSliceAuthCmd* pvalue);

EXTERN int NASDec_TS24501Msg_NetSliceAuthCmd (OSCTXT* pctxt
   , TS24501Msg_NetSliceAuthCmd* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_NetSliceAuthCmd (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_NetSliceAuthCmd* pvalue);

EXTERN TS24501Msg_NetSliceAuthCmd*
    asn1Test_TS24501Msg_NetSliceAuthCmd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_NetSliceAuthCmd (TS24501Msg_NetSliceAuthCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  NetSliceAuthDone                                          */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
NetSliceAuthDone ::= SEQUENCE {
   snssai [0] SNSSAI,
   eapMessage [1] EAPMessage
}
*/
typedef struct EXTERN TS24501Msg_NetSliceAuthDone {
   TS24501IE_SNSSAI snssai;
   TS24501IE_EAPMessage eapMessage;
} TS24501Msg_NetSliceAuthDone;

EXTERN int NASEnc_TS24501Msg_NetSliceAuthDone (OSCTXT* pctxt
   , TS24501Msg_NetSliceAuthDone* pvalue);

EXTERN int NASDec_TS24501Msg_NetSliceAuthDone (OSCTXT* pctxt
   , TS24501Msg_NetSliceAuthDone* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_NetSliceAuthDone (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_NetSliceAuthDone* pvalue);

EXTERN TS24501Msg_NetSliceAuthDone*
    asn1Test_TS24501Msg_NetSliceAuthDone (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_NetSliceAuthDone (TS24501Msg_NetSliceAuthDone* pvalue);

/**************************************************************/
/*                                                            */
/*  NetSliceAuthResult                                        */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
NetSliceAuthResult ::= SEQUENCE {
   snssai [0] SNSSAI,
   eapMessage [1] EAPMessage
}
*/
typedef struct EXTERN TS24501Msg_NetSliceAuthResult {
   TS24501IE_SNSSAI snssai;
   TS24501IE_EAPMessage eapMessage;
} TS24501Msg_NetSliceAuthResult;

EXTERN int NASEnc_TS24501Msg_NetSliceAuthResult (OSCTXT* pctxt
   , TS24501Msg_NetSliceAuthResult* pvalue);

EXTERN int NASDec_TS24501Msg_NetSliceAuthResult (OSCTXT* pctxt
   , TS24501Msg_NetSliceAuthResult* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_NetSliceAuthResult (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_NetSliceAuthResult* pvalue);

EXTERN TS24501Msg_NetSliceAuthResult*
    asn1Test_TS24501Msg_NetSliceAuthResult (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_NetSliceAuthResult (
   TS24501Msg_NetSliceAuthResult* pvalue);

/**************************************************************/
/*                                                            */
/*  PDU_SM                                                    */
/*                                                            */
/**************************************************************/
/*
 This SM object set and PDU are for SM messages that can reside in the MM
  ESMMessageContainer IE... 
PDU-SM ::= SEQUENCE {
   protoDiscr [0] NAS5G-PROTOCOL-CLASS.&protoDiscr ({TS24501-IE-SM-OBJECTSET}),
   pduSessIdent [1] PDUSessionIdentity,
   procTransIdent [2] INTEGER (0..255),
   msgType [3] NAS5G-PROTOCOL-CLASS.&msgType ({TS24501-IE-SM-OBJECTSET}) (0..255),
   data [4] EXPLICIT NAS5G-PROTOCOL-CLASS.&Value ({TS24501-IE-SM-OBJECTSET}{@protoDiscr,@msgType})
}
*/
typedef struct EXTERN TS24501Msg_PDU_SM {
   TS24501Msg_NAS5GProtoDiscr protoDiscr;
   TS24501Msg_PDUSessionIdentity pduSessIdent;
   OSUINT8 procTransIdent;
   OSUINT8 msgType;
   struct  {
      /**
       * information object selector
       */
      TS24501_IE_SM_OBJECTSET_TVALUE t;

      /**
       * TS24501-IE-SM-OBJECTSET information objects
       */
      union {
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-EstablishRequest5G
          */
         TS24501Msg_EstablishRequest *obj_EstablishRequest5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-EstablishAccept5G
          */
         TS24501Msg_EstablishAccept *obj_EstablishAccept5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-EstablishReject5G
          */
         TS24501Msg_EstablishReject *obj_EstablishReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-AuthCmd5G
          */
         TS24501Msg_SMAuthCmd *obj_SMAuthCmd5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-AuthDone5G
          */
         TS24501Msg_SMAuthDone *obj_SMAuthDone5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-AuthResult5G
          */
         TS24501Msg_SMAuthResult *obj_SMAuthResult5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyRequest5G
          */
         TS24501Msg_ModifyRequest *obj_ModifyRequest5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyReject5G
          */
         TS24501Msg_ModifyReject *obj_ModifyReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyCmd5G
          */
         TS24501Msg_ModifyCmd *obj_ModifyCmd5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyDone5G
          */
         TS24501Msg_ModifyDone *obj_ModifyDone5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyCmdReject5G
          */
         TS24501Msg_ModifyCmdReject *obj_ModifyCmdReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseRequest5G
          */
         TS24501Msg_ReleaseRequest *obj_ReleaseRequest5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseReject5G
          */
         TS24501Msg_ReleaseReject *obj_ReleaseReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseCmd5G
          */
         TS24501Msg_ReleaseCmd *obj_ReleaseCmd5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseDone5G
          */
         TS24501Msg_ReleaseDone *obj_ReleaseDone5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-SMStatus5G
          */
         TS24501Msg_SMStatus *obj_SMStatus5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-ControlPlaneServReq5G
          */
         TS24501Msg_ControlPlaneServReq *obj_ControlPlaneServReq5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-NetSliceAuthCmd5G
          */
         TS24501Msg_NetSliceAuthCmd *obj_NetSliceAuthCmd5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-NetSliceAuthDone5G
          */
         TS24501Msg_NetSliceAuthDone *obj_NetSliceAuthDone5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-NetSliceAuthResult5G
          */
         TS24501Msg_NetSliceAuthResult *obj_NetSliceAuthResult5G;
      } u;
   } data;
} TS24501Msg_PDU_SM;

EXTERN int NASEnc_TS24501Msg_PDU_SM (OSCTXT* pctxt, TS24501Msg_PDU_SM* pvalue);

EXTERN int NASDec_TS24501Msg_PDU_SM (OSCTXT* pctxt, TS24501Msg_PDU_SM* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_PDU_SM (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_PDU_SM* pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_EstablishRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_EstablishRequest 
   *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_EstablishAccept5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_EstablishAccept *pvalue
   );

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_EstablishReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_EstablishReject *pvalue
   );

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_SMAuthCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_SMAuthCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_SMAuthDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_SMAuthDone *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_SMAuthResult5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_SMAuthResult *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ModifyRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ModifyRequest *pvalue)
   ;

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ModifyReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ModifyReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ModifyCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ModifyCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ModifyDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ModifyDone *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ModifyCmdReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ModifyCmdReject *pvalue
   );

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ReleaseRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ReleaseRequest *pvalue)
   ;

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ReleaseReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ReleaseReject *pvalue)
   ;

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ReleaseCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ReleaseCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ReleaseDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ReleaseDone *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_SMStatus5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_SMStatus *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_ControlPlaneServReq5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_ControlPlaneServReq 
   *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_NetSliceAuthCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_NetSliceAuthCmd *pvalue
   );

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_NetSliceAuthDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_NetSliceAuthDone 
   *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_SM_obj_NetSliceAuthResult5G
   (OSCTXT* pctxt, TS24501Msg_PDU_SM* pElem, TS24501Msg_NetSliceAuthResult 
   *pvalue);

EXTERN TS24501Msg_PDU_SM* asn1Test_TS24501Msg_PDU_SM (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_PDU_SM (TS24501Msg_PDU_SM* pvalue);

/**************************************************************/
/*                                                            */
/*  N1SMPayloadContainer                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.39 - Payload container type N1 SM Information
 This covers the specific case where the payload container type is N1 SM.
 This is defined here rather than the IES ASN file because of the PDU-SM
 type above.  If this were in the IES file, it caused a circular reference
 issue, which changed some generated types' structs to pointers to those
 structs.  This created a backward compatability issue.  To get around that,
 it is defined here...
N1SMPayloadContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   pduSm [1] PDU-SM
}
*/
typedef struct EXTERN TS24501Msg_N1SMPayloadContainer {
   OSUINT16 length;
   TS24501Msg_PDU_SM pduSm;
} TS24501Msg_N1SMPayloadContainer;

EXTERN int NASEnc_TS24501Msg_N1SMPayloadContainer (OSCTXT* pctxt
   , TS24501Msg_N1SMPayloadContainer* pvalue);

EXTERN int NASDec_TS24501Msg_N1SMPayloadContainer (OSCTXT* pctxt
   , TS24501Msg_N1SMPayloadContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_N1SMPayloadContainer (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_N1SMPayloadContainer* pvalue);

EXTERN TS24501Msg_N1SMPayloadContainer*
    asn1Test_TS24501Msg_N1SMPayloadContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_N1SMPayloadContainer (
   TS24501Msg_N1SMPayloadContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  ULNASTrans                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ULNASTrans ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   containerType [1] PayloadContainerType,
   --<inline/>
   container [2] EXPLICIT CHOICE {
      --<selector element="containerType" value="1"/>      
      n1sm [0] N1SMPayloadContainer,
      --<selector element="containerType" value="2"/>
      sms [1] SMSMessage,
      --<selector element="containerType" value="3"/>
      lpp [2] OpaqueData,
      --<selector element="containerType" value="4"/>
      sor [3] SORAck,
      --<selector element="containerType" value="5"/>
      uePolicy [4] OpaqueData,
      --<selector element="containerType" value="6"/>
      ueParamUpdate [5] UEParamUpdateAck,
      --<selector element="containerType" value="7"/>
      locSvcs [6] OpaqueData,
      --<selector element="containerType" value="8"/>
      cIOTUserData [7] UserDataContainer,
      --<selector element="containerType" value="15"/>
      multiple [8] MultiPayloadContainer
   },
   --<iei format="tv" length="2">12</iei>
   pduSessionId [3] PDUSessionId2 OPTIONAL,
   --<iei format="tv" length="2">59</iei>
   oldPduSessionId [4] PDUSessionId2 OPTIONAL,
   --<iei format="tv" length="1">8</iei>
   requestType [5] RequestType OPTIONAL,
   --<iei format="tlv">22</iei>
   snssai [6] SNSSAI OPTIONAL,
   --<iei format="tlv">25</iei>
   dnn [7] DNNList OPTIONAL,
   --<iei format="tlv">24</iei>
   addlInfo [8] AdditionalInfo OPTIONAL,
   ...,
   [[ 16:
      maPduSessionInfo [9] MAPDUSessionInfo OPTIONAL,
      relAssistInd [10] ReleaseAssistInd OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ULNASTrans {
   struct {
      unsigned pduSessionIdPresent : 1;
      unsigned oldPduSessionIdPresent : 1;
      unsigned requestTypePresent : 1;
      unsigned snssaiPresent : 1;
      unsigned dnnPresent : 1;
      unsigned addlInfoPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned maPduSessionInfoPresent : 1;
      unsigned relAssistIndPresent : 1;
   } m;
   OSUINT8 spare;
   TS24501IE_PayloadContainerType containerType;
   struct  {
      union {
         /* selector element = containerType, value = 1 */
         TS24501Msg_N1SMPayloadContainer n1sm;
         /* selector element = containerType, value = 2 */
         TS24501Msg_SMSMessage sms;
         /* selector element = containerType, value = 3 */
         TS24501IE_OpaqueData lpp;
         /* selector element = containerType, value = 4 */
         TS24501IE_SORAck sor;
         /* selector element = containerType, value = 5 */
         TS24501IE_OpaqueData uePolicy;
         /* selector element = containerType, value = 6 */
         TS24501IE_UEParamUpdateAck ueParamUpdate;
         /* selector element = containerType, value = 7 */
         TS24501IE_OpaqueData locSvcs;
         /* selector element = containerType, value = 8 */
         TS24301IE_UserDataContainer cIOTUserData;
         /* selector element = containerType, value = 15 */
         TS24501IE_MultiPayloadContainer multiple;
      } u;
   } container;
   TS24501IE_PDUSessionId2 pduSessionId;
   TS24501IE_PDUSessionId2 oldPduSessionId;
   TS24501IE_RequestType requestType;
   TS24501IE_SNSSAI snssai;
   TS24501IE_DNNList dnn;
   TS24501IE_AdditionalInfo addlInfo;
   TS24501IE_MAPDUSessionInfo maPduSessionInfo;
   TS24301IE_ReleaseAssistInd relAssistInd;
} TS24501Msg_ULNASTrans;

EXTERN int NASEnc_TS24501Msg_ULNASTrans (OSCTXT* pctxt
   , TS24501Msg_ULNASTrans* pvalue);

EXTERN int NASDec_TS24501Msg_ULNASTrans (OSCTXT* pctxt
   , TS24501Msg_ULNASTrans* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ULNASTrans (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ULNASTrans* pvalue);

EXTERN TS24501Msg_ULNASTrans* asn1Test_TS24501Msg_ULNASTrans (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ULNASTrans (TS24501Msg_ULNASTrans* pvalue);

/**************************************************************/
/*                                                            */
/*  DLNASTrans                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
DLNASTrans ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   containerType [1] PayloadContainerType,
   --<inline/>
   container [2] EXPLICIT CHOICE {
      --<selector element="containerType" value="1"/>      
      n1sm [0] N1SMPayloadContainer,
      --<selector element="containerType" value="2"/>
      sms [1] SMSMessage,
      --<selector element="containerType" value="3"/>
      lpp [2] OpaqueData,
      --<selector element="containerType" value="4"/>
      sor [3] SORSteering,
      --<selector element="containerType" value="5"/>
      uePolicy [4] OpaqueData,
      --<selector element="containerType" value="6"/>
      ueParamUpdate [5] UEParamUpdate,
      --<selector element="containerType" value="7"/>
      locSvcs [6] OpaqueData,
      --<selector element="containerType" value="8"/>
      cIOTUserData [7] UserDataContainer,
      --<selector element="containerType" value="15"/>
      multiple [8] MultiPayloadContainer
   },
   --<iei format="tv" length="2">12</iei>
   pduSessionId [3] PDUSessionId2 OPTIONAL,
   --<iei format="tlv">24</iei>
   addlInfo [4] AdditionalInfo OPTIONAL,
   --<iei format="tv" length="2">58</iei>
   cause [5] MMCause OPTIONAL,
   --<iei format="tlv">37</iei>
   backoffTimer [6] GPRSTimer3 OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_DLNASTrans {
   struct {
      unsigned pduSessionIdPresent : 1;
      unsigned addlInfoPresent : 1;
      unsigned causePresent : 1;
      unsigned backoffTimerPresent : 1;
   } m;
   OSUINT8 spare;
   TS24501IE_PayloadContainerType containerType;
   struct  {
      union {
         /* selector element = containerType, value = 1 */
         TS24501Msg_N1SMPayloadContainer n1sm;
         /* selector element = containerType, value = 2 */
         TS24501Msg_SMSMessage sms;
         /* selector element = containerType, value = 3 */
         TS24501IE_OpaqueData lpp;
         /* selector element = containerType, value = 4 */
         TS24501IE_SORSteering sor;
         /* selector element = containerType, value = 5 */
         TS24501IE_OpaqueData uePolicy;
         /* selector element = containerType, value = 6 */
         TS24501IE_UEParamUpdate ueParamUpdate;
         /* selector element = containerType, value = 7 */
         TS24501IE_OpaqueData locSvcs;
         /* selector element = containerType, value = 8 */
         TS24301IE_UserDataContainer cIOTUserData;
         /* selector element = containerType, value = 15 */
         TS24501IE_MultiPayloadContainer multiple;
      } u;
   } container;
   TS24501IE_PDUSessionId2 pduSessionId;
   TS24501IE_AdditionalInfo addlInfo;
   TS24501IE_MMCause cause;
   TS24008IE_GPRSTimer3 backoffTimer;
} TS24501Msg_DLNASTrans;

EXTERN int NASEnc_TS24501Msg_DLNASTrans (OSCTXT* pctxt
   , TS24501Msg_DLNASTrans* pvalue);

EXTERN int NASDec_TS24501Msg_DLNASTrans (OSCTXT* pctxt
   , TS24501Msg_DLNASTrans* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_DLNASTrans (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_DLNASTrans* pvalue);

EXTERN TS24501Msg_DLNASTrans* asn1Test_TS24501Msg_DLNASTrans (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_DLNASTrans (TS24501Msg_DLNASTrans* pvalue);

/**************************************************************/
/*                                                            */
/*  DeregReqUEOrig                                            */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
DeregReqUEOrig ::= SEQUENCE {
   nasKeySetIdent [0] NASKeySetIdentifier, -- added in v15.1.0
   deregType [1] DeregistrationType,
   mobileId [2] EXPLICIT MobileIdentity
}
*/
typedef struct EXTERN TS24501Msg_DeregReqUEOrig {
   TS24301IE_NASKeySetIdentifier nasKeySetIdent;
   TS24501IE_DeregistrationType deregType;
   TS24501IE_MobileIdentity mobileId;
} TS24501Msg_DeregReqUEOrig;

EXTERN int NASEnc_TS24501Msg_DeregReqUEOrig (OSCTXT* pctxt
   , TS24501Msg_DeregReqUEOrig* pvalue);

EXTERN int NASDec_TS24501Msg_DeregReqUEOrig (OSCTXT* pctxt
   , TS24501Msg_DeregReqUEOrig* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_DeregReqUEOrig (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_DeregReqUEOrig* pvalue);

EXTERN TS24501Msg_DeregReqUEOrig*
    asn1Test_TS24501Msg_DeregReqUEOrig (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_DeregReqUEOrig (TS24501Msg_DeregReqUEOrig* pvalue);

/**************************************************************/
/*                                                            */
/*  DeregReqUETerm                                            */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
DeregReqUETerm ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   deregType [1] DeregistrationType,
   --<iei format="tv" length="2">58</iei>
   cause [2] MMCause OPTIONAL,
   --<iei format="tlv">5F</iei>
   t3346 [3] GPRSTimer2 OPTIONAL,
   ...,
   [[ 16:
      rejectedNSSAI [4] RejectedNSSAIList OPTIONAL,
      cagInfoList [5] CAGInfoList OPTIONAL
   ]],
   [[ 17:
      extRejectedNSSAI [6] ExtRejectedNSSAIList OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_DeregReqUETerm {
   struct {
      unsigned causePresent : 1;
      unsigned t3346Present : 1;
      unsigned _v16ExtPresent : 1;
      unsigned rejectedNSSAIPresent : 1;
      unsigned cagInfoListPresent : 1;
      unsigned _v17ExtPresent : 1;
      unsigned extRejectedNSSAIPresent : 1;
   } m;
   OSUINT8 spare;
   TS24501IE_DeregistrationType deregType;
   TS24501IE_MMCause cause;
   TS24008IE_GPRSTimer2 t3346;
   TS24501IE_RejectedNSSAIList rejectedNSSAI;
   TS24501IE_CAGInfoList cagInfoList;
   TS24501IE_ExtRejectedNSSAIList extRejectedNSSAI;
} TS24501Msg_DeregReqUETerm;

EXTERN int NASEnc_TS24501Msg_DeregReqUETerm (OSCTXT* pctxt
   , TS24501Msg_DeregReqUETerm* pvalue);

EXTERN int NASDec_TS24501Msg_DeregReqUETerm (OSCTXT* pctxt
   , TS24501Msg_DeregReqUETerm* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_DeregReqUETerm (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_DeregReqUETerm* pvalue);

EXTERN TS24501Msg_DeregReqUETerm*
    asn1Test_TS24501Msg_DeregReqUETerm (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_DeregReqUETerm (TS24501Msg_DeregReqUETerm* pvalue);

/**************************************************************/
/*                                                            */
/*  ServRequest                                               */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ServRequest ::= SEQUENCE {
   serviceType [0] ServiceType,
   nasKeySetIdent [1] NASKeySetIdentifier,
   stmsi [2] EXPLICIT MobileIdentity,
   --<iei format="tlv">40</iei>
   uplinkStat [3] UplinkDataStatus OPTIONAL,
   --<iei format="tlv">50</iei>
   sessionStat [4] PDUSessionStatus OPTIONAL,
   --<iei format="tlv">25</iei>
   allowedSessionStat [5] AllowedPDUSessionStatus OPTIONAL,
   --<iei format="tlv-e">71</iei>
   nasContainer [6] NASMessageContainer2 OPTIONAL -- added in v15.2.0
   -- iei not yet defined in 17.3.0 format="tlv">
   -- ueRequestType UERequestType OPTIONAL
   -- iei not yet defined in 17.3.0 format="tlv">
   -- pagingRestriction PagingRestriction OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_ServRequest {
   struct {
      unsigned uplinkStatPresent : 1;
      unsigned sessionStatPresent : 1;
      unsigned allowedSessionStatPresent : 1;
      unsigned nasContainerPresent : 1;
   } m;
   TS24501IE_ServiceType serviceType;
   TS24301IE_NASKeySetIdentifier nasKeySetIdent;
   TS24501IE_MobileIdentity stmsi;
   TS24501IE_UplinkDataStatus uplinkStat;
   TS24501IE_PDUSessionStatus sessionStat;
   TS24501IE_AllowedPDUSessionStatus allowedSessionStat;
   TS24501IE_NASMessageContainer2 nasContainer;
} TS24501Msg_ServRequest;

EXTERN int NASEnc_TS24501Msg_ServRequest (OSCTXT* pctxt
   , TS24501Msg_ServRequest* pvalue);

EXTERN int NASDec_TS24501Msg_ServRequest (OSCTXT* pctxt
   , TS24501Msg_ServRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ServRequest (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ServRequest* pvalue);

EXTERN TS24501Msg_ServRequest* asn1Test_TS24501Msg_ServRequest (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501Msg_ServRequest (TS24501Msg_ServRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  ServAccept                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ServAccept ::= SEQUENCE {
   --<iei format="tlv">50</iei>
   sessionStat [0] PDUSessionStatus OPTIONAL,
   --<iei format="tlv">26</iei>
   reactivateRslt [1] SessionReactivateRslt OPTIONAL,
   --<iei format="tlv-e">72</iei>
   reactivateRsltCause [2] SessionReactivateCause OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [3] EAPMessage OPTIONAL,
   ...,
   [[ 16:
      t3448 [4] GPRSTimer3 OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ServAccept {
   struct {
      unsigned sessionStatPresent : 1;
      unsigned reactivateRsltPresent : 1;
      unsigned reactivateRsltCausePresent : 1;
      unsigned eapMessagePresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned t3448Present : 1;
   } m;
   TS24501IE_PDUSessionStatus sessionStat;
   TS24501IE_SessionReactivateRslt reactivateRslt;
   TS24501IE_SessionReactivateCause reactivateRsltCause;
   TS24501IE_EAPMessage eapMessage;
   TS24008IE_GPRSTimer3 t3448;
} TS24501Msg_ServAccept;

EXTERN int NASEnc_TS24501Msg_ServAccept (OSCTXT* pctxt
   , TS24501Msg_ServAccept* pvalue);

EXTERN int NASDec_TS24501Msg_ServAccept (OSCTXT* pctxt
   , TS24501Msg_ServAccept* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ServAccept (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ServAccept* pvalue);

EXTERN TS24501Msg_ServAccept* asn1Test_TS24501Msg_ServAccept (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ServAccept (TS24501Msg_ServAccept* pvalue);

/**************************************************************/
/*                                                            */
/*  ServReject                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
ServReject ::= SEQUENCE {
   cause [0] MMCause,
   --<iei format="tlv">50</iei>
   sessionStat [1] PDUSessionStatus OPTIONAL,
   --<iei format="tlv">5F</iei>
   t3346 [2] GPRSTimer2 OPTIONAL,
   --<iei format="tlv-e">78</iei>
   eapMessage [3] EAPMessage OPTIONAL,
   ...,
   [[ 16:
      t3448 [4] GPRSTimer3 OPTIONAL,
      cagInfoList [5] CAGInfoList OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_ServReject {
   struct {
      unsigned sessionStatPresent : 1;
      unsigned t3346Present : 1;
      unsigned eapMessagePresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned t3448Present : 1;
      unsigned cagInfoListPresent : 1;
   } m;
   TS24501IE_MMCause cause;
   TS24501IE_PDUSessionStatus sessionStat;
   TS24008IE_GPRSTimer2 t3346;
   TS24501IE_EAPMessage eapMessage;
   TS24008IE_GPRSTimer3 t3448;
   TS24501IE_CAGInfoList cagInfoList;
} TS24501Msg_ServReject;

EXTERN int NASEnc_TS24501Msg_ServReject (OSCTXT* pctxt
   , TS24501Msg_ServReject* pvalue);

EXTERN int NASDec_TS24501Msg_ServReject (OSCTXT* pctxt
   , TS24501Msg_ServReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_ServReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_ServReject* pvalue);

EXTERN TS24501Msg_ServReject* asn1Test_TS24501Msg_ServReject (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_ServReject (TS24501Msg_ServReject* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgUpdateCmd                                              */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
CfgUpdateCmd ::= SEQUENCE {
   --<iei format="tv" length="1">0D</iei>
   cfgUpdIndication [0] ConfigUpdateIndication OPTIONAL,
   --<iei format="tlv-e">77</iei>
   guti [1] EXPLICIT MobileIdentity OPTIONAL,
   --<iei format="tlv">54</iei>
   taiList [2] TrackingAreaIdentList OPTIONAL,
   --<iei format="tlv">15</iei>
   allowedNSSAI [3] NSSAI OPTIONAL,
   --<iei format="tlv">27</iei>
   svcAreaList [4] TrackingAreaIdentList OPTIONAL,
   --<iei format="tlv">43</iei>
   fullNetworkName [5] NetworkName OPTIONAL,
   --<iei format="tlv">45</iei>
   shortNetworkName [6] NetworkName OPTIONAL,
   --<iei format="tv" length="2">46</iei>
   localTZ [7] TimeZone OPTIONAL,
   --<iei format="tv" length="8">47</iei>
   univAndLocalTZ [8] TimeZoneAndTime OPTIONAL,
   --<iei format="tlv">49</iei>
   dst [9] DaylightSavingTime OPTIONAL,
   --<iei format="tlv-e">79</iei>
   ladn [10] LADNList OPTIONAL,
   --<iei format="tv" length="1">0B</iei>
   micoInd [11] MICOIndication OPTIONAL,
   --<iei format="tv" length="1">9</iei>
   netSliceInd [12] NetSliceIndication OPTIONAL, -- added in v15.1.0
   --<iei format="tlv">31</iei>
   configuredNSSAI [13] NSSAI OPTIONAL,
   --<iei format="tlv">11</iei>
   rejectedNSSAI [14] RejectedNSSAIList OPTIONAL,
   --<iei format="tlv-e">76</iei>
   accessDefs [15] AccessCategoryDefinitions OPTIONAL, -- added in v15.2.0
   --<iei format="tv" length="1">F</iei>
   smsInd [16] SMSIndication OPTIONAL,
   ...,
   [[ 16:
      t3447 [17] GPRSTimer3 OPTIONAL,
      cagInfoList [18] CAGInfoList OPTIONAL,
      ueRadioCapabilityId [19] UERadioCapId OPTIONAL,
      ueRadioCapIdDeletionIndication [20] UERadioCapIdDeletionInd OPTIONAL,
      regResult [21] RegistrationResult OPTIONAL,
      truncatedConfig [22] TruncatedTMSIConfig OPTIONAL,
      additionalConfigIndication [23] AddlConfigIndication OPTIONAL
   ]],
   [[ 17:
      extRejectedNSSAI [24] ExtRejectedNSSAIList OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_CfgUpdateCmd {
   struct {
      unsigned cfgUpdIndicationPresent : 1;
      unsigned gutiPresent : 1;
      unsigned taiListPresent : 1;
      unsigned allowedNSSAIPresent : 1;
      unsigned svcAreaListPresent : 1;
      unsigned fullNetworkNamePresent : 1;
      unsigned shortNetworkNamePresent : 1;
      unsigned localTZPresent : 1;
      unsigned univAndLocalTZPresent : 1;
      unsigned dstPresent : 1;
      unsigned ladnPresent : 1;
      unsigned micoIndPresent : 1;
      unsigned netSliceIndPresent : 1;
      unsigned configuredNSSAIPresent : 1;
      unsigned rejectedNSSAIPresent : 1;
      unsigned accessDefsPresent : 1;
      unsigned smsIndPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned t3447Present : 1;
      unsigned cagInfoListPresent : 1;
      unsigned ueRadioCapabilityIdPresent : 1;
      unsigned ueRadioCapIdDeletionIndicationPresent : 1;
      unsigned regResultPresent : 1;
      unsigned truncatedConfigPresent : 1;
      unsigned additionalConfigIndicationPresent : 1;
      unsigned _v17ExtPresent : 1;
      unsigned extRejectedNSSAIPresent : 1;
   } m;
   TS24501IE_ConfigUpdateIndication cfgUpdIndication;
   TS24501IE_MobileIdentity guti;
   TS24501IE_TrackingAreaIdentList taiList;
   TS24501IE_NSSAI allowedNSSAI;
   TS24501IE_TrackingAreaIdentList svcAreaList;
   TS24008IE_NetworkName fullNetworkName;
   TS24008IE_NetworkName shortNetworkName;
   TS24008IE_TimeZone localTZ;
   TS24008IE_TimeZoneAndTime univAndLocalTZ;
   TS24008IE_DaylightSavingTime dst;
   TS24501IE_LADNList ladn;
   TS24501IE_MICOIndication micoInd;
   TS24501IE_NetSliceIndication netSliceInd;
   TS24501IE_NSSAI configuredNSSAI;
   TS24501IE_RejectedNSSAIList rejectedNSSAI;
   TS24501IE_AccessCategoryDefinitions accessDefs;
   TS24501IE_SMSIndication smsInd;
   TS24008IE_GPRSTimer3 t3447;
   TS24501IE_CAGInfoList cagInfoList;
   TS24301IE_UERadioCapId ueRadioCapabilityId;
   TS24301IE_UERadioCapIdDeletionInd ueRadioCapIdDeletionIndication;
   TS24501IE_RegistrationResult regResult;
   TS24501IE_TruncatedTMSIConfig truncatedConfig;
   TS24501IE_AddlConfigIndication additionalConfigIndication;
   TS24501IE_ExtRejectedNSSAIList extRejectedNSSAI;
} TS24501Msg_CfgUpdateCmd;

EXTERN int NASEnc_TS24501Msg_CfgUpdateCmd (OSCTXT* pctxt
   , TS24501Msg_CfgUpdateCmd* pvalue);

EXTERN int NASDec_TS24501Msg_CfgUpdateCmd (OSCTXT* pctxt
   , TS24501Msg_CfgUpdateCmd* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_CfgUpdateCmd (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_CfgUpdateCmd* pvalue);

EXTERN TS24501Msg_CfgUpdateCmd*
    asn1Test_TS24501Msg_CfgUpdateCmd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_CfgUpdateCmd (TS24501Msg_CfgUpdateCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  IdentityRequest                                           */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
IdentityRequest ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   identity [1] IdentityType
}
*/
typedef struct EXTERN TS24501Msg_IdentityRequest {
   OSUINT8 spare;
   TS24501IE_IdentityType identity;
} TS24501Msg_IdentityRequest;

EXTERN int NASEnc_TS24501Msg_IdentityRequest (OSCTXT* pctxt
   , TS24501Msg_IdentityRequest* pvalue);

EXTERN int NASDec_TS24501Msg_IdentityRequest (OSCTXT* pctxt
   , TS24501Msg_IdentityRequest* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_IdentityRequest (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_IdentityRequest* pvalue);

EXTERN TS24501Msg_IdentityRequest*
    asn1Test_TS24501Msg_IdentityRequest (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_IdentityRequest (TS24501Msg_IdentityRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  IdentityResponse                                          */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
IdentityResponse ::= SEQUENCE {
   mobileId [0] EXPLICIT MobileIdentity
}
*/
typedef struct EXTERN TS24501Msg_IdentityResponse {
   TS24501IE_MobileIdentity mobileId;
} TS24501Msg_IdentityResponse;

EXTERN int NASEnc_TS24501Msg_IdentityResponse (OSCTXT* pctxt
   , TS24501Msg_IdentityResponse* pvalue);

EXTERN int NASDec_TS24501Msg_IdentityResponse (OSCTXT* pctxt
   , TS24501Msg_IdentityResponse* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_IdentityResponse (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_IdentityResponse* pvalue);

EXTERN TS24501Msg_IdentityResponse*
    asn1Test_TS24501Msg_IdentityResponse (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_IdentityResponse (TS24501Msg_IdentityResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  Notify                                                    */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
Notify ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   access [1] AccessType
}
*/
typedef struct EXTERN TS24501Msg_Notify {
   OSUINT8 spare;
   TS24501IE_AccessType access_;
} TS24501Msg_Notify;

EXTERN int NASEnc_TS24501Msg_Notify (OSCTXT* pctxt, TS24501Msg_Notify* pvalue);

EXTERN int NASDec_TS24501Msg_Notify (OSCTXT* pctxt, TS24501Msg_Notify* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_Notify (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_Notify* pvalue);

EXTERN TS24501Msg_Notify* asn1Test_TS24501Msg_Notify (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_Notify (TS24501Msg_Notify* pvalue);

/**************************************************************/
/*                                                            */
/*  NotifyResponse                                            */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
NotifyResponse ::= SEQUENCE {
   --<iei format="tlv">50</iei>
   sessionStat [0] PDUSessionStatus OPTIONAL
}
*/
typedef struct EXTERN TS24501Msg_NotifyResponse {
   struct {
      unsigned sessionStatPresent : 1;
   } m;
   TS24501IE_PDUSessionStatus sessionStat;
} TS24501Msg_NotifyResponse;

EXTERN int NASEnc_TS24501Msg_NotifyResponse (OSCTXT* pctxt
   , TS24501Msg_NotifyResponse* pvalue);

EXTERN int NASDec_TS24501Msg_NotifyResponse (OSCTXT* pctxt
   , TS24501Msg_NotifyResponse* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_NotifyResponse (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_NotifyResponse* pvalue);

EXTERN TS24501Msg_NotifyResponse*
    asn1Test_TS24501Msg_NotifyResponse (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_NotifyResponse (TS24501Msg_NotifyResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  SecModeCmd                                                */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
SecModeCmd ::= SEQUENCE {
   nasSecAlgorithm [0] NASSecurityAlgorithm,
   spare [1] INTEGER (0..15) DEFAULT 0,
   nasKeySetIdent [2] NASKeySetIdentifier,
   replayedUECapabilities [3] UESecurityCapability,
   --<iei format="tv" length="1">0E</iei>
   imeisvReq [4] IMEISVRequest OPTIONAL,
   --<iei format="tv" length="2">57</iei>
   epsSecAlgorithm [5] NASSecurityAlgorithms OPTIONAL,
   --<iei format="tlv">36</iei>
   addlSecInfo [6] AddlSecurityInfo OPTIONAL, -- added in v15.1.0
   --<iei format="tlv-e">78</iei>
   eapMessage [7] EAPMessage OPTIONAL,
   --<iei format="tlv">38</iei>
   abba [8] ABBA OPTIONAL, -- added in v15.2.0
   --<iei format="tlv">19</iei>
   replayedS1UECapabilities [9] UESecurityCapability OPTIONAL -- added in v15.2.0
}
*/
typedef struct EXTERN TS24501Msg_SecModeCmd {
   struct {
      unsigned imeisvReqPresent : 1;
      unsigned epsSecAlgorithmPresent : 1;
      unsigned addlSecInfoPresent : 1;
      unsigned eapMessagePresent : 1;
      unsigned abbaPresent : 1;
      unsigned replayedS1UECapabilitiesPresent : 1;
   } m;
   TS24501IE_NASSecurityAlgorithm nasSecAlgorithm;
   OSUINT8 spare;
   TS24301IE_NASKeySetIdentifier nasKeySetIdent;
   TS24501IE_UESecurityCapability replayedUECapabilities;
   TS24008IE_IMEISVRequest imeisvReq;
   TS24301IE_NASSecurityAlgorithms epsSecAlgorithm;
   TS24501IE_AddlSecurityInfo addlSecInfo;
   TS24501IE_EAPMessage eapMessage;
   TS24501IE_ABBA abba;
   TS24501IE_UESecurityCapability replayedS1UECapabilities;
} TS24501Msg_SecModeCmd;

EXTERN int NASEnc_TS24501Msg_SecModeCmd (OSCTXT* pctxt
   , TS24501Msg_SecModeCmd* pvalue);

EXTERN int NASDec_TS24501Msg_SecModeCmd (OSCTXT* pctxt
   , TS24501Msg_SecModeCmd* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SecModeCmd (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SecModeCmd* pvalue);

EXTERN TS24501Msg_SecModeCmd* asn1Test_TS24501Msg_SecModeCmd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_SecModeCmd (TS24501Msg_SecModeCmd* pvalue);

/**************************************************************/
/*                                                            */
/*  SecModeDone                                               */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
SecModeDone ::= SEQUENCE {
   --<iei format="tlv-e">77</iei>
   imeisv [0] EXPLICIT MobileIdentity OPTIONAL,
   --<iei format="tlv-e">71</iei>
   nasMsgContainer [1] NASMessageContainer2 OPTIONAL,
   ...,
   [[ 16:
      nonImeisvPei [2] EXPLICIT MobileIdentity OPTIONAL
   ]]
}
*/
typedef struct EXTERN TS24501Msg_SecModeDone {
   struct {
      unsigned imeisvPresent : 1;
      unsigned nasMsgContainerPresent : 1;
      unsigned _v16ExtPresent : 1;
      unsigned nonImeisvPeiPresent : 1;
   } m;
   TS24501IE_MobileIdentity imeisv;
   TS24501IE_NASMessageContainer2 nasMsgContainer;
   TS24501IE_MobileIdentity nonImeisvPei;
} TS24501Msg_SecModeDone;

EXTERN int NASEnc_TS24501Msg_SecModeDone (OSCTXT* pctxt
   , TS24501Msg_SecModeDone* pvalue);

EXTERN int NASDec_TS24501Msg_SecModeDone (OSCTXT* pctxt
   , TS24501Msg_SecModeDone* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SecModeDone (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SecModeDone* pvalue);

EXTERN TS24501Msg_SecModeDone* asn1Test_TS24501Msg_SecModeDone (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501Msg_SecModeDone (TS24501Msg_SecModeDone* pvalue);

/**************************************************************/
/*                                                            */
/*  SecModeReject                                             */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
SecModeReject ::= SEQUENCE {
   cause [0] MMCause
}
*/
typedef struct EXTERN TS24501Msg_SecModeReject {
   TS24501IE_MMCause cause;
} TS24501Msg_SecModeReject;

EXTERN int NASEnc_TS24501Msg_SecModeReject (OSCTXT* pctxt
   , TS24501Msg_SecModeReject* pvalue);

EXTERN int NASDec_TS24501Msg_SecModeReject (OSCTXT* pctxt
   , TS24501Msg_SecModeReject* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_SecModeReject (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_SecModeReject* pvalue);

EXTERN TS24501Msg_SecModeReject*
    asn1Test_TS24501Msg_SecModeReject (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MMStatus                                                  */
/*                                                            */
/**************************************************************/
/*
<is3GMessage/>
MMStatus ::= SEQUENCE {
   cause [0] MMCause
}
*/
typedef struct EXTERN TS24501Msg_MMStatus {
   TS24501IE_MMCause cause;
} TS24501Msg_MMStatus;

EXTERN int NASEnc_TS24501Msg_MMStatus (OSCTXT* pctxt
   , TS24501Msg_MMStatus* pvalue);

EXTERN int NASDec_TS24501Msg_MMStatus (OSCTXT* pctxt
   , TS24501Msg_MMStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_MMStatus (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_MMStatus* pvalue);

EXTERN TS24501Msg_MMStatus* asn1Test_TS24501Msg_MMStatus (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDU                                                       */
/*                                                            */
/**************************************************************/
/*
PDU ::= SEQUENCE {
   --<cEncSrcFname>TS24501MsgEnc_PDU_secHdr.c</cEncSrcFname>
   --<cDecSrcFname>TS24501MsgDec_PDU_secHdr.c</cDecSrcFname>
   secHdr [0] NAS5GSecProtMsgHdr OPTIONAL,
   protoDiscr [1] NAS5G-PROTOCOL-CLASS.&protoDiscr ({TS24501-IE-OBJECTSET}),
   --<inline/>
   hdrData [2] EXPLICIT CHOICE {
      --<selector element="protoDiscr" value="126"/>
      mm [0] SEQUENCE {
         spare1 [0] INTEGER (0..15) DEFAULT 0,
         secHdrType [1] NAS5GSecHdrType
      },
      --<selector element="protoDiscr" value="46"/>
      sm [1] SEQUENCE {
         pduSessIdent [0] PDUSessionIdentity,
         procTransIdent [1] INTEGER (0..255)
      }
   },
   msgType [3] NAS5G-PROTOCOL-CLASS.&msgType ({TS24501-IE-OBJECTSET}) (0..255),
   data [4] EXPLICIT NAS5G-PROTOCOL-CLASS.&Value ({TS24501-IE-OBJECTSET}{@protoDiscr,@msgType}),
   --<cEncSrcFname>TS24501MsgEnc_PDU_eom.c</cEncSrcFname>   
   --<cDecSrcFname>TS24301MsgDec_PDU_eom.c</cDecSrcFname>   
   eom [5] NULL
}
*/
typedef struct EXTERN TS24501Msg_PDU {
   struct {
      unsigned secHdrPresent : 1;
   } m;
   TS24501Msg_NAS5GSecProtMsgHdr secHdr;
   TS24501Msg_NAS5GProtoDiscr protoDiscr;
   struct  {
      union {
         /* selector element = protoDiscr, value = 126 */
         struct EXTERN  {
            OSUINT8 spare1;
            TS24501Msg_NAS5GSecHdrType secHdrType;
         } mm;
         /* selector element = protoDiscr, value = 46 */
         struct EXTERN  {
            TS24501Msg_PDUSessionIdentity pduSessIdent;
            OSUINT8 procTransIdent;
         } sm;
      } u;
   } hdrData;
   OSUINT8 msgType;
   struct  {
      /**
       * information object selector
       */
      TS24501_IE_OBJECTSET_TVALUE t;

      /**
       * TS24501-IE-OBJECTSET information objects
       */
      union {
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-AuthRequest5G
          */
         TS24501Msg_AuthRequest *obj_MMAuthRequest5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-AuthResponse5G
          */
         TS24501Msg_AuthResponse *obj_MMAuthResponse5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-AuthResult5G
          */
         TS24501Msg_AuthResult *obj_MMAuthResult5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-AuthFailure5G
          */
         TS24501Msg_AuthFailure *obj_MMAuthFailure5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-AuthReject5G
          */
         TS24501Msg_AuthReject *obj_MMAuthReject5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-RegRequest5G
          */
         TS24501Msg_RegRequest *obj_RegRequest5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-RegAccept5G
          */
         TS24501Msg_RegAccept *obj_RegAccept5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-RegComplete5G
          */
         TS24501Msg_RegComplete *obj_RegComplete5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-RegReject5G
          */
         TS24501Msg_RegReject *obj_RegReject5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-ULNASTrans5G
          */
         TS24501Msg_ULNASTrans *obj_ULNASTrans5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-DLNASTrans5G
          */
         TS24501Msg_DLNASTrans *obj_DLNASTrans5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-DeregReqUEOrig5G
          */
         TS24501Msg_DeregReqUEOrig *obj_DeregReqUEOrig5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-DeregAcceptUEOrig5G
          */
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-DeregReqUETerm5G
          */
         TS24501Msg_DeregReqUETerm *obj_DeregReqUETerm5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-DeregAcceptUETerm5G
          */
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-ServRequest5G
          */
         TS24501Msg_ServRequest *obj_ServRequest5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-ServAccept5G
          */
         TS24501Msg_ServAccept *obj_ServAccept5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-ServReject5G
          */
         TS24501Msg_ServReject *obj_ServReject5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-CfgUpdateCmd5G
          */
         TS24501Msg_CfgUpdateCmd *obj_CfgUpdateCmd5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-CfgUpdateDone5G
          */
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-IdentityRequest5G
          */
         TS24501Msg_IdentityRequest *obj_IdentityRequest5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-IdentityResponse5G
          */
         TS24501Msg_IdentityResponse *obj_IdentityResponse5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-Notify5G
          */
         TS24501Msg_Notify *obj_Notify5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-NotifyResponse5G
          */
         TS24501Msg_NotifyResponse *obj_NotifyResponse5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-SecModeCmd5G
          */
         TS24501Msg_SecModeCmd *obj_SecModeCmd5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-SecModeDone5G
          */
         TS24501Msg_SecModeDone *obj_SecModeDone5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-SecModeReject5G
          */
         TS24501Msg_SecModeReject *obj_SecModeReject5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-MMStatus5G
          */
         TS24501Msg_MMStatus *obj_MMStatus5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-EstablishRequest5G
          */
         TS24501Msg_EstablishRequest *obj_EstablishRequest5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-EstablishAccept5G
          */
         TS24501Msg_EstablishAccept *obj_EstablishAccept5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-EstablishReject5G
          */
         TS24501Msg_EstablishReject *obj_EstablishReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-AuthCmd5G
          */
         TS24501Msg_SMAuthCmd *obj_SMAuthCmd5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-AuthDone5G
          */
         TS24501Msg_SMAuthDone *obj_SMAuthDone5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-AuthResult5G
          */
         TS24501Msg_SMAuthResult *obj_SMAuthResult5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyRequest5G
          */
         TS24501Msg_ModifyRequest *obj_ModifyRequest5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyReject5G
          */
         TS24501Msg_ModifyReject *obj_ModifyReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyCmd5G
          */
         TS24501Msg_ModifyCmd *obj_ModifyCmd5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyDone5G
          */
         TS24501Msg_ModifyDone *obj_ModifyDone5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ModifyCmdReject5G
          */
         TS24501Msg_ModifyCmdReject *obj_ModifyCmdReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseRequest5G
          */
         TS24501Msg_ReleaseRequest *obj_ReleaseRequest5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseReject5G
          */
         TS24501Msg_ReleaseReject *obj_ReleaseReject5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseCmd5G
          */
         TS24501Msg_ReleaseCmd *obj_ReleaseCmd5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-ReleaseDone5G
          */
         TS24501Msg_ReleaseDone *obj_ReleaseDone5G;
         /**
          * protoDiscr: sessMgmt5G
          * msgType: st-SMStatus5G
          */
         TS24501Msg_SMStatus *obj_SMStatus5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-ControlPlaneServReq5G
          */
         TS24501Msg_ControlPlaneServReq *obj_ControlPlaneServReq5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-NetSliceAuthCmd5G
          */
         TS24501Msg_NetSliceAuthCmd *obj_NetSliceAuthCmd5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-NetSliceAuthDone5G
          */
         TS24501Msg_NetSliceAuthDone *obj_NetSliceAuthDone5G;
         /**
          * protoDiscr: mobMgmt5G
          * msgType: mt-NetSliceAuthResult5G
          */
         TS24501Msg_NetSliceAuthResult *obj_NetSliceAuthResult5G;
      } u;
   } data;
} TS24501Msg_PDU;

EXTERN int NASEnc_TS24501Msg_PDU (OSCTXT* pctxt, TS24501Msg_PDU* pvalue);

EXTERN int NASDec_TS24501Msg_PDU (OSCTXT* pctxt, TS24501Msg_PDU* pvalue);

EXTERN int asn1PrtToStrm_TS24501Msg_PDU (OSCTXT *pctxt, 
   const char* name, const TS24501Msg_PDU* pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_MMAuthRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_AuthRequest *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_MMAuthResponse5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_AuthResponse *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_MMAuthResult5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_AuthResult *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_MMAuthFailure5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_AuthFailure *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_MMAuthReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_AuthReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_RegRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_RegRequest *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_RegAccept5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_RegAccept *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_RegComplete5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_RegComplete *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_RegReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_RegReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ULNASTrans5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ULNASTrans *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_DLNASTrans5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_DLNASTrans *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_DeregReqUEOrig5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_DeregReqUEOrig *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_DeregAcceptUEOrig5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_DeregReqUETerm5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_DeregReqUETerm *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_DeregAcceptUETerm5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ServRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ServRequest *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ServAccept5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ServAccept *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ServReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ServReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_CfgUpdateCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_CfgUpdateCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_CfgUpdateDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_IdentityRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_IdentityRequest *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_IdentityResponse5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_IdentityResponse *pvalue)
   ;

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_Notify5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_Notify *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_NotifyResponse5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_NotifyResponse *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_SecModeCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_SecModeCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_SecModeDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_SecModeDone *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_SecModeReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_SecModeReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_MMStatus5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_MMStatus *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_EstablishRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_EstablishRequest *pvalue)
   ;

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_EstablishAccept5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_EstablishAccept *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_EstablishReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_EstablishReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_SMAuthCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_SMAuthCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_SMAuthDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_SMAuthDone *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_SMAuthResult5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_SMAuthResult *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ModifyRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ModifyRequest *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ModifyReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ModifyReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ModifyCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ModifyCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ModifyDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ModifyDone *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ModifyCmdReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ModifyCmdReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ReleaseRequest5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ReleaseRequest *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ReleaseReject5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ReleaseReject *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ReleaseCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ReleaseCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ReleaseDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ReleaseDone *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_SMStatus5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_SMStatus *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_ControlPlaneServReq5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_ControlPlaneServReq 
   *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_NetSliceAuthCmd5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_NetSliceAuthCmd *pvalue);

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_NetSliceAuthDone5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_NetSliceAuthDone *pvalue)
   ;

EXTERN void asn1SetTC_TS24501Msg_PDU_obj_NetSliceAuthResult5G
   (OSCTXT* pctxt, TS24501Msg_PDU* pElem, TS24501Msg_NetSliceAuthResult *pvalue
   );

EXTERN TS24501Msg_PDU* asn1Test_TS24501Msg_PDU (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501Msg_PDU (TS24501Msg_PDU* pvalue);

/* Value definitions */

#define ASN1V_ts24501Msg_mt_AuthRequest5G 86
#define ASN1V_ts24501Msg_mt_AuthResponse5G 87
#define ASN1V_ts24501Msg_mt_AuthResult5G 90
#define ASN1V_ts24501Msg_mt_AuthFailure5G 89
#define ASN1V_ts24501Msg_mt_AuthReject5G 88
#define ASN1V_ts24501Msg_mt_RegRequest5G 65
#define ASN1V_ts24501Msg_mt_RegAccept5G 66
#define ASN1V_ts24501Msg_mt_RegComplete5G 67
#define ASN1V_ts24501Msg_mt_RegReject5G 68
#define ASN1V_ts24501Msg_mt_ULNASTrans5G 103
#define ASN1V_ts24501Msg_mt_DLNASTrans5G 104
#define ASN1V_ts24501Msg_mt_DeregReqUEOrig5G 69
#define ASN1V_ts24501Msg_mt_DeregAcceptUEOrig5G 70
#define ASN1V_ts24501Msg_mt_DeregReqUETerm5G 71
#define ASN1V_ts24501Msg_mt_DeregAcceptUETerm5G 72
#define ASN1V_ts24501Msg_mt_ServRequest5G 76
#define ASN1V_ts24501Msg_mt_ServAccept5G 78
#define ASN1V_ts24501Msg_mt_ServReject5G 77
#define ASN1V_ts24501Msg_mt_CfgUpdateCmd5G 84
#define ASN1V_ts24501Msg_mt_CfgUpdateDone5G 85
#define ASN1V_ts24501Msg_mt_IdentityRequest5G 91
#define ASN1V_ts24501Msg_mt_IdentityResponse5G 92
#define ASN1V_ts24501Msg_mt_Notify5G 101
#define ASN1V_ts24501Msg_mt_NotifyResponse5G 102
#define ASN1V_ts24501Msg_mt_SecModeCmd5G 93
#define ASN1V_ts24501Msg_mt_SecModeDone5G 94
#define ASN1V_ts24501Msg_mt_SecModeReject5G 95
#define ASN1V_ts24501Msg_mt_MMStatus5G 100
#define ASN1V_ts24501Msg_mt_ControlPlaneServReq5G 79
#define ASN1V_ts24501Msg_mt_NetSliceAuthCmd5G 80
#define ASN1V_ts24501Msg_mt_NetSliceAuthDone5G 81
#define ASN1V_ts24501Msg_mt_NetSliceAuthResult5G 82
#define ASN1V_ts24501Msg_st_EstablishRequest5G 193
#define ASN1V_ts24501Msg_st_EstablishAccept5G 194
#define ASN1V_ts24501Msg_st_EstablishReject5G 195
#define ASN1V_ts24501Msg_st_AuthCmd5G 197
#define ASN1V_ts24501Msg_st_AuthDone5G 198
#define ASN1V_ts24501Msg_st_AuthResult5G 199
#define ASN1V_ts24501Msg_st_ModifyRequest5G 201
#define ASN1V_ts24501Msg_st_ModifyReject5G 202
#define ASN1V_ts24501Msg_st_ModifyCmd5G 203
#define ASN1V_ts24501Msg_st_ModifyDone5G 204
#define ASN1V_ts24501Msg_st_ModifyCmdReject5G 205
#define ASN1V_ts24501Msg_st_ReleaseRequest5G 209
#define ASN1V_ts24501Msg_st_ReleaseReject5G 210
#define ASN1V_ts24501Msg_st_ReleaseCmd5G 211
#define ASN1V_ts24501Msg_st_ReleaseDone5G 212
#define ASN1V_ts24501Msg_st_SMStatus5G 214

#ifdef __cplusplus
}
#endif

#endif
