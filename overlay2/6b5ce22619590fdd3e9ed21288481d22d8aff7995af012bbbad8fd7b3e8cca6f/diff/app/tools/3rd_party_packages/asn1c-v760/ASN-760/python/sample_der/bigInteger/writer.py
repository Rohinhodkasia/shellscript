#
# This file was generated by the Objective Systems ASN1C Compiler
# (https://obj-sys.com).  Version: 7.4.A, Date: 14-Nov-2019.
#


import argparse
import traceback
from osyspyrt.asn1ber import Asn1BerEncodeBuffer
from osyspyrt.util import hexdump
from BigInt import *


class Writer:
    @staticmethod
    def main(filename, trace):
        try:
            encbuf = Asn1BerEncodeBuffer()

            dssparms = Dss_Parms()
            dssparms.p = 88962710306127702866241727433142015
            dssparms.q = -1234567890123456789012345678901234567890
            dssparms.g = 1234567890123456789012345678901234567890

            if trace:
                print("The following record will be encoded:")
                dssparms.print_value("dssparms", 0)

            # Encode data and write to file
            dssparms.ber_encode(encbuf)
            f = open(filename, 'wb')
            f.write(encbuf.buffer())
            f.close()

            if trace:
                print(encbuf.bin_dump())

            # write hex dump of encoded data to a file
            f = open('message.hex', 'w')
            f.write(hexdump(encbuf.buffer()))
            f.close()

        except Exception:
            print(traceback.format_exc())


if __name__ == '__main__':
    myfilename = "message.dat"
    mytrace = True

    # Process command line arguments
    parser = argparse.ArgumentParser()

    parser.add_argument('--notrace',
                        action='store_true',
                        help='Do not display trace info')

    parser.add_argument('-o', metavar='<filename>',
                        help='Write encoded msg to <filename>')

    args = parser.parse_args()

    if args.notrace:
        mytrace = False
    if args.o:
        myfilename = args.o

    Writer.main(myfilename, mytrace)
