/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.A, Date: 24-Jul-2020.
 */
#include "CSTA-ROSE-PDU-types.h"
#include "rtxsrc/rtxCommon.h"

int main (int argc, char** argv)
{
   const char* filename = "message.txt";
   int         stat, i;
   OSBOOL      trace = TRUE, verbose = FALSE;

   // Process command line arguments
   if (argc > 1) {
      for (i = 1; i < argc; i++) {
         if (!strcmp (argv[i], "-v")) verbose = TRUE;
         else if (!strcmp (argv[i], "-o")) filename = argv[++i];
         else if (!strcmp (argv[i], "-notrace")) trace = FALSE;
         else {
            printf ("usage: writer [ -v ] [ -o <filename>] \n");
            printf ("   -v  verbose mode: print debug info\n");
            printf ("   -o <filename>  write encoded msg to <filename>\n");
            printf ("   -notrace  do not display trace info\n");
            return 1;
         }
      }
   }

   // Create an instance of the compiler generated class.
   // This example uses a dynamic message buffer..
   ASN1AVNEncodeBuffer encodeBuffer (0, 0);
   encodeBuffer.setDiag (verbose);

   ASN1T_CSTA_ROSE_PDU pdu;
   ASN1C_CSTA_ROSE_PDU CSTA_ROSE_PDUPDU (encodeBuffer, pdu);

   // populate message variables with test data
   ASN1T_MakeCallArgument makeCallArgument;
   makeCallArgument.callingDevice.t = T_DeviceID_dialingNumber;
   makeCallArgument.callingDevice.u.dialingNumber = "555-1212";
   makeCallArgument.calledDirectoryNumber.t = T_CalledDeviceID_notRequired;

   ASN1T_CSTA_ROSE_PDU_invoke invoke;
   invoke.m.argumentPresent = 1;
   invoke.invokeId.t = T_InvokeId_present;
   invoke.invokeId.u.present = 1;
   invoke.opcode.t = T_Code_local;
   invoke.opcode.u.local = 10;
   invoke.argument.t = OperationSet::T_makeCall;
   invoke.argument.u.makeCall = &makeCallArgument;

   pdu.t = T_CSTA_ROSE_PDU_invoke;
   pdu.u.invoke = &invoke;

   // Encode
   if ((stat = CSTA_ROSE_PDUPDU.Encode()) == 0) {
      // Write the encoded message out to the output file
      if (encodeBuffer.write (filename) < 0) {
         printf ("Error writing ASN.1 Value Notation document to file '%s'\n", filename);
         return -1;
      }
      
      encodeBuffer.nullTerminate();
      if (trace) {
         printf ("encoded AVN message:\n");
         printf ((const char*)encodeBuffer.getMsgPtr());
         printf ("\n");
      }
   }
   else {
      printf ("Encoding failed\n");
      encodeBuffer.printErrorInfo ();
      return (-1);
   }

   return 0;
}
