#
# This file was generated by the Objective Systems ASN1C Compiler
# (https://obj-sys.com).  Version: 7.4.A, Date: 24-Dec-2019.
#


import argparse
import os
import sys
import traceback
from osyspyrt.asn1json import Asn1JsonDecodeBuffer
from osyspyrt.asn1ber import Asn1BerDecodeBuffer, Asn1BerEncodeBuffer
from osyspyrt.util import hexdump
from TAP_0310 import *


class Writer:
    @staticmethod
    def main(in_filename, out_filename, trace):
        try:

            dataInterChange = DataInterChange()

            f = open(in_filename, 'r')
            decbuf = Asn1JsonDecodeBuffer(f)
            dataInterChange.json_decode(decbuf)
            f.close()

            if trace:
                print("The following record will be encoded:")
                dataInterChange.print_value("dataInterChange", 0)

            # Encode data and write to file
            f = open(out_filename, 'wb')
            encbuf = Asn1BerEncodeBuffer()
            dataInterChange.ber_encode(encbuf)
            f.write(encbuf.buffer())
            f.close()

            # Write hex dump to file
            hexfile = os.path.splitext(out_filename)[0] + '.hex'
            f = open(hexfile, 'w')
            f.write(hexdump(encbuf.buffer()))
            f.close()

            if trace:
                decbuf = Asn1BerDecodeBuffer.from_file(out_filename)
                print(decbuf.bin_dump())

        except Exception:
            print(traceback.format_exc())
            sys.exit(-1)


if __name__ == '__main__':
    my_in_filename = "message.json"
    my_out_filename = "message.dat"
    mytrace = True

    # Process command line arguments
    parser = argparse.ArgumentParser()

    parser.add_argument('--notrace',
                        action='store_true',
                        help='Do not display trace info')

    parser.add_argument('-o', metavar='<filename>',
                        help='Write encoded msg to <out_filename>')

    args = parser.parse_args()

    if args.notrace:
        mytrace = False
    if args.o:
        my_out_filename = args.o

    Writer.main(my_in_filename, my_out_filename, mytrace)
