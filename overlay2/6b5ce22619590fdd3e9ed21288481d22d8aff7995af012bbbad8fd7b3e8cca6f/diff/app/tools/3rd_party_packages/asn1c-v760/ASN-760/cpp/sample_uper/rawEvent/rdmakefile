# makefile to build generated files

include ../../platform.mk

# include directories
OSROOTDIR = ..$(PS)..$(PS)..
LIBDIR  = $(OSROOTDIR)$(PS)cpp$(RTDIRSFX)$(PS)lib
RTSRCDIR = $(OSROOTDIR)$(PS)rtsrc
PERSRCDIR = $(OSROOTDIR)$(PS)rtpersrc
SRCDIR = .
HFILESDIR = .
HFILES = $(RTSRCDIR)$(PS)asn1type.h $(RTSRCDIR)$(PS)asn1CppTypes.h  \
$(PERSRCDIR)$(PS)asn1per.h $(PERSRCDIR)$(PS)asn1PerCppTypes.h 
# compiler defs
CFLAGS = -c $(CVARS_) $(CFLAGS_) $(CBLDTYPE_)
CCFLAGS = -c $(CVARS_) $(CCFLAGS_) $(CBLDTYPE_)
IPATHS = -I$(SRCDIR) -I$(OSROOTDIR) -I$(RTSRCDIR) -I$(PERSRCDIR) $(IPATHS_)
LINKOPT = $(LINKOPT_)

# run-time libraries
LIBS = $(LIBDIR)/$(LIBPFX)asn1per$(A) $(LIBDIR)/$(LIBPFX)asn1rt$(A)
LLIBS = $(LLPFX)asn1per$(LLAEXT) $(LLPFX)asn1rt$(LLAEXT) $(LLSYS)
LPATHS = $(LPPFX)$(LIBDIR)

OBJECTS =  \
rd$(OBJ)

ENCOBJECTS = 

DECOBJECTS = 

all : $(OBJECTS) $(ENCOBJECTS) $(DECOBJECTS) reader$(EXE)

READEROBJ = reader$(OBJ) $(OBJECTS) $(DECOBJECTS) $(ENCOBJECTS)

reader$(EXE) : $(READEROBJ) $(LIBS)
	$(LINK) $(READEROBJ) $(LINKOPT) $(LPATHS) $(LLIBS)

RWHFILES = $(HFILESDIR)$(PS)rtkey.h $(HFILESDIR)$(PS)rd.h $(HFILES)

reader$(OBJ) : $(SRCDIR)$(PS)reader.cpp $(RWHFILES)
	$(CCC) -c $(CCFLAGS) $(IPATHS) $(SRCDIR)$(PS)reader.cpp

# .cpp -> .obj rules
# common file rules
rd$(OBJ) : $(SRCDIR)$(PS)rd.cpp \
$(HFILESDIR)$(PS)rtkey.h $(HFILESDIR)$(PS)rd.h $(HFILES)
	$(CCC) $(CCFLAGS) -c $(IPATHS) $(SRCDIR)$(PS)rd.cpp

# .asn -> .cpp .h rules
$(SRCDIR)/rd.cpp \
$(HFILESDIR)$(PS)rtkey.h \
$(HFILESDIR)$(PS)rd.h \
: ./test.asn $(OSROOTDIR)$(PS)bin$(PS)asn1c$(EXE)
	$(OSROOTDIR)$(PS)bin$(PS)asn1c ./test.asn -cpp -per -table-unions -raw-events -noencode -print -cfile rd.cpp -hfile rd.h -pdu PDU
	
clean:
	$(RM) rd.cpp
	$(RM) $(HFILESDIR)$(PS)rtkey.h 
	$(RM) $(HFILESDIR)$(PS)rd.h 
	$(RM) *$(OBJ)
	$(RM) *~
