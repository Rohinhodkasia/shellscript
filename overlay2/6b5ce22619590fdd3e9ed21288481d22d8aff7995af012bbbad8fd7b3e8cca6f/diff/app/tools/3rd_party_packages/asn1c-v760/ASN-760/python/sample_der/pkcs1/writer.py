#
# This file was generated by the Objective Systems ASN1C Compiler
# (https://obj-sys.com).  Version: 7.4.A, Date: 17-Oct-2019.
#
import sys
sys.path.append('../..')

import argparse
import traceback
from osyspyrt.asn1ber import Asn1BerEncodeBuffer
from osyspyrt.asn1univtype import Asn1BitString, null_value
from sample_der.pkcs1.PKCS_1 import *


class Writer:
    @staticmethod
    def main(filename, trace):
        digest = bytes([
            0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 
            0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff, 
            0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 
            0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff])

        try:
            encbuf = Asn1BerEncodeBuffer()
            digestInfo = DigestInfo()

            # populate digestInfo with test data
            digestInfo.digestAlgorithm = DigestAlgorithm()
            digestInfo.digestAlgorithm.algorithm = id_sha256
            digestInfo.digestAlgorithm.parameters = null_value
            digestInfo.digest = digest

            if trace:
                print("The following record will be encoded:")
                digestInfo.print_value("digestInfo", 0)

            # Encode data and write to file
            digestInfo.ber_encode(encbuf)
            f = open(filename, 'wb')
            f.write(encbuf.buffer())
            f.close()

            if trace:
                print(encbuf.bin_dump())

        except Exception:
            print(traceback.format_exc())


if __name__ == '__main__':
    myfilename = "message.dat"
    mytrace = True

    # Process command line arguments
    parser = argparse.ArgumentParser()

    parser.add_argument('--notrace',
                        action='store_true',
                        help='Do not display trace info')

    parser.add_argument('-o', metavar='<filename>',
                        help='Write encoded msg to <filename>')

    args = parser.parse_args()

    if args.notrace:
        mytrace = False
    if args.o:
        myfilename = args.o

    Writer.main(myfilename, mytrace)
