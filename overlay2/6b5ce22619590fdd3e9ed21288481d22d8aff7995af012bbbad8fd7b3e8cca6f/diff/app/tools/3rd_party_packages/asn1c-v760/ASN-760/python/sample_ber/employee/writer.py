#
# This file was generated by the Objective Systems ASN1C Compiler
# (https://obj-sys.com).  Version: 7.4.A, Date: 15-Nov-2019.
#


import argparse
import os
import traceback
from osyspyrt.asn1ber import Asn1BerEncodeBuffer
from osyspyrt.util import hexdump
from Employee import *


class Writer:
    @staticmethod
    def main(filename, trace):
        try:
            encbuf = Asn1BerEncodeBuffer()

            jSmithPR = PersonnelRecord()

            # populate jSmithPR with test data
            jSmithName = Name()
            jSmithName.givenName = 'John'
            jSmithName.initial = 'P'
            jSmithName.familyName = 'Smith'

            # populate a ChildInformation record
            jSmithChild = ChildInformation()
            jSmithChild.name = Name()
            jSmithChild.name.givenName = 'Ralph'
            jSmithChild.name.initial = 'T'
            jSmithChild.name.familyName = 'Smith'
            jSmithChild.dateOfBirth = '19571111'

            # populate PersonnelRecord
            jSmithPR = PersonnelRecord()
            jSmithPR.name = jSmithName
            jSmithPR.number = 51
            jSmithPR.title = "Director"
            jSmithPR.dateOfHire = "19710917"
            jSmithPR.nameOfSpouse = Name()
            jSmithPR.nameOfSpouse.givenName = "Mary"
            jSmithPR.nameOfSpouse.initial = "T"
            jSmithPR.nameOfSpouse.familyName = "Smith"
            jSmithPR.children = []
            jSmithPR.children.append(jSmithChild)
            jSmithPR.children.append(ChildInformation())
            jSmithPR.children[1].name = Name()
            jSmithPR.children[1].name.givenName = "Susan"
            jSmithPR.children[1].name.initial = "B"
            jSmithPR.children[1].name.familyName = "Jones"
            jSmithPR.children[1].dateOfBirth = "19590717"

            if trace:
                print("The following record will be encoded:")
                jSmithPR.print_value("jSmithPR", 0)

            # Encode data and write to file
            jSmithPR.ber_encode(encbuf)
            f = open(filename, 'wb')
            f.write(encbuf.buffer())
            f.close()

            # Write hex dump to file
            hexfile = os.path.splitext(filename)[0] + '.hex'
            f = open(hexfile, 'w')
            f.write(hexdump(encbuf.buffer()))
            f.close()

            if trace:
                print(encbuf.bin_dump())

        except Exception:
            print(traceback.format_exc())


if __name__ == '__main__':
    myfilename = "message.dat"
    mytrace = True

    # Process command line arguments
    parser = argparse.ArgumentParser()

    parser.add_argument('--notrace',
                        action='store_true',
                        help='Do not display trace info')

    parser.add_argument('-o', metavar='<filename>',
                        help='Write encoded msg to <filename>')

    args = parser.parse_args()

    if args.notrace:
        mytrace = False
    if args.o:
        myfilename = args.o

    Writer.main(myfilename, mytrace)
