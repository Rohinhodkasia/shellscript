/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.6.0, Date: 15-Feb-2022.
 */
#ifndef TS24501IES_H
#define TS24501IES_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtxsrc/rtxCommon.h"
#include "rtsrc/asn1type.h"

#include "TS24008IES.h"
#include "TS24301IES.h"

/**
 * Header file for ASN.1 module TS24501IES
 */
/**************************************************************/
/*                                                            */
/*  AdditionalInfo                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.2.1 - Additional information 
AdditionalInfo ::= OCTET STRING
*/
typedef OSDynOctStr TS24501IE_AdditionalInfo;

EXTERN int NASEnc_TS24501IE_AdditionalInfo (OSCTXT* pctxt
   , TS24501IE_AdditionalInfo value);

EXTERN int NASDec_TS24501IE_AdditionalInfo (OSCTXT* pctxt
   , TS24501IE_AdditionalInfo* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AdditionalInfo (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AdditionalInfo* pvalue);

EXTERN TS24501IE_AdditionalInfo*
    asn1Test_TS24501IE_AdditionalInfo (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AdditionalInfo (TS24501IE_AdditionalInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  EAPFormatCode                                             */
/*                                                            */
/**************************************************************/
/*
EAPFormatCode ::= ENUMERATED { request(1), response(2), success(3), failure(4), codeMax(255) }
*/
typedef enum {
   TS24501IE_EAPFormatCode_request = 1,
   TS24501IE_EAPFormatCode_response = 2,
   TS24501IE_EAPFormatCode_success = 3,
   TS24501IE_EAPFormatCode_failure = 4,
   TS24501IE_EAPFormatCode_codeMax = 255
} TS24501IE_EAPFormatCode;

EXTERN int NASEnc_TS24501IE_EAPFormatCode (OSCTXT* pctxt
   , TS24501IE_EAPFormatCode value);

EXTERN int NASDec_TS24501IE_EAPFormatCode (OSCTXT* pctxt
   , TS24501IE_EAPFormatCode* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EAPFormatCode (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EAPFormatCode* pvalue);

EXTERN extern const OSEnumItem TS24501IE_EAPFormatCode_ENUMTAB[];
#define TS24501IE_EAPFormatCode_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24501IE_EAPFormatCode_ToString (OSINT32 value);

EXTERN int TS24501IE_EAPFormatCode_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_EAPFormatCode* pvalue);

EXTERN int TS24501IE_EAPFormatCode_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_EAPFormatCode* pvalue);

EXTERN TS24501IE_EAPFormatCode*
    asn1Test_TS24501IE_EAPFormatCode (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  N1ToS1NASContainer                                        */
/*                                                            */
/**************************************************************/
/*
 9.11.2.7 - N1 mode to S1 mode NAS transparent container 
N1ToS1NASContainer ::= INTEGER (1..255)
*/
typedef OSUINT8 TS24501IE_N1ToS1NASContainer;

EXTERN int NASEnc_TS24501IE_N1ToS1NASContainer (OSCTXT* pctxt
   , TS24501IE_N1ToS1NASContainer value);

EXTERN int NASDec_TS24501IE_N1ToS1NASContainer (OSCTXT* pctxt
   , TS24501IE_N1ToS1NASContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_N1ToS1NASContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_N1ToS1NASContainer* pvalue);

EXTERN TS24501IE_N1ToS1NASContainer*
    asn1Test_TS24501IE_N1ToS1NASContainer (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SST                                                       */
/*                                                            */
/**************************************************************/
/*
SST ::= INTEGER (1..255)
*/
typedef OSUINT8 TS24501IE_SST;

EXTERN int NASEnc_TS24501IE_SST (OSCTXT* pctxt, TS24501IE_SST value);

EXTERN int NASDec_TS24501IE_SST (OSCTXT* pctxt, TS24501IE_SST* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SST (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SST* pvalue);

EXTERN TS24501IE_SST* asn1Test_TS24501IE_SST (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SD                                                        */
/*                                                            */
/**************************************************************/
/*
SD ::= INTEGER (1..16777215)
*/
typedef OSUINT32 TS24501IE_SD;

EXTERN int NASEnc_TS24501IE_SD (OSCTXT* pctxt, TS24501IE_SD value);

EXTERN int NASDec_TS24501IE_SD (OSCTXT* pctxt, TS24501IE_SD* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SD (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SD* pvalue);

EXTERN TS24501IE_SD* asn1Test_TS24501IE_SD (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SLAAParamTypes                                            */
/*                                                            */
/**************************************************************/
/*
SLAAParamTypes ::= ENUMERATED { ptDeviceId(16), ptServerAddr(32), ptPayload(48), ptResponse(112), ptMax(255) }
*/
typedef enum {
   TS24501IE_SLAAParamTypes_ptDeviceId = 16,
   TS24501IE_SLAAParamTypes_ptServerAddr = 32,
   TS24501IE_SLAAParamTypes_ptPayload = 48,
   TS24501IE_SLAAParamTypes_ptResponse = 112,
   TS24501IE_SLAAParamTypes_ptMax = 255
} TS24501IE_SLAAParamTypes;

EXTERN int NASEnc_TS24501IE_SLAAParamTypes (OSCTXT* pctxt
   , TS24501IE_SLAAParamTypes value);

EXTERN int NASDec_TS24501IE_SLAAParamTypes (OSCTXT* pctxt
   , TS24501IE_SLAAParamTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLAAParamTypes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLAAParamTypes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_SLAAParamTypes_ENUMTAB[];
#define TS24501IE_SLAAParamTypes_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24501IE_SLAAParamTypes_ToString (OSINT32 value);

EXTERN int TS24501IE_SLAAParamTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_SLAAParamTypes* pvalue);

EXTERN int TS24501IE_SLAAParamTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_SLAAParamTypes* pvalue)
      ;

EXTERN TS24501IE_SLAAParamTypes*
    asn1Test_TS24501IE_SLAAParamTypes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MMCause                                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.3.2 - MM cause 
MMCause ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24501IE_MMCause;

EXTERN int NASEnc_TS24501IE_MMCause (OSCTXT* pctxt, TS24501IE_MMCause value);

EXTERN int NASDec_TS24501IE_MMCause (OSCTXT* pctxt, TS24501IE_MMCause* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MMCause (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MMCause* pvalue);

EXTERN TS24501IE_MMCause* asn1Test_TS24501IE_MMCause (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TypeOfIdentity                                            */
/*                                                            */
/**************************************************************/
/*
TypeOfIdentity ::= ENUMERATED { none(0), suci(1), guti(2), imei(3), stmsi(4), imeisv(5), macAddr(6), eui64(7) }
*/
typedef enum {
   TS24501IE_TypeOfIdentity_none = 0,
   TS24501IE_TypeOfIdentity_suci = 1,
   TS24501IE_TypeOfIdentity_guti = 2,
   TS24501IE_TypeOfIdentity_imei = 3,
   TS24501IE_TypeOfIdentity_stmsi = 4,
   TS24501IE_TypeOfIdentity_imeisv = 5,
   TS24501IE_TypeOfIdentity_macAddr = 6,
   TS24501IE_TypeOfIdentity_eui64 = 7
} TS24501IE_TypeOfIdentity;

EXTERN int NASEnc_TS24501IE_TypeOfIdentity (OSCTXT* pctxt
   , TS24501IE_TypeOfIdentity value);

EXTERN int NASDec_TS24501IE_TypeOfIdentity (OSCTXT* pctxt
   , TS24501IE_TypeOfIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_TypeOfIdentity (OSCTXT *pctxt, 
   const char* name, const TS24501IE_TypeOfIdentity* pvalue);

EXTERN extern const OSEnumItem TS24501IE_TypeOfIdentity_ENUMTAB[];
#define TS24501IE_TypeOfIdentity_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* TS24501IE_TypeOfIdentity_ToString (OSINT32 value);

EXTERN int TS24501IE_TypeOfIdentity_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_TypeOfIdentity* pvalue);

EXTERN int TS24501IE_TypeOfIdentity_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_TypeOfIdentity* pvalue)
      ;

EXTERN TS24501IE_TypeOfIdentity*
    asn1Test_TS24501IE_TypeOfIdentity (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RegistrationResultValue                                   */
/*                                                            */
/**************************************************************/
/*
RegistrationResultValue ::= ENUMERATED { access(1), nonAccess(2), accessAndNonAccess(3), regResultMAX(7) }
*/
typedef enum {
   TS24501IE_RegistrationResultValue_access = 1,
   TS24501IE_RegistrationResultValue_nonAccess = 2,
   TS24501IE_RegistrationResultValue_accessAndNonAccess = 3,
   TS24501IE_RegistrationResultValue_regResultMAX = 7
} TS24501IE_RegistrationResultValue;

EXTERN int NASEnc_TS24501IE_RegistrationResultValue (OSCTXT* pctxt
   , TS24501IE_RegistrationResultValue value);

EXTERN int NASDec_TS24501IE_RegistrationResultValue (OSCTXT* pctxt
   , TS24501IE_RegistrationResultValue* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RegistrationResultValue (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RegistrationResultValue* pvalue);

EXTERN extern const OSEnumItem TS24501IE_RegistrationResultValue_ENUMTAB[];
#define TS24501IE_RegistrationResultValue_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24501IE_RegistrationResultValue_ToString (OSINT32 value);

EXTERN int TS24501IE_RegistrationResultValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_RegistrationResultValue* pvalue);

EXTERN int TS24501IE_RegistrationResultValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_RegistrationResultValue* pvalue);

EXTERN TS24501IE_RegistrationResultValue*
    asn1Test_TS24501IE_RegistrationResultValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RegistrationTypeValue                                     */
/*                                                            */
/**************************************************************/
/*
RegistrationTypeValue ::= ENUMERATED { initial(1), mobilityUpdate(2), periodicUpdate(3), emergency(4), snpnOnboard(5), regisTypeMAX(7) }
*/
typedef enum {
   TS24501IE_RegistrationTypeValue_initial = 1,
   TS24501IE_RegistrationTypeValue_mobilityUpdate = 2,
   TS24501IE_RegistrationTypeValue_periodicUpdate = 3,
   TS24501IE_RegistrationTypeValue_emergency = 4,
   TS24501IE_RegistrationTypeValue_snpnOnboard = 5,
   TS24501IE_RegistrationTypeValue_regisTypeMAX = 7
} TS24501IE_RegistrationTypeValue;

EXTERN int NASEnc_TS24501IE_RegistrationTypeValue (OSCTXT* pctxt
   , TS24501IE_RegistrationTypeValue value);

EXTERN int NASDec_TS24501IE_RegistrationTypeValue (OSCTXT* pctxt
   , TS24501IE_RegistrationTypeValue* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RegistrationTypeValue (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RegistrationTypeValue* pvalue);

EXTERN extern const OSEnumItem TS24501IE_RegistrationTypeValue_ENUMTAB[];
#define TS24501IE_RegistrationTypeValue_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24501IE_RegistrationTypeValue_ToString (OSINT32 value);

EXTERN int TS24501IE_RegistrationTypeValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_RegistrationTypeValue* pvalue);

EXTERN int TS24501IE_RegistrationTypeValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_RegistrationTypeValue* pvalue);

EXTERN TS24501IE_RegistrationTypeValue*
    asn1Test_TS24501IE_RegistrationTypeValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrackingAreaCode                                          */
/*                                                            */
/**************************************************************/
/*
TrackingAreaCode ::= OCTET STRING (SIZE (3))
*/
typedef struct EXTERN TS24501IE_TrackingAreaCode {
   OSOCTET data[3];
} TS24501IE_TrackingAreaCode;

EXTERN int NASEnc_TS24501IE_TrackingAreaCode (OSCTXT* pctxt
   , TS24501IE_TrackingAreaCode* pvalue);

EXTERN int NASDec_TS24501IE_TrackingAreaCode (OSCTXT* pctxt
   , TS24501IE_TrackingAreaCode* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_TrackingAreaCode (OSCTXT *pctxt, 
   const char* name, const TS24501IE_TrackingAreaCode* pvalue);

EXTERN TS24501IE_TrackingAreaCode*
    asn1Test_TS24501IE_TrackingAreaCode (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ABBA                                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.10 - ABBA 
ABBA ::= OCTET STRING
                        (preceeded by 1 octet length)

*/
typedef OSDynOctStr TS24501IE_ABBA;

EXTERN int NASEnc_TS24501IE_ABBA (OSCTXT* pctxt, TS24501IE_ABBA value);

EXTERN int NASDec_TS24501IE_ABBA (OSCTXT* pctxt, TS24501IE_ABBA* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ABBA (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ABBA* pvalue);

EXTERN TS24501IE_ABBA* asn1Test_TS24501IE_ABBA (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ABBA (TS24501IE_ABBA* pvalue);

/**************************************************************/
/*                                                            */
/*  CIoTDataTypes                                             */
/*                                                            */
/**************************************************************/
/*
CIoTDataTypes ::= ENUMERATED { ciotCtrlPlaneUserData(0), ciotSMS(1), ciotLocSvcsMsg(2), ciotMAX(7) }
*/
typedef enum {
   TS24501IE_CIoTDataTypes_ciotCtrlPlaneUserData = 0,
   TS24501IE_CIoTDataTypes_ciotSMS = 1,
   TS24501IE_CIoTDataTypes_ciotLocSvcsMsg = 2,
   TS24501IE_CIoTDataTypes_ciotMAX = 7
} TS24501IE_CIoTDataTypes;

EXTERN int NASEnc_TS24501IE_CIoTDataTypes (OSCTXT* pctxt
   , TS24501IE_CIoTDataTypes value);

EXTERN int NASDec_TS24501IE_CIoTDataTypes (OSCTXT* pctxt
   , TS24501IE_CIoTDataTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CIoTDataTypes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CIoTDataTypes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_CIoTDataTypes_ENUMTAB[];
#define TS24501IE_CIoTDataTypes_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24501IE_CIoTDataTypes_ToString (OSINT32 value);

EXTERN int TS24501IE_CIoTDataTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_CIoTDataTypes* pvalue);

EXTERN int TS24501IE_CIoTDataTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_CIoTDataTypes* pvalue);

EXTERN TS24501IE_CIoTDataTypes*
    asn1Test_TS24501IE_CIoTDataTypes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MAPDUSessionInfo                                          */
/*                                                            */
/**************************************************************/
/*
 9.11.3.31A - MA PDU session information 
MAPDUSessionInfo ::= ENUMERATED { networkUpgAllowed(1), mapduMAX(15) }
*/
typedef enum {
   TS24501IE_MAPDUSessionInfo_networkUpgAllowed = 1,
   TS24501IE_MAPDUSessionInfo_mapduMAX = 15
} TS24501IE_MAPDUSessionInfo;

EXTERN int NASEnc_TS24501IE_MAPDUSessionInfo (OSCTXT* pctxt
   , TS24501IE_MAPDUSessionInfo value);

EXTERN int NASDec_TS24501IE_MAPDUSessionInfo (OSCTXT* pctxt
   , TS24501IE_MAPDUSessionInfo* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MAPDUSessionInfo (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MAPDUSessionInfo* pvalue);

EXTERN extern const OSEnumItem TS24501IE_MAPDUSessionInfo_ENUMTAB[];
#define TS24501IE_MAPDUSessionInfo_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* TS24501IE_MAPDUSessionInfo_ToString (OSINT32 value);

EXTERN int TS24501IE_MAPDUSessionInfo_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_MAPDUSessionInfo* pvalue);

EXTERN int TS24501IE_MAPDUSessionInfo_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_MAPDUSessionInfo* pvalue);

EXTERN TS24501IE_MAPDUSessionInfo*
    asn1Test_TS24501IE_MAPDUSessionInfo (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CipherTypes                                               */
/*                                                            */
/**************************************************************/
/*
CipherTypes ::= ENUMERATED { ia0(0), ia1(1), ia2(2), ia3(3), ia4(4), ia5(5), ia6(6), ia7(7), cipherTypeMAX(15) }
*/
typedef enum {
   TS24501IE_CipherTypes_ia0 = 0,
   TS24501IE_CipherTypes_ia1 = 1,
   TS24501IE_CipherTypes_ia2 = 2,
   TS24501IE_CipherTypes_ia3 = 3,
   TS24501IE_CipherTypes_ia4 = 4,
   TS24501IE_CipherTypes_ia5 = 5,
   TS24501IE_CipherTypes_ia6 = 6,
   TS24501IE_CipherTypes_ia7 = 7,
   TS24501IE_CipherTypes_cipherTypeMAX = 15
} TS24501IE_CipherTypes;

EXTERN int NASEnc_TS24501IE_CipherTypes (OSCTXT* pctxt
   , TS24501IE_CipherTypes value);

EXTERN int NASDec_TS24501IE_CipherTypes (OSCTXT* pctxt
   , TS24501IE_CipherTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CipherTypes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CipherTypes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_CipherTypes_ENUMTAB[];
#define TS24501IE_CipherTypes_ENUMTABSIZE 9

EXTERN const OSUTF8CHAR* TS24501IE_CipherTypes_ToString (OSINT32 value);

EXTERN int TS24501IE_CipherTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_CipherTypes* pvalue);

EXTERN int TS24501IE_CipherTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_CipherTypes* pvalue);

EXTERN TS24501IE_CipherTypes* asn1Test_TS24501IE_CipherTypes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ProtectionTypes                                           */
/*                                                            */
/**************************************************************/
/*
ProtectionTypes ::= ENUMERATED { ea0(0), ea1(1), ea2(2), ea3(3), ea4(4), ea5(5), ea6(6), ea7(7), protectionTypeMAX(15) }
*/
typedef enum {
   TS24501IE_ProtectionTypes_ea0 = 0,
   TS24501IE_ProtectionTypes_ea1 = 1,
   TS24501IE_ProtectionTypes_ea2 = 2,
   TS24501IE_ProtectionTypes_ea3 = 3,
   TS24501IE_ProtectionTypes_ea4 = 4,
   TS24501IE_ProtectionTypes_ea5 = 5,
   TS24501IE_ProtectionTypes_ea6 = 6,
   TS24501IE_ProtectionTypes_ea7 = 7,
   TS24501IE_ProtectionTypes_protectionTypeMAX = 15
} TS24501IE_ProtectionTypes;

EXTERN int NASEnc_TS24501IE_ProtectionTypes (OSCTXT* pctxt
   , TS24501IE_ProtectionTypes value);

EXTERN int NASDec_TS24501IE_ProtectionTypes (OSCTXT* pctxt
   , TS24501IE_ProtectionTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ProtectionTypes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ProtectionTypes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_ProtectionTypes_ENUMTAB[];
#define TS24501IE_ProtectionTypes_ENUMTABSIZE 9

EXTERN const OSUTF8CHAR* TS24501IE_ProtectionTypes_ToString (OSINT32 value);

EXTERN int TS24501IE_ProtectionTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_ProtectionTypes* pvalue);

EXTERN int TS24501IE_ProtectionTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_ProtectionTypes* pvalue)
      ;

EXTERN TS24501IE_ProtectionTypes*
    asn1Test_TS24501IE_ProtectionTypes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AccessCategories                                          */
/*                                                            */
/**************************************************************/
/*
AccessCategories ::= ENUMERATED { category0(0), category1(1), category2(2), category3(3), category4(4), category5(5), category6(6), category7(7), categoryMAX(31) }
*/
typedef enum {
   TS24501IE_AccessCategories_category0 = 0,
   TS24501IE_AccessCategories_category1 = 1,
   TS24501IE_AccessCategories_category2 = 2,
   TS24501IE_AccessCategories_category3 = 3,
   TS24501IE_AccessCategories_category4 = 4,
   TS24501IE_AccessCategories_category5 = 5,
   TS24501IE_AccessCategories_category6 = 6,
   TS24501IE_AccessCategories_category7 = 7,
   TS24501IE_AccessCategories_categoryMAX = 31
} TS24501IE_AccessCategories;

EXTERN int NASEnc_TS24501IE_AccessCategories (OSCTXT* pctxt
   , TS24501IE_AccessCategories value);

EXTERN int NASDec_TS24501IE_AccessCategories (OSCTXT* pctxt
   , TS24501IE_AccessCategories* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AccessCategories (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AccessCategories* pvalue);

EXTERN extern const OSEnumItem TS24501IE_AccessCategories_ENUMTAB[];
#define TS24501IE_AccessCategories_ENUMTABSIZE 9

EXTERN const OSUTF8CHAR* TS24501IE_AccessCategories_ToString (OSINT32 value);

EXTERN int TS24501IE_AccessCategories_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_AccessCategories* pvalue);

EXTERN int TS24501IE_AccessCategories_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_AccessCategories* pvalue);

EXTERN TS24501IE_AccessCategories*
    asn1Test_TS24501IE_AccessCategories (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PayloadContainerType                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.40 - Payload container type 
PayloadContainerType ::= ENUMERATED { n1SmInfo(1), sms(2), lppMessage(3), transparent(4), uePolicy(5), ueParams(6), locSvcs(7), ciotUserData(8), multPayloads(15) }
*/
typedef enum {
   TS24501IE_PayloadContainerType_n1SmInfo = 1,
   TS24501IE_PayloadContainerType_sms = 2,
   TS24501IE_PayloadContainerType_lppMessage = 3,
   TS24501IE_PayloadContainerType_transparent = 4,
   TS24501IE_PayloadContainerType_uePolicy = 5,
   TS24501IE_PayloadContainerType_ueParams = 6,
   TS24501IE_PayloadContainerType_locSvcs = 7,
   TS24501IE_PayloadContainerType_ciotUserData = 8,
   TS24501IE_PayloadContainerType_multPayloads = 15
} TS24501IE_PayloadContainerType;

EXTERN int NASEnc_TS24501IE_PayloadContainerType (OSCTXT* pctxt
   , TS24501IE_PayloadContainerType value);

EXTERN int NASDec_TS24501IE_PayloadContainerType (OSCTXT* pctxt
   , TS24501IE_PayloadContainerType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PayloadContainerType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PayloadContainerType* pvalue);

EXTERN extern const OSEnumItem TS24501IE_PayloadContainerType_ENUMTAB[];
#define TS24501IE_PayloadContainerType_ENUMTABSIZE 9

EXTERN const OSUTF8CHAR* TS24501IE_PayloadContainerType_ToString (OSINT32 value);

EXTERN int TS24501IE_PayloadContainerType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_PayloadContainerType* pvalue);

EXTERN int TS24501IE_PayloadContainerType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_PayloadContainerType* pvalue);

EXTERN TS24501IE_PayloadContainerType*
    asn1Test_TS24501IE_PayloadContainerType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDUSessionId2                                             */
/*                                                            */
/**************************************************************/
/*
 9.11.3.41 - PDU session identity 2 
PDUSessionId2 ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24501IE_PDUSessionId2;

EXTERN int NASEnc_TS24501IE_PDUSessionId2 (OSCTXT* pctxt
   , TS24501IE_PDUSessionId2 value);

EXTERN int NASDec_TS24501IE_PDUSessionId2 (OSCTXT* pctxt
   , TS24501IE_PDUSessionId2* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PDUSessionId2 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PDUSessionId2* pvalue);

EXTERN TS24501IE_PDUSessionId2*
    asn1Test_TS24501IE_PDUSessionId2 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SessionReactivateRslt_psi                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SessionReactivateRslt'
*/
typedef struct EXTERN TS24501IE_SessionReactivateRslt_psi {
   OSBOOL elem[16];
} TS24501IE_SessionReactivateRslt_psi;

EXTERN int NASEnc_TS24501IE_SessionReactivateRslt_psi (OSCTXT* pctxt
   , TS24501IE_SessionReactivateRslt_psi* pvalue);

EXTERN int NASDec_TS24501IE_SessionReactivateRslt_psi (OSCTXT* pctxt
   , TS24501IE_SessionReactivateRslt_psi* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SessionReactivateRslt_psi (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SessionReactivateRslt_psi* pvalue);

EXTERN TS24501IE_SessionReactivateRslt_psi*
    asn1Test_TS24501IE_SessionReactivateRslt_psi (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SessionReactivateRslt                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.3.42 - PDU session reactivation result 
SessionReactivateRslt ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   psi [1] SEQUENCE (SIZE (16)) OF BOOLEAN,
   --<length fixed-size="0"/>
   --<noPresentBit/>
   spare [2] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_SessionReactivateRslt {
   struct {
      unsigned sparePresent : 1;
   } m;
   OSUINT8 length;
   TS24501IE_SessionReactivateRslt_psi psi;
   OSDynOctStr spare;
} TS24501IE_SessionReactivateRslt;

EXTERN int NASEnc_TS24501IE_SessionReactivateRslt (OSCTXT* pctxt
   , TS24501IE_SessionReactivateRslt* pvalue);

EXTERN int NASDec_TS24501IE_SessionReactivateRslt (OSCTXT* pctxt
   , TS24501IE_SessionReactivateRslt* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SessionReactivateRslt (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SessionReactivateRslt* pvalue);

EXTERN TS24501IE_SessionReactivateRslt*
    asn1Test_TS24501IE_SessionReactivateRslt (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SessionReactivateRslt (
   TS24501IE_SessionReactivateRslt* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionStatus                                          */
/*                                                            */
/**************************************************************/
/*
 9.11.3.44 - PDU session status 
PDUSessionStatus ::= SessionReactivateRslt
*/
typedef TS24501IE_SessionReactivateRslt TS24501IE_PDUSessionStatus;

EXTERN int NASEnc_TS24501IE_PDUSessionStatus (OSCTXT* pctxt
   , TS24501IE_PDUSessionStatus* pvalue);

EXTERN int NASDec_TS24501IE_PDUSessionStatus (OSCTXT* pctxt
   , TS24501IE_PDUSessionStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PDUSessionStatus (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PDUSessionStatus* pvalue);

EXTERN TS24501IE_PDUSessionStatus*
    asn1Test_TS24501IE_PDUSessionStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PDUSessionStatus (TS24501IE_PDUSessionStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestTypes                                              */
/*                                                            */
/**************************************************************/
/*
RequestTypes ::= ENUMERATED { initialReq(1), existPduSession(2), initialEmerReq(3), emerPduSession(4), modifyReq(5), maPduReq(6), reqTypeMAX(7) }
*/
typedef enum {
   TS24501IE_RequestTypes_initialReq = 1,
   TS24501IE_RequestTypes_existPduSession = 2,
   TS24501IE_RequestTypes_initialEmerReq = 3,
   TS24501IE_RequestTypes_emerPduSession = 4,
   TS24501IE_RequestTypes_modifyReq = 5,
   TS24501IE_RequestTypes_maPduReq = 6,
   TS24501IE_RequestTypes_reqTypeMAX = 7
} TS24501IE_RequestTypes;

EXTERN int NASEnc_TS24501IE_RequestTypes (OSCTXT* pctxt
   , TS24501IE_RequestTypes value);

EXTERN int NASDec_TS24501IE_RequestTypes (OSCTXT* pctxt
   , TS24501IE_RequestTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RequestTypes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RequestTypes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_RequestTypes_ENUMTAB[];
#define TS24501IE_RequestTypes_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* TS24501IE_RequestTypes_ToString (OSINT32 value);

EXTERN int TS24501IE_RequestTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_RequestTypes* pvalue);

EXTERN int TS24501IE_RequestTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_RequestTypes* pvalue);

EXTERN TS24501IE_RequestTypes* asn1Test_TS24501IE_RequestTypes (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  ServiceType                                               */
/*                                                            */
/**************************************************************/
/*
 9.11.3.50 - Service type 
ServiceType ::= ENUMERATED { signaling(0), data(1), mobTermSvc(2), emerSvc(3), emerSvcFallback(4), hiPriAccess(5), elevSignal(6), serviceTypeMAX(15) }
*/
typedef enum {
   TS24501IE_ServiceType_signaling = 0,
   TS24501IE_ServiceType_data = 1,
   TS24501IE_ServiceType_mobTermSvc = 2,
   TS24501IE_ServiceType_emerSvc = 3,
   TS24501IE_ServiceType_emerSvcFallback = 4,
   TS24501IE_ServiceType_hiPriAccess = 5,
   TS24501IE_ServiceType_elevSignal = 6,
   TS24501IE_ServiceType_serviceTypeMAX = 15
} TS24501IE_ServiceType;

EXTERN int NASEnc_TS24501IE_ServiceType (OSCTXT* pctxt
   , TS24501IE_ServiceType value);

EXTERN int NASDec_TS24501IE_ServiceType (OSCTXT* pctxt
   , TS24501IE_ServiceType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ServiceType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ServiceType* pvalue);

EXTERN extern const OSEnumItem TS24501IE_ServiceType_ENUMTAB[];
#define TS24501IE_ServiceType_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* TS24501IE_ServiceType_ToString (OSINT32 value);

EXTERN int TS24501IE_ServiceType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_ServiceType* pvalue);

EXTERN int TS24501IE_ServiceType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_ServiceType* pvalue);

EXTERN TS24501IE_ServiceType* asn1Test_TS24501IE_ServiceType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PERNTypes                                                 */
/*                                                            */
/**************************************************************/
/*
PERNTypes ::= ENUMERATED { pernWithoutTimer(0), pernWithTimer(1), pernTypeMAX(7) }
*/
typedef enum {
   TS24501IE_PERNTypes_pernWithoutTimer = 0,
   TS24501IE_PERNTypes_pernWithTimer = 1,
   TS24501IE_PERNTypes_pernTypeMAX = 7
} TS24501IE_PERNTypes;

EXTERN int NASEnc_TS24501IE_PERNTypes (OSCTXT* pctxt, TS24501IE_PERNTypes value
   );

EXTERN int NASDec_TS24501IE_PERNTypes (OSCTXT* pctxt
   , TS24501IE_PERNTypes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PERNTypes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PERNTypes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_PERNTypes_ENUMTAB[];
#define TS24501IE_PERNTypes_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* TS24501IE_PERNTypes_ToString (OSINT32 value);

EXTERN int TS24501IE_PERNTypes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_PERNTypes* pvalue);

EXTERN int TS24501IE_PERNTypes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_PERNTypes* pvalue);

EXTERN TS24501IE_PERNTypes* asn1Test_TS24501IE_PERNTypes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ATSSSModes                                                */
/*                                                            */
/**************************************************************/
/*
ATSSSModes ::= ENUMERATED { unsupported(0), lowLayer(1), activeOnly(2), anyMode(3), atsssModeMAX(15) }
*/
typedef enum {
   TS24501IE_ATSSSModes_unsupported = 0,
   TS24501IE_ATSSSModes_lowLayer = 1,
   TS24501IE_ATSSSModes_activeOnly = 2,
   TS24501IE_ATSSSModes_anyMode = 3,
   TS24501IE_ATSSSModes_atsssModeMAX = 15
} TS24501IE_ATSSSModes;

EXTERN int NASEnc_TS24501IE_ATSSSModes (OSCTXT* pctxt
   , TS24501IE_ATSSSModes value);

EXTERN int NASDec_TS24501IE_ATSSSModes (OSCTXT* pctxt
   , TS24501IE_ATSSSModes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ATSSSModes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ATSSSModes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_ATSSSModes_ENUMTAB[];
#define TS24501IE_ATSSSModes_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24501IE_ATSSSModes_ToString (OSINT32 value);

EXTERN int TS24501IE_ATSSSModes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_ATSSSModes* pvalue);

EXTERN int TS24501IE_ATSSSModes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_ATSSSModes* pvalue);

EXTERN TS24501IE_ATSSSModes* asn1Test_TS24501IE_ATSSSModes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SMCause                                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.4.2 - SM cause 
SMCause ::= INTEGER (0..255)
*/
typedef OSUINT8 TS24501IE_SMCause;

EXTERN int NASEnc_TS24501IE_SMCause (OSCTXT* pctxt, TS24501IE_SMCause value);

EXTERN int NASDec_TS24501IE_SMCause (OSCTXT* pctxt, TS24501IE_SMCause* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SMCause (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SMCause* pvalue);

EXTERN TS24501IE_SMCause* asn1Test_TS24501IE_SMCause (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSParamId                                                */
/*                                                            */
/**************************************************************/
/*
EPSParamId ::= ENUMERATED { epsQoS(1), extEpsQoS(2), tft(3), apnAmbr(4), extApnAmbr(5), epsParamMax(255), ... }
*/
typedef enum {
   TS24501IE_EPSParamId_epsQoS = 1,
   TS24501IE_EPSParamId_extEpsQoS = 2,
   TS24501IE_EPSParamId_tft = 3,
   TS24501IE_EPSParamId_apnAmbr = 4,
   TS24501IE_EPSParamId_extApnAmbr = 5,
   TS24501IE_EPSParamId_epsParamMax = 255,
   TS24501IE_EPSParamId_UNKNOWN_
} TS24501IE_EPSParamId;

EXTERN int NASEnc_TS24501IE_EPSParamId (OSCTXT* pctxt
   , TS24501IE_EPSParamId value);

EXTERN int NASDec_TS24501IE_EPSParamId (OSCTXT* pctxt
   , TS24501IE_EPSParamId* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EPSParamId (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EPSParamId* pvalue);

EXTERN extern const OSEnumItem TS24501IE_EPSParamId_ENUMTAB[];
#define TS24501IE_EPSParamId_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24501IE_EPSParamId_ToString (OSINT32 value);

EXTERN int TS24501IE_EPSParamId_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_EPSParamId* pvalue);

EXTERN int TS24501IE_EPSParamId_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_EPSParamId* pvalue);

EXTERN TS24501IE_EPSParamId* asn1Test_TS24501IE_EPSParamId (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PDUAddressValues                                          */
/*                                                            */
/**************************************************************/
/*
PDUAddressValues ::= ENUMERATED { ipv4(1), ipv6(2), ipv4v6(3), pduAddrValMAX(7) }
*/
typedef enum {
   TS24501IE_PDUAddressValues_ipv4 = 1,
   TS24501IE_PDUAddressValues_ipv6 = 2,
   TS24501IE_PDUAddressValues_ipv4v6 = 3,
   TS24501IE_PDUAddressValues_pduAddrValMAX = 7
} TS24501IE_PDUAddressValues;

EXTERN int NASEnc_TS24501IE_PDUAddressValues (OSCTXT* pctxt
   , TS24501IE_PDUAddressValues value);

EXTERN int NASDec_TS24501IE_PDUAddressValues (OSCTXT* pctxt
   , TS24501IE_PDUAddressValues* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PDUAddressValues (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PDUAddressValues* pvalue);

EXTERN extern const OSEnumItem TS24501IE_PDUAddressValues_ENUMTAB[];
#define TS24501IE_PDUAddressValues_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24501IE_PDUAddressValues_ToString (OSINT32 value);

EXTERN int TS24501IE_PDUAddressValues_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_PDUAddressValues* pvalue);

EXTERN int TS24501IE_PDUAddressValues_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_PDUAddressValues* pvalue);

EXTERN TS24501IE_PDUAddressValues*
    asn1Test_TS24501IE_PDUAddressValues (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SessionType                                               */
/*                                                            */
/**************************************************************/
/*
SessionType ::= ENUMERATED { st_ipv4(1), st_ipv6(2), st_ipv4v6(3), st_unstructured(4), st_eth(5), st_MAX(7) }
*/
typedef enum {
   TS24501IE_SessionType_st_ipv4 = 1,
   TS24501IE_SessionType_st_ipv6 = 2,
   TS24501IE_SessionType_st_ipv4v6 = 3,
   TS24501IE_SessionType_st_unstructured = 4,
   TS24501IE_SessionType_st_eth = 5,
   TS24501IE_SessionType_st_MAX = 7
} TS24501IE_SessionType;

EXTERN int NASEnc_TS24501IE_SessionType (OSCTXT* pctxt
   , TS24501IE_SessionType value);

EXTERN int NASDec_TS24501IE_SessionType (OSCTXT* pctxt
   , TS24501IE_SessionType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SessionType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SessionType* pvalue);

EXTERN extern const OSEnumItem TS24501IE_SessionType_ENUMTAB[];
#define TS24501IE_SessionType_ENUMTABSIZE 6

EXTERN const OSUTF8CHAR* TS24501IE_SessionType_ToString (OSINT32 value);

EXTERN int TS24501IE_SessionType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_SessionType* pvalue);

EXTERN int TS24501IE_SessionType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_SessionType* pvalue);

EXTERN TS24501IE_SessionType* asn1Test_TS24501IE_SessionType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ParameterId                                               */
/*                                                            */
/**************************************************************/
/*
ParameterId ::= ENUMERATED { fiveQI(1), gfbrUL(2), gfbrDL(3), mfbrUL(4), mfbrDL(5), avgWindow(6), epsBearerIdent(7), paramIdMax(255), ... }
*/
typedef enum {
   TS24501IE_ParameterId_fiveQI = 1,
   TS24501IE_ParameterId_gfbrUL = 2,
   TS24501IE_ParameterId_gfbrDL = 3,
   TS24501IE_ParameterId_mfbrUL = 4,
   TS24501IE_ParameterId_mfbrDL = 5,
   TS24501IE_ParameterId_avgWindow = 6,
   TS24501IE_ParameterId_epsBearerIdent = 7,
   TS24501IE_ParameterId_paramIdMax = 255,
   TS24501IE_ParameterId_UNKNOWN_
} TS24501IE_ParameterId;

EXTERN int NASEnc_TS24501IE_ParameterId (OSCTXT* pctxt
   , TS24501IE_ParameterId value);

EXTERN int NASDec_TS24501IE_ParameterId (OSCTXT* pctxt
   , TS24501IE_ParameterId* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ParameterId (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ParameterId* pvalue);

EXTERN extern const OSEnumItem TS24501IE_ParameterId_ENUMTAB[];
#define TS24501IE_ParameterId_ENUMTABSIZE 8

EXTERN const OSUTF8CHAR* TS24501IE_ParameterId_ToString (OSINT32 value);

EXTERN int TS24501IE_ParameterId_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_ParameterId* pvalue);

EXTERN int TS24501IE_ParameterId_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_ParameterId* pvalue);

EXTERN TS24501IE_ParameterId* asn1Test_TS24501IE_ParameterId (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  FlowRateUnit                                              */
/*                                                            */
/**************************************************************/
/*
FlowRateUnit ::= INTEGER { notUsed(0), kbps-1(1), kbps-4(2), kbps-16(3), kbps-64(4), kbps-256(5), mbps-1(6), mbps-4(7), mbps-16(8), mbps-64(9), mbps-256(10), gbps-1(11), gbps-4(12), gbps-16(13), gbps-64(14), gbps-256(15), tbps-1(16), tbps-4(17), tbps-16(18), tbps-64(19), tbps-256(20), pbps-1(21), pbps-4(22), pbps-16(23), pbps-64(24), pbps-256(25) } (0..255)
*/
typedef enum {
   TS24501IE_FlowRateUnit_notUsed = 0,
   TS24501IE_FlowRateUnit_kbps_1 = 1,
   TS24501IE_FlowRateUnit_kbps_4 = 2,
   TS24501IE_FlowRateUnit_kbps_16 = 3,
   TS24501IE_FlowRateUnit_kbps_64 = 4,
   TS24501IE_FlowRateUnit_kbps_256 = 5,
   TS24501IE_FlowRateUnit_mbps_1 = 6,
   TS24501IE_FlowRateUnit_mbps_4 = 7,
   TS24501IE_FlowRateUnit_mbps_16 = 8,
   TS24501IE_FlowRateUnit_mbps_64 = 9,
   TS24501IE_FlowRateUnit_mbps_256 = 10,
   TS24501IE_FlowRateUnit_gbps_1 = 11,
   TS24501IE_FlowRateUnit_gbps_4 = 12,
   TS24501IE_FlowRateUnit_gbps_16 = 13,
   TS24501IE_FlowRateUnit_gbps_64 = 14,
   TS24501IE_FlowRateUnit_gbps_256 = 15,
   TS24501IE_FlowRateUnit_tbps_1 = 16,
   TS24501IE_FlowRateUnit_tbps_4 = 17,
   TS24501IE_FlowRateUnit_tbps_16 = 18,
   TS24501IE_FlowRateUnit_tbps_64 = 19,
   TS24501IE_FlowRateUnit_tbps_256 = 20,
   TS24501IE_FlowRateUnit_pbps_1 = 21,
   TS24501IE_FlowRateUnit_pbps_4 = 22,
   TS24501IE_FlowRateUnit_pbps_16 = 23,
   TS24501IE_FlowRateUnit_pbps_64 = 24,
   TS24501IE_FlowRateUnit_pbps_256 = 25
} TS24501IE_FlowRateUnit_Root;

typedef OSUINT8 TS24501IE_FlowRateUnit;

EXTERN int NASEnc_TS24501IE_FlowRateUnit (OSCTXT* pctxt
   , TS24501IE_FlowRateUnit value);

EXTERN int NASDec_TS24501IE_FlowRateUnit (OSCTXT* pctxt
   , TS24501IE_FlowRateUnit* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_FlowRateUnit (OSCTXT *pctxt, 
   const char* name, const TS24501IE_FlowRateUnit* pvalue);

EXTERN TS24501IE_FlowRateUnit* asn1Test_TS24501IE_FlowRateUnit (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  FlowOpCodes                                               */
/*                                                            */
/**************************************************************/
/*
FlowOpCodes ::= ENUMERATED { flowCreate(1), flowDelete(2), flowModify(3), ruleOpMax(7) }
*/
typedef enum {
   TS24501IE_FlowOpCodes_flowCreate = 1,
   TS24501IE_FlowOpCodes_flowDelete = 2,
   TS24501IE_FlowOpCodes_flowModify = 3,
   TS24501IE_FlowOpCodes_ruleOpMax = 7
} TS24501IE_FlowOpCodes;

EXTERN int NASEnc_TS24501IE_FlowOpCodes (OSCTXT* pctxt
   , TS24501IE_FlowOpCodes value);

EXTERN int NASDec_TS24501IE_FlowOpCodes (OSCTXT* pctxt
   , TS24501IE_FlowOpCodes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_FlowOpCodes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_FlowOpCodes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_FlowOpCodes_ENUMTAB[];
#define TS24501IE_FlowOpCodes_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24501IE_FlowOpCodes_ToString (OSINT32 value);

EXTERN int TS24501IE_FlowOpCodes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_FlowOpCodes* pvalue);

EXTERN int TS24501IE_FlowOpCodes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_FlowOpCodes* pvalue);

EXTERN TS24501IE_FlowOpCodes* asn1Test_TS24501IE_FlowOpCodes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RuleOpCodes                                               */
/*                                                            */
/**************************************************************/
/*
RuleOpCodes ::= ENUMERATED { createNew(1), delete(2), modifyAndAdd(3), modifyAndReplace(4), modifyAndDelete(5), modifyNoModify(6), ruleOpMax(7) }
*/
typedef enum {
   TS24501IE_RuleOpCodes_createNew = 1,
   TS24501IE_RuleOpCodes_delete = 2,
   TS24501IE_RuleOpCodes_modifyAndAdd = 3,
   TS24501IE_RuleOpCodes_modifyAndReplace = 4,
   TS24501IE_RuleOpCodes_modifyAndDelete = 5,
   TS24501IE_RuleOpCodes_modifyNoModify = 6,
   TS24501IE_RuleOpCodes_ruleOpMax = 7
} TS24501IE_RuleOpCodes;

EXTERN int NASEnc_TS24501IE_RuleOpCodes (OSCTXT* pctxt
   , TS24501IE_RuleOpCodes value);

EXTERN int NASDec_TS24501IE_RuleOpCodes (OSCTXT* pctxt
   , TS24501IE_RuleOpCodes* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RuleOpCodes (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RuleOpCodes* pvalue);

EXTERN extern const OSEnumItem TS24501IE_RuleOpCodes_ENUMTAB[];
#define TS24501IE_RuleOpCodes_ENUMTABSIZE 7

EXTERN const OSUTF8CHAR* TS24501IE_RuleOpCodes_ToString (OSINT32 value);

EXTERN int TS24501IE_RuleOpCodes_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_RuleOpCodes* pvalue);

EXTERN int TS24501IE_RuleOpCodes_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_RuleOpCodes* pvalue);

EXTERN TS24501IE_RuleOpCodes* asn1Test_TS24501IE_RuleOpCodes (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PacketFilterTypeId                                        */
/*                                                            */
/**************************************************************/
/*
PacketFilterTypeId ::= ENUMERATED { matchAll(1), ipv4Remote(16), ipv4Local(17), ipv6Remote(33), ipv6Local(35), protId(48), singleLocalPort(64), localPortRange(65), singleRemPort(80), remPortRange(81), secParam(96), typeOfSvc(112), flowLabel(128), destMacAddr(129), srcMacAddr(130), ctagVid(131), stagVid(132), ctagPcp(133), stagPcp(134), ethernet(135), typeIdMax(255) }
*/
typedef enum {
   TS24501IE_PacketFilterTypeId_matchAll = 1,
   TS24501IE_PacketFilterTypeId_ipv4Remote = 16,
   TS24501IE_PacketFilterTypeId_ipv4Local = 17,
   TS24501IE_PacketFilterTypeId_ipv6Remote = 33,
   TS24501IE_PacketFilterTypeId_ipv6Local = 35,
   TS24501IE_PacketFilterTypeId_protId = 48,
   TS24501IE_PacketFilterTypeId_singleLocalPort = 64,
   TS24501IE_PacketFilterTypeId_localPortRange = 65,
   TS24501IE_PacketFilterTypeId_singleRemPort = 80,
   TS24501IE_PacketFilterTypeId_remPortRange = 81,
   TS24501IE_PacketFilterTypeId_secParam = 96,
   TS24501IE_PacketFilterTypeId_typeOfSvc = 112,
   TS24501IE_PacketFilterTypeId_flowLabel = 128,
   TS24501IE_PacketFilterTypeId_destMacAddr = 129,
   TS24501IE_PacketFilterTypeId_srcMacAddr = 130,
   TS24501IE_PacketFilterTypeId_ctagVid = 131,
   TS24501IE_PacketFilterTypeId_stagVid = 132,
   TS24501IE_PacketFilterTypeId_ctagPcp = 133,
   TS24501IE_PacketFilterTypeId_stagPcp = 134,
   TS24501IE_PacketFilterTypeId_ethernet = 135,
   TS24501IE_PacketFilterTypeId_typeIdMax = 255
} TS24501IE_PacketFilterTypeId;

EXTERN int NASEnc_TS24501IE_PacketFilterTypeId (OSCTXT* pctxt
   , TS24501IE_PacketFilterTypeId value);

EXTERN int NASDec_TS24501IE_PacketFilterTypeId (OSCTXT* pctxt
   , TS24501IE_PacketFilterTypeId* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PacketFilterTypeId (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PacketFilterTypeId* pvalue);

EXTERN extern const OSEnumItem TS24501IE_PacketFilterTypeId_ENUMTAB[];
#define TS24501IE_PacketFilterTypeId_ENUMTABSIZE 21

EXTERN const OSUTF8CHAR* TS24501IE_PacketFilterTypeId_ToString (OSINT32 value);

EXTERN int TS24501IE_PacketFilterTypeId_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_PacketFilterTypeId* pvalue);

EXTERN int TS24501IE_PacketFilterTypeId_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_PacketFilterTypeId* pvalue);

EXTERN TS24501IE_PacketFilterTypeId*
    asn1Test_TS24501IE_PacketFilterTypeId (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SSCModeValue                                              */
/*                                                            */
/**************************************************************/
/*
SSCModeValue ::= ENUMERATED { ssc_mode1(1), ssc_mode2(2), ssc_mode3(3), ssc_MAX(7) }
*/
typedef enum {
   TS24501IE_SSCModeValue_ssc_mode1 = 1,
   TS24501IE_SSCModeValue_ssc_mode2 = 2,
   TS24501IE_SSCModeValue_ssc_mode3 = 3,
   TS24501IE_SSCModeValue_ssc_MAX = 7
} TS24501IE_SSCModeValue;

EXTERN int NASEnc_TS24501IE_SSCModeValue (OSCTXT* pctxt
   , TS24501IE_SSCModeValue value);

EXTERN int NASDec_TS24501IE_SSCModeValue (OSCTXT* pctxt
   , TS24501IE_SSCModeValue* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SSCModeValue (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SSCModeValue* pvalue);

EXTERN extern const OSEnumItem TS24501IE_SSCModeValue_ENUMTAB[];
#define TS24501IE_SSCModeValue_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24501IE_SSCModeValue_ToString (OSINT32 value);

EXTERN int TS24501IE_SSCModeValue_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_SSCModeValue* pvalue);

EXTERN int TS24501IE_SSCModeValue_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, TS24501IE_SSCModeValue* pvalue);

EXTERN TS24501IE_SSCModeValue* asn1Test_TS24501IE_SSCModeValue (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  AccessType_typeOfAccess                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AccessType'
*/
typedef enum {
   TS24501IE_AccessType_typeOfAccess_access3gpp = 1,
   TS24501IE_AccessType_typeOfAccess_accessNon3gpp = 2
} TS24501IE_AccessType_typeOfAccess;

EXTERN int NASEnc_TS24501IE_AccessType_typeOfAccess (OSCTXT* pctxt
   , TS24501IE_AccessType_typeOfAccess value);

EXTERN int NASDec_TS24501IE_AccessType_typeOfAccess (OSCTXT* pctxt
   , TS24501IE_AccessType_typeOfAccess* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AccessType_typeOfAccess (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AccessType_typeOfAccess* pvalue);

EXTERN extern const OSEnumItem TS24501IE_AccessType_typeOfAccess_ENUMTAB[];
#define TS24501IE_AccessType_typeOfAccess_ENUMTABSIZE 2

EXTERN const OSUTF8CHAR* TS24501IE_AccessType_typeOfAccess_ToString (OSINT32 value);

EXTERN int TS24501IE_AccessType_typeOfAccess_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_AccessType_typeOfAccess* pvalue);

EXTERN int TS24501IE_AccessType_typeOfAccess_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_AccessType_typeOfAccess* pvalue);

EXTERN TS24501IE_AccessType_typeOfAccess*
    asn1Test_TS24501IE_AccessType_typeOfAccess (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SLDeviceId_id                                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SLDeviceId'
*/
typedef struct EXTERN TS24501IE_SLDeviceId_id {
   OSUINT8 numocts;
   OSOCTET data[255];
} TS24501IE_SLDeviceId_id;

EXTERN int NASEnc_TS24501IE_SLDeviceId_id (OSCTXT* pctxt
   , TS24501IE_SLDeviceId_id* pvalue);

EXTERN int NASDec_TS24501IE_SLDeviceId_id (OSCTXT* pctxt
   , TS24501IE_SLDeviceId_id* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLDeviceId_id (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLDeviceId_id* pvalue);

EXTERN TS24501IE_SLDeviceId_id*
    asn1Test_TS24501IE_SLDeviceId_id (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SLDeviceId_id (TS24501IE_SLDeviceId_id* pvalue);

/**************************************************************/
/*                                                            */
/*  SLAAServerAddr_addr                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SLAAServerAddr'
*/
typedef struct EXTERN TS24501IE_SLAAServerAddr_addr {
   OSUINT8 numocts;
   OSOCTET data[255];
} TS24501IE_SLAAServerAddr_addr;

EXTERN int NASEnc_TS24501IE_SLAAServerAddr_addr (OSCTXT* pctxt
   , TS24501IE_SLAAServerAddr_addr* pvalue);

EXTERN int NASDec_TS24501IE_SLAAServerAddr_addr (OSCTXT* pctxt
   , TS24501IE_SLAAServerAddr_addr* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLAAServerAddr_addr (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLAAServerAddr_addr* pvalue);

EXTERN TS24501IE_SLAAServerAddr_addr*
    asn1Test_TS24501IE_SLAAServerAddr_addr (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SLAAServerAddr_addr (
   TS24501IE_SLAAServerAddr_addr* pvalue);

/**************************************************************/
/*                                                            */
/*  NSSAIInclusionMode_inclusionMode                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NSSAIInclusionMode'
*/
typedef enum {
   TS24501IE_NSSAIInclusionMode_inclusionMode_modeA = 0,
   TS24501IE_NSSAIInclusionMode_inclusionMode_modeB = 1,
   TS24501IE_NSSAIInclusionMode_inclusionMode_modeC = 2,
   TS24501IE_NSSAIInclusionMode_inclusionMode_modeD = 3
} TS24501IE_NSSAIInclusionMode_inclusionMode;

EXTERN int NASEnc_TS24501IE_NSSAIInclusionMode_inclusionMode (OSCTXT* pctxt
   , TS24501IE_NSSAIInclusionMode_inclusionMode value);

EXTERN int NASDec_TS24501IE_NSSAIInclusionMode_inclusionMode (OSCTXT* pctxt
   , TS24501IE_NSSAIInclusionMode_inclusionMode* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NSSAIInclusionMode_inclusionMode (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NSSAIInclusionMode_inclusionMode* pvalue);

EXTERN extern const OSEnumItem TS24501IE_NSSAIInclusionMode_inclusionMode_ENUMTAB[];
#define TS24501IE_NSSAIInclusionMode_inclusionMode_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24501IE_NSSAIInclusionMode_inclusionMode_ToString (OSINT32 value);

EXTERN int TS24501IE_NSSAIInclusionMode_inclusionMode_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_NSSAIInclusionMode_inclusionMode* pvalue)
      ;

EXTERN int TS24501IE_NSSAIInclusionMode_inclusionMode_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_NSSAIInclusionMode_inclusionMode* pvalue);

EXTERN TS24501IE_NSSAIInclusionMode_inclusionMode*
    asn1Test_TS24501IE_NSSAIInclusionMode_inclusionMode (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RejectedNSSAI_cause                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RejectedNSSAI'
*/
typedef enum {
   TS24501IE_RejectedNSSAI_cause_unavailInCurrPlmn = 0,
   TS24501IE_RejectedNSSAI_cause_unavailInCurrRegisArea = 1,
   TS24501IE_RejectedNSSAI_cause_authPending = 2,
   TS24501IE_RejectedNSSAI_cause_causeMAX = 15
} TS24501IE_RejectedNSSAI_cause;

EXTERN int NASEnc_TS24501IE_RejectedNSSAI_cause (OSCTXT* pctxt
   , TS24501IE_RejectedNSSAI_cause value);

EXTERN int NASDec_TS24501IE_RejectedNSSAI_cause (OSCTXT* pctxt
   , TS24501IE_RejectedNSSAI_cause* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RejectedNSSAI_cause (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RejectedNSSAI_cause* pvalue);

EXTERN extern const OSEnumItem TS24501IE_RejectedNSSAI_cause_ENUMTAB[];
#define TS24501IE_RejectedNSSAI_cause_ENUMTABSIZE 4

EXTERN const OSUTF8CHAR* TS24501IE_RejectedNSSAI_cause_ToString (OSINT32 value);

EXTERN int TS24501IE_RejectedNSSAI_cause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_RejectedNSSAI_cause* pvalue);

EXTERN int TS24501IE_RejectedNSSAI_cause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_RejectedNSSAI_cause* pvalue);

EXTERN TS24501IE_RejectedNSSAI_cause*
    asn1Test_TS24501IE_RejectedNSSAI_cause (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  ExtRejectedNSSAI_cause                                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ExtRejectedNSSAI'
*/
typedef enum {
   TS24501IE_ExtRejectedNSSAI_cause_unavailInCurrPlmn = 0,
   TS24501IE_ExtRejectedNSSAI_cause_unavailInCurrRegisArea = 1,
   TS24501IE_ExtRejectedNSSAI_cause_authPending = 2,
   TS24501IE_ExtRejectedNSSAI_cause_maxUEsReached = 3,
   TS24501IE_ExtRejectedNSSAI_cause_causeMAX = 15
} TS24501IE_ExtRejectedNSSAI_cause;

EXTERN int NASEnc_TS24501IE_ExtRejectedNSSAI_cause (OSCTXT* pctxt
   , TS24501IE_ExtRejectedNSSAI_cause value);

EXTERN int NASDec_TS24501IE_ExtRejectedNSSAI_cause (OSCTXT* pctxt
   , TS24501IE_ExtRejectedNSSAI_cause* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ExtRejectedNSSAI_cause (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ExtRejectedNSSAI_cause* pvalue);

EXTERN extern const OSEnumItem TS24501IE_ExtRejectedNSSAI_cause_ENUMTAB[];
#define TS24501IE_ExtRejectedNSSAI_cause_ENUMTABSIZE 5

EXTERN const OSUTF8CHAR* TS24501IE_ExtRejectedNSSAI_cause_ToString (OSINT32 value);

EXTERN int TS24501IE_ExtRejectedNSSAI_cause_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TS24501IE_ExtRejectedNSSAI_cause* pvalue);

EXTERN int TS24501IE_ExtRejectedNSSAI_cause_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      TS24501IE_ExtRejectedNSSAI_cause* pvalue);

EXTERN TS24501IE_ExtRejectedNSSAI_cause*
    asn1Test_TS24501IE_ExtRejectedNSSAI_cause (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  OpaqueData                                                */
/*                                                            */
/**************************************************************/
/*
 -- TYPE DEFINITIONS --- 
 OpaqueData can be used for any case where the specification has
 some number of octets preceded by a 2-octet length. 
OpaqueData ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65535),
   --<length fixed-size="0"/>
   contents [1] OCTET STRING
}
*/
typedef struct EXTERN TS24501IE_OpaqueData {
   OSUINT16 length;
   OSDynOctStr contents;
} TS24501IE_OpaqueData;

EXTERN int NASEnc_TS24501IE_OpaqueData (OSCTXT* pctxt
   , TS24501IE_OpaqueData* pvalue);

EXTERN int NASDec_TS24501IE_OpaqueData (OSCTXT* pctxt
   , TS24501IE_OpaqueData* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_OpaqueData (OSCTXT *pctxt, 
   const char* name, const TS24501IE_OpaqueData* pvalue);

EXTERN TS24501IE_OpaqueData* asn1Test_TS24501IE_OpaqueData (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_OpaqueData (TS24501IE_OpaqueData* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessType                                                */
/*                                                            */
/**************************************************************/
/*
 9.11.2.1A - Access type 
AccessType ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   typeOfAccess [1] ENUMERATED { access3gpp(1), accessNon3gpp(2) }
}
*/
typedef struct EXTERN TS24501IE_AccessType {
   OSUINT8 spare;
   TS24501IE_AccessType_typeOfAccess typeOfAccess;
} TS24501IE_AccessType;

EXTERN int NASEnc_TS24501IE_AccessType (OSCTXT* pctxt
   , TS24501IE_AccessType* pvalue);

EXTERN int NASDec_TS24501IE_AccessType (OSCTXT* pctxt
   , TS24501IE_AccessType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AccessType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AccessType* pvalue);

EXTERN TS24501IE_AccessType* asn1Test_TS24501IE_AccessType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AccessType (TS24501IE_AccessType* pvalue);

/**************************************************************/
/*                                                            */
/*  DNNList                                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.2.1B - DNN 
DNNList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   --<length fixed-size="0"/>
   apn [1] SEQUENCE OF IA5String
}
*/
typedef struct EXTERN TS24501IE_DNNList {
   OSUINT8 length;
   struct  {
      OSSIZE n;
      const char* *elem;
   } apn;
} TS24501IE_DNNList;

EXTERN int NASEnc_TS24501IE_DNNList (OSCTXT* pctxt, TS24501IE_DNNList* pvalue);

EXTERN int NASDec_TS24501IE_DNNList (OSCTXT* pctxt, TS24501IE_DNNList* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_DNNList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_DNNList* pvalue);

EXTERN TS24501IE_DNNList* asn1Test_TS24501IE_DNNList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_DNNList (TS24501IE_DNNList* pvalue);

/**************************************************************/
/*                                                            */
/*  EAPPacketFormat                                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'EAPMessage'
*/
typedef struct EXTERN TS24501IE_EAPPacketFormat {
   TS24501IE_EAPFormatCode code;
   OSUINT8 id;
   OSUINT16 length;
   OSDynOctStr data;
} TS24501IE_EAPPacketFormat;

EXTERN int NASEnc_TS24501IE_EAPPacketFormat (OSCTXT* pctxt
   , TS24501IE_EAPPacketFormat* pvalue);

EXTERN int NASDec_TS24501IE_EAPPacketFormat (OSCTXT* pctxt
   , TS24501IE_EAPPacketFormat* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EAPPacketFormat (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EAPPacketFormat* pvalue);

EXTERN TS24501IE_EAPPacketFormat*
    asn1Test_TS24501IE_EAPPacketFormat (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_EAPPacketFormat (TS24501IE_EAPPacketFormat* pvalue);

/**************************************************************/
/*                                                            */
/*  EAPMessage                                                */
/*                                                            */
/**************************************************************/
/*
 9.11.2.2 - EAP message 
EAPMessage ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65535),
   --<asn1typename>EAPPacketFormat</asn1typename>
   packetFormat [1] SEQUENCE {
      code [0] EAPFormatCode,
      id [1] INTEGER (0..255),
      length [2] INTEGER (4..65535),
      --<length expr="@.length - 4"/>
      data [3] OCTET STRING
   }
}
*/
typedef struct EXTERN TS24501IE_EAPMessage {
   OSUINT16 length;
   TS24501IE_EAPPacketFormat packetFormat;
} TS24501IE_EAPMessage;

EXTERN int NASEnc_TS24501IE_EAPMessage (OSCTXT* pctxt
   , TS24501IE_EAPMessage* pvalue);

EXTERN int NASDec_TS24501IE_EAPMessage (OSCTXT* pctxt
   , TS24501IE_EAPMessage* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EAPMessage (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EAPMessage* pvalue);

EXTERN TS24501IE_EAPMessage* asn1Test_TS24501IE_EAPMessage (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_EAPMessage (TS24501IE_EAPMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  IntraN1NASContainer                                       */
/*                                                            */
/**************************************************************/
/*
 9.11.2.6 - Intra N1 mode NAS transparent container 
IntraN1NASContainer ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   authCode [1] OCTET STRING (SIZE (4)),
   cipherType [2] INTEGER (0..15),
   integrityType [3] INTEGER (0..15),
   spare1 [4] INTEGER (0..7) DEFAULT 0,
   kacf [5] BOOLEAN,
   tsc [6] BOOLEAN,
   keysetId [7] INTEGER (0..7),
   seqNumber [8] INTEGER (1..255)
}
*/
typedef struct EXTERN TS24501IE_IntraN1NASContainer {
   OSUINT8 length;
   OSOCTET authCode[4];
   OSUINT8 cipherType;
   OSUINT8 integrityType;
   OSUINT8 spare1;
   OSBOOL kacf;
   OSBOOL tsc;
   OSUINT8 keysetId;
   OSUINT8 seqNumber;
} TS24501IE_IntraN1NASContainer;

EXTERN int NASEnc_TS24501IE_IntraN1NASContainer (OSCTXT* pctxt
   , TS24501IE_IntraN1NASContainer* pvalue);

EXTERN int NASDec_TS24501IE_IntraN1NASContainer (OSCTXT* pctxt
   , TS24501IE_IntraN1NASContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_IntraN1NASContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_IntraN1NASContainer* pvalue);

EXTERN TS24501IE_IntraN1NASContainer*
    asn1Test_TS24501IE_IntraN1NASContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_IntraN1NASContainer (
   TS24501IE_IntraN1NASContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SNSSAI                                                    */
/*                                                            */
/**************************************************************/
/*
 9.11.2.8 - S-NSSAI 
SNSSAI ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   sst [1] SST,
   --<noPresentBit/>
   sd [2] SD OPTIONAL,
   --<noPresentBit/>
   mappedSST [3] OCTET STRING (SIZE (1)) OPTIONAL,
   --<noPresentBit/>
   mappedSD [4] OCTET STRING (SIZE (3)) OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_SNSSAI {
   struct {
      unsigned sdPresent : 1;
      unsigned mappedSSTPresent : 1;
      unsigned mappedSDPresent : 1;
   } m;
   OSUINT8 length;
   TS24501IE_SST sst;
   TS24501IE_SD sd;
   OSOCTET mappedSST[1];
   OSOCTET mappedSD[3];
} TS24501IE_SNSSAI;

EXTERN int NASEnc_TS24501IE_SNSSAI (OSCTXT* pctxt, TS24501IE_SNSSAI* pvalue);

EXTERN int NASDec_TS24501IE_SNSSAI (OSCTXT* pctxt, TS24501IE_SNSSAI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SNSSAI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SNSSAI* pvalue);

EXTERN TS24501IE_SNSSAI* asn1Test_TS24501IE_SNSSAI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SNSSAI (TS24501IE_SNSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  S1ToN1NASContainer                                        */
/*                                                            */
/**************************************************************/
/*
 9.11.2.9 - S1 mode to N1 mode NAS transparent container 
S1ToN1NASContainer ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   authCode [1] OCTET STRING (SIZE (4)),
   cipherType [2] INTEGER (0..15),
   integrityType [3] INTEGER (0..15),
   spare1 [4] BOOLEAN DEFAULT FALSE,
   ncc [5] INTEGER (0..7),
   tsc [6] BOOLEAN,
   keysetId [7] INTEGER (0..7),
   spare2 [8] INTEGER (1..65535) DEFAULT 0
}
*/
typedef struct EXTERN TS24501IE_S1ToN1NASContainer {
   OSUINT8 length;
   OSOCTET authCode[4];
   OSUINT8 cipherType;
   OSUINT8 integrityType;
   OSBOOL spare1;
   OSUINT8 ncc;
   OSBOOL tsc;
   OSUINT8 keysetId;
   OSUINT16 spare2;
} TS24501IE_S1ToN1NASContainer;

EXTERN int NASEnc_TS24501IE_S1ToN1NASContainer (OSCTXT* pctxt
   , TS24501IE_S1ToN1NASContainer* pvalue);

EXTERN int NASDec_TS24501IE_S1ToN1NASContainer (OSCTXT* pctxt
   , TS24501IE_S1ToN1NASContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_S1ToN1NASContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_S1ToN1NASContainer* pvalue);

EXTERN TS24501IE_S1ToN1NASContainer*
    asn1Test_TS24501IE_S1ToN1NASContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_S1ToN1NASContainer (
   TS24501IE_S1ToN1NASContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SLDeviceId                                                */
/*                                                            */
/**************************************************************/
/*
 9.11.2.11 - Service-level device ID - added in 17.3 
SLDeviceId ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   id [1] OCTET STRING (SIZE (1..255))
}
*/
typedef struct EXTERN TS24501IE_SLDeviceId {
   OSUINT8 length;
   TS24501IE_SLDeviceId_id id;
} TS24501IE_SLDeviceId;

EXTERN int NASEnc_TS24501IE_SLDeviceId (OSCTXT* pctxt
   , TS24501IE_SLDeviceId* pvalue);

EXTERN int NASDec_TS24501IE_SLDeviceId (OSCTXT* pctxt
   , TS24501IE_SLDeviceId* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLDeviceId (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLDeviceId* pvalue);

EXTERN TS24501IE_SLDeviceId* asn1Test_TS24501IE_SLDeviceId (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SLDeviceId (TS24501IE_SLDeviceId* pvalue);

/**************************************************************/
/*                                                            */
/*  SLAAServerAddr                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.2.12 - Service-level-AA server address - added in 17.3 
SLAAServerAddr ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   addrType [1] INTEGER (1..255),
   addr [2] OCTET STRING (SIZE (1..255))
}
*/
typedef struct EXTERN TS24501IE_SLAAServerAddr {
   OSUINT8 length;
   OSUINT8 addrType;
   TS24501IE_SLAAServerAddr_addr addr;
} TS24501IE_SLAAServerAddr;

EXTERN int NASEnc_TS24501IE_SLAAServerAddr (OSCTXT* pctxt
   , TS24501IE_SLAAServerAddr* pvalue);

EXTERN int NASDec_TS24501IE_SLAAServerAddr (OSCTXT* pctxt
   , TS24501IE_SLAAServerAddr* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLAAServerAddr (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLAAServerAddr* pvalue);

EXTERN TS24501IE_SLAAServerAddr*
    asn1Test_TS24501IE_SLAAServerAddr (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SLAAServerAddr (TS24501IE_SLAAServerAddr* pvalue);

/**************************************************************/
/*                                                            */
/*  SLAAPayload                                               */
/*                                                            */
/**************************************************************/
/*
 9.11.2.13 - Service-level-AA payload - added in 17.3 
SLAAPayload ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   payload [1] OCTET STRING (SIZE (1..65532))
}
*/
typedef struct EXTERN TS24501IE_SLAAPayload {
   OSUINT16 length;
   OSDynOctStr payload;
} TS24501IE_SLAAPayload;

EXTERN int NASEnc_TS24501IE_SLAAPayload (OSCTXT* pctxt
   , TS24501IE_SLAAPayload* pvalue);

EXTERN int NASDec_TS24501IE_SLAAPayload (OSCTXT* pctxt
   , TS24501IE_SLAAPayload* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLAAPayload (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLAAPayload* pvalue);

EXTERN TS24501IE_SLAAPayload* asn1Test_TS24501IE_SLAAPayload (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SLAAPayload (TS24501IE_SLAAPayload* pvalue);

/**************************************************************/
/*                                                            */
/*  SLAAResponse                                              */
/*                                                            */
/**************************************************************/
/*
 9.11.2.14 - Service-level-AA response - added in 17.3 
SLAAResponse ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..127) DEFAULT 0,
   slar [2] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_SLAAResponse {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL slar;
} TS24501IE_SLAAResponse;

EXTERN int NASEnc_TS24501IE_SLAAResponse (OSCTXT* pctxt
   , TS24501IE_SLAAResponse* pvalue);

EXTERN int NASDec_TS24501IE_SLAAResponse (OSCTXT* pctxt
   , TS24501IE_SLAAResponse* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLAAResponse (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLAAResponse* pvalue);

EXTERN TS24501IE_SLAAResponse* asn1Test_TS24501IE_SLAAResponse (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501IE_SLAAResponse (TS24501IE_SLAAResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  SLAAParameter                                             */
/*                                                            */
/**************************************************************/
/*
SLAAParameter ::= SEQUENCE {
   type [0] SLAAParamTypes,
   --<inline/>
   param [1] EXPLICIT CHOICE {
      --<selector element="type" value="16"/>
      deviceId [0] SLDeviceId,
      --<selector element="type" value="32"/>
      serverAddr [1] SLAAServerAddr,
      --<selector element="type" value="48"/>
      payload [2] SLAAPayload,
      --<selector element="type" value="112"/>
      response [3] SLAAResponse
   }
}
*/
typedef struct EXTERN TS24501IE_SLAAParameter {
   TS24501IE_SLAAParamTypes type;
   struct  {
      union {
         /* selector element = type, value = 16 */
         TS24501IE_SLDeviceId deviceId;
         /* selector element = type, value = 32 */
         TS24501IE_SLAAServerAddr serverAddr;
         /* selector element = type, value = 48 */
         TS24501IE_SLAAPayload payload;
         /* selector element = type, value = 112 */
         TS24501IE_SLAAResponse response;
      } u;
   } param;
} TS24501IE_SLAAParameter;

EXTERN int NASEnc_TS24501IE_SLAAParameter (OSCTXT* pctxt
   , TS24501IE_SLAAParameter* pvalue);

EXTERN int NASDec_TS24501IE_SLAAParameter (OSCTXT* pctxt
   , TS24501IE_SLAAParameter* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLAAParameter (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLAAParameter* pvalue);

EXTERN TS24501IE_SLAAParameter*
    asn1Test_TS24501IE_SLAAParameter (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SLAAParameter (TS24501IE_SLAAParameter* pvalue);

/**************************************************************/
/*                                                            */
/*  SLAAContainer                                             */
/*                                                            */
/**************************************************************/
/*
 9.11.2.10 - Service-level-AA container - added in 17.3 
SLAAContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   --<is3GVarLenList lengthElem="length"/>
   contents [1] SEQUENCE (SIZE (1..256)) OF SLAAParameter
}
*/
typedef struct EXTERN TS24501IE_SLAAContainer {
   OSUINT16 length;
   struct  {
      OSUINT16 n;
      TS24501IE_SLAAParameter elem[256];
   } contents;
} TS24501IE_SLAAContainer;

EXTERN int NASEnc_TS24501IE_SLAAContainer (OSCTXT* pctxt
   , TS24501IE_SLAAContainer* pvalue);

EXTERN int NASDec_TS24501IE_SLAAContainer (OSCTXT* pctxt
   , TS24501IE_SLAAContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SLAAContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SLAAContainer* pvalue);

EXTERN TS24501IE_SLAAContainer*
    asn1Test_TS24501IE_SLAAContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SLAAContainer (TS24501IE_SLAAContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  MMCapability_octet4                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMCapability'
*/
typedef struct EXTERN TS24501IE_MMCapability_octet4 {
   OSBOOL racs;
   OSBOOL nssaa;
   OSBOOL lcs;
   OSBOOL v2xcnpc5;
   OSBOOL v2xcepc5;
   OSBOOL v2x;
   OSBOOL upCIoT;
   OSBOOL srvcc;
} TS24501IE_MMCapability_octet4;

EXTERN int NASEnc_TS24501IE_MMCapability_octet4 (OSCTXT* pctxt
   , TS24501IE_MMCapability_octet4* pvalue);

EXTERN int NASDec_TS24501IE_MMCapability_octet4 (OSCTXT* pctxt
   , TS24501IE_MMCapability_octet4* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MMCapability_octet4 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MMCapability_octet4* pvalue);

EXTERN TS24501IE_MMCapability_octet4*
    asn1Test_TS24501IE_MMCapability_octet4 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MMCapability_octet5                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMCapability'
*/
typedef struct EXTERN TS24501IE_MMCapability_octet5 {
   OSBOOL proSel2relay;
   OSBOOL proSedc;
   OSBOOL proSedd;
   OSBOOL erNssai;
   OSBOOL ehcCpCIoT;
   OSBOOL multipleUp;
   OSBOOL wusa;
   OSBOOL cag;
} TS24501IE_MMCapability_octet5;

EXTERN int NASEnc_TS24501IE_MMCapability_octet5 (OSCTXT* pctxt
   , TS24501IE_MMCapability_octet5* pvalue);

EXTERN int NASDec_TS24501IE_MMCapability_octet5 (OSCTXT* pctxt
   , TS24501IE_MMCapability_octet5* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MMCapability_octet5 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MMCapability_octet5* pvalue);

EXTERN TS24501IE_MMCapability_octet5*
    asn1Test_TS24501IE_MMCapability_octet5 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MMCapability_octet6                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MMCapability'
*/
typedef struct EXTERN TS24501IE_MMCapability_octet6 {
   OSUINT8 spare;
   OSBOOL proSel3rmt;
   OSBOOL proSel2rmt;
   OSBOOL proSel3relay;
} TS24501IE_MMCapability_octet6;

EXTERN int NASEnc_TS24501IE_MMCapability_octet6 (OSCTXT* pctxt
   , TS24501IE_MMCapability_octet6* pvalue);

EXTERN int NASDec_TS24501IE_MMCapability_octet6 (OSCTXT* pctxt
   , TS24501IE_MMCapability_octet6* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MMCapability_octet6 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MMCapability_octet6* pvalue);

EXTERN TS24501IE_MMCapability_octet6*
    asn1Test_TS24501IE_MMCapability_octet6 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MMCapability_octet6 (
   TS24501IE_MMCapability_octet6* pvalue);

/**************************************************************/
/*                                                            */
/*  MMCapability                                              */
/*                                                            */
/**************************************************************/
/*
 9.11.3.1 - MM capability 
MMCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255) DEFAULT 1,
   -- octet 3 
   sgc [1] BOOLEAN,
   hcCpCIoT [2] BOOLEAN,
   n3Data [3] BOOLEAN,
   cpCIoT [4] BOOLEAN,
   restrictedEC [5] BOOLEAN,
   lppSupported [6] BOOLEAN,
   handoverSupported [7] BOOLEAN,
   s1Supported [8] BOOLEAN,
   --<noPresentBit/>
   octet4 [9] SEQUENCE {
      racs [0] BOOLEAN,
      nssaa [1] BOOLEAN,
      lcs [2] BOOLEAN,
      v2xcnpc5 [3] BOOLEAN,
      v2xcepc5 [4] BOOLEAN,
      v2x [5] BOOLEAN,
      upCIoT [6] BOOLEAN,
      srvcc [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   octet5 [10] SEQUENCE {
      proSel2relay [0] BOOLEAN, -- Added in v17.3
      proSedc [1] BOOLEAN, -- Added in v17.3
      proSedd [2] BOOLEAN, -- Added in v17.3
      erNssai [3] BOOLEAN, -- Added in v17.0
      ehcCpCIoT [4] BOOLEAN, -- Added in v16.5
      multipleUp [5] BOOLEAN, -- Added in v16.5
      wusa [6] BOOLEAN,
      cag [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   octet6 [11] SEQUENCE {
                     -- Added in v17.3
      spare [0] INTEGER (0..31) DEFAULT 0,
      proSel3rmt [1] BOOLEAN,
      proSel2rmt [2] BOOLEAN,
      proSel3relay [3] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   --<length fixed-size="0"/>
   spare [12] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_MMCapability {
   struct {
      unsigned octet4Present : 1;
      unsigned octet5Present : 1;
      unsigned octet6Present : 1;
      unsigned sparePresent : 1;
   } m;
   OSUINT8 length;
   OSBOOL sgc;
   OSBOOL hcCpCIoT;
   OSBOOL n3Data;
   OSBOOL cpCIoT;
   OSBOOL restrictedEC;
   OSBOOL lppSupported;
   OSBOOL handoverSupported;
   OSBOOL s1Supported;
   TS24501IE_MMCapability_octet4 octet4;
   TS24501IE_MMCapability_octet5 octet5;
   TS24501IE_MMCapability_octet6 octet6;
   OSDynOctStr spare;
} TS24501IE_MMCapability;

EXTERN int NASEnc_TS24501IE_MMCapability (OSCTXT* pctxt
   , TS24501IE_MMCapability* pvalue);

EXTERN int NASDec_TS24501IE_MMCapability (OSCTXT* pctxt
   , TS24501IE_MMCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MMCapability (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MMCapability* pvalue);

EXTERN TS24501IE_MMCapability* asn1Test_TS24501IE_MMCapability (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501IE_MMCapability (TS24501IE_MMCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  DRXParams                                                 */
/*                                                            */
/**************************************************************/
/*
 9.11.3.2A - DRX parameters 
DRXParams ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] INTEGER (0..15) DEFAULT 0,
   drxValue [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24501IE_DRXParams {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 drxValue;
} TS24501IE_DRXParams;

EXTERN int NASEnc_TS24501IE_DRXParams (OSCTXT* pctxt
   , TS24501IE_DRXParams* pvalue);

EXTERN int NASDec_TS24501IE_DRXParams (OSCTXT* pctxt
   , TS24501IE_DRXParams* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_DRXParams (OSCTXT *pctxt, 
   const char* name, const TS24501IE_DRXParams* pvalue);

EXTERN TS24501IE_DRXParams* asn1Test_TS24501IE_DRXParams (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_DRXParams (TS24501IE_DRXParams* pvalue);

/**************************************************************/
/*                                                            */
/*  IdentityType                                              */
/*                                                            */
/**************************************************************/
/*
 9.11.3.3 - Identity type 
IdentityType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   typeOfIdent [1] TypeOfIdentity
}
*/
typedef struct EXTERN TS24501IE_IdentityType {
   OSBOOL spare;
   TS24501IE_TypeOfIdentity typeOfIdent;
} TS24501IE_IdentityType;

EXTERN int NASEnc_TS24501IE_IdentityType (OSCTXT* pctxt
   , TS24501IE_IdentityType* pvalue);

EXTERN int NASDec_TS24501IE_IdentityType (OSCTXT* pctxt
   , TS24501IE_IdentityType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_IdentityType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_IdentityType* pvalue);

EXTERN TS24501IE_IdentityType* asn1Test_TS24501IE_IdentityType (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501IE_IdentityType (TS24501IE_IdentityType* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileIdentity_SUCI_IMSI                                  */
/*                                                            */
/**************************************************************/
/*
MobileIdentity_SUCI_IMSI ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair,
   routingInd2 [1] INTEGER (0..15),
   routingInd1 [2] INTEGER (0..15),
   routingInd4 [3] INTEGER (0..15),
   routingInd3 [4] INTEGER (0..15),
   spare [5] INTEGER (0..15) DEFAULT 0,
   protSchemeId [6] INTEGER (0..15),
   homeNetId [7] INTEGER (0..255),
   --<length fixed-size="0"/>
   schemeOutput [8] OCTET STRING
}
*/
typedef struct EXTERN TS24501IE_MobileIdentity_SUCI_IMSI {
   TS24008IE_MCCMNCPair mcc_mnc;
   OSUINT8 routingInd2;
   OSUINT8 routingInd1;
   OSUINT8 routingInd4;
   OSUINT8 routingInd3;
   OSUINT8 spare;
   OSUINT8 protSchemeId;
   OSUINT8 homeNetId;
   OSDynOctStr schemeOutput;
} TS24501IE_MobileIdentity_SUCI_IMSI;

EXTERN int NASEnc_TS24501IE_MobileIdentity_SUCI_IMSI (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_SUCI_IMSI* pvalue);

EXTERN int NASDec_TS24501IE_MobileIdentity_SUCI_IMSI (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_SUCI_IMSI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MobileIdentity_SUCI_IMSI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MobileIdentity_SUCI_IMSI* pvalue);

EXTERN TS24501IE_MobileIdentity_SUCI_IMSI*
    asn1Test_TS24501IE_MobileIdentity_SUCI_IMSI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MobileIdentity_SUCI_IMSI (
   TS24501IE_MobileIdentity_SUCI_IMSI* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileIdentity_SUCI_NetId                                 */
/*                                                            */
/**************************************************************/
/*
MobileIdentity_SUCI_NetId ::= SEQUENCE {
   --<length fixed-size="0">
   nai [0] OCTET STRING
}
*/
typedef struct EXTERN TS24501IE_MobileIdentity_SUCI_NetId {
   OSDynOctStr nai;
} TS24501IE_MobileIdentity_SUCI_NetId;

EXTERN int NASEnc_TS24501IE_MobileIdentity_SUCI_NetId (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_SUCI_NetId* pvalue);

EXTERN int NASDec_TS24501IE_MobileIdentity_SUCI_NetId (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_SUCI_NetId* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MobileIdentity_SUCI_NetId (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MobileIdentity_SUCI_NetId* pvalue);

EXTERN TS24501IE_MobileIdentity_SUCI_NetId*
    asn1Test_TS24501IE_MobileIdentity_SUCI_NetId (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MobileIdentity_SUCI_NetId (
   TS24501IE_MobileIdentity_SUCI_NetId* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileIdentity_suci                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'MobileIdentity'
*/
typedef struct EXTERN TS24501IE_MobileIdentity_suci {
   enum {
      T_TS24501IE_MobileIdentity_suci_UNKNOWN_ = 0,
      T_TS24501IE_MobileIdentity_suci_supiImsi = 1,
      T_TS24501IE_MobileIdentity_suci_supiNetSpecificId = 2
   } t;
   union {
      /* t = 1 */
      TS24501IE_MobileIdentity_SUCI_IMSI supiImsi;
      /* t = 2 */
      TS24501IE_MobileIdentity_SUCI_NetId supiNetSpecificId;
   } u;
} TS24501IE_MobileIdentity_suci;

EXTERN int NASEnc_TS24501IE_MobileIdentity_suci (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_suci* pvalue);

EXTERN int NASDec_TS24501IE_MobileIdentity_suci (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_suci* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MobileIdentity_suci (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MobileIdentity_suci* pvalue);

EXTERN TS24501IE_MobileIdentity_suci*
    asn1Test_TS24501IE_MobileIdentity_suci (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MobileIdentity_suci (
   TS24501IE_MobileIdentity_suci* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileIdentity_GUTI                                       */
/*                                                            */
/**************************************************************/
/*
MobileIdentity_GUTI ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair,
   amfRegionID [1] INTEGER (0..255),
   amfSetID [2] INTEGER (0..1023),
   amfPointer [3] INTEGER (0..63),
   tmsi [4] OCTET STRING (SIZE (4))
}
*/
typedef struct EXTERN TS24501IE_MobileIdentity_GUTI {
   TS24008IE_MCCMNCPair mcc_mnc;
   OSUINT8 amfRegionID;
   OSUINT16 amfSetID;
   OSUINT8 amfPointer;
   OSOCTET tmsi[4];
} TS24501IE_MobileIdentity_GUTI;

EXTERN int NASEnc_TS24501IE_MobileIdentity_GUTI (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_GUTI* pvalue);

EXTERN int NASDec_TS24501IE_MobileIdentity_GUTI (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_GUTI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MobileIdentity_GUTI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MobileIdentity_GUTI* pvalue);

EXTERN TS24501IE_MobileIdentity_GUTI*
    asn1Test_TS24501IE_MobileIdentity_GUTI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MobileIdentity_GUTI (
   TS24501IE_MobileIdentity_GUTI* pvalue);

/**************************************************************/
/*                                                            */
/*  MobileIdentity_STMSI                                      */
/*                                                            */
/**************************************************************/
/*
MobileIdentity_STMSI ::= SEQUENCE {
   amfSetID [0] INTEGER (0..1023),
   amfPointer [1] INTEGER (0..63),
   tmsi [2] OCTET STRING (SIZE (4))
}
*/
typedef struct EXTERN TS24501IE_MobileIdentity_STMSI {
   OSUINT16 amfSetID;
   OSUINT8 amfPointer;
   OSOCTET tmsi[4];
} TS24501IE_MobileIdentity_STMSI;

EXTERN int NASEnc_TS24501IE_MobileIdentity_STMSI (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_STMSI* pvalue);

EXTERN int NASDec_TS24501IE_MobileIdentity_STMSI (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_STMSI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MobileIdentity_STMSI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MobileIdentity_STMSI* pvalue);

EXTERN TS24501IE_MobileIdentity_STMSI*
    asn1Test_TS24501IE_MobileIdentity_STMSI (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MobileIdentity_MAC                                        */
/*                                                            */
/**************************************************************/
/*
MobileIdentity_MAC ::= SEQUENCE {
   mauri [0] BOOLEAN,
   macaddr [1] OCTET STRING (SIZE (6))
}
*/
typedef struct EXTERN TS24501IE_MobileIdentity_MAC {
   OSBOOL mauri;
   OSOCTET macaddr[6];
} TS24501IE_MobileIdentity_MAC;

EXTERN int NASEnc_TS24501IE_MobileIdentity_MAC (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_MAC* pvalue);

EXTERN int NASDec_TS24501IE_MobileIdentity_MAC (OSCTXT* pctxt
   , TS24501IE_MobileIdentity_MAC* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MobileIdentity_MAC (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MobileIdentity_MAC* pvalue);

EXTERN TS24501IE_MobileIdentity_MAC*
    asn1Test_TS24501IE_MobileIdentity_MAC (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  MobileIdentity                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.3.4 - 5G mobile identity 
MobileIdentity ::= CHOICE {
   none [0] NULL,
   suci [1] EXPLICIT CHOICE {
      -- The supiFormat bit in the MobileIdentity determines which of these
      -- choices is present in an encoding.
      supiImsi [0] MobileIdentity_SUCI_IMSI,
      supiNetSpecificId [1] MobileIdentity_SUCI_NetId
   },
   guti [2] MobileIdentity_GUTI,
   imei [3] IMEI,
   stmsi [4] MobileIdentity_STMSI,
   imeisv [5] IMEISV,
   mac [6] MobileIdentity_MAC,
   eui-64 [7] OCTET STRING (SIZE (8))
}
*/
typedef struct EXTERN TS24501IE_MobileIdentity {
   enum {
      T_TS24501IE_MobileIdentity_UNKNOWN_ = 0,
      T_TS24501IE_MobileIdentity_none = 1,
      T_TS24501IE_MobileIdentity_suci = 2,
      T_TS24501IE_MobileIdentity_guti = 3,
      T_TS24501IE_MobileIdentity_imei = 4,
      T_TS24501IE_MobileIdentity_stmsi = 5,
      T_TS24501IE_MobileIdentity_imeisv = 6,
      T_TS24501IE_MobileIdentity_mac = 7,
      T_TS24501IE_MobileIdentity_eui_64 = 8
   } t;
   union {
      /* t = 1 */
      /* t = 2 */
      TS24501IE_MobileIdentity_suci suci;
      /* t = 3 */
      TS24501IE_MobileIdentity_GUTI guti;
      /* t = 4 */
      TS24008IE_IMEI imei;
      /* t = 5 */
      TS24501IE_MobileIdentity_STMSI stmsi;
      /* t = 6 */
      TS24008IE_IMEISV imeisv;
      /* t = 7 */
      TS24501IE_MobileIdentity_MAC mac;
      /* t = 8 */
      OSOCTET eui_64[8];
   } u;
} TS24501IE_MobileIdentity;

EXTERN int NASEnc_TS24501IE_MobileIdentity (OSCTXT* pctxt
   , TS24501IE_MobileIdentity* pvalue);

EXTERN int NASDec_TS24501IE_MobileIdentity (OSCTXT* pctxt
   , TS24501IE_MobileIdentity* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MobileIdentity (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MobileIdentity* pvalue);

EXTERN TS24501IE_MobileIdentity*
    asn1Test_TS24501IE_MobileIdentity (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MobileIdentity (TS24501IE_MobileIdentity* pvalue);

/**************************************************************/
/*                                                            */
/*  NetworkFeatureSupport_octet4                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NetworkFeatureSupport'
*/
typedef struct EXTERN TS24501IE_NetworkFeatureSupport_octet4 {
   OSBOOL upCIoT;
   OSBOOL hcCpCIoT;
   OSBOOL n3Data;
   OSBOOL cpCIoT;
   OSUINT8 restrictedEC;
   OSBOOL mcsi;
   OSBOOL emcn3;
} TS24501IE_NetworkFeatureSupport_octet4;

EXTERN int NASEnc_TS24501IE_NetworkFeatureSupport_octet4 (OSCTXT* pctxt
   , TS24501IE_NetworkFeatureSupport_octet4* pvalue);

EXTERN int NASDec_TS24501IE_NetworkFeatureSupport_octet4 (OSCTXT* pctxt
   , TS24501IE_NetworkFeatureSupport_octet4* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NetworkFeatureSupport_octet4 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NetworkFeatureSupport_octet4* pvalue);

EXTERN TS24501IE_NetworkFeatureSupport_octet4*
    asn1Test_TS24501IE_NetworkFeatureSupport_octet4 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NetworkFeatureSupport_octet5                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'NetworkFeatureSupport'
*/
typedef struct EXTERN TS24501IE_NetworkFeatureSupport_octet5 {
   OSBOOL spare;
   OSBOOL pr;
   OSBOOL rpr;
   OSBOOL piv;
   OSBOOL ncr;
   OSBOOL ehcCpCIoT;
   OSBOOL atsInd;
   OSBOOL lcs;
} TS24501IE_NetworkFeatureSupport_octet5;

EXTERN int NASEnc_TS24501IE_NetworkFeatureSupport_octet5 (OSCTXT* pctxt
   , TS24501IE_NetworkFeatureSupport_octet5* pvalue);

EXTERN int NASDec_TS24501IE_NetworkFeatureSupport_octet5 (OSCTXT* pctxt
   , TS24501IE_NetworkFeatureSupport_octet5* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NetworkFeatureSupport_octet5 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NetworkFeatureSupport_octet5* pvalue);

EXTERN TS24501IE_NetworkFeatureSupport_octet5*
    asn1Test_TS24501IE_NetworkFeatureSupport_octet5 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NetworkFeatureSupport_octet5 (
   TS24501IE_NetworkFeatureSupport_octet5* pvalue);

/**************************************************************/
/*                                                            */
/*  NetworkFeatureSupport                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.3.5 - 5GS network feature support 
NetworkFeatureSupport ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   -- octet 3 
   mpsInd [1] BOOLEAN,
   interNetworkWithoutN26Ind [2] BOOLEAN,
   emfInd [3] INTEGER (0..3),
   emcInd [4] INTEGER (0..3),
   imsVoPSN3GPPInd [5] BOOLEAN,
   imsVoPS3GPPInd [6] BOOLEAN,
   --<noPresentBit/>
   -- octet 4 
   octet4 [7] SEQUENCE {
      upCIoT [0] BOOLEAN,
      hcCpCIoT [1] BOOLEAN,
      n3Data [2] BOOLEAN,
      cpCIoT [3] BOOLEAN,
      restrictedEC [4] INTEGER (0..3),
      mcsi [5] BOOLEAN,
      emcn3 [6] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   -- octet 5 
   octet5 [8] SEQUENCE {
      spare [0] BOOLEAN DEFAULT FALSE,
      pr [1] BOOLEAN, -- Added in v17.3
      rpr [2] BOOLEAN, -- Added in v17.3
      piv [3] BOOLEAN, -- Added in v17.3
      ncr [4] BOOLEAN, -- Added in v17.3
      ehcCpCIoT [5] BOOLEAN, -- Added in v16.5
      atsInd [6] BOOLEAN,
      lcs [7] BOOLEAN -- Added in v16.5
   } OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_NetworkFeatureSupport {
   struct {
      unsigned octet4Present : 1;
      unsigned octet5Present : 1;
   } m;
   OSUINT8 length;
   OSBOOL mpsInd;
   OSBOOL interNetworkWithoutN26Ind;
   OSUINT8 emfInd;
   OSUINT8 emcInd;
   OSBOOL imsVoPSN3GPPInd;
   OSBOOL imsVoPS3GPPInd;
   TS24501IE_NetworkFeatureSupport_octet4 octet4;
   TS24501IE_NetworkFeatureSupport_octet5 octet5;
} TS24501IE_NetworkFeatureSupport;

EXTERN int NASEnc_TS24501IE_NetworkFeatureSupport (OSCTXT* pctxt
   , TS24501IE_NetworkFeatureSupport* pvalue);

EXTERN int NASDec_TS24501IE_NetworkFeatureSupport (OSCTXT* pctxt
   , TS24501IE_NetworkFeatureSupport* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NetworkFeatureSupport (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NetworkFeatureSupport* pvalue);

EXTERN TS24501IE_NetworkFeatureSupport*
    asn1Test_TS24501IE_NetworkFeatureSupport (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NetworkFeatureSupport (
   TS24501IE_NetworkFeatureSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  RegistrationResult                                        */
/*                                                            */
/**************************************************************/
/*
 9.11.3.6 - Registration result 
RegistrationResult ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..3) DEFAULT 0,
   emergencyRegistered [2] BOOLEAN,
   nssaa [3] BOOLEAN,
   smsAllowed [4] BOOLEAN,
   regResult [5] RegistrationResultValue
}
*/
typedef struct EXTERN TS24501IE_RegistrationResult {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL emergencyRegistered;
   OSBOOL nssaa;
   OSBOOL smsAllowed;
   TS24501IE_RegistrationResultValue regResult;
} TS24501IE_RegistrationResult;

EXTERN int NASEnc_TS24501IE_RegistrationResult (OSCTXT* pctxt
   , TS24501IE_RegistrationResult* pvalue);

EXTERN int NASDec_TS24501IE_RegistrationResult (OSCTXT* pctxt
   , TS24501IE_RegistrationResult* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RegistrationResult (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RegistrationResult* pvalue);

EXTERN TS24501IE_RegistrationResult*
    asn1Test_TS24501IE_RegistrationResult (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_RegistrationResult (
   TS24501IE_RegistrationResult* pvalue);

/**************************************************************/
/*                                                            */
/*  RegistrationType                                          */
/*                                                            */
/**************************************************************/
/*
 9.11.3.7 - Registration type 
RegistrationType ::= SEQUENCE {
   forBit [0] BOOLEAN,
   regisType [1] RegistrationTypeValue
}
*/
typedef struct EXTERN TS24501IE_RegistrationType {
   OSBOOL forBit;
   TS24501IE_RegistrationTypeValue regisType;
} TS24501IE_RegistrationType;

EXTERN int NASEnc_TS24501IE_RegistrationType (OSCTXT* pctxt
   , TS24501IE_RegistrationType* pvalue);

EXTERN int NASDec_TS24501IE_RegistrationType (OSCTXT* pctxt
   , TS24501IE_RegistrationType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RegistrationType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RegistrationType* pvalue);

EXTERN TS24501IE_RegistrationType*
    asn1Test_TS24501IE_RegistrationType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  TrackingAreaIdent                                         */
/*                                                            */
/**************************************************************/
/*
 9.11.3.8 - Tracking area identity 
 Mostly the same as 24.301 except the TAC is 3 octets instead of 2... 
TrackingAreaIdent ::= SEQUENCE {
   mcc-mnc [0] MCCMNCPair,
   tac [1] TrackingAreaCode
}
*/
typedef struct EXTERN TS24501IE_TrackingAreaIdent {
   TS24008IE_MCCMNCPair mcc_mnc;
   TS24501IE_TrackingAreaCode tac;
} TS24501IE_TrackingAreaIdent;

EXTERN int NASEnc_TS24501IE_TrackingAreaIdent (OSCTXT* pctxt
   , TS24501IE_TrackingAreaIdent* pvalue);

EXTERN int NASDec_TS24501IE_TrackingAreaIdent (OSCTXT* pctxt
   , TS24501IE_TrackingAreaIdent* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_TrackingAreaIdent (OSCTXT *pctxt, 
   const char* name, const TS24501IE_TrackingAreaIdent* pvalue);

EXTERN TS24501IE_TrackingAreaIdent*
    asn1Test_TS24501IE_TrackingAreaIdent (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_TrackingAreaIdent (TS24501IE_TrackingAreaIdent* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialTrkAreaIdent0                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrackingAreaIdentListItem'
*/
typedef struct EXTERN TS24501IE_PartialTrkAreaIdent0 {
   TS24008IE_MCCMNCPair mcc_mnc;
   struct  {
      OSUINT8 n;
      TS24501IE_TrackingAreaCode elem[32];
   } tacs;
} TS24501IE_PartialTrkAreaIdent0;

EXTERN int NASEnc_TS24501IE_PartialTrkAreaIdent0 (OSCTXT* pctxt
   , TS24501IE_PartialTrkAreaIdent0* pvalue);

EXTERN int NASDec_TS24501IE_PartialTrkAreaIdent0 (OSCTXT* pctxt
   , TS24501IE_PartialTrkAreaIdent0* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PartialTrkAreaIdent0 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PartialTrkAreaIdent0* pvalue);

EXTERN TS24501IE_PartialTrkAreaIdent0*
    asn1Test_TS24501IE_PartialTrkAreaIdent0 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PartialTrkAreaIdent0 (
   TS24501IE_PartialTrkAreaIdent0* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialTrkAreaIdent1                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrackingAreaIdentListItem'
*/
typedef struct EXTERN TS24501IE_PartialTrkAreaIdent1 {
   TS24008IE_MCCMNCPair mcc_mnc;
   TS24501IE_TrackingAreaCode tac;
} TS24501IE_PartialTrkAreaIdent1;

EXTERN int NASEnc_TS24501IE_PartialTrkAreaIdent1 (OSCTXT* pctxt
   , TS24501IE_PartialTrkAreaIdent1* pvalue);

EXTERN int NASDec_TS24501IE_PartialTrkAreaIdent1 (OSCTXT* pctxt
   , TS24501IE_PartialTrkAreaIdent1* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PartialTrkAreaIdent1 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PartialTrkAreaIdent1* pvalue);

EXTERN TS24501IE_PartialTrkAreaIdent1*
    asn1Test_TS24501IE_PartialTrkAreaIdent1 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PartialTrkAreaIdent1 (
   TS24501IE_PartialTrkAreaIdent1* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialTrkAreaIdent2                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'TrackingAreaIdentListItem'
*/
typedef struct EXTERN TS24501IE_PartialTrkAreaIdent2 {
   OSUINT8 n;
   TS24501IE_TrackingAreaIdent elem[32];
} TS24501IE_PartialTrkAreaIdent2;

EXTERN int NASEnc_TS24501IE_PartialTrkAreaIdent2 (OSCTXT* pctxt
   , TS24501IE_PartialTrkAreaIdent2* pvalue);

EXTERN int NASDec_TS24501IE_PartialTrkAreaIdent2 (OSCTXT* pctxt
   , TS24501IE_PartialTrkAreaIdent2* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PartialTrkAreaIdent2 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PartialTrkAreaIdent2* pvalue);

EXTERN TS24501IE_PartialTrkAreaIdent2*
    asn1Test_TS24501IE_PartialTrkAreaIdent2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PartialTrkAreaIdent2 (
   TS24501IE_PartialTrkAreaIdent2* pvalue);

/**************************************************************/
/*                                                            */
/*  TrackingAreaIdentListItem                                 */
/*                                                            */
/**************************************************************/
/*
TrackingAreaIdentListItem ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   typeOfList [1] INTEGER (0..3),
   numElements [2] INTEGER (0..31), -- number of elements - 1
   --<inline/>
   elements [3] EXPLICIT CHOICE {
      --<selector element="typeOfList" value="0"/>
      --<asn1typename>PartialTrkAreaIdent0</asn1typename>
      partTrkIdentList0 [0] SEQUENCE {
         mcc-mnc [0] MCCMNCPair,
         --<inline/>
         --<length expr="@...numElements + 1"/>
         tacs [1] SEQUENCE (SIZE (1..32)) OF TrackingAreaCode
      },
      --<selector element="typeOfList" value="1"/>
      --<asn1typename>PartialTrkAreaIdent1</asn1typename>
      partTrkIdentList1 [1] SEQUENCE {
         mcc-mnc [0] MCCMNCPair,
         tac [1] TrackingAreaCode
      },
      --<selector element="typeOfList" value="2"/>
      --<length expr="@.numElements + 1"/>
      --<asn1typename>PartialTrkAreaIdent2</asn1typename>
      partTrkIdentList2 [2] SEQUENCE (SIZE (1..32)) OF TrackingAreaIdent,
      --<selector element="typeOfList" value="3"/>
      partTrkIdentList3 [3] MCCMNCPair
   }
}
*/
typedef struct EXTERN TS24501IE_TrackingAreaIdentListItem {
   OSBOOL spare;
   OSUINT8 typeOfList;
   OSUINT8 numElements;
   struct  {
      union {
         /* selector element = typeOfList, value = 0 */
         TS24501IE_PartialTrkAreaIdent0 partTrkIdentList0;
         /* selector element = typeOfList, value = 1 */
         TS24501IE_PartialTrkAreaIdent1 partTrkIdentList1;
         /* selector element = typeOfList, value = 2 */
         TS24501IE_PartialTrkAreaIdent2 partTrkIdentList2;
         /* selector element = typeOfList, value = 3 */
         TS24008IE_MCCMNCPair partTrkIdentList3;
      } u;
   } elements;
} TS24501IE_TrackingAreaIdentListItem;

EXTERN int NASEnc_TS24501IE_TrackingAreaIdentListItem (OSCTXT* pctxt
   , TS24501IE_TrackingAreaIdentListItem* pvalue);

EXTERN int NASDec_TS24501IE_TrackingAreaIdentListItem (OSCTXT* pctxt
   , TS24501IE_TrackingAreaIdentListItem* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_TrackingAreaIdentListItem (OSCTXT *pctxt, 
   const char* name, const TS24501IE_TrackingAreaIdentListItem* pvalue);

EXTERN TS24501IE_TrackingAreaIdentListItem*
    asn1Test_TS24501IE_TrackingAreaIdentListItem (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_TrackingAreaIdentListItem (
   TS24501IE_TrackingAreaIdentListItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TrackingAreaIdentList                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.3.9 - Tracking area identity list 
 Mostly the same as 24.301 except the TAC is 3 octets instead of 2... 
 Also used for Service Area List type (9.11.3.49)... 
TrackingAreaIdentList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   --<is3GVarLenList lengthElem="length"/>
   idents [1] SEQUENCE (SIZE (1..16)) OF TrackingAreaIdentListItem
}
*/
typedef struct EXTERN TS24501IE_TrackingAreaIdentList {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24501IE_TrackingAreaIdentListItem elem[16];
   } idents;
} TS24501IE_TrackingAreaIdentList;

EXTERN int NASEnc_TS24501IE_TrackingAreaIdentList (OSCTXT* pctxt
   , TS24501IE_TrackingAreaIdentList* pvalue);

EXTERN int NASDec_TS24501IE_TrackingAreaIdentList (OSCTXT* pctxt
   , TS24501IE_TrackingAreaIdentList* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_TrackingAreaIdentList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_TrackingAreaIdentList* pvalue);

EXTERN TS24501IE_TrackingAreaIdentList*
    asn1Test_TS24501IE_TrackingAreaIdentList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_TrackingAreaIdentList (
   TS24501IE_TrackingAreaIdentList* pvalue);

/**************************************************************/
/*                                                            */
/*  UpdateType                                                */
/*                                                            */
/**************************************************************/
/*
 9.11.3.9A - Update type 
UpdateType ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..3) DEFAULT 0,
   epsPnbCIoT [2] INTEGER (0..3),
   pnbCIoT [3] INTEGER (0..3),
   ngranUpd [4] BOOLEAN,
   smsReq [5] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_UpdateType {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 epsPnbCIoT;
   OSUINT8 pnbCIoT;
   OSBOOL ngranUpd;
   OSBOOL smsReq;
} TS24501IE_UpdateType;

EXTERN int NASEnc_TS24501IE_UpdateType (OSCTXT* pctxt
   , TS24501IE_UpdateType* pvalue);

EXTERN int NASDec_TS24501IE_UpdateType (OSCTXT* pctxt
   , TS24501IE_UpdateType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UpdateType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UpdateType* pvalue);

EXTERN TS24501IE_UpdateType* asn1Test_TS24501IE_UpdateType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UpdateType (TS24501IE_UpdateType* pvalue);

/**************************************************************/
/*                                                            */
/*  AddlSecurityInfo                                          */
/*                                                            */
/**************************************************************/
/*
 9.11.3.12 - Additional security information 
AddlSecurityInfo ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..63) DEFAULT 0,
   rinmr [2] BOOLEAN,
   hdp [3] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_AddlSecurityInfo {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL rinmr;
   OSBOOL hdp;
} TS24501IE_AddlSecurityInfo;

EXTERN int NASEnc_TS24501IE_AddlSecurityInfo (OSCTXT* pctxt
   , TS24501IE_AddlSecurityInfo* pvalue);

EXTERN int NASDec_TS24501IE_AddlSecurityInfo (OSCTXT* pctxt
   , TS24501IE_AddlSecurityInfo* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AddlSecurityInfo (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AddlSecurityInfo* pvalue);

EXTERN TS24501IE_AddlSecurityInfo*
    asn1Test_TS24501IE_AddlSecurityInfo (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AddlSecurityInfo (TS24501IE_AddlSecurityInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalInfoRequested                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.3.12A - Additional information requested 
AdditionalInfoRequested ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..127) DEFAULT 0,
   cipherKey [2] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_AdditionalInfoRequested {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL cipherKey;
} TS24501IE_AdditionalInfoRequested;

EXTERN int NASEnc_TS24501IE_AdditionalInfoRequested (OSCTXT* pctxt
   , TS24501IE_AdditionalInfoRequested* pvalue);

EXTERN int NASDec_TS24501IE_AdditionalInfoRequested (OSCTXT* pctxt
   , TS24501IE_AdditionalInfoRequested* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AdditionalInfoRequested (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AdditionalInfoRequested* pvalue);

EXTERN TS24501IE_AdditionalInfoRequested*
    asn1Test_TS24501IE_AdditionalInfoRequested (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AdditionalInfoRequested (
   TS24501IE_AdditionalInfoRequested* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedPDUSessionStatus_psi                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AllowedPDUSessionStatus'
*/
typedef struct EXTERN TS24501IE_AllowedPDUSessionStatus_psi {
   OSBOOL elem[16];
} TS24501IE_AllowedPDUSessionStatus_psi;

EXTERN int NASEnc_TS24501IE_AllowedPDUSessionStatus_psi (OSCTXT* pctxt
   , TS24501IE_AllowedPDUSessionStatus_psi* pvalue);

EXTERN int NASDec_TS24501IE_AllowedPDUSessionStatus_psi (OSCTXT* pctxt
   , TS24501IE_AllowedPDUSessionStatus_psi* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AllowedPDUSessionStatus_psi (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AllowedPDUSessionStatus_psi* pvalue);

EXTERN TS24501IE_AllowedPDUSessionStatus_psi*
    asn1Test_TS24501IE_AllowedPDUSessionStatus_psi (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AllowedPDUSessionStatus                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.3.13 - Allowed PDU session status 
AllowedPDUSessionStatus ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   psi [1] SEQUENCE (SIZE (16)) OF BOOLEAN,
   --<noPresentBit/>
   spare [2] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_AllowedPDUSessionStatus {
   struct {
      unsigned sparePresent : 1;
   } m;
   OSUINT8 length;
   TS24501IE_AllowedPDUSessionStatus_psi psi;
   OSDynOctStr spare;
} TS24501IE_AllowedPDUSessionStatus;

EXTERN int NASEnc_TS24501IE_AllowedPDUSessionStatus (OSCTXT* pctxt
   , TS24501IE_AllowedPDUSessionStatus* pvalue);

EXTERN int NASDec_TS24501IE_AllowedPDUSessionStatus (OSCTXT* pctxt
   , TS24501IE_AllowedPDUSessionStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AllowedPDUSessionStatus (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AllowedPDUSessionStatus* pvalue);

EXTERN TS24501IE_AllowedPDUSessionStatus*
    asn1Test_TS24501IE_AllowedPDUSessionStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AllowedPDUSessionStatus (
   TS24501IE_AllowedPDUSessionStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfigUpdateIndication                                    */
/*                                                            */
/**************************************************************/
/*
 9.11.3.18 - Configuration update indication 
ConfigUpdateIndication ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   regRequested [1] BOOLEAN,
   ack [2] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_ConfigUpdateIndication {
   OSUINT8 spare;
   OSBOOL regRequested;
   OSBOOL ack;
} TS24501IE_ConfigUpdateIndication;

EXTERN int NASEnc_TS24501IE_ConfigUpdateIndication (OSCTXT* pctxt
   , TS24501IE_ConfigUpdateIndication* pvalue);

EXTERN int NASDec_TS24501IE_ConfigUpdateIndication (OSCTXT* pctxt
   , TS24501IE_ConfigUpdateIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ConfigUpdateIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ConfigUpdateIndication* pvalue);

EXTERN TS24501IE_ConfigUpdateIndication*
    asn1Test_TS24501IE_ConfigUpdateIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ConfigUpdateIndication (
   TS24501IE_ConfigUpdateIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  CAGEntry                                                  */
/*                                                            */
/**************************************************************/
/*
CAGEntry ::= SEQUENCE {
   length [0] INTEGER (1..255),
   mcc-mnc [1] MCCMNCPair,
   spare [2] INTEGER (0..127) DEFAULT 0,
   cagOnly [3] BOOLEAN,
   --<noPresentBit/>
   --<length fixed-size="0"/>
   cagID [4] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_CAGEntry {
   struct {
      unsigned cagIDPresent : 1;
   } m;
   OSUINT8 length;
   TS24008IE_MCCMNCPair mcc_mnc;
   OSUINT8 spare;
   OSBOOL cagOnly;
   OSDynOctStr cagID;
} TS24501IE_CAGEntry;

EXTERN int NASEnc_TS24501IE_CAGEntry (OSCTXT* pctxt, TS24501IE_CAGEntry* pvalue
   );

EXTERN int NASDec_TS24501IE_CAGEntry (OSCTXT* pctxt, TS24501IE_CAGEntry* pvalue
   );

EXTERN int asn1PrtToStrm_TS24501IE_CAGEntry (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CAGEntry* pvalue);

EXTERN TS24501IE_CAGEntry* asn1Test_TS24501IE_CAGEntry (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_CAGEntry (TS24501IE_CAGEntry* pvalue);

/**************************************************************/
/*                                                            */
/*  CAGInfoList                                               */
/*                                                            */
/**************************************************************/
/*
 9.11.3.18A - CAG information list 
CAGInfoList ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   --<is3GVarLenList lengthElem="length"/>
   --<noPresentBit/>
   entries [1] SEQUENCE OF CAGEntry OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_CAGInfoList {
   struct {
      unsigned entriesPresent : 1;
   } m;
   OSUINT16 length;
   struct  {
      OSSIZE n;
      TS24501IE_CAGEntry *elem;
   } entries;
} TS24501IE_CAGInfoList;

EXTERN int NASEnc_TS24501IE_CAGInfoList (OSCTXT* pctxt
   , TS24501IE_CAGInfoList* pvalue);

EXTERN int NASDec_TS24501IE_CAGInfoList (OSCTXT* pctxt
   , TS24501IE_CAGInfoList* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CAGInfoList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CAGInfoList* pvalue);

EXTERN TS24501IE_CAGInfoList* asn1Test_TS24501IE_CAGInfoList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_CAGInfoList (TS24501IE_CAGInfoList* pvalue);

/**************************************************************/
/*                                                            */
/*  CIoTSmallDataContainer                                    */
/*                                                            */
/**************************************************************/
/*
 9.11.3.18B - CIoT small data container 
CIoTSmallDataContainer ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   dataType [1] CIoTDataTypes,
   --<inline/>
   containerContents [2] EXPLICIT CHOICE {
      --<selector element="dataType" value="0"/>
      ctrlPlaneUserData [0] SEQUENCE {
         ddx [0] INTEGER (0..3),
         pduSessionId [1] INTEGER (0..7)
      },
      --<selector element="dataType" value="1"/>
      sms [1] SEQUENCE {
         spare [0] INTEGER (0..31) DEFAULT 0
      },
      --<selector element="dataType" value="2"/>
      locSvcsMsgContainer [2] SEQUENCE {
         ddx [0] INTEGER (0..3),
         spare [1] INTEGER (0..7) DEFAULT 0,
         addlInfoLen [2] INTEGER (0..255),
         --<noPresentBit/>
         --<length expr="@.addlInfoLen"/>
         addlInfo [3] OCTET STRING OPTIONAL
      }
   },
   --<length fixed-size="0"/>
   contents [3] OCTET STRING
}
*/
typedef struct EXTERN TS24501IE_CIoTSmallDataContainer {
   OSUINT8 length;
   TS24501IE_CIoTDataTypes dataType;
   struct  {
      union {
         /* selector element = dataType, value = 0 */
         struct EXTERN  {
            OSUINT8 ddx;
            OSUINT8 pduSessionId;
         } ctrlPlaneUserData;
         /* selector element = dataType, value = 1 */
         struct EXTERN  {
            OSUINT8 spare;
         } sms;
         /* selector element = dataType, value = 2 */
         struct EXTERN  {
            struct {
               unsigned addlInfoPresent : 1;
            } m;
            OSUINT8 ddx;
            OSUINT8 spare;
            OSUINT8 addlInfoLen;
            OSDynOctStr addlInfo;
         } locSvcsMsgContainer;
      } u;
   } containerContents;
   OSDynOctStr contents;
} TS24501IE_CIoTSmallDataContainer;

EXTERN int NASEnc_TS24501IE_CIoTSmallDataContainer (OSCTXT* pctxt
   , TS24501IE_CIoTSmallDataContainer* pvalue);

EXTERN int NASDec_TS24501IE_CIoTSmallDataContainer (OSCTXT* pctxt
   , TS24501IE_CIoTSmallDataContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CIoTSmallDataContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CIoTSmallDataContainer* pvalue);

EXTERN TS24501IE_CIoTSmallDataContainer*
    asn1Test_TS24501IE_CIoTSmallDataContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_CIoTSmallDataContainer (
   TS24501IE_CIoTSmallDataContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  CipherDataSet_eutraPosSIBType                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CipherDataSet'
*/
typedef struct EXTERN TS24501IE_CipherDataSet_eutraPosSIBType {
   OSBOOL elem[32];
} TS24501IE_CipherDataSet_eutraPosSIBType;

EXTERN int NASEnc_TS24501IE_CipherDataSet_eutraPosSIBType (OSCTXT* pctxt
   , TS24501IE_CipherDataSet_eutraPosSIBType* pvalue);

EXTERN int NASDec_TS24501IE_CipherDataSet_eutraPosSIBType (OSCTXT* pctxt
   , TS24501IE_CipherDataSet_eutraPosSIBType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CipherDataSet_eutraPosSIBType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CipherDataSet_eutraPosSIBType* pvalue);

EXTERN TS24501IE_CipherDataSet_eutraPosSIBType*
    asn1Test_TS24501IE_CipherDataSet_eutraPosSIBType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CipherDataSet_nrPosSIBType                                */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CipherDataSet'
*/
typedef struct EXTERN TS24501IE_CipherDataSet_nrPosSIBType {
   OSBOOL elem[37];
} TS24501IE_CipherDataSet_nrPosSIBType;

EXTERN int NASEnc_TS24501IE_CipherDataSet_nrPosSIBType (OSCTXT* pctxt
   , TS24501IE_CipherDataSet_nrPosSIBType* pvalue);

EXTERN int NASDec_TS24501IE_CipherDataSet_nrPosSIBType (OSCTXT* pctxt
   , TS24501IE_CipherDataSet_nrPosSIBType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CipherDataSet_nrPosSIBType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CipherDataSet_nrPosSIBType* pvalue);

EXTERN TS24501IE_CipherDataSet_nrPosSIBType*
    asn1Test_TS24501IE_CipherDataSet_nrPosSIBType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  CipherDataSet                                             */
/*                                                            */
/**************************************************************/
/*
CipherDataSet ::= SEQUENCE {
   cipherKey [0] OCTET STRING (SIZE (16)),
   spare1 [1] INTEGER (0..7) DEFAULT 0,
   c0Len [2] INTEGER (0..31),
   --<length expr="@c0Len"/>
   c0 [3] OCTET STRING,
   spare2 [4] INTEGER (0..15) DEFAULT 0,
   eutraPosSIBLen [5] INTEGER (0..15),
   eutraPosSIBType [6] SEQUENCE (SIZE (32)) OF BOOLEAN,
   spare3 [7] INTEGER (0..15) DEFAULT 0,
   nrPosSIBLen [8] INTEGER (0..15),
   nrPosSIBType [9] SEQUENCE (SIZE (37)) OF BOOLEAN,
   spare4 [10] INTEGER (0..7) DEFAULT 0,
   validityStartTime [11] TimeZoneAndTime,
   validityDuration [12] INTEGER (0..65535),
   taiList [13] TrackingAreaIdentList
}
*/
typedef struct EXTERN TS24501IE_CipherDataSet {
   OSOCTET cipherKey[16];
   OSUINT8 spare1;
   OSUINT8 c0Len;
   OSDynOctStr c0;
   OSUINT8 spare2;
   OSUINT8 eutraPosSIBLen;
   TS24501IE_CipherDataSet_eutraPosSIBType eutraPosSIBType;
   OSUINT8 spare3;
   OSUINT8 nrPosSIBLen;
   TS24501IE_CipherDataSet_nrPosSIBType nrPosSIBType;
   OSUINT8 spare4;
   TS24008IE_TimeZoneAndTime validityStartTime;
   OSUINT16 validityDuration;
   TS24501IE_TrackingAreaIdentList taiList;
} TS24501IE_CipherDataSet;

EXTERN int NASEnc_TS24501IE_CipherDataSet (OSCTXT* pctxt
   , TS24501IE_CipherDataSet* pvalue);

EXTERN int NASDec_TS24501IE_CipherDataSet (OSCTXT* pctxt
   , TS24501IE_CipherDataSet* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CipherDataSet (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CipherDataSet* pvalue);

EXTERN TS24501IE_CipherDataSet*
    asn1Test_TS24501IE_CipherDataSet (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_CipherDataSet (TS24501IE_CipherDataSet* pvalue);

/**************************************************************/
/*                                                            */
/*  CipheringKeyData                                          */
/*                                                            */
/**************************************************************/
/*
 9.11.3.18C - Ciphering key data 
CipheringKeyData ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65535),
   --<is3GVarLenList lengthElem="length"/>
   --<storage>array</storage>
   dataSet [1] SEQUENCE (SIZE (1..16)) OF CipherDataSet
}
*/
typedef struct EXTERN TS24501IE_CipheringKeyData {
   OSUINT16 length;
   struct  {
      OSUINT8 n;
      TS24501IE_CipherDataSet elem[16];
   } dataSet;
} TS24501IE_CipheringKeyData;

EXTERN int NASEnc_TS24501IE_CipheringKeyData (OSCTXT* pctxt
   , TS24501IE_CipheringKeyData* pvalue);

EXTERN int NASDec_TS24501IE_CipheringKeyData (OSCTXT* pctxt
   , TS24501IE_CipheringKeyData* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CipheringKeyData (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CipheringKeyData* pvalue);

EXTERN TS24501IE_CipheringKeyData*
    asn1Test_TS24501IE_CipheringKeyData (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_CipheringKeyData (TS24501IE_CipheringKeyData* pvalue);

/**************************************************************/
/*                                                            */
/*  ControlPlaneServiceType                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.3.18D - Control plane service type 
ControlPlaneServiceType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   value [1] INTEGER (0..7)
}
*/
typedef struct EXTERN TS24501IE_ControlPlaneServiceType {
   OSBOOL spare;
   OSUINT8 value;
} TS24501IE_ControlPlaneServiceType;

EXTERN int NASEnc_TS24501IE_ControlPlaneServiceType (OSCTXT* pctxt
   , TS24501IE_ControlPlaneServiceType* pvalue);

EXTERN int NASDec_TS24501IE_ControlPlaneServiceType (OSCTXT* pctxt
   , TS24501IE_ControlPlaneServiceType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ControlPlaneServiceType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ControlPlaneServiceType* pvalue);

EXTERN TS24501IE_ControlPlaneServiceType*
    asn1Test_TS24501IE_ControlPlaneServiceType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ControlPlaneServiceType (
   TS24501IE_ControlPlaneServiceType* pvalue);

/**************************************************************/
/*                                                            */
/*  DeregistrationType                                        */
/*                                                            */
/**************************************************************/
/*
 9.11.3.20 - Deregistration type 
DeregistrationType ::= SEQUENCE {
   switchOff [0] BOOLEAN,
   reregReqd [1] BOOLEAN,
   accessType [2] INTEGER (0..3)
}
*/
typedef struct EXTERN TS24501IE_DeregistrationType {
   OSBOOL switchOff;
   OSBOOL reregReqd;
   OSUINT8 accessType;
} TS24501IE_DeregistrationType;

EXTERN int NASEnc_TS24501IE_DeregistrationType (OSCTXT* pctxt
   , TS24501IE_DeregistrationType* pvalue);

EXTERN int NASDec_TS24501IE_DeregistrationType (OSCTXT* pctxt
   , TS24501IE_DeregistrationType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_DeregistrationType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_DeregistrationType* pvalue);

EXTERN TS24501IE_DeregistrationType*
    asn1Test_TS24501IE_DeregistrationType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSMessageContainer                                       */
/*                                                            */
/**************************************************************/
/*
 9.11.3.24 - EPS NAS message container 
EPSMessageContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65535),
   --<is3GVarLenList lengthElem="length"/>
   contents [1] SEQUENCE OF NASMessageContainer
}
*/
typedef struct EXTERN TS24501IE_EPSMessageContainer {
   OSUINT16 length;
   struct  {
      OSSIZE n;
      TS24301IE_NASMessageContainer *elem;
   } contents;
} TS24501IE_EPSMessageContainer;

EXTERN int NASEnc_TS24501IE_EPSMessageContainer (OSCTXT* pctxt
   , TS24501IE_EPSMessageContainer* pvalue);

EXTERN int NASDec_TS24501IE_EPSMessageContainer (OSCTXT* pctxt
   , TS24501IE_EPSMessageContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EPSMessageContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EPSMessageContainer* pvalue);

EXTERN TS24501IE_EPSMessageContainer*
    asn1Test_TS24501IE_EPSMessageContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_EPSMessageContainer (
   TS24501IE_EPSMessageContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  LADNIndication                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.3.29 - LADN Indication 
LADNIndication ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   --<is3GVarLenList lengthElem="length"/>
   --<noPresentBit/>
   contents [1] SEQUENCE (SIZE (0..8)) OF DNNList OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_LADNIndication {
   struct {
      unsigned contentsPresent : 1;
   } m;
   OSUINT16 length;
   struct  {
      OSUINT8 n;
      TS24501IE_DNNList elem[8];
   } contents;
} TS24501IE_LADNIndication;

EXTERN int NASEnc_TS24501IE_LADNIndication (OSCTXT* pctxt
   , TS24501IE_LADNIndication* pvalue);

EXTERN int NASDec_TS24501IE_LADNIndication (OSCTXT* pctxt
   , TS24501IE_LADNIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_LADNIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_LADNIndication* pvalue);

EXTERN TS24501IE_LADNIndication*
    asn1Test_TS24501IE_LADNIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_LADNIndication (TS24501IE_LADNIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  LADN                                                      */
/*                                                            */
/**************************************************************/
/*
LADN ::= SEQUENCE {
   dnn [0] DNNList,
   tai [1] TrackingAreaIdent
}
*/
typedef struct EXTERN TS24501IE_LADN {
   TS24501IE_DNNList dnn;
   TS24501IE_TrackingAreaIdent tai;
} TS24501IE_LADN;

EXTERN int NASEnc_TS24501IE_LADN (OSCTXT* pctxt, TS24501IE_LADN* pvalue);

EXTERN int NASDec_TS24501IE_LADN (OSCTXT* pctxt, TS24501IE_LADN* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_LADN (OSCTXT *pctxt, 
   const char* name, const TS24501IE_LADN* pvalue);

EXTERN TS24501IE_LADN* asn1Test_TS24501IE_LADN (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_LADN (TS24501IE_LADN* pvalue);

/**************************************************************/
/*                                                            */
/*  LADNList                                                  */
/*                                                            */
/**************************************************************/
/*
 9.11.3.30 - LADN 
LADNList ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..1715),
   --<is3GVarLenList lengthElem="length"/>
   contents [1] SEQUENCE (SIZE (0..8)) OF LADN
}
*/
typedef struct EXTERN TS24501IE_LADNList {
   OSUINT16 length;
   struct  {
      OSUINT8 n;
      TS24501IE_LADN elem[8];
   } contents;
} TS24501IE_LADNList;

EXTERN int NASEnc_TS24501IE_LADNList (OSCTXT* pctxt, TS24501IE_LADNList* pvalue
   );

EXTERN int NASDec_TS24501IE_LADNList (OSCTXT* pctxt, TS24501IE_LADNList* pvalue
   );

EXTERN int asn1PrtToStrm_TS24501IE_LADNList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_LADNList* pvalue);

EXTERN TS24501IE_LADNList* asn1Test_TS24501IE_LADNList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_LADNList (TS24501IE_LADNList* pvalue);

/**************************************************************/
/*                                                            */
/*  MICOIndication                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.3.31 - MICO indication 
MICOIndication ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   sprti [1] BOOLEAN,
   raai [2] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_MICOIndication {
   OSUINT8 spare;
   OSBOOL sprti;
   OSBOOL raai;
} TS24501IE_MICOIndication;

EXTERN int NASEnc_TS24501IE_MICOIndication (OSCTXT* pctxt
   , TS24501IE_MICOIndication* pvalue);

EXTERN int NASDec_TS24501IE_MICOIndication (OSCTXT* pctxt
   , TS24501IE_MICOIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MICOIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MICOIndication* pvalue);

EXTERN TS24501IE_MICOIndication*
    asn1Test_TS24501IE_MICOIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MICOIndication (TS24501IE_MICOIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  MappedSNSSAIContent                                       */
/*                                                            */
/**************************************************************/
/*
MappedSNSSAIContent ::= SEQUENCE {
   length [0] INTEGER (1..255),
   mappedSST [1] OCTET STRING (SIZE (1)),
   --<noPresentBit/>
   mappedSD [2] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_MappedSNSSAIContent {
   struct {
      unsigned mappedSDPresent : 1;
   } m;
   OSUINT8 length;
   OSOCTET mappedSST[1];
   OSDynOctStr mappedSD;
} TS24501IE_MappedSNSSAIContent;

EXTERN int NASEnc_TS24501IE_MappedSNSSAIContent (OSCTXT* pctxt
   , TS24501IE_MappedSNSSAIContent* pvalue);

EXTERN int NASDec_TS24501IE_MappedSNSSAIContent (OSCTXT* pctxt
   , TS24501IE_MappedSNSSAIContent* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MappedSNSSAIContent (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MappedSNSSAIContent* pvalue);

EXTERN TS24501IE_MappedSNSSAIContent*
    asn1Test_TS24501IE_MappedSNSSAIContent (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MappedSNSSAIContent (
   TS24501IE_MappedSNSSAIContent* pvalue);

/**************************************************************/
/*                                                            */
/*  MappedNSSAI                                               */
/*                                                            */
/**************************************************************/
/*
 9.11.3.31B - Mapped NSSAI 
MappedNSSAI ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   --<is3GVarLenList lengthElem="length"/>
   contents [1] SEQUENCE (SIZE (1..8)) OF MappedSNSSAIContent
}
*/
typedef struct EXTERN TS24501IE_MappedNSSAI {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24501IE_MappedSNSSAIContent elem[8];
   } contents;
} TS24501IE_MappedNSSAI;

EXTERN int NASEnc_TS24501IE_MappedNSSAI (OSCTXT* pctxt
   , TS24501IE_MappedNSSAI* pvalue);

EXTERN int NASDec_TS24501IE_MappedNSSAI (OSCTXT* pctxt
   , TS24501IE_MappedNSSAI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MappedNSSAI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MappedNSSAI* pvalue);

EXTERN TS24501IE_MappedNSSAI* asn1Test_TS24501IE_MappedNSSAI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MappedNSSAI (TS24501IE_MappedNSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  NASMessageContainer2                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.32 - NAS key set identifier 
 Defined in TS24301IEs.asn 
 9.11.3.33 - NAS message container 
 Different from NASMessageContainer defined in 24.301... 
NASMessageContainer2 ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65535),
   --<length fixed-size="0"/>
   contents [1] OCTET STRING (SIZE (1..65535))
}
*/
typedef struct EXTERN TS24501IE_NASMessageContainer2 {
   OSUINT16 length;
   OSDynOctStr contents;
} TS24501IE_NASMessageContainer2;

EXTERN int NASEnc_TS24501IE_NASMessageContainer2 (OSCTXT* pctxt
   , TS24501IE_NASMessageContainer2* pvalue);

EXTERN int NASDec_TS24501IE_NASMessageContainer2 (OSCTXT* pctxt
   , TS24501IE_NASMessageContainer2* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NASMessageContainer2 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NASMessageContainer2* pvalue);

EXTERN TS24501IE_NASMessageContainer2*
    asn1Test_TS24501IE_NASMessageContainer2 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NASMessageContainer2 (
   TS24501IE_NASMessageContainer2* pvalue);

/**************************************************************/
/*                                                            */
/*  NASSecurityAlgorithm                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.34 - NAS security algorithms 
NASSecurityAlgorithm ::= SEQUENCE {
   cipherType [0] CipherTypes,
   protectionType [1] ProtectionTypes
}
*/
typedef struct EXTERN TS24501IE_NASSecurityAlgorithm {
   TS24501IE_CipherTypes cipherType;
   TS24501IE_ProtectionTypes protectionType;
} TS24501IE_NASSecurityAlgorithm;

EXTERN int NASEnc_TS24501IE_NASSecurityAlgorithm (OSCTXT* pctxt
   , TS24501IE_NASSecurityAlgorithm* pvalue);

EXTERN int NASDec_TS24501IE_NASSecurityAlgorithm (OSCTXT* pctxt
   , TS24501IE_NASSecurityAlgorithm* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NASSecurityAlgorithm (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NASSecurityAlgorithm* pvalue);

EXTERN TS24501IE_NASSecurityAlgorithm*
    asn1Test_TS24501IE_NASSecurityAlgorithm (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  NetSliceIndication                                        */
/*                                                            */
/**************************************************************/
/*
 9.11.3.36 - Network slicing indication 
NetSliceIndication ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   dcni [1] BOOLEAN,
   nssci [2] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_NetSliceIndication {
   OSUINT8 spare;
   OSBOOL dcni;
   OSBOOL nssci;
} TS24501IE_NetSliceIndication;

EXTERN int NASEnc_TS24501IE_NetSliceIndication (OSCTXT* pctxt
   , TS24501IE_NetSliceIndication* pvalue);

EXTERN int NASDec_TS24501IE_NetSliceIndication (OSCTXT* pctxt
   , TS24501IE_NetSliceIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NetSliceIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NetSliceIndication* pvalue);

EXTERN TS24501IE_NetSliceIndication*
    asn1Test_TS24501IE_NetSliceIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NetSliceIndication (
   TS24501IE_NetSliceIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  NSSAI                                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.3.37 - NSSAI 
NSSAI ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   --<is3GVarLenList lengthElem="length"/>
   contents [1] SEQUENCE (SIZE (1..16)) OF SNSSAI
}
*/
typedef struct EXTERN TS24501IE_NSSAI {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24501IE_SNSSAI elem[16];
   } contents;
} TS24501IE_NSSAI;

EXTERN int NASEnc_TS24501IE_NSSAI (OSCTXT* pctxt, TS24501IE_NSSAI* pvalue);

EXTERN int NASDec_TS24501IE_NSSAI (OSCTXT* pctxt, TS24501IE_NSSAI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NSSAI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NSSAI* pvalue);

EXTERN TS24501IE_NSSAI* asn1Test_TS24501IE_NSSAI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NSSAI (TS24501IE_NSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  NSSAIInclusionMode                                        */
/*                                                            */
/**************************************************************/
/*
 9.11.3.37A - NSSAI inclusion mode 
NSSAIInclusionMode ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   inclusionMode [1] ENUMERATED { modeA(0), modeB(1), modeC(2), modeD(3) }
}
*/
typedef struct EXTERN TS24501IE_NSSAIInclusionMode {
   OSUINT8 spare;
   TS24501IE_NSSAIInclusionMode_inclusionMode inclusionMode;
} TS24501IE_NSSAIInclusionMode;

EXTERN int NASEnc_TS24501IE_NSSAIInclusionMode (OSCTXT* pctxt
   , TS24501IE_NSSAIInclusionMode* pvalue);

EXTERN int NASDec_TS24501IE_NSSAIInclusionMode (OSCTXT* pctxt
   , TS24501IE_NSSAIInclusionMode* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NSSAIInclusionMode (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NSSAIInclusionMode* pvalue);

EXTERN TS24501IE_NSSAIInclusionMode*
    asn1Test_TS24501IE_NSSAIInclusionMode (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NSSAIInclusionMode (
   TS24501IE_NSSAIInclusionMode* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessCategoryDefinition_categories                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'AccessCategoryDefinition'
*/
typedef struct EXTERN TS24501IE_AccessCategoryDefinition_categories {
   OSUINT8 spare2;
   TS24501IE_AccessCategories accessCategory;
} TS24501IE_AccessCategoryDefinition_categories;

EXTERN int NASEnc_TS24501IE_AccessCategoryDefinition_categories (OSCTXT* pctxt
   , TS24501IE_AccessCategoryDefinition_categories* pvalue);

EXTERN int NASDec_TS24501IE_AccessCategoryDefinition_categories (OSCTXT* pctxt
   , TS24501IE_AccessCategoryDefinition_categories* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AccessCategoryDefinition_categories (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AccessCategoryDefinition_categories* pvalue);

EXTERN TS24501IE_AccessCategoryDefinition_categories*
    asn1Test_TS24501IE_AccessCategoryDefinition_categories (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AccessCategoryDefinition_categories (
   TS24501IE_AccessCategoryDefinition_categories* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessCategoryDefinition                                  */
/*                                                            */
/**************************************************************/
/*
AccessCategoryDefinition ::= SEQUENCE {
   precedence [0] INTEGER (1..255),
   psac [1] BOOLEAN,
   spare [2] INTEGER (0..3) DEFAULT 0,
   categoryNum [3] INTEGER (0..31),
   --<is3GLength/>
   length [4] INTEGER (1..255),
   --<is3GVarLenList lengthElem="length"/>
   criteria [5] SEQUENCE OF OCTET STRING,
   --<noPresentBit/>
   categories [6] SEQUENCE {
      spare2 [0] INTEGER (0..7) DEFAULT 0,
      accessCategory [1] AccessCategories
   } OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_AccessCategoryDefinition {
   struct {
      unsigned categoriesPresent : 1;
   } m;
   OSUINT8 precedence;
   OSBOOL psac;
   OSUINT8 spare;
   OSUINT8 categoryNum;
   OSUINT8 length;
   struct  {
      OSSIZE n;
      OSDynOctStr *elem;
   } criteria;
   TS24501IE_AccessCategoryDefinition_categories categories;
} TS24501IE_AccessCategoryDefinition;

EXTERN int NASEnc_TS24501IE_AccessCategoryDefinition (OSCTXT* pctxt
   , TS24501IE_AccessCategoryDefinition* pvalue);

EXTERN int NASDec_TS24501IE_AccessCategoryDefinition (OSCTXT* pctxt
   , TS24501IE_AccessCategoryDefinition* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AccessCategoryDefinition (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AccessCategoryDefinition* pvalue);

EXTERN TS24501IE_AccessCategoryDefinition*
    asn1Test_TS24501IE_AccessCategoryDefinition (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AccessCategoryDefinition (
   TS24501IE_AccessCategoryDefinition* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessCategoryDefinitions                                 */
/*                                                            */
/**************************************************************/
/*
 9.11.3.38 - Operator defined access category definitions 
AccessCategoryDefinitions ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65535),
   --<is3GVarLenList lengthElem="length"/>
   --<noPresentBit/>
   contents [1] SEQUENCE OF AccessCategoryDefinition OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_AccessCategoryDefinitions {
   struct {
      unsigned contentsPresent : 1;
   } m;
   OSUINT16 length;
   struct  {
      OSSIZE n;
      TS24501IE_AccessCategoryDefinition *elem;
   } contents;
} TS24501IE_AccessCategoryDefinitions;

EXTERN int NASEnc_TS24501IE_AccessCategoryDefinitions (OSCTXT* pctxt
   , TS24501IE_AccessCategoryDefinitions* pvalue);

EXTERN int NASDec_TS24501IE_AccessCategoryDefinitions (OSCTXT* pctxt
   , TS24501IE_AccessCategoryDefinitions* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AccessCategoryDefinitions (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AccessCategoryDefinitions* pvalue);

EXTERN TS24501IE_AccessCategoryDefinitions*
    asn1Test_TS24501IE_AccessCategoryDefinitions (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AccessCategoryDefinitions (
   TS24501IE_AccessCategoryDefinitions* pvalue);

/**************************************************************/
/*                                                            */
/*  OptionalIE                                                */
/*                                                            */
/**************************************************************/
/*
OptionalIE ::= SEQUENCE {
   type [0] INTEGER (0..255),
   value [1] OCTET STRING -- (preceeded by 1 octet length)
}
*/
typedef struct EXTERN TS24501IE_OptionalIE {
   OSUINT8 type;
   OSDynOctStr value;
} TS24501IE_OptionalIE;

EXTERN int NASEnc_TS24501IE_OptionalIE (OSCTXT* pctxt
   , TS24501IE_OptionalIE* pvalue);

EXTERN int NASDec_TS24501IE_OptionalIE (OSCTXT* pctxt
   , TS24501IE_OptionalIE* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_OptionalIE (OSCTXT *pctxt, 
   const char* name, const TS24501IE_OptionalIE* pvalue);

EXTERN TS24501IE_OptionalIE* asn1Test_TS24501IE_OptionalIE (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_OptionalIE (TS24501IE_OptionalIE* pvalue);

/**************************************************************/
/*                                                            */
/*  PayloadContainerEntry                                     */
/*                                                            */
/**************************************************************/
/*
PayloadContainerEntry ::= SEQUENCE {
   entryLength [0] INTEGER (1..255),
   numOptIEs [1] INTEGER (1..15),
   type [2] PayloadContainerType,
   --<inline/>
   --<length expr="@numOptIEs"/>
   optionalIEs [3] SEQUENCE (SIZE (1..15)) OF OptionalIE,
   contents [4] OCTET STRING (SIZE (0..65535))
}
*/
typedef struct EXTERN TS24501IE_PayloadContainerEntry {
   OSUINT8 entryLength;
   OSUINT8 numOptIEs;
   TS24501IE_PayloadContainerType type;
   struct  {
      OSUINT8 n;
      TS24501IE_OptionalIE elem[15];
   } optionalIEs;
   OSDynOctStr contents;
} TS24501IE_PayloadContainerEntry;

EXTERN int NASEnc_TS24501IE_PayloadContainerEntry (OSCTXT* pctxt
   , TS24501IE_PayloadContainerEntry* pvalue);

EXTERN int NASDec_TS24501IE_PayloadContainerEntry (OSCTXT* pctxt
   , TS24501IE_PayloadContainerEntry* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PayloadContainerEntry (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PayloadContainerEntry* pvalue);

EXTERN TS24501IE_PayloadContainerEntry*
    asn1Test_TS24501IE_PayloadContainerEntry (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PayloadContainerEntry (
   TS24501IE_PayloadContainerEntry* pvalue);

/**************************************************************/
/*                                                            */
/*  PayloadContainerContents                                  */
/*                                                            */
/**************************************************************/
/*
PayloadContainerContents ::= SEQUENCE {
   numEntries [0] INTEGER (0..255),
   --<inline/>
   --<length expr="@numEntries"/>
   entries [1] SEQUENCE (SIZE (0..255)) OF PayloadContainerEntry
}
*/
typedef struct EXTERN TS24501IE_PayloadContainerContents {
   OSUINT8 numEntries;
   struct  {
      OSUINT8 n;
      TS24501IE_PayloadContainerEntry elem[255];
   } entries;
} TS24501IE_PayloadContainerContents;

EXTERN int NASEnc_TS24501IE_PayloadContainerContents (OSCTXT* pctxt
   , TS24501IE_PayloadContainerContents* pvalue);

EXTERN int NASDec_TS24501IE_PayloadContainerContents (OSCTXT* pctxt
   , TS24501IE_PayloadContainerContents* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PayloadContainerContents (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PayloadContainerContents* pvalue);

EXTERN TS24501IE_PayloadContainerContents*
    asn1Test_TS24501IE_PayloadContainerContents (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PayloadContainerContents (
   TS24501IE_PayloadContainerContents* pvalue);

/**************************************************************/
/*                                                            */
/*  MultiPayloadContainer                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.3.39 - Payload container
 Warning: this type covers the specific case where the payload container
 type is 15 (Multiple payloads).
MultiPayloadContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..65535),
   contents [1] PayloadContainerContents
}
*/
typedef struct EXTERN TS24501IE_MultiPayloadContainer {
   OSUINT16 length;
   TS24501IE_PayloadContainerContents contents;
} TS24501IE_MultiPayloadContainer;

EXTERN int NASEnc_TS24501IE_MultiPayloadContainer (OSCTXT* pctxt
   , TS24501IE_MultiPayloadContainer* pvalue);

EXTERN int NASDec_TS24501IE_MultiPayloadContainer (OSCTXT* pctxt
   , TS24501IE_MultiPayloadContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MultiPayloadContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MultiPayloadContainer* pvalue);

EXTERN TS24501IE_MultiPayloadContainer*
    asn1Test_TS24501IE_MultiPayloadContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MultiPayloadContainer (
   TS24501IE_MultiPayloadContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  ReactivateCause                                           */
/*                                                            */
/**************************************************************/
/*
ReactivateCause ::= SEQUENCE {
   sessionId [0] INTEGER (0..255),
   cause [1] MMCause
}
*/
typedef struct EXTERN TS24501IE_ReactivateCause {
   OSUINT8 sessionId;
   TS24501IE_MMCause cause;
} TS24501IE_ReactivateCause;

EXTERN int NASEnc_TS24501IE_ReactivateCause (OSCTXT* pctxt
   , TS24501IE_ReactivateCause* pvalue);

EXTERN int NASDec_TS24501IE_ReactivateCause (OSCTXT* pctxt
   , TS24501IE_ReactivateCause* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ReactivateCause (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ReactivateCause* pvalue);

EXTERN TS24501IE_ReactivateCause*
    asn1Test_TS24501IE_ReactivateCause (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SessionReactivateCause                                    */
/*                                                            */
/**************************************************************/
/*
 9.11.3.43 - PDU session reactivation result error cause 
SessionReactivateCause ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (1..512),
   --<is3GVarLenList lengthElem="length"/>
   reactivateCause [1] SEQUENCE (SIZE (1..255)) OF ReactivateCause
}
*/
typedef struct EXTERN TS24501IE_SessionReactivateCause {
   OSUINT16 length;
   struct  {
      OSUINT8 n;
      TS24501IE_ReactivateCause elem[255];
   } reactivateCause;
} TS24501IE_SessionReactivateCause;

EXTERN int NASEnc_TS24501IE_SessionReactivateCause (OSCTXT* pctxt
   , TS24501IE_SessionReactivateCause* pvalue);

EXTERN int NASDec_TS24501IE_SessionReactivateCause (OSCTXT* pctxt
   , TS24501IE_SessionReactivateCause* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SessionReactivateCause (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SessionReactivateCause* pvalue);

EXTERN TS24501IE_SessionReactivateCause*
    asn1Test_TS24501IE_SessionReactivateCause (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SessionReactivateCause (
   TS24501IE_SessionReactivateCause* pvalue);

/**************************************************************/
/*                                                            */
/*  RejectedNSSAI                                             */
/*                                                            */
/**************************************************************/
/*
RejectedNSSAI ::= SEQUENCE {
   length [0] INTEGER (1..15),
   cause [1] ENUMERATED { unavailInCurrPlmn(0), unavailInCurrRegisArea(1), authPending(2), causeMAX(15) },
   sst [2] SST,
   --<noPresentBit/>
   sd [3] SD OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_RejectedNSSAI {
   struct {
      unsigned sdPresent : 1;
   } m;
   OSUINT8 length;
   TS24501IE_RejectedNSSAI_cause cause;
   TS24501IE_SST sst;
   TS24501IE_SD sd;
} TS24501IE_RejectedNSSAI;

EXTERN int NASEnc_TS24501IE_RejectedNSSAI (OSCTXT* pctxt
   , TS24501IE_RejectedNSSAI* pvalue);

EXTERN int NASDec_TS24501IE_RejectedNSSAI (OSCTXT* pctxt
   , TS24501IE_RejectedNSSAI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RejectedNSSAI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RejectedNSSAI* pvalue);

EXTERN TS24501IE_RejectedNSSAI*
    asn1Test_TS24501IE_RejectedNSSAI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_RejectedNSSAI (TS24501IE_RejectedNSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  RejectedNSSAIList                                         */
/*                                                            */
/**************************************************************/
/*
 9.11.3.46 - Rejected NSSAI 
RejectedNSSAIList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   --<is3GVarLenList lengthElem="length"/>
   rejectedNSSAI [1] SEQUENCE (SIZE (1..8)) OF RejectedNSSAI
}
*/
typedef struct EXTERN TS24501IE_RejectedNSSAIList {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24501IE_RejectedNSSAI elem[8];
   } rejectedNSSAI;
} TS24501IE_RejectedNSSAIList;

EXTERN int NASEnc_TS24501IE_RejectedNSSAIList (OSCTXT* pctxt
   , TS24501IE_RejectedNSSAIList* pvalue);

EXTERN int NASDec_TS24501IE_RejectedNSSAIList (OSCTXT* pctxt
   , TS24501IE_RejectedNSSAIList* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RejectedNSSAIList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RejectedNSSAIList* pvalue);

EXTERN TS24501IE_RejectedNSSAIList*
    asn1Test_TS24501IE_RejectedNSSAIList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_RejectedNSSAIList (TS24501IE_RejectedNSSAIList* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestType                                               */
/*                                                            */
/**************************************************************/
/*
 9.11.3.47 - Request type 
RequestType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   reqType [1] RequestTypes
}
*/
typedef struct EXTERN TS24501IE_RequestType {
   OSBOOL spare;
   TS24501IE_RequestTypes reqType;
} TS24501IE_RequestType;

EXTERN int NASEnc_TS24501IE_RequestType (OSCTXT* pctxt
   , TS24501IE_RequestType* pvalue);

EXTERN int NASDec_TS24501IE_RequestType (OSCTXT* pctxt
   , TS24501IE_RequestType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_RequestType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_RequestType* pvalue);

EXTERN TS24501IE_RequestType* asn1Test_TS24501IE_RequestType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_RequestType (TS24501IE_RequestType* pvalue);

/**************************************************************/
/*                                                            */
/*  SMSIndication                                             */
/*                                                            */
/**************************************************************/
/*
 9.11.3.50A - SMS indication 
SMSIndication ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   sai [1] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_SMSIndication {
   OSUINT8 spare;
   OSBOOL sai;
} TS24501IE_SMSIndication;

EXTERN int NASEnc_TS24501IE_SMSIndication (OSCTXT* pctxt
   , TS24501IE_SMSIndication* pvalue);

EXTERN int NASDec_TS24501IE_SMSIndication (OSCTXT* pctxt
   , TS24501IE_SMSIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SMSIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SMSIndication* pvalue);

EXTERN TS24501IE_SMSIndication*
    asn1Test_TS24501IE_SMSIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SMSIndication (TS24501IE_SMSIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  PLMNTechList                                              */
/*                                                            */
/**************************************************************/
/*
PLMNTechList ::= SEQUENCE {
   id [0] OCTET STRING (SIZE (3)),
   techId [1] OCTET STRING (SIZE (2))
}
*/
typedef struct EXTERN TS24501IE_PLMNTechList {
   OSOCTET id[3];
   OSOCTET techId[2];
} TS24501IE_PLMNTechList;

EXTERN int NASEnc_TS24501IE_PLMNTechList (OSCTXT* pctxt
   , TS24501IE_PLMNTechList* pvalue);

EXTERN int NASDec_TS24501IE_PLMNTechList (OSCTXT* pctxt
   , TS24501IE_PLMNTechList* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PLMNTechList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PLMNTechList* pvalue);

EXTERN TS24501IE_PLMNTechList* asn1Test_TS24501IE_PLMNTechList (OSCTXT* pctxt)
   ;

/**************************************************************/
/*                                                            */
/*  SORSteering                                               */
/*                                                            */
/**************************************************************/
/*
 SOR for data type = 0 (steering of roaming information) 
SORSteering ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   ap [1] BOOLEAN,
   ack [2] BOOLEAN,
   listType [3] INTEGER (0..1),
   listInd [4] BOOLEAN,
   dataType [5] INTEGER (0..1) DEFAULT 0, -- always 0 
   sorMAC [6] OCTET STRING (SIZE (16)),
   counter [7] OCTET STRING (SIZE (2)),
   --<inline/>
   --<noPresentBit/>
   content [8] EXPLICIT CHOICE {
      --<selector element="listType" value="0"/>      
      --<length fixed-size="0"/>
      securedPacket [0] OCTET STRING,
      --<selector element="listType" value="1"/>    
      --<length fixed-size="0"/>
      plmnAccess [1] SEQUENCE OF PLMNTechList
   } OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_SORSteering {
   struct {
      unsigned contentPresent : 1;
   } m;
   OSUINT8 spare;
   OSBOOL ap;
   OSBOOL ack;
   OSUINT8 listType;
   OSBOOL listInd;
   OSUINT8 dataType;
   OSOCTET sorMAC[16];
   OSOCTET counter[2];
   struct  {
      union {
         /* selector element = listType, value = 0 */
         OSDynOctStr securedPacket;
         /* selector element = listType, value = 1 */
         struct  {
            OSSIZE n;
            TS24501IE_PLMNTechList *elem;
         } plmnAccess;
      } u;
   } content;
} TS24501IE_SORSteering;

EXTERN int NASEnc_TS24501IE_SORSteering (OSCTXT* pctxt
   , TS24501IE_SORSteering* pvalue);

EXTERN int NASDec_TS24501IE_SORSteering (OSCTXT* pctxt
   , TS24501IE_SORSteering* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SORSteering (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SORSteering* pvalue);

EXTERN TS24501IE_SORSteering* asn1Test_TS24501IE_SORSteering (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SORSteering (TS24501IE_SORSteering* pvalue);

/**************************************************************/
/*                                                            */
/*  SORAck                                                    */
/*                                                            */
/**************************************************************/
/*
 SOR for data type = 1 (ack of steering of roaming information) 
SORAck ::= SEQUENCE {
   spare [0] INTEGER (0..63) DEFAULT 0,
   mssi [1] BOOLEAN,
   dataType [2] INTEGER (0..1) DEFAULT 1, -- always 1 
   sorMAC [3] OCTET STRING (SIZE (16))
}
*/
typedef struct EXTERN TS24501IE_SORAck {
   OSUINT8 spare;
   OSBOOL mssi;
   OSUINT8 dataType;
   OSOCTET sorMAC[16];
} TS24501IE_SORAck;

EXTERN int NASEnc_TS24501IE_SORAck (OSCTXT* pctxt, TS24501IE_SORAck* pvalue);

EXTERN int NASDec_TS24501IE_SORAck (OSCTXT* pctxt, TS24501IE_SORAck* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SORAck (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SORAck* pvalue);

EXTERN TS24501IE_SORAck* asn1Test_TS24501IE_SORAck (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SORAck (TS24501IE_SORAck* pvalue);

/**************************************************************/
/*                                                            */
/*  SORTransparentContainer_steeringOrAck                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SORTransparentContainer'
*/
typedef struct EXTERN TS24501IE_SORTransparentContainer_steeringOrAck {
   enum {
      T_SORTransparentContainer_steeringOrAck_UNKNOWN_ = 0,
      T_SORTransparentContainer_steeringOrAck_steering = 1,
      T_SORTransparentContainer_steeringOrAck_ack = 2
   } t;
   union {
      /* t = 1 */
      TS24501IE_SORSteering steering;
      /* t = 2 */
      TS24501IE_SORAck ack;
   } u;
} TS24501IE_SORTransparentContainer_steeringOrAck;

EXTERN int NASEnc_TS24501IE_SORTransparentContainer_steeringOrAck (OSCTXT* pctxt
   , TS24501IE_SORTransparentContainer_steeringOrAck* pvalue);

EXTERN int NASDec_TS24501IE_SORTransparentContainer_steeringOrAck (OSCTXT* pctxt
   , TS24501IE_SORTransparentContainer_steeringOrAck* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SORTransparentContainer_steeringOrAck (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SORTransparentContainer_steeringOrAck* pvalue);

EXTERN TS24501IE_SORTransparentContainer_steeringOrAck*
    asn1Test_TS24501IE_SORTransparentContainer_steeringOrAck (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SORTransparentContainer_steeringOrAck (
   TS24501IE_SORTransparentContainer_steeringOrAck* pvalue);

/**************************************************************/
/*                                                            */
/*  SORTransparentContainer                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.3.51 - SOR transparent container 
 This IE requires custom decoding due to the lowest bit in the header octet
 determining whether the IE contains steering or ack of steering information.
SORTransparentContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   steeringOrAck [1] EXPLICIT CHOICE {
      steering [0] SORSteering,
      ack [1] SORAck
   }
}
*/
typedef struct EXTERN TS24501IE_SORTransparentContainer {
   OSUINT16 length;
   TS24501IE_SORTransparentContainer_steeringOrAck steeringOrAck;
} TS24501IE_SORTransparentContainer;

EXTERN int NASEnc_TS24501IE_SORTransparentContainer (OSCTXT* pctxt
   , TS24501IE_SORTransparentContainer* pvalue);

EXTERN int NASDec_TS24501IE_SORTransparentContainer (OSCTXT* pctxt
   , TS24501IE_SORTransparentContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SORTransparentContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SORTransparentContainer* pvalue);

EXTERN TS24501IE_SORTransparentContainer*
    asn1Test_TS24501IE_SORTransparentContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SORTransparentContainer (
   TS24501IE_SORTransparentContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  UEParamUpdateDataSet                                      */
/*                                                            */
/**************************************************************/
/*
UEParamUpdateDataSet ::= SEQUENCE {
   spare [0] INTEGER (0..15),
   dataSetType [1] INTEGER (0..15),
   dataSetLen [2] INTEGER (0..65535),
   --<inline/>
   dataSet [3] EXPLICIT CHOICE {
      --<selector element="dataSetType" value="1"/>      
      --<length expr="@dataSetLen"/>
      securedPacket [0] OCTET STRING,
      --<selector element="dataSetType" value="2"/>      
      --<length expr="@dataSetLen"/>
      defCfgNSSAI [1] OCTET STRING
   }
}
*/
typedef struct EXTERN TS24501IE_UEParamUpdateDataSet {
   OSUINT8 spare;
   OSUINT8 dataSetType;
   OSUINT16 dataSetLen;
   struct  {
      union {
         /* selector element = dataSetType, value = 1 */
         OSDynOctStr securedPacket;
         /* selector element = dataSetType, value = 2 */
         OSDynOctStr defCfgNSSAI;
      } u;
   } dataSet;
} TS24501IE_UEParamUpdateDataSet;

EXTERN int NASEnc_TS24501IE_UEParamUpdateDataSet (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateDataSet* pvalue);

EXTERN int NASDec_TS24501IE_UEParamUpdateDataSet (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateDataSet* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UEParamUpdateDataSet (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UEParamUpdateDataSet* pvalue);

EXTERN TS24501IE_UEParamUpdateDataSet*
    asn1Test_TS24501IE_UEParamUpdateDataSet (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UEParamUpdateDataSet (
   TS24501IE_UEParamUpdateDataSet* pvalue);

/**************************************************************/
/*                                                            */
/*  UEParamUpdate                                             */
/*                                                            */
/**************************************************************/
/*
 UE Param Update for data type = 0 (UE parameters update list) 
UEParamUpdate ::= SEQUENCE {
   spare [0] INTEGER (0..31) DEFAULT 0,
   reg [1] BOOLEAN,
   ack [2] BOOLEAN,
   dataType [3] INTEGER (0..1) DEFAULT 0, -- always 0 
   mac [4] OCTET STRING (SIZE (16)),
   counter [5] OCTET STRING (SIZE (2)),
   --<length fixed-size="0"/>
   updateList [6] SEQUENCE OF UEParamUpdateDataSet
}
*/
typedef struct EXTERN TS24501IE_UEParamUpdate {
   OSUINT8 spare;
   OSBOOL reg;
   OSBOOL ack;
   OSUINT8 dataType;
   OSOCTET mac[16];
   OSOCTET counter[2];
   struct  {
      OSSIZE n;
      TS24501IE_UEParamUpdateDataSet *elem;
   } updateList;
} TS24501IE_UEParamUpdate;

EXTERN int NASEnc_TS24501IE_UEParamUpdate (OSCTXT* pctxt
   , TS24501IE_UEParamUpdate* pvalue);

EXTERN int NASDec_TS24501IE_UEParamUpdate (OSCTXT* pctxt
   , TS24501IE_UEParamUpdate* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UEParamUpdate (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UEParamUpdate* pvalue);

EXTERN TS24501IE_UEParamUpdate*
    asn1Test_TS24501IE_UEParamUpdate (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UEParamUpdate (TS24501IE_UEParamUpdate* pvalue);

/**************************************************************/
/*                                                            */
/*  UEParamUpdateAck                                          */
/*                                                            */
/**************************************************************/
/*
 UE Param Update for data type = 1 (UE parameters update list acknowledgement)
UEParamUpdateAck ::= SEQUENCE {
   spare [0] INTEGER (0..127) DEFAULT 0,
   dataType [1] INTEGER (0..1) DEFAULT 1, -- always 1 
   mac [2] OCTET STRING (SIZE (16))
}
*/
typedef struct EXTERN TS24501IE_UEParamUpdateAck {
   OSUINT8 spare;
   OSUINT8 dataType;
   OSOCTET mac[16];
} TS24501IE_UEParamUpdateAck;

EXTERN int NASEnc_TS24501IE_UEParamUpdateAck (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateAck* pvalue);

EXTERN int NASDec_TS24501IE_UEParamUpdateAck (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateAck* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UEParamUpdateAck (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UEParamUpdateAck* pvalue);

EXTERN TS24501IE_UEParamUpdateAck*
    asn1Test_TS24501IE_UEParamUpdateAck (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UEParamUpdateAck (TS24501IE_UEParamUpdateAck* pvalue);

/**************************************************************/
/*                                                            */
/*  UEParamUpdateContainer_updateOrAck                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UEParamUpdateContainer'
*/
typedef struct EXTERN TS24501IE_UEParamUpdateContainer_updateOrAck {
   enum {
      T_UEParamUpdateContainer_updateOrAck_UNKNOWN_ = 0,
      T_UEParamUpdateContainer_updateOrAck_update = 1,
      T_UEParamUpdateContainer_updateOrAck_ack = 2
   } t;
   union {
      /* t = 1 */
      TS24501IE_UEParamUpdate update;
      /* t = 2 */
      TS24501IE_UEParamUpdateAck ack;
   } u;
} TS24501IE_UEParamUpdateContainer_updateOrAck;

EXTERN int NASEnc_TS24501IE_UEParamUpdateContainer_updateOrAck (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateContainer_updateOrAck* pvalue);

EXTERN int NASDec_TS24501IE_UEParamUpdateContainer_updateOrAck (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateContainer_updateOrAck* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UEParamUpdateContainer_updateOrAck (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UEParamUpdateContainer_updateOrAck* pvalue);

EXTERN TS24501IE_UEParamUpdateContainer_updateOrAck*
    asn1Test_TS24501IE_UEParamUpdateContainer_updateOrAck (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UEParamUpdateContainer_updateOrAck (
   TS24501IE_UEParamUpdateContainer_updateOrAck* pvalue);

/**************************************************************/
/*                                                            */
/*  UEParamUpdateContainer                                    */
/*                                                            */
/**************************************************************/
/*
 9.11.3.53A - UE Parameters Update Transparent Container 
 This IE requires custom decoding due to the lowest bit in the header octet
 determining whether the IE contains an update list or ack of an update list.
UEParamUpdateContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   updateOrAck [1] EXPLICIT CHOICE {
      update [0] UEParamUpdate,
      ack [1] UEParamUpdateAck
   }
}
*/
typedef struct EXTERN TS24501IE_UEParamUpdateContainer {
   OSUINT16 length;
   TS24501IE_UEParamUpdateContainer_updateOrAck updateOrAck;
} TS24501IE_UEParamUpdateContainer;

EXTERN int NASEnc_TS24501IE_UEParamUpdateContainer (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateContainer* pvalue);

EXTERN int NASDec_TS24501IE_UEParamUpdateContainer (OSCTXT* pctxt
   , TS24501IE_UEParamUpdateContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UEParamUpdateContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UEParamUpdateContainer* pvalue);

EXTERN TS24501IE_UEParamUpdateContainer*
    asn1Test_TS24501IE_UEParamUpdateContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UEParamUpdateContainer (
   TS24501IE_UEParamUpdateContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  UESecurityCapability_octet5                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESecurityCapability'
*/
typedef struct EXTERN TS24501IE_UESecurityCapability_octet5 {
   OSBOOL eea0;
   OSBOOL eea1;
   OSBOOL eea2;
   OSBOOL eea3;
   OSBOOL eea4;
   OSBOOL eea5;
   OSBOOL eea6;
   OSBOOL eea7;
} TS24501IE_UESecurityCapability_octet5;

EXTERN int NASEnc_TS24501IE_UESecurityCapability_octet5 (OSCTXT* pctxt
   , TS24501IE_UESecurityCapability_octet5* pvalue);

EXTERN int NASDec_TS24501IE_UESecurityCapability_octet5 (OSCTXT* pctxt
   , TS24501IE_UESecurityCapability_octet5* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UESecurityCapability_octet5 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UESecurityCapability_octet5* pvalue);

EXTERN TS24501IE_UESecurityCapability_octet5*
    asn1Test_TS24501IE_UESecurityCapability_octet5 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESecurityCapability_octet6                               */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UESecurityCapability'
*/
typedef struct EXTERN TS24501IE_UESecurityCapability_octet6 {
   OSBOOL eia0;
   OSBOOL eia1;
   OSBOOL eia2;
   OSBOOL eia3;
   OSBOOL eia4;
   OSBOOL eia5;
   OSBOOL eia6;
   OSBOOL eia7;
} TS24501IE_UESecurityCapability_octet6;

EXTERN int NASEnc_TS24501IE_UESecurityCapability_octet6 (OSCTXT* pctxt
   , TS24501IE_UESecurityCapability_octet6* pvalue);

EXTERN int NASDec_TS24501IE_UESecurityCapability_octet6 (OSCTXT* pctxt
   , TS24501IE_UESecurityCapability_octet6* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UESecurityCapability_octet6 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UESecurityCapability_octet6* pvalue);

EXTERN TS24501IE_UESecurityCapability_octet6*
    asn1Test_TS24501IE_UESecurityCapability_octet6 (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UESecurityCapability                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.54 - UE security capability 
UESecurityCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   -- octet 3 
   ea0 [1] BOOLEAN,
   ea1 [2] BOOLEAN,
   ea2 [3] BOOLEAN,
   ea3 [4] BOOLEAN,
   ea4 [5] BOOLEAN,
   ea5 [6] BOOLEAN,
   ea6 [7] BOOLEAN,
   ea7 [8] BOOLEAN,
   -- octet 4 
   ia0 [9] BOOLEAN,
   ia1 [10] BOOLEAN,
   ia2 [11] BOOLEAN,
   ia3 [12] BOOLEAN,
   ia4 [13] BOOLEAN,
   ia5 [14] BOOLEAN,
   ia6 [15] BOOLEAN,
   ia7 [16] BOOLEAN,
   -- octet 5 
   --<noPresentBit/>
   octet5 [17] SEQUENCE {
      eea0 [0] BOOLEAN,
      eea1 [1] BOOLEAN,
      eea2 [2] BOOLEAN,
      eea3 [3] BOOLEAN,
      eea4 [4] BOOLEAN,
      eea5 [5] BOOLEAN,
      eea6 [6] BOOLEAN,
      eea7 [7] BOOLEAN
   } OPTIONAL,
   -- octet 6 
   --<noPresentBit/>
   octet6 [18] SEQUENCE {
      eia0 [0] BOOLEAN,
      eia1 [1] BOOLEAN,
      eia2 [2] BOOLEAN,
      eia3 [3] BOOLEAN,
      eia4 [4] BOOLEAN,
      eia5 [5] BOOLEAN,
      eia6 [6] BOOLEAN,
      eia7 [7] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   spare [19] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_UESecurityCapability {
   struct {
      unsigned octet5Present : 1;
      unsigned octet6Present : 1;
      unsigned sparePresent : 1;
   } m;
   OSUINT8 length;
   OSBOOL ea0;
   OSBOOL ea1;
   OSBOOL ea2;
   OSBOOL ea3;
   OSBOOL ea4;
   OSBOOL ea5;
   OSBOOL ea6;
   OSBOOL ea7;
   OSBOOL ia0;
   OSBOOL ia1;
   OSBOOL ia2;
   OSBOOL ia3;
   OSBOOL ia4;
   OSBOOL ia5;
   OSBOOL ia6;
   OSBOOL ia7;
   TS24501IE_UESecurityCapability_octet5 octet5;
   TS24501IE_UESecurityCapability_octet6 octet6;
   OSDynOctStr spare;
} TS24501IE_UESecurityCapability;

EXTERN int NASEnc_TS24501IE_UESecurityCapability (OSCTXT* pctxt
   , TS24501IE_UESecurityCapability* pvalue);

EXTERN int NASDec_TS24501IE_UESecurityCapability (OSCTXT* pctxt
   , TS24501IE_UESecurityCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UESecurityCapability (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UESecurityCapability* pvalue);

EXTERN TS24501IE_UESecurityCapability*
    asn1Test_TS24501IE_UESecurityCapability (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UESecurityCapability (
   TS24501IE_UESecurityCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  UEUsageSetting                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.3.55 - UE usage setting 
UEUsageSetting ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 3,
   spare [1] INTEGER (0..127) DEFAULT 0,
   usage [2] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_UEUsageSetting {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL usage;
} TS24501IE_UEUsageSetting;

EXTERN int NASEnc_TS24501IE_UEUsageSetting (OSCTXT* pctxt
   , TS24501IE_UEUsageSetting* pvalue);

EXTERN int NASDec_TS24501IE_UEUsageSetting (OSCTXT* pctxt
   , TS24501IE_UEUsageSetting* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UEUsageSetting (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UEUsageSetting* pvalue);

EXTERN TS24501IE_UEUsageSetting*
    asn1Test_TS24501IE_UEUsageSetting (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UEUsageSetting (TS24501IE_UEUsageSetting* pvalue);

/**************************************************************/
/*                                                            */
/*  UplinkDataStatus_psi                                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'UplinkDataStatus'
*/
typedef struct EXTERN TS24501IE_UplinkDataStatus_psi {
   OSBOOL elem[15];
} TS24501IE_UplinkDataStatus_psi;

EXTERN int NASEnc_TS24501IE_UplinkDataStatus_psi (OSCTXT* pctxt
   , TS24501IE_UplinkDataStatus_psi* pvalue);

EXTERN int NASDec_TS24501IE_UplinkDataStatus_psi (OSCTXT* pctxt
   , TS24501IE_UplinkDataStatus_psi* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UplinkDataStatus_psi (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UplinkDataStatus_psi* pvalue);

EXTERN TS24501IE_UplinkDataStatus_psi*
    asn1Test_TS24501IE_UplinkDataStatus_psi (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  UplinkDataStatus                                          */
/*                                                            */
/**************************************************************/
/*
 9.11.3.56 - UE status 
 Defined in TS24301IEs.asn 
 9.11.3.57 - Uplink data status 
UplinkDataStatus ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (2..255),
   spare1 [1] BOOLEAN DEFAULT FALSE,
   psi [2] SEQUENCE (SIZE (15)) OF BOOLEAN,
   --<noPresentBit/>
   spare2 [3] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_UplinkDataStatus {
   struct {
      unsigned spare2Present : 1;
   } m;
   OSUINT8 length;
   OSBOOL spare1;
   TS24501IE_UplinkDataStatus_psi psi;
   OSDynOctStr spare2;
} TS24501IE_UplinkDataStatus;

EXTERN int NASEnc_TS24501IE_UplinkDataStatus (OSCTXT* pctxt
   , TS24501IE_UplinkDataStatus* pvalue);

EXTERN int NASDec_TS24501IE_UplinkDataStatus (OSCTXT* pctxt
   , TS24501IE_UplinkDataStatus* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_UplinkDataStatus (OSCTXT *pctxt, 
   const char* name, const TS24501IE_UplinkDataStatus* pvalue);

EXTERN TS24501IE_UplinkDataStatus*
    asn1Test_TS24501IE_UplinkDataStatus (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_UplinkDataStatus (TS24501IE_UplinkDataStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  TruncatedTMSIConfig                                       */
/*                                                            */
/**************************************************************/
/*
 9.11.3.68 - UE radio capability ID 
 Defined in TS24301IEs.asn 
 9.11.3.69 - UE radio capability ID deletion indication 
 Defined in TS24301IEs.asn 
 9.11.3.70 - Truncated 5G-S-TMSI configuration 
TruncatedTMSIConfig ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   truncatedAMFId [1] INTEGER (0..15),
   truncatedAMFPtr [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24501IE_TruncatedTMSIConfig {
   OSUINT8 length;
   OSUINT8 truncatedAMFId;
   OSUINT8 truncatedAMFPtr;
} TS24501IE_TruncatedTMSIConfig;

EXTERN int NASEnc_TS24501IE_TruncatedTMSIConfig (OSCTXT* pctxt
   , TS24501IE_TruncatedTMSIConfig* pvalue);

EXTERN int NASDec_TS24501IE_TruncatedTMSIConfig (OSCTXT* pctxt
   , TS24501IE_TruncatedTMSIConfig* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_TruncatedTMSIConfig (OSCTXT *pctxt, 
   const char* name, const TS24501IE_TruncatedTMSIConfig* pvalue);

EXTERN TS24501IE_TruncatedTMSIConfig*
    asn1Test_TS24501IE_TruncatedTMSIConfig (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  N5GCIndication                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.3.72 - N5GC indication - added in v16.6 
N5GCIndication ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   n5gcReg [1] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_N5GCIndication {
   OSUINT8 spare;
   OSBOOL n5gcReg;
} TS24501IE_N5GCIndication;

EXTERN int NASEnc_TS24501IE_N5GCIndication (OSCTXT* pctxt
   , TS24501IE_N5GCIndication* pvalue);

EXTERN int NASDec_TS24501IE_N5GCIndication (OSCTXT* pctxt
   , TS24501IE_N5GCIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_N5GCIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_N5GCIndication* pvalue);

EXTERN TS24501IE_N5GCIndication*
    asn1Test_TS24501IE_N5GCIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_N5GCIndication (TS24501IE_N5GCIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  NBN1ModeDRXParams                                         */
/*                                                            */
/**************************************************************/
/*
 9.11.3.73 - NB-N1 mode DRX parameters - added in v16.5 
NBN1ModeDRXParams ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   spare [1] INTEGER (0..15) DEFAULT 0,
   drxValue [2] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24501IE_NBN1ModeDRXParams {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 drxValue;
} TS24501IE_NBN1ModeDRXParams;

EXTERN int NASEnc_TS24501IE_NBN1ModeDRXParams (OSCTXT* pctxt
   , TS24501IE_NBN1ModeDRXParams* pvalue);

EXTERN int NASDec_TS24501IE_NBN1ModeDRXParams (OSCTXT* pctxt
   , TS24501IE_NBN1ModeDRXParams* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NBN1ModeDRXParams (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NBN1ModeDRXParams* pvalue);

EXTERN TS24501IE_NBN1ModeDRXParams*
    asn1Test_TS24501IE_NBN1ModeDRXParams (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NBN1ModeDRXParams (TS24501IE_NBN1ModeDRXParams* pvalue);

/**************************************************************/
/*                                                            */
/*  AddlConfigIndication                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.74 - Additional configuration indication - added in v16.5 
AddlConfigIndication ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   scmr [1] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_AddlConfigIndication {
   OSUINT8 spare;
   OSBOOL scmr;
} TS24501IE_AddlConfigIndication;

EXTERN int NASEnc_TS24501IE_AddlConfigIndication (OSCTXT* pctxt
   , TS24501IE_AddlConfigIndication* pvalue);

EXTERN int NASDec_TS24501IE_AddlConfigIndication (OSCTXT* pctxt
   , TS24501IE_AddlConfigIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AddlConfigIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AddlConfigIndication* pvalue);

EXTERN TS24501IE_AddlConfigIndication*
    asn1Test_TS24501IE_AddlConfigIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AddlConfigIndication (
   TS24501IE_AddlConfigIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtRejectedNSSAI                                          */
/*                                                            */
/**************************************************************/
/*
ExtRejectedNSSAI ::= SEQUENCE {
   length [0] INTEGER (1..15),
   cause [1] ENUMERATED { unavailInCurrPlmn(0), unavailInCurrRegisArea(1), authPending(2), maxUEsReached(3), causeMAX(15) },
   sst [2] SST,
   --<noPresentBit/>
   sd [3] SD OPTIONAL,
   --<noPresentBit/>
   mappedSST [4] OCTET STRING (SIZE (1)) OPTIONAL,
   --<noPresentBit/>
   mappedSD [5] OCTET STRING (SIZE (3)) OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_ExtRejectedNSSAI {
   struct {
      unsigned sdPresent : 1;
      unsigned mappedSSTPresent : 1;
      unsigned mappedSDPresent : 1;
   } m;
   OSUINT8 length;
   TS24501IE_ExtRejectedNSSAI_cause cause;
   TS24501IE_SST sst;
   TS24501IE_SD sd;
   OSOCTET mappedSST[1];
   OSOCTET mappedSD[3];
} TS24501IE_ExtRejectedNSSAI;

EXTERN int NASEnc_TS24501IE_ExtRejectedNSSAI (OSCTXT* pctxt
   , TS24501IE_ExtRejectedNSSAI* pvalue);

EXTERN int NASDec_TS24501IE_ExtRejectedNSSAI (OSCTXT* pctxt
   , TS24501IE_ExtRejectedNSSAI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ExtRejectedNSSAI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ExtRejectedNSSAI* pvalue);

EXTERN TS24501IE_ExtRejectedNSSAI*
    asn1Test_TS24501IE_ExtRejectedNSSAI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ExtRejectedNSSAI (TS24501IE_ExtRejectedNSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialExtRejectedNSSAI                                   */
/*                                                            */
/**************************************************************/
/*
PartialExtRejectedNSSAI ::= SEQUENCE {
                                        -- Added in v17.3
   spare [0] BOOLEAN DEFAULT FALSE,
   listType [1] PERNTypes,
   numElems [2] INTEGER (1..15),
   --<inline/>
   backoffTimer [3] EXPLICIT CHOICE {
      --<selector element="listType" value="0"/>
      withoutTimer [0] NULL,
      --<selector element="listType" value="1"/>
      timerValue [1] INTEGER (1..255)
   },
   --<inline/>
   --<length expr="@numElems"/>
   rejectedSNSSAI [4] SEQUENCE (SIZE (1..8)) OF ExtRejectedNSSAI
}
*/
typedef struct EXTERN TS24501IE_PartialExtRejectedNSSAI {
   OSBOOL spare;
   TS24501IE_PERNTypes listType;
   OSUINT8 numElems;
   struct  {
      union {
         /* selector element = listType, value = 0 */
         /* selector element = listType, value = 1 */
         OSUINT8 timerValue;
      } u;
   } backoffTimer;
   struct  {
      OSUINT8 n;
      TS24501IE_ExtRejectedNSSAI elem[8];
   } rejectedSNSSAI;
} TS24501IE_PartialExtRejectedNSSAI;

EXTERN int NASEnc_TS24501IE_PartialExtRejectedNSSAI (OSCTXT* pctxt
   , TS24501IE_PartialExtRejectedNSSAI* pvalue);

EXTERN int NASDec_TS24501IE_PartialExtRejectedNSSAI (OSCTXT* pctxt
   , TS24501IE_PartialExtRejectedNSSAI* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PartialExtRejectedNSSAI (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PartialExtRejectedNSSAI* pvalue);

EXTERN TS24501IE_PartialExtRejectedNSSAI*
    asn1Test_TS24501IE_PartialExtRejectedNSSAI (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PartialExtRejectedNSSAI (
   TS24501IE_PartialExtRejectedNSSAI* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtRejectedNSSAIList                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.3.75 - Extended rejected NSSAI - added in v17.0 
ExtRejectedNSSAIList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   --<is3GVarLenList lengthElem="length"/>
   rejectedNSSAI [1] SEQUENCE (SIZE (1..8)) OF PartialExtRejectedNSSAI
}
*/
typedef struct EXTERN TS24501IE_ExtRejectedNSSAIList {
   OSUINT8 length;
   struct  {
      OSUINT8 n;
      TS24501IE_PartialExtRejectedNSSAI elem[8];
   } rejectedNSSAI;
} TS24501IE_ExtRejectedNSSAIList;

EXTERN int NASEnc_TS24501IE_ExtRejectedNSSAIList (OSCTXT* pctxt
   , TS24501IE_ExtRejectedNSSAIList* pvalue);

EXTERN int NASDec_TS24501IE_ExtRejectedNSSAIList (OSCTXT* pctxt
   , TS24501IE_ExtRejectedNSSAIList* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ExtRejectedNSSAIList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ExtRejectedNSSAIList* pvalue);

EXTERN TS24501IE_ExtRejectedNSSAIList*
    asn1Test_TS24501IE_ExtRejectedNSSAIList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ExtRejectedNSSAIList (
   TS24501IE_ExtRejectedNSSAIList* pvalue);

/**************************************************************/
/*                                                            */
/*  MCCElement                                                */
/*                                                            */
/**************************************************************/
/*
MCCElement ::= SEQUENCE {
   mccDigit2 [0] INTEGER (0..15),
   mccDigit1 [1] INTEGER (0..15),
   mccInd [2] BOOLEAN,
   spare [3] INTEGER (0..7) DEFAULT 0,
   mccDigit3 [4] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24501IE_MCCElement {
   OSUINT8 mccDigit2;
   OSUINT8 mccDigit1;
   OSBOOL mccInd;
   OSUINT8 spare;
   OSUINT8 mccDigit3;
} TS24501IE_MCCElement;

EXTERN int NASEnc_TS24501IE_MCCElement (OSCTXT* pctxt
   , TS24501IE_MCCElement* pvalue);

EXTERN int NASDec_TS24501IE_MCCElement (OSCTXT* pctxt
   , TS24501IE_MCCElement* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MCCElement (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MCCElement* pvalue);

EXTERN TS24501IE_MCCElement* asn1Test_TS24501IE_MCCElement (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MCCElement (TS24501IE_MCCElement* pvalue);

/**************************************************************/
/*                                                            */
/*  MCCList                                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.3.77 - Paging restriction - added in v17.3 
 Defined in TS24301IEs.asn 
 9.11.3.78 - MCC list - added in v17.3 
MCCList ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   --<is3GVarLenList lengthElem="length"/>
   mccElements [1] SEQUENCE OF MCCElement
}
*/
typedef struct EXTERN TS24501IE_MCCList {
   OSUINT8 length;
   struct  {
      OSSIZE n;
      TS24501IE_MCCElement *elem;
   } mccElements;
} TS24501IE_MCCList;

EXTERN int NASEnc_TS24501IE_MCCList (OSCTXT* pctxt, TS24501IE_MCCList* pvalue);

EXTERN int NASDec_TS24501IE_MCCList (OSCTXT* pctxt, TS24501IE_MCCList* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MCCList (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MCCList* pvalue);

EXTERN TS24501IE_MCCList* asn1Test_TS24501IE_MCCList (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MCCList (TS24501IE_MCCList* pvalue);

/**************************************************************/
/*                                                            */
/*  NetworkId                                                 */
/*                                                            */
/**************************************************************/
/*
 9.11.3.79 - NID - added in v17.3 
NetworkId ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   nidDigit1 [1] INTEGER (0..15),
   assignMode [2] INTEGER (0..15),
   nidDigit3 [3] INTEGER (0..15),
   nidDigit2 [4] INTEGER (0..15),
   nidDigit5 [5] INTEGER (0..15),
   nidDigit4 [6] INTEGER (0..15),
   nidDigit7 [7] INTEGER (0..15),
   nidDigit6 [8] INTEGER (0..15),
   nidDigit9 [9] INTEGER (0..15),
   nidDigit8 [10] INTEGER (0..15),
   spare [11] INTEGER (0..15) DEFAULT 0,
   nidDigit10 [12] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24501IE_NetworkId {
   OSUINT8 length;
   OSUINT8 nidDigit1;
   OSUINT8 assignMode;
   OSUINT8 nidDigit3;
   OSUINT8 nidDigit2;
   OSUINT8 nidDigit5;
   OSUINT8 nidDigit4;
   OSUINT8 nidDigit7;
   OSUINT8 nidDigit6;
   OSUINT8 nidDigit9;
   OSUINT8 nidDigit8;
   OSUINT8 spare;
   OSUINT8 nidDigit10;
} TS24501IE_NetworkId;

EXTERN int NASEnc_TS24501IE_NetworkId (OSCTXT* pctxt
   , TS24501IE_NetworkId* pvalue);

EXTERN int NASDec_TS24501IE_NetworkId (OSCTXT* pctxt
   , TS24501IE_NetworkId* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_NetworkId (OSCTXT *pctxt, 
   const char* name, const TS24501IE_NetworkId* pvalue);

EXTERN TS24501IE_NetworkId* asn1Test_TS24501IE_NetworkId (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_NetworkId (TS24501IE_NetworkId* pvalue);

/**************************************************************/
/*                                                            */
/*  SMCapability_octet4                                       */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SMCapability'
*/
typedef struct EXTERN TS24501IE_SMCapability_octet4 {
   OSUINT8 spare;
   OSBOOL nonDefQosRule;
} TS24501IE_SMCapability_octet4;

EXTERN int NASEnc_TS24501IE_SMCapability_octet4 (OSCTXT* pctxt
   , TS24501IE_SMCapability_octet4* pvalue);

EXTERN int NASDec_TS24501IE_SMCapability_octet4 (OSCTXT* pctxt
   , TS24501IE_SMCapability_octet4* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SMCapability_octet4 (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SMCapability_octet4* pvalue);

EXTERN TS24501IE_SMCapability_octet4*
    asn1Test_TS24501IE_SMCapability_octet4 (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SMCapability_octet4 (
   TS24501IE_SMCapability_octet4* pvalue);

/**************************************************************/
/*                                                            */
/*  SMCapability                                              */
/*                                                            */
/**************************************************************/
/*
 9.11.4.1 - SM capability 
SMCapability ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255),
   -- octet 3 
   tpmic [1] BOOLEAN,
   atsll [2] ATSSSModes,
   epts1 [3] BOOLEAN,
   mh6Pdu [4] BOOLEAN,
   rqos [5] BOOLEAN,
   --<noPresentBit/>
   -- octet 4 
   octet4 [6] SEQUENCE {
                     -- Added in v17.3
      spare [0] INTEGER (0..127) DEFAULT 0,
      nonDefQosRule [1] BOOLEAN
   } OPTIONAL,
   --<noPresentBit/>
   spare [7] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_SMCapability {
   struct {
      unsigned octet4Present : 1;
      unsigned sparePresent : 1;
   } m;
   OSUINT8 length;
   OSBOOL tpmic;
   TS24501IE_ATSSSModes atsll;
   OSBOOL epts1;
   OSBOOL mh6Pdu;
   OSBOOL rqos;
   TS24501IE_SMCapability_octet4 octet4;
   OSDynOctStr spare;
} TS24501IE_SMCapability;

EXTERN int NASEnc_TS24501IE_SMCapability (OSCTXT* pctxt
   , TS24501IE_SMCapability* pvalue);

EXTERN int NASDec_TS24501IE_SMCapability (OSCTXT* pctxt
   , TS24501IE_SMCapability* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SMCapability (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SMCapability* pvalue);

EXTERN TS24501IE_SMCapability* asn1Test_TS24501IE_SMCapability (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_TS24501IE_SMCapability (TS24501IE_SMCapability* pvalue);

/**************************************************************/
/*                                                            */
/*  AlwaysOnPDUSessionInd                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.4.3 - Always-on PDU session indication 
AlwaysOnPDUSessionInd ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   apsi [1] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_AlwaysOnPDUSessionInd {
   OSUINT8 spare;
   OSBOOL apsi;
} TS24501IE_AlwaysOnPDUSessionInd;

EXTERN int NASEnc_TS24501IE_AlwaysOnPDUSessionInd (OSCTXT* pctxt
   , TS24501IE_AlwaysOnPDUSessionInd* pvalue);

EXTERN int NASDec_TS24501IE_AlwaysOnPDUSessionInd (OSCTXT* pctxt
   , TS24501IE_AlwaysOnPDUSessionInd* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AlwaysOnPDUSessionInd (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AlwaysOnPDUSessionInd* pvalue);

EXTERN TS24501IE_AlwaysOnPDUSessionInd*
    asn1Test_TS24501IE_AlwaysOnPDUSessionInd (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AlwaysOnPDUSessionInd (
   TS24501IE_AlwaysOnPDUSessionInd* pvalue);

/**************************************************************/
/*                                                            */
/*  AlwaysOnPDUSessionReq                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.4.4 - Always-on PDU session requested 
AlwaysOnPDUSessionReq ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   apsr [1] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_AlwaysOnPDUSessionReq {
   OSUINT8 spare;
   OSBOOL apsr;
} TS24501IE_AlwaysOnPDUSessionReq;

EXTERN int NASEnc_TS24501IE_AlwaysOnPDUSessionReq (OSCTXT* pctxt
   , TS24501IE_AlwaysOnPDUSessionReq* pvalue);

EXTERN int NASDec_TS24501IE_AlwaysOnPDUSessionReq (OSCTXT* pctxt
   , TS24501IE_AlwaysOnPDUSessionReq* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AlwaysOnPDUSessionReq (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AlwaysOnPDUSessionReq* pvalue);

EXTERN TS24501IE_AlwaysOnPDUSessionReq*
    asn1Test_TS24501IE_AlwaysOnPDUSessionReq (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AlwaysOnPDUSessionReq (
   TS24501IE_AlwaysOnPDUSessionReq* pvalue);

/**************************************************************/
/*                                                            */
/*  AllowedSSCMode                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.4.5 - Allowed SSC mode 
AllowedSSCMode ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   ssc3 [1] BOOLEAN,
   ssc2 [2] BOOLEAN,
   ssc1 [3] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_AllowedSSCMode {
   OSBOOL spare;
   OSBOOL ssc3;
   OSBOOL ssc2;
   OSBOOL ssc1;
} TS24501IE_AllowedSSCMode;

EXTERN int NASEnc_TS24501IE_AllowedSSCMode (OSCTXT* pctxt
   , TS24501IE_AllowedSSCMode* pvalue);

EXTERN int NASDec_TS24501IE_AllowedSSCMode (OSCTXT* pctxt
   , TS24501IE_AllowedSSCMode* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_AllowedSSCMode (OSCTXT *pctxt, 
   const char* name, const TS24501IE_AllowedSSCMode* pvalue);

EXTERN TS24501IE_AllowedSSCMode*
    asn1Test_TS24501IE_AllowedSSCMode (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_AllowedSSCMode (TS24501IE_AllowedSSCMode* pvalue);

/**************************************************************/
/*                                                            */
/*  IntegrityProtMaxDataRate                                  */
/*                                                            */
/**************************************************************/
/*
 9.11.4.7 - Integrity protection maximum data rate 
IntegrityProtMaxDataRate ::= SEQUENCE {
   maxUEDataRateUplink [0] INTEGER (0..255),
   maxUEDataRateDownlink [1] INTEGER (0..255)
}
*/
typedef struct EXTERN TS24501IE_IntegrityProtMaxDataRate {
   OSUINT8 maxUEDataRateUplink;
   OSUINT8 maxUEDataRateDownlink;
} TS24501IE_IntegrityProtMaxDataRate;

EXTERN int NASEnc_TS24501IE_IntegrityProtMaxDataRate (OSCTXT* pctxt
   , TS24501IE_IntegrityProtMaxDataRate* pvalue);

EXTERN int NASDec_TS24501IE_IntegrityProtMaxDataRate (OSCTXT* pctxt
   , TS24501IE_IntegrityProtMaxDataRate* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_IntegrityProtMaxDataRate (OSCTXT *pctxt, 
   const char* name, const TS24501IE_IntegrityProtMaxDataRate* pvalue);

EXTERN TS24501IE_IntegrityProtMaxDataRate*
    asn1Test_TS24501IE_IntegrityProtMaxDataRate (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EPSParam                                                  */
/*                                                            */
/**************************************************************/
/*
EPSParam ::= SEQUENCE {
   id [0] EPSParamId,
   --<inline/>
   content [1] EXPLICIT CHOICE {
      --<selector element="id" value="1"/>
      epsQoS [0] EPSQualityOfService,
      --<selector element="id" value="2"/>
      extEpsQos [1] ExtQualityOfService,
      --<selector element="id" value="3"/>
      tft [2] TFT,
      --<selector element="id" value="4"/>
      apnAmbr [3] APNAggMaxBitRate,
      --<selector element="id" value="5"/>
      extApnAmbr [4] ExtAPNAggMaxBitRate,
      unknown [5] OCTET STRING
   }
}
*/
typedef struct EXTERN TS24501IE_EPSParam {
   TS24501IE_EPSParamId id;
   struct  {
      union {
         /* selector element = id, value = 1 */
         TS24301IE_EPSQualityOfService epsQoS;
         /* selector element = id, value = 2 */
         TS24008IE_ExtQualityOfService extEpsQos;
         /* selector element = id, value = 3 */
         TS24008IE_TFT tft;
         /* selector element = id, value = 4 */
         TS24301IE_APNAggMaxBitRate apnAmbr;
         /* selector element = id, value = 5 */
         TS24301IE_ExtAPNAggMaxBitRate extApnAmbr;
         /* default case */
         OSDynOctStr unknown;
      } u;
   } content;
} TS24501IE_EPSParam;

EXTERN int NASEnc_TS24501IE_EPSParam (OSCTXT* pctxt, TS24501IE_EPSParam* pvalue
   );

EXTERN int NASDec_TS24501IE_EPSParam (OSCTXT* pctxt, TS24501IE_EPSParam* pvalue
   );

EXTERN int asn1PrtToStrm_TS24501IE_EPSParam (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EPSParam* pvalue);

EXTERN TS24501IE_EPSParam* asn1Test_TS24501IE_EPSParam (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_EPSParam (TS24501IE_EPSParam* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSBearerCtxt                                             */
/*                                                            */
/**************************************************************/
/*
EPSBearerCtxt ::= SEQUENCE {
   bearerId [0] INTEGER (0..255),
   bearerCtxtLen [1] INTEGER (0..65535),
   opCode [2] INTEGER (0..3),
   spare [3] BOOLEAN DEFAULT FALSE,
   eBit [4] BOOLEAN,
   numParams [5] INTEGER (0..15),
   --<inline/>
   --<length expr="@numParams"/>
   --<noPresentBit/>
   paramsList [6] SEQUENCE (SIZE (0..15)) OF EPSParam OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_EPSBearerCtxt {
   struct {
      unsigned paramsListPresent : 1;
   } m;
   OSUINT8 bearerId;
   OSUINT16 bearerCtxtLen;
   OSUINT8 opCode;
   OSBOOL spare;
   OSBOOL eBit;
   OSUINT8 numParams;
   struct  {
      OSUINT8 n;
      TS24501IE_EPSParam elem[15];
   } paramsList;
} TS24501IE_EPSBearerCtxt;

EXTERN int NASEnc_TS24501IE_EPSBearerCtxt (OSCTXT* pctxt
   , TS24501IE_EPSBearerCtxt* pvalue);

EXTERN int NASDec_TS24501IE_EPSBearerCtxt (OSCTXT* pctxt
   , TS24501IE_EPSBearerCtxt* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EPSBearerCtxt (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EPSBearerCtxt* pvalue);

EXTERN TS24501IE_EPSBearerCtxt*
    asn1Test_TS24501IE_EPSBearerCtxt (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_EPSBearerCtxt (TS24501IE_EPSBearerCtxt* pvalue);

/**************************************************************/
/*                                                            */
/*  EPSBearerCtxts                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.4.8 - Mapped EPS bearer contexts 
EPSBearerCtxts ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (7..65535),
   --<is3GVarLenList lengthElem="length"/>
   epsBearerCtxts [1] SEQUENCE OF EPSBearerCtxt
}
*/
typedef struct EXTERN TS24501IE_EPSBearerCtxts {
   OSUINT16 length;
   struct  {
      OSSIZE n;
      TS24501IE_EPSBearerCtxt *elem;
   } epsBearerCtxts;
} TS24501IE_EPSBearerCtxts;

EXTERN int NASEnc_TS24501IE_EPSBearerCtxts (OSCTXT* pctxt
   , TS24501IE_EPSBearerCtxts* pvalue);

EXTERN int NASDec_TS24501IE_EPSBearerCtxts (OSCTXT* pctxt
   , TS24501IE_EPSBearerCtxts* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EPSBearerCtxts (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EPSBearerCtxts* pvalue);

EXTERN TS24501IE_EPSBearerCtxts*
    asn1Test_TS24501IE_EPSBearerCtxts (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_EPSBearerCtxts (TS24501IE_EPSBearerCtxts* pvalue);

/**************************************************************/
/*                                                            */
/*  MaxSupportedPacketFilters                                 */
/*                                                            */
/**************************************************************/
/*
 9.11.4.9 - Maximum number of supported packet filters 
MaxSupportedPacketFilters ::= SEQUENCE {
   maxFilters [0] INTEGER (1..2047),
   spare [1] INTEGER (0..31) DEFAULT 0
}
*/
typedef struct EXTERN TS24501IE_MaxSupportedPacketFilters {
   OSUINT16 maxFilters;
   OSUINT8 spare;
} TS24501IE_MaxSupportedPacketFilters;

EXTERN int NASEnc_TS24501IE_MaxSupportedPacketFilters (OSCTXT* pctxt
   , TS24501IE_MaxSupportedPacketFilters* pvalue);

EXTERN int NASDec_TS24501IE_MaxSupportedPacketFilters (OSCTXT* pctxt
   , TS24501IE_MaxSupportedPacketFilters* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_MaxSupportedPacketFilters (OSCTXT *pctxt, 
   const char* name, const TS24501IE_MaxSupportedPacketFilters* pvalue);

EXTERN TS24501IE_MaxSupportedPacketFilters*
    asn1Test_TS24501IE_MaxSupportedPacketFilters (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_MaxSupportedPacketFilters (
   TS24501IE_MaxSupportedPacketFilters* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUAddress                                                */
/*                                                            */
/**************************************************************/
/*
 9.11.4.10 - PDU address 
PDUAddress ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..15) DEFAULT 0,
   s16LLA [2] INTEGER (0..1), -- Added in v16.6
   sessionType [3] PDUAddressValues,
   --<inline/>
   addressInfo [4] EXPLICIT CHOICE {
      --<selector element="sessionType" value="1"/>
      addressInfoIpv4 [0] OCTET STRING (SIZE (4)),
      --<selector element="sessionType" value="2"/>
      addressInfoIpv6 [1] OCTET STRING (SIZE (8)),
      --<selector element="sessionType" value="3"/>
      --<inline/>
      addressInfoIpv4v6 [2] SEQUENCE {
         ipv6 [0] OCTET STRING (SIZE (8)),
         ipv4 [1] OCTET STRING (SIZE (4))
      }
   },
   --<inline/>
   smfIp6Addr [5] EXPLICIT CHOICE {
                        -- Added in v16.6
      --<selector element="s16LLA" value="0"/>
      absent [0] NULL,
      --<selector element="s16LLA" value="1"/>
      present [1] OCTET STRING (SIZE (8))
   }
}
*/
typedef struct EXTERN TS24501IE_PDUAddress {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 s16LLA;
   TS24501IE_PDUAddressValues sessionType;
   struct  {
      union {
         /* selector element = sessionType, value = 1 */
         OSOCTET addressInfoIpv4[4];
         /* selector element = sessionType, value = 2 */
         OSOCTET addressInfoIpv6[8];
         /* selector element = sessionType, value = 3 */
         struct  {
            OSOCTET ipv6[8];
            OSOCTET ipv4[4];
         } addressInfoIpv4v6;
      } u;
   } addressInfo;
   struct  {
      union {
         /* selector element = s16LLA, value = 0 */
         /* selector element = s16LLA, value = 1 */
         OSOCTET present[8];
      } u;
   } smfIp6Addr;
} TS24501IE_PDUAddress;

EXTERN int NASEnc_TS24501IE_PDUAddress (OSCTXT* pctxt
   , TS24501IE_PDUAddress* pvalue);

EXTERN int NASDec_TS24501IE_PDUAddress (OSCTXT* pctxt
   , TS24501IE_PDUAddress* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PDUAddress (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PDUAddress* pvalue);

EXTERN TS24501IE_PDUAddress* asn1Test_TS24501IE_PDUAddress (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PDUAddress (TS24501IE_PDUAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUSessionType                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.4.11 - PDU session type 
PDUSessionType ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   sessionType [1] SessionType
}
*/
typedef struct EXTERN TS24501IE_PDUSessionType {
   OSBOOL spare;
   TS24501IE_SessionType sessionType;
} TS24501IE_PDUSessionType;

EXTERN int NASEnc_TS24501IE_PDUSessionType (OSCTXT* pctxt
   , TS24501IE_PDUSessionType* pvalue);

EXTERN int NASDec_TS24501IE_PDUSessionType (OSCTXT* pctxt
   , TS24501IE_PDUSessionType* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PDUSessionType (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PDUSessionType* pvalue);

EXTERN TS24501IE_PDUSessionType*
    asn1Test_TS24501IE_PDUSessionType (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PDUSessionType (TS24501IE_PDUSessionType* pvalue);

/**************************************************************/
/*                                                            */
/*  Parameter                                                 */
/*                                                            */
/**************************************************************/
/*
Parameter ::= SEQUENCE {
   id [0] ParameterId,
   --<is3GLength/>
   length [1] INTEGER (0..255),
   --<inline/>
   content [2] EXPLICIT CHOICE {
      --<selector element="id" value="1"/>
      fiveQI [0] INTEGER (0..255),
      --<selector element="id" value="2"/>
      gfbrUL [1] SEQUENCE {
         unit [0] FlowRateUnit,
         guarFlow [1] INTEGER (0..65535)
      },
      --<selector element="id" value="3"/>
      gfbrDL [2] SEQUENCE {
         unit [0] FlowRateUnit,
         guarFlow [1] INTEGER (0..65535)
      },
      --<selector element="id" value="4"/>
      mfbrUL [3] SEQUENCE {
         unit [0] FlowRateUnit,
         guarFlow [1] INTEGER (0..65535)
      },
      --<selector element="id" value="5"/>
      mfbrDL [4] SEQUENCE {
         unit [0] FlowRateUnit,
         guarFlow [1] INTEGER (0..65535)
      },
      --<selector element="id" value="6"/>
      avgWindow [5] INTEGER (0..65535),
      --<selector element="id" value="7"/>
      epsBearerIdent [6] SEQUENCE {
         value [0] INTEGER (0..15),
         spare [1] INTEGER (0..15)
      },
      --<length fixed-size="0"/>
      unknown [7] OCTET STRING
   }
}
*/
typedef struct EXTERN TS24501IE_Parameter {
   TS24501IE_ParameterId id;
   OSUINT8 length;
   struct  {
      union {
         /* selector element = id, value = 1 */
         OSUINT8 fiveQI;
         /* selector element = id, value = 2 */
         struct EXTERN  {
            TS24501IE_FlowRateUnit unit;
            OSUINT16 guarFlow;
         } gfbrUL;
         /* selector element = id, value = 3 */
         struct EXTERN  {
            TS24501IE_FlowRateUnit unit;
            OSUINT16 guarFlow;
         } gfbrDL;
         /* selector element = id, value = 4 */
         struct EXTERN  {
            TS24501IE_FlowRateUnit unit;
            OSUINT16 guarFlow;
         } mfbrUL;
         /* selector element = id, value = 5 */
         struct EXTERN  {
            TS24501IE_FlowRateUnit unit;
            OSUINT16 guarFlow;
         } mfbrDL;
         /* selector element = id, value = 6 */
         OSUINT16 avgWindow;
         /* selector element = id, value = 7 */
         struct EXTERN  {
            OSUINT8 value;
            OSUINT8 spare;
         } epsBearerIdent;
         /* default case */
         OSDynOctStr unknown;
      } u;
   } content;
} TS24501IE_Parameter;

EXTERN int NASEnc_TS24501IE_Parameter (OSCTXT* pctxt
   , TS24501IE_Parameter* pvalue);

EXTERN int NASDec_TS24501IE_Parameter (OSCTXT* pctxt
   , TS24501IE_Parameter* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_Parameter (OSCTXT *pctxt, 
   const char* name, const TS24501IE_Parameter* pvalue);

EXTERN TS24501IE_Parameter* asn1Test_TS24501IE_Parameter (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_Parameter (TS24501IE_Parameter* pvalue);

/**************************************************************/
/*                                                            */
/*  QOSFlowDescription                                        */
/*                                                            */
/**************************************************************/
/*
QOSFlowDescription ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   qfi [1] INTEGER (0..63),
   opCode [2] FlowOpCodes,
   spare2 [3] INTEGER (0..31) DEFAULT 0,
   spare3 [4] BOOLEAN DEFAULT FALSE,
   eBit [5] BOOLEAN,
   numParams [6] INTEGER (0..63),
   --<inline/>
   --<length expr="@numParams"/>
   --<noPresentBit/>
   paramsList [7] SEQUENCE (SIZE (0..63)) OF Parameter OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_QOSFlowDescription {
   struct {
      unsigned paramsListPresent : 1;
   } m;
   OSUINT8 spare;
   OSUINT8 qfi;
   TS24501IE_FlowOpCodes opCode;
   OSUINT8 spare2;
   OSBOOL spare3;
   OSBOOL eBit;
   OSUINT8 numParams;
   struct  {
      OSUINT8 n;
      TS24501IE_Parameter elem[63];
   } paramsList;
} TS24501IE_QOSFlowDescription;

EXTERN int NASEnc_TS24501IE_QOSFlowDescription (OSCTXT* pctxt
   , TS24501IE_QOSFlowDescription* pvalue);

EXTERN int NASDec_TS24501IE_QOSFlowDescription (OSCTXT* pctxt
   , TS24501IE_QOSFlowDescription* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_QOSFlowDescription (OSCTXT *pctxt, 
   const char* name, const TS24501IE_QOSFlowDescription* pvalue);

EXTERN TS24501IE_QOSFlowDescription*
    asn1Test_TS24501IE_QOSFlowDescription (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_QOSFlowDescription (
   TS24501IE_QOSFlowDescription* pvalue);

/**************************************************************/
/*                                                            */
/*  QOSFlowDescriptions                                       */
/*                                                            */
/**************************************************************/
/*
 9.11.4.12 - QoS flow descriptions 
QOSFlowDescriptions ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (6..65535),
   --<is3GVarLenList lengthElem="length"/>
   qosFlowDesr [1] SEQUENCE OF QOSFlowDescription
}
*/
typedef struct EXTERN TS24501IE_QOSFlowDescriptions {
   OSUINT16 length;
   struct  {
      OSSIZE n;
      TS24501IE_QOSFlowDescription *elem;
   } qosFlowDesr;
} TS24501IE_QOSFlowDescriptions;

EXTERN int NASEnc_TS24501IE_QOSFlowDescriptions (OSCTXT* pctxt
   , TS24501IE_QOSFlowDescriptions* pvalue);

EXTERN int NASDec_TS24501IE_QOSFlowDescriptions (OSCTXT* pctxt
   , TS24501IE_QOSFlowDescriptions* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_QOSFlowDescriptions (OSCTXT *pctxt, 
   const char* name, const TS24501IE_QOSFlowDescriptions* pvalue);

EXTERN TS24501IE_QOSFlowDescriptions*
    asn1Test_TS24501IE_QOSFlowDescriptions (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_QOSFlowDescriptions (
   TS24501IE_QOSFlowDescriptions* pvalue);

/**************************************************************/
/*                                                            */
/*  PFComponent                                               */
/*                                                            */
/**************************************************************/
/*
PFComponent ::= SEQUENCE {
   typeId [0] PacketFilterTypeId,
   --<inline/>
   value [1] EXPLICIT CHOICE {
      --<selector element="typeId" value="1"/>
      matchAll [0] NULL,
      --<selector element="typeId" value="16"/>
      ipv4Remote [1] OCTET STRING (SIZE (8)),
      --<selector element="typeId" value="17"/>
      ipv4Local [2] OCTET STRING (SIZE (8)),
      --<selector element="typeId" value="33"/>
      ipv6Remote [3] OCTET STRING (SIZE (17)),
      --<selector element="typeId" value="35"/>
      ipv6Local [4] OCTET STRING (SIZE (17)),
      --<selector element="typeId" value="48"/>
      protId [5] OCTET STRING (SIZE (1)),
      --<selector element="typeId" value="64"/>
      singleLocalPort [6] OCTET STRING (SIZE (2)),
      --<selector element="typeId" value="65"/>
      localPortRange [7] OCTET STRING (SIZE (4)),
      --<selector element="typeId" value="80"/>
      singleRemPort [8] OCTET STRING (SIZE (2)),
      --<selector element="typeId" value="81"/>
      remPortRange [9] OCTET STRING (SIZE (4)),
      --<selector element="typeId" value="96"/>
      secParam [10] OCTET STRING (SIZE (4)),
      --<selector element="typeId" value="112"/>
      typeOfSvc [11] OCTET STRING (SIZE (2)),
      --<selector element="typeId" value="128"/>
      flowLabel [12] OCTET STRING (SIZE (3)),
      --<selector element="typeId" value="129"/>
      destMacAddr [13] OCTET STRING (SIZE (6)),
      --<selector element="typeId" value="130"/>
      srcMacAddr [14] OCTET STRING (SIZE (6)),
      --<selector element="typeId" value="131"/>
      ctagVid [15] OCTET STRING (SIZE (2)),
      --<selector element="typeId" value="132"/>
      stagVid [16] OCTET STRING (SIZE (2)),
      --<selector element="typeId" value="133"/>
      ctagPcp [17] OCTET STRING (SIZE (1)),
      --<selector element="typeId" value="134"/>
      stagPcp [18] OCTET STRING (SIZE (1)),
      --<selector element="typeId" value="135"/>
      ethernet [19] OCTET STRING (SIZE (2))
   }
}
*/
typedef struct EXTERN TS24501IE_PFComponent {
   TS24501IE_PacketFilterTypeId typeId;
   struct  {
      union {
         /* selector element = typeId, value = 1 */
         /* selector element = typeId, value = 16 */
         OSOCTET ipv4Remote[8];
         /* selector element = typeId, value = 17 */
         OSOCTET ipv4Local[8];
         /* selector element = typeId, value = 33 */
         OSOCTET ipv6Remote[17];
         /* selector element = typeId, value = 35 */
         OSOCTET ipv6Local[17];
         /* selector element = typeId, value = 48 */
         OSOCTET protId[1];
         /* selector element = typeId, value = 64 */
         OSOCTET singleLocalPort[2];
         /* selector element = typeId, value = 65 */
         OSOCTET localPortRange[4];
         /* selector element = typeId, value = 80 */
         OSOCTET singleRemPort[2];
         /* selector element = typeId, value = 81 */
         OSOCTET remPortRange[4];
         /* selector element = typeId, value = 96 */
         OSOCTET secParam[4];
         /* selector element = typeId, value = 112 */
         OSOCTET typeOfSvc[2];
         /* selector element = typeId, value = 128 */
         OSOCTET flowLabel[3];
         /* selector element = typeId, value = 129 */
         OSOCTET destMacAddr[6];
         /* selector element = typeId, value = 130 */
         OSOCTET srcMacAddr[6];
         /* selector element = typeId, value = 131 */
         OSOCTET ctagVid[2];
         /* selector element = typeId, value = 132 */
         OSOCTET stagVid[2];
         /* selector element = typeId, value = 133 */
         OSOCTET ctagPcp[1];
         /* selector element = typeId, value = 134 */
         OSOCTET stagPcp[1];
         /* selector element = typeId, value = 135 */
         OSOCTET ethernet[2];
      } u;
   } value;
} TS24501IE_PFComponent;

EXTERN int NASEnc_TS24501IE_PFComponent (OSCTXT* pctxt
   , TS24501IE_PFComponent* pvalue);

EXTERN int NASDec_TS24501IE_PFComponent (OSCTXT* pctxt
   , TS24501IE_PFComponent* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PFComponent (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PFComponent* pvalue);

EXTERN TS24501IE_PFComponent* asn1Test_TS24501IE_PFComponent (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PFComponent (TS24501IE_PFComponent* pvalue);

/**************************************************************/
/*                                                            */
/*  PFCreateNew                                               */
/*                                                            */
/**************************************************************/
/*
PFCreateNew ::= SEQUENCE {
   spare [0] INTEGER (0..3) DEFAULT 0,
   filterDirection [1] INTEGER (0..3),
   filterId [2] INTEGER (0..15),
   --<is3GLength/>
   filterContentLen [3] INTEGER (0..255),
   --<is3GVarLenList lengthElem="filterContentLen"/>
   filterContent [4] SEQUENCE OF PFComponent
}
*/
typedef struct EXTERN TS24501IE_PFCreateNew {
   OSUINT8 spare;
   OSUINT8 filterDirection;
   OSUINT8 filterId;
   OSUINT8 filterContentLen;
   struct  {
      OSSIZE n;
      TS24501IE_PFComponent *elem;
   } filterContent;
} TS24501IE_PFCreateNew;

EXTERN int NASEnc_TS24501IE_PFCreateNew (OSCTXT* pctxt
   , TS24501IE_PFCreateNew* pvalue);

EXTERN int NASDec_TS24501IE_PFCreateNew (OSCTXT* pctxt
   , TS24501IE_PFCreateNew* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PFCreateNew (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PFCreateNew* pvalue);

EXTERN TS24501IE_PFCreateNew* asn1Test_TS24501IE_PFCreateNew (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PFCreateNew (TS24501IE_PFCreateNew* pvalue);

/**************************************************************/
/*                                                            */
/*  PFModifyAndDelete                                         */
/*                                                            */
/**************************************************************/
/*
PFModifyAndDelete ::= SEQUENCE {
   spare [0] INTEGER (0..15) DEFAULT 0,
   filterId [1] INTEGER (0..15)
}
*/
typedef struct EXTERN TS24501IE_PFModifyAndDelete {
   OSUINT8 spare;
   OSUINT8 filterId;
} TS24501IE_PFModifyAndDelete;

EXTERN int NASEnc_TS24501IE_PFModifyAndDelete (OSCTXT* pctxt
   , TS24501IE_PFModifyAndDelete* pvalue);

EXTERN int NASDec_TS24501IE_PFModifyAndDelete (OSCTXT* pctxt
   , TS24501IE_PFModifyAndDelete* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PFModifyAndDelete (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PFModifyAndDelete* pvalue);

EXTERN TS24501IE_PFModifyAndDelete*
    asn1Test_TS24501IE_PFModifyAndDelete (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PFModifyAndDelete (TS24501IE_PFModifyAndDelete* pvalue);

/**************************************************************/
/*                                                            */
/*  QoSRule                                                   */
/*                                                            */
/**************************************************************/
/*
QoSRule ::= SEQUENCE {
   ruleId [0] INTEGER (0..255),
   ruleLen [1] INTEGER (0..65535),
   ruleOpCode [2] RuleOpCodes,
   dqr [3] BOOLEAN,
   numPacketFilters [4] INTEGER (0..15),
   --<inline/>
   packetFilterList [5] EXPLICIT CHOICE {
      --<selector element="ruleOpCode" value="1"/>
      --<length expr="@numPacketFilters"/>
      createNew [0] SEQUENCE (SIZE (0..15)) OF PFCreateNew,
      --<selector element="ruleOpCode" value="2"/>
      delete [1] NULL,
      --<selector element="ruleOpCode" value="3"/>
      --<length expr="@numPacketFilters"/>
      modifyAndAdd [2] SEQUENCE (SIZE (1..15)) OF PFCreateNew,
      --<selector element="ruleOpCode" value="4"/>
      --<length expr="@numPacketFilters"/>
      modifyAndReplace [3] SEQUENCE (SIZE (0..15)) OF PFCreateNew,
      --<selector element="ruleOpCode" value="5"/>
      --<length expr="@numPacketFilters"/>
      modifyAndDelete [4] SEQUENCE (SIZE (1..15)) OF PFModifyAndDelete,
      --<selector element="ruleOpCode" value="6"/>
      modifyNoModify [5] NULL
   },
   precedence [6] INTEGER (0..255),
   spare1 [7] BOOLEAN DEFAULT FALSE,
   segregation [8] BOOLEAN,
   flowId [9] INTEGER (0..63)
}
*/
typedef struct EXTERN TS24501IE_QoSRule {
   OSUINT8 ruleId;
   OSUINT16 ruleLen;
   TS24501IE_RuleOpCodes ruleOpCode;
   OSBOOL dqr;
   OSUINT8 numPacketFilters;
   struct  {
      union {
         /* selector element = ruleOpCode, value = 1 */
         struct EXTERN  {
            OSUINT8 n;
            TS24501IE_PFCreateNew elem[15];
         } createNew;
         /* selector element = ruleOpCode, value = 2 */
         /* selector element = ruleOpCode, value = 3 */
         struct EXTERN  {
            OSUINT8 n;
            TS24501IE_PFCreateNew elem[15];
         } modifyAndAdd;
         /* selector element = ruleOpCode, value = 4 */
         struct EXTERN  {
            OSUINT8 n;
            TS24501IE_PFCreateNew elem[15];
         } modifyAndReplace;
         /* selector element = ruleOpCode, value = 5 */
         struct EXTERN  {
            OSUINT8 n;
            TS24501IE_PFModifyAndDelete elem[15];
         } modifyAndDelete;
         /* selector element = ruleOpCode, value = 6 */
      } u;
   } packetFilterList;
   OSUINT8 precedence;
   OSBOOL spare1;
   OSBOOL segregation;
   OSUINT8 flowId;
} TS24501IE_QoSRule;

EXTERN int NASEnc_TS24501IE_QoSRule (OSCTXT* pctxt, TS24501IE_QoSRule* pvalue);

EXTERN int NASDec_TS24501IE_QoSRule (OSCTXT* pctxt, TS24501IE_QoSRule* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_QoSRule (OSCTXT *pctxt, 
   const char* name, const TS24501IE_QoSRule* pvalue);

EXTERN TS24501IE_QoSRule* asn1Test_TS24501IE_QoSRule (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_QoSRule (TS24501IE_QoSRule* pvalue);

/**************************************************************/
/*                                                            */
/*  QoSRules                                                  */
/*                                                            */
/**************************************************************/
/*
 9.11.4.13 - QoS rules 
QoSRules ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   --<is3GVarLenList lengthElem="length"/>
   rules [1] SEQUENCE OF QoSRule
}
*/
typedef struct EXTERN TS24501IE_QoSRules {
   OSUINT16 length;
   struct  {
      OSSIZE n;
      TS24501IE_QoSRule *elem;
   } rules;
} TS24501IE_QoSRules;

EXTERN int NASEnc_TS24501IE_QoSRules (OSCTXT* pctxt, TS24501IE_QoSRules* pvalue
   );

EXTERN int NASDec_TS24501IE_QoSRules (OSCTXT* pctxt, TS24501IE_QoSRules* pvalue
   );

EXTERN int asn1PrtToStrm_TS24501IE_QoSRules (OSCTXT *pctxt, 
   const char* name, const TS24501IE_QoSRules* pvalue);

EXTERN TS24501IE_QoSRules* asn1Test_TS24501IE_QoSRules (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_QoSRules (TS24501IE_QoSRules* pvalue);

/**************************************************************/
/*                                                            */
/*  SessionAMBR                                               */
/*                                                            */
/**************************************************************/
/*
 9.11.4.14 - Session AMBR 
SessionAMBR ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (0..255) DEFAULT 8,
   unitAmbrDL [1] INTEGER (0..255),
   sessionAmbrDL [2] INTEGER (0..65535),
   unitAmbrUL [3] INTEGER (0..255),
   sessionAmbrUL [4] INTEGER (0..65535)
}
*/
typedef struct EXTERN TS24501IE_SessionAMBR {
   OSUINT8 length;
   OSUINT8 unitAmbrDL;
   OSUINT16 sessionAmbrDL;
   OSUINT8 unitAmbrUL;
   OSUINT16 sessionAmbrUL;
} TS24501IE_SessionAMBR;

EXTERN int NASEnc_TS24501IE_SessionAMBR (OSCTXT* pctxt
   , TS24501IE_SessionAMBR* pvalue);

EXTERN int NASDec_TS24501IE_SessionAMBR (OSCTXT* pctxt
   , TS24501IE_SessionAMBR* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SessionAMBR (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SessionAMBR* pvalue);

EXTERN TS24501IE_SessionAMBR* asn1Test_TS24501IE_SessionAMBR (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SessionAMBR (TS24501IE_SessionAMBR* pvalue);

/**************************************************************/
/*                                                            */
/*  SmPduDnReqContainer                                       */
/*                                                            */
/**************************************************************/
/*
 9.11.4.15 - SM PDU DN request container 
SmPduDnReqContainer ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (3..255),
   --<is3GVarLenList lengthElem="length"/>
   --<noPresentBit/>
   dnSpecificId [1] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_SmPduDnReqContainer {
   struct {
      unsigned dnSpecificIdPresent : 1;
   } m;
   OSUINT8 length;
   OSDynOctStr dnSpecificId;
} TS24501IE_SmPduDnReqContainer;

EXTERN int NASEnc_TS24501IE_SmPduDnReqContainer (OSCTXT* pctxt
   , TS24501IE_SmPduDnReqContainer* pvalue);

EXTERN int NASDec_TS24501IE_SmPduDnReqContainer (OSCTXT* pctxt
   , TS24501IE_SmPduDnReqContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SmPduDnReqContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SmPduDnReqContainer* pvalue);

EXTERN TS24501IE_SmPduDnReqContainer*
    asn1Test_TS24501IE_SmPduDnReqContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SmPduDnReqContainer (
   TS24501IE_SmPduDnReqContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  SSCMode                                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.4.16 - SSC mode 
SSCMode ::= SEQUENCE {
   spare [0] BOOLEAN DEFAULT FALSE,
   sscMode [1] SSCModeValue
}
*/
typedef struct EXTERN TS24501IE_SSCMode {
   OSBOOL spare;
   TS24501IE_SSCModeValue sscMode;
} TS24501IE_SSCMode;

EXTERN int NASEnc_TS24501IE_SSCMode (OSCTXT* pctxt, TS24501IE_SSCMode* pvalue);

EXTERN int NASDec_TS24501IE_SSCMode (OSCTXT* pctxt, TS24501IE_SSCMode* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SSCMode (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SSCMode* pvalue);

EXTERN TS24501IE_SSCMode* asn1Test_TS24501IE_SSCMode (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SSCMode (TS24501IE_SSCMode* pvalue);

/**************************************************************/
/*                                                            */
/*  ReattemptIndicator                                        */
/*                                                            */
/**************************************************************/
/*
 9.11.4.17 - Re-attempt indicator 
ReattemptIndicator ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1),
   spare [1] INTEGER (0..63) DEFAULT 0,
   eplmnc [2] BOOLEAN,
   ratc [3] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_ReattemptIndicator {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL eplmnc;
   OSBOOL ratc;
} TS24501IE_ReattemptIndicator;

EXTERN int NASEnc_TS24501IE_ReattemptIndicator (OSCTXT* pctxt
   , TS24501IE_ReattemptIndicator* pvalue);

EXTERN int NASDec_TS24501IE_ReattemptIndicator (OSCTXT* pctxt
   , TS24501IE_ReattemptIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ReattemptIndicator (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ReattemptIndicator* pvalue);

EXTERN TS24501IE_ReattemptIndicator*
    asn1Test_TS24501IE_ReattemptIndicator (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ReattemptIndicator (
   TS24501IE_ReattemptIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  SMNetworkFeatureSupport                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.4.18 - 5GSM network feature support 
SMNetworkFeatureSupport ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..127) DEFAULT 0,
   eptS1 [2] BOOLEAN,
   --<noPresentBit/>
   --<length fixed-size="0"/>
   spare2 [3] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_SMNetworkFeatureSupport {
   struct {
      unsigned spare2Present : 1;
   } m;
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL eptS1;
   OSDynOctStr spare2;
} TS24501IE_SMNetworkFeatureSupport;

EXTERN int NASEnc_TS24501IE_SMNetworkFeatureSupport (OSCTXT* pctxt
   , TS24501IE_SMNetworkFeatureSupport* pvalue);

EXTERN int NASDec_TS24501IE_SMNetworkFeatureSupport (OSCTXT* pctxt
   , TS24501IE_SMNetworkFeatureSupport* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_SMNetworkFeatureSupport (OSCTXT *pctxt, 
   const char* name, const TS24501IE_SMNetworkFeatureSupport* pvalue);

EXTERN TS24501IE_SMNetworkFeatureSupport*
    asn1Test_TS24501IE_SMNetworkFeatureSupport (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_SMNetworkFeatureSupport (
   TS24501IE_SMNetworkFeatureSupport* pvalue);

/**************************************************************/
/*                                                            */
/*  CongestionReattemptIndicator                              */
/*                                                            */
/**************************************************************/
/*
 9.11.4.19 - Session TMBR - removed in 16.3 
SessionTMBR ::= SEQUENCE {
   length INTEGER (0..255) DEFAULT 8,
   unitTmbrDL INTEGER (0..255),
   sessionTmbrDL INTEGER (0..65535),
   unitTmbrUL INTEGER (0..255),
   sessionTmbrUL INTEGER (0..65535)
}
 9.11.4.21 - 5GSM congestion re-attempt indicator 
CongestionReattemptIndicator ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..127) DEFAULT 0,
   abo [2] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_CongestionReattemptIndicator {
   OSUINT8 length;
   OSUINT8 spare;
   OSBOOL abo;
} TS24501IE_CongestionReattemptIndicator;

EXTERN int NASEnc_TS24501IE_CongestionReattemptIndicator (OSCTXT* pctxt
   , TS24501IE_CongestionReattemptIndicator* pvalue);

EXTERN int NASDec_TS24501IE_CongestionReattemptIndicator (OSCTXT* pctxt
   , TS24501IE_CongestionReattemptIndicator* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_CongestionReattemptIndicator (OSCTXT *pctxt, 
   const char* name, const TS24501IE_CongestionReattemptIndicator* pvalue);

EXTERN TS24501IE_CongestionReattemptIndicator*
    asn1Test_TS24501IE_CongestionReattemptIndicator (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_CongestionReattemptIndicator (
   TS24501IE_CongestionReattemptIndicator* pvalue);

/**************************************************************/
/*                                                            */
/*  ATSSSContainer                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.4.22 - ATSSS container 
ATSSSContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (3..65535),
   --<is3GVarLenList lengthElem="length"/>
   --<noPresentBit/>
   contents [1] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_ATSSSContainer {
   struct {
      unsigned contentsPresent : 1;
   } m;
   OSUINT16 length;
   OSDynOctStr contents;
} TS24501IE_ATSSSContainer;

EXTERN int NASEnc_TS24501IE_ATSSSContainer (OSCTXT* pctxt
   , TS24501IE_ATSSSContainer* pvalue);

EXTERN int NASDec_TS24501IE_ATSSSContainer (OSCTXT* pctxt
   , TS24501IE_ATSSSContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ATSSSContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ATSSSContainer* pvalue);

EXTERN TS24501IE_ATSSSContainer*
    asn1Test_TS24501IE_ATSSSContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ATSSSContainer (TS24501IE_ATSSSContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  ControlPlaneIndication                                    */
/*                                                            */
/**************************************************************/
/*
 9.11.4.23 - Control plane only indication 
ControlPlaneIndication ::= SEQUENCE {
   spare [0] INTEGER (0..7) DEFAULT 0,
   cpoi [1] BOOLEAN
}
*/
typedef struct EXTERN TS24501IE_ControlPlaneIndication {
   OSUINT8 spare;
   OSBOOL cpoi;
} TS24501IE_ControlPlaneIndication;

EXTERN int NASEnc_TS24501IE_ControlPlaneIndication (OSCTXT* pctxt
   , TS24501IE_ControlPlaneIndication* pvalue);

EXTERN int NASDec_TS24501IE_ControlPlaneIndication (OSCTXT* pctxt
   , TS24501IE_ControlPlaneIndication* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_ControlPlaneIndication (OSCTXT *pctxt, 
   const char* name, const TS24501IE_ControlPlaneIndication* pvalue);

EXTERN TS24501IE_ControlPlaneIndication*
    asn1Test_TS24501IE_ControlPlaneIndication (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_ControlPlaneIndication (
   TS24501IE_ControlPlaneIndication* pvalue);

/**************************************************************/
/*                                                            */
/*  HeaderCompressionConfig                                   */
/*                                                            */
/**************************************************************/
/*
 9.11.4.24 - Header compression configuration 
HeaderCompressionConfig ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (3..255),
   spare [1] BOOLEAN DEFAULT FALSE,
   p0x0104 [2] BOOLEAN,
   p0x0103 [3] BOOLEAN,
   p0x0102 [4] BOOLEAN,
   p0x0006 [5] BOOLEAN,
   p0x0004 [6] BOOLEAN,
   p0x0003 [7] BOOLEAN,
   p0x0002 [8] BOOLEAN,
   maxCID [9] OCTET STRING (SIZE (2)),
   --<noPresentBit/>
   addlCompressParamsType [10] INTEGER (0..255) OPTIONAL,
   --<noPresentBit/>
   addlCompressParamsContainer [11] OCTET STRING OPTIONAL
}
*/
typedef struct EXTERN TS24501IE_HeaderCompressionConfig {
   struct {
      unsigned addlCompressParamsTypePresent : 1;
      unsigned addlCompressParamsContainerPresent : 1;
   } m;
   OSUINT8 length;
   OSBOOL spare;
   OSBOOL p0x0104;
   OSBOOL p0x0103;
   OSBOOL p0x0102;
   OSBOOL p0x0006;
   OSBOOL p0x0004;
   OSBOOL p0x0003;
   OSBOOL p0x0002;
   OSOCTET maxCID[2];
   OSUINT8 addlCompressParamsType;
   OSDynOctStr addlCompressParamsContainer;
} TS24501IE_HeaderCompressionConfig;

EXTERN int NASEnc_TS24501IE_HeaderCompressionConfig (OSCTXT* pctxt
   , TS24501IE_HeaderCompressionConfig* pvalue);

EXTERN int NASDec_TS24501IE_HeaderCompressionConfig (OSCTXT* pctxt
   , TS24501IE_HeaderCompressionConfig* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_HeaderCompressionConfig (OSCTXT *pctxt, 
   const char* name, const TS24501IE_HeaderCompressionConfig* pvalue);

EXTERN TS24501IE_HeaderCompressionConfig*
    asn1Test_TS24501IE_HeaderCompressionConfig (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_HeaderCompressionConfig (
   TS24501IE_HeaderCompressionConfig* pvalue);

/**************************************************************/
/*                                                            */
/*  DSTTEthMACAddr                                            */
/*                                                            */
/**************************************************************/
/*
 9.11.4.25 - DS-TT Ethernet port MAC address 
DSTTEthMACAddr ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   contents [1] OCTET STRING (SIZE (6))
}
*/
typedef struct EXTERN TS24501IE_DSTTEthMACAddr {
   OSUINT8 length;
   OSOCTET contents[6];
} TS24501IE_DSTTEthMACAddr;

EXTERN int NASEnc_TS24501IE_DSTTEthMACAddr (OSCTXT* pctxt
   , TS24501IE_DSTTEthMACAddr* pvalue);

EXTERN int NASDec_TS24501IE_DSTTEthMACAddr (OSCTXT* pctxt
   , TS24501IE_DSTTEthMACAddr* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_DSTTEthMACAddr (OSCTXT *pctxt, 
   const char* name, const TS24501IE_DSTTEthMACAddr* pvalue);

EXTERN TS24501IE_DSTTEthMACAddr*
    asn1Test_TS24501IE_DSTTEthMACAddr (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DSTTResidenceTime                                         */
/*                                                            */
/**************************************************************/
/*
 9.11.4.26 - DS-TT residence time 
DSTTResidenceTime ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   contents [1] OCTET STRING (SIZE (8))
}
*/
typedef struct EXTERN TS24501IE_DSTTResidenceTime {
   OSUINT8 length;
   OSOCTET contents[8];
} TS24501IE_DSTTResidenceTime;

EXTERN int NASEnc_TS24501IE_DSTTResidenceTime (OSCTXT* pctxt
   , TS24501IE_DSTTResidenceTime* pvalue);

EXTERN int NASDec_TS24501IE_DSTTResidenceTime (OSCTXT* pctxt
   , TS24501IE_DSTTResidenceTime* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_DSTTResidenceTime (OSCTXT *pctxt, 
   const char* name, const TS24501IE_DSTTResidenceTime* pvalue);

EXTERN TS24501IE_DSTTResidenceTime*
    asn1Test_TS24501IE_DSTTResidenceTime (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PortMgmtInfoContainer                                     */
/*                                                            */
/**************************************************************/
/*
 9.11.4.27 - Port management information container 
PortMgmtInfoContainer ::= SEQUENCE {
   --<is3GLength bitFieldSize="16"/>
   length [0] INTEGER (0..65535),
   --<is3GVarLenList lengthElem="length"/>
   container [1] OCTET STRING (SIZE (1..65535))
}
*/
typedef struct EXTERN TS24501IE_PortMgmtInfoContainer {
   OSUINT16 length;
   OSDynOctStr container;
} TS24501IE_PortMgmtInfoContainer;

EXTERN int NASEnc_TS24501IE_PortMgmtInfoContainer (OSCTXT* pctxt
   , TS24501IE_PortMgmtInfoContainer* pvalue);

EXTERN int NASDec_TS24501IE_PortMgmtInfoContainer (OSCTXT* pctxt
   , TS24501IE_PortMgmtInfoContainer* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_PortMgmtInfoContainer (OSCTXT *pctxt, 
   const char* name, const TS24501IE_PortMgmtInfoContainer* pvalue);

EXTERN TS24501IE_PortMgmtInfoContainer*
    asn1Test_TS24501IE_PortMgmtInfoContainer (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_PortMgmtInfoContainer (
   TS24501IE_PortMgmtInfoContainer* pvalue);

/**************************************************************/
/*                                                            */
/*  EthHdrCompressConfig                                      */
/*                                                            */
/**************************************************************/
/*
 9.11.4.28 - Ethernet header compression configuration - added in v16.5 
EthHdrCompressConfig ::= SEQUENCE {
   --<is3GLength/>
   length [0] INTEGER (1..255),
   spare [1] INTEGER (0..63) DEFAULT 0,
   cidLength [2] INTEGER (0..3)
}
*/
typedef struct EXTERN TS24501IE_EthHdrCompressConfig {
   OSUINT8 length;
   OSUINT8 spare;
   OSUINT8 cidLength;
} TS24501IE_EthHdrCompressConfig;

EXTERN int NASEnc_TS24501IE_EthHdrCompressConfig (OSCTXT* pctxt
   , TS24501IE_EthHdrCompressConfig* pvalue);

EXTERN int NASDec_TS24501IE_EthHdrCompressConfig (OSCTXT* pctxt
   , TS24501IE_EthHdrCompressConfig* pvalue);

EXTERN int asn1PrtToStrm_TS24501IE_EthHdrCompressConfig (OSCTXT *pctxt, 
   const char* name, const TS24501IE_EthHdrCompressConfig* pvalue);

EXTERN TS24501IE_EthHdrCompressConfig*
    asn1Test_TS24501IE_EthHdrCompressConfig (OSCTXT* pctxt);

EXTERN int asn1Init_TS24501IE_EthHdrCompressConfig (
   TS24501IE_EthHdrCompressConfig* pvalue);

#ifdef __cplusplus
}
#endif

#endif
