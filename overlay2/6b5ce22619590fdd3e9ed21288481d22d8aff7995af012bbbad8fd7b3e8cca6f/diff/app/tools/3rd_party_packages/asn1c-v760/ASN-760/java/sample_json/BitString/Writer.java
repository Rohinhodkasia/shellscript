/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.6.A, Date: 20-Sep-2012.
 */
package sample_json.BitString;

import com.objsys.asn1j.runtime.*;
import java.util.*;

public class Writer {

   /* PDU: BitString.BSSeq */
   public static void main(String args[]) {

      String filename = new String ("message.json");
      boolean trace = true;
      
      if (args.length > 0) {
         for (int i = 0; i < args.length; i++) {
            if (args[i].equals ("-v"))
               Diag.instance().setEnabled (true);
            else if (args[i].equals ("-o"))
               filename = new String (args[++i]);
            else if (args[i].equals ("-notrace")) trace = false;
            else {
               System.out.println("usage: Writer [-v] [-o <filename>]");
               System.out.println("   -v  verbose mode: print trace info");
               System.out.println("   -o <filename>  " +
                                          "write encoded msg to <filename>");
               System.out.println("   -notrace  do not display trace info");
               System.exit(1);
            }
         }
      }
      
      // Create an encoding stream
      Asn1JsonOutputStream encodeStream = null;
      try {
         encodeStream = new Asn1JsonOutputStream (new java.io.OutputStreamWriter( new java.io.FileOutputStream(filename), "UTF-8") );

         // Create a data object and populate it with the data to be encoded

         BS3 bs3 = new BS3();
         bs3.set (BS3.a);
         bs3.clear (BS3.b);
         bs3.set (BS3.c);

         BS2 bs2 = new BS2 ("'0000000001'B");

         BitSet jbs = new BitSet();

         /*// in JDK 1.4 you may use this portion of code 
         jbs.set (2, 612);
         jbs.clear (611);
         jbs.flip (2, 611);
         jbs.flip (68);
         */

         for (int i = 2; i < 612; i++)
            jbs.set (i);
         jbs.clear (610);

         BS1 bs1 = new BS1 (jbs);

         BSSeq bsseq = new BSSeq (bs1, bs2, bs3);

         bsseq.encode (encodeStream);
         if (trace) {
            System.out.println("Encoding was successful");
         }
      }
      catch (Exception e) {
         System.out.println(e.getMessage());
         e.printStackTrace();
         System.exit(1);
      }
      finally {
         try {
            if (encodeStream != null) encodeStream.close ();
         }
         catch (Exception e) {
         }
      }
   }
}
